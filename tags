!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	higan/fc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
A	higan/gb/system/system.hpp	/^  Up, Down, Left, Right, B, A, Select, Start,$/;"	m	class:Input
A	higan/gba/system/system.hpp	/^  A, B, Select, Start, Right, Left, Up, Down, R, L,$/;"	m	class:Input
A	higan/md/controller/control-pad/control-pad.hpp	/^    Up, Down, Left, Right, A, B, C, Start,$/;"	m	struct:ControlPad	typeref:enum:ControlPad::
A	higan/md/controller/fighting-pad/fighting-pad.hpp	/^    Up, Down, Left, Right, A, B, C, X, Y, Z, Mode, Start,$/;"	m	struct:FightingPad	typeref:enum:FightingPad::
A	higan/processor/huc6280/huc6280.cpp	33;"	d	file:
A	higan/processor/huc6280/huc6280.cpp	6;"	d	file:
A	higan/processor/lr35902/registers.cpp	8;"	d	file:
A	higan/processor/mos6502/mos6502.cpp	30;"	d	file:
A	higan/processor/mos6502/mos6502.cpp	6;"	d	file:
A	higan/processor/spc700/spc700.cpp	45;"	d	file:
A	higan/processor/spc700/spc700.cpp	8;"	d	file:
A	higan/processor/wdc65816/wdc65816.cpp	66;"	d	file:
A	higan/processor/wdc65816/wdc65816.cpp	7;"	d	file:
A	higan/processor/z80/disassembler.cpp	1047;"	d	file:
A	higan/processor/z80/disassembler.cpp	59;"	d	file:
A	higan/processor/z80/registers.cpp	6;"	d	file:
A	higan/sfc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
A	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:SuperMultitap	typeref:enum:SuperMultitap::
ABT	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      ABT = 0x17,  \/\/abort$/;"	m	struct:Processor::PSR	typeref:enum:Processor::PSR::
ABT	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    struct ABT {$/;"	s	struct:Processor
ADSR0	higan/sfc/dsp/dsp.hpp	/^    SRCN   = 0x04, ADSR0  = 0x05,$/;"	e	enum:uint
ADSR1	higan/sfc/dsp/dsp.hpp	/^    ADSR1  = 0x06, GAIN   = 0x07,$/;"	e	enum:uint
AF	higan/processor/lr35902/registers.cpp	1;"	d	file:
AF	higan/processor/z80/disassembler.cpp	1059;"	d	file:
AF	higan/processor/z80/disassembler.cpp	71;"	d	file:
AF	higan/processor/z80/registers.cpp	1;"	d	file:
AF_	higan/processor/z80/disassembler.cpp	1064;"	d	file:
AF_	higan/processor/z80/disassembler.cpp	76;"	d	file:
AF_	higan/processor/z80/registers.cpp	19;"	d	file:
ALU	higan/processor/huc6280/huc6280.cpp	24;"	d	file:
ALU	higan/processor/huc6280/huc6280.cpp	51;"	d	file:
ALU	higan/processor/mos6502/mos6502.cpp	14;"	d	file:
ALU	higan/processor/mos6502/mos6502.cpp	38;"	d	file:
ALU	higan/sfc/cpu/cpu.hpp	/^  struct ALU {$/;"	s	struct:CPU
AND	higan/target-bsnes/input/input.hpp	/^  enum class Logic : uint { AND, OR };$/;"	m	class:InputMapping::Logic
AND	higan/target-higan/input/input.hpp	/^  enum class Logic : uint { AND, OR };$/;"	m	class:InputMapping::Logic
API	nall/intrinsics.hpp	/^  enum class API : uint { Windows, Posix, Unknown };$/;"	c	namespace:nall
API	nall/intrinsics.hpp	/^  static inline constexpr auto api() -> API;$/;"	m	namespace:nall
API_WINDOWS	nall/intrinsics.hpp	70;"	d
APU	higan/fc/apu/apu.cpp	/^APU::APU() {$/;"	f	class:Famicom::APU
APU	higan/fc/apu/apu.hpp	/^struct APU : Thread {$/;"	s
APU	higan/gb/apu/apu.hpp	/^struct APU : Thread, MMIO {$/;"	s
APU	higan/gba/apu/apu.hpp	/^struct APU : Thread, IO {$/;"	s
APU	higan/md/apu/apu.hpp	/^struct APU : Processor::Z80, Processor::Z80::Bus, Thread {$/;"	s
APU	higan/ws/apu/apu.hpp	/^struct APU : Thread, IO {$/;"	s
ARCHITECTURE_X86	nall/intrinsics.hpp	121;"	d
ARM	nall/intrinsics.hpp	/^  enum class Architecture : uint { x86, amd64, ARM, PPC32, PPC64, Unknown };$/;"	m	class:nall::Architecture
ARM7TDMI	higan/processor/arm7tdmi/arm7tdmi.cpp	/^ARM7TDMI::ARM7TDMI() {$/;"	f	class:Processor::ARM7TDMI
ARM7TDMI	higan/processor/arm7tdmi/arm7tdmi.hpp	/^struct ARM7TDMI {$/;"	s	namespace:Processor
ARMDSP	higan/sfc/cartridge/cartridge.hpp	/^    boolean ARMDSP;$/;"	m	struct:Cartridge::Has
ASIOBool	ruby/audio/asio.hpp	/^  virtual auto init(void* systemHandle) -> ASIOBool;$/;"	m	struct:IASIO
ASIOBufferInfo	ruby/audio/asio.hpp	/^struct ASIOBufferInfo {$/;"	s
ASIOCallbacks	ruby/audio/asio.hpp	/^struct ASIOCallbacks {$/;"	s
ASIOChannelInfo	ruby/audio/asio.hpp	/^struct ASIOChannelInfo {$/;"	s
ASIOClockSource	ruby/audio/asio.hpp	/^struct ASIOClockSource {$/;"	s
ASIOError	ruby/audio/asio.hpp	/^  virtual auto canSampleRate(ASIOSampleRate sampleRate) -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto controlPanel() -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto createBuffers(ASIOBufferInfo* bufferInformation, long channels, long bufferSize, ASIOCallbacks* callbacks) -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto disposeBuffers() -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto future(long selector, void* optional) -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto getBufferSize(long* minimumSize, long* maximumSize, long* preferredSize, long* granularity) -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto getChannelInfo(ASIOChannelInfo* information) -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto getChannels(long* inputChannels, long* outputChannels) -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto getClockSources(ASIOClockSource* clocks, long* sources) -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto getLatencies(long* inputLatency, long* outputLatency) -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto getSamplePosition(ASIOSamples* samplePosition, ASIOTimeStamp* timeStamp) -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto getSampleRate(ASIOSampleRate* sampleRate) -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto outputReady() -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto setClockSource(long reference) -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto setSampleRate(ASIOSampleRate sampleRate) -> ASIOError = 0;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto start() -> ASIOError;$/;"	m	struct:IASIO
ASIOError	ruby/audio/asio.hpp	/^  virtual auto stop() -> ASIOError;$/;"	m	struct:IASIO
ASIOTime	ruby/audio/asio.hpp	/^  auto (*bufferSwitchTimeInfo)(ASIOTime* parameters, long doubleBufferIndex, ASIOBool directProcess) -> ASIOTime*;$/;"	m	struct:ASIOCallbacks
ASIOTime	ruby/audio/asio.hpp	/^struct ASIOTime {$/;"	s
ASIOTimeCode	ruby/audio/asio.hpp	/^struct ASIOTimeCode {$/;"	s
ASIOTimeInfo	ruby/audio/asio.hpp	/^struct ASIOTimeInfo {$/;"	s
A_	higan/processor/z80/registers.cpp	24;"	d	file:
AboutWindow	higan/target-bsnes/presentation/presentation.hpp	/^struct AboutWindow : Window {$/;"	s
AboutWindow	higan/target-higan/presentation/about.cpp	/^AboutWindow::AboutWindow() {$/;"	f	class:AboutWindow
AboutWindow	higan/target-higan/presentation/presentation.hpp	/^struct AboutWindow : Window {$/;"	s
Accelerometer	higan/gb/cartridge/mbc7/mbc7.hpp	/^    struct Accelerometer {$/;"	s	struct:MBC7::IO
Action	hiro/core/core.hpp	/^  auto action(uint position) const -> Action;$/;"	m	struct:hiro::mMenu
Action	hiro/core/core.hpp	/^  auto action(uint position) const -> Action;$/;"	m	struct:hiro::mPopupMenu
Action	hiro/core/shared.hpp	/^struct Action : sAction {$/;"	s
Action	hiro/resource/resource.cpp	/^namespace Action {$/;"	n	namespace:Icon	file:
Action	hiro/resource/resource.hpp	/^namespace Action {$/;"	n	namespace:Icon
ActiveSourceVoiceCount	ruby/audio/xaudio2.hpp	/^  UINT32 ActiveSourceVoiceCount;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
ActiveSubmixVoiceCount	ruby/audio/xaudio2.hpp	/^  UINT32 ActiveSubmixVoiceCount;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
ActiveXmaSourceVoices	ruby/audio/xaudio2.hpp	/^  UINT32 ActiveXmaSourceVoices;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
ActiveXmaStreams	ruby/audio/xaudio2.hpp	/^  UINT32 ActiveXmaStreams;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
Add	hiro/resource/resource.cpp	/^const unsigned char Add[323] = {$/;"	m	namespace:Icon::Action	file:
Add	nall/string/eval/node.hpp	/^    Add, Subtract,$/;"	m	class:nall::Eval::Node::Type
AddressHi	higan/ws/eeprom/eeprom.hpp	/^    AddressHi,$/;"	m	struct:EEPROM	typeref:enum:EEPROM::
AddressLo	higan/ws/eeprom/eeprom.hpp	/^    AddressLo,$/;"	m	struct:EEPROM	typeref:enum:EEPROM::
AdvancedSettings	higan/target-higan/settings/advanced.cpp	/^AdvancedSettings::AdvancedSettings(TabFrame* parent) : TabFrameItem(parent) {$/;"	f	class:AdvancedSettings
AdvancedSettings	higan/target-higan/settings/settings.hpp	/^struct AdvancedSettings : TabFrameItem {$/;"	s
Alignment	hiro/core/alignment.cpp	/^Alignment::Alignment() {$/;"	f	class:Alignment
Alignment	hiro/core/alignment.cpp	/^Alignment::Alignment(float horizontal, float vertical) {$/;"	f	class:Alignment
Alignment	hiro/core/core.hpp	/^  auto alignment() const -> Alignment;$/;"	m	struct:hiro::mLabel
Alignment	hiro/core/core.hpp	/^struct Alignment {$/;"	s	namespace:hiro
Alignment	hiro/core/widget/table-view-cell.hpp	/^  auto alignment(bool recursive = false) const -> Alignment;$/;"	m	struct:mTableViewCell
Alignment	hiro/core/widget/table-view-column.hpp	/^  auto alignment() const -> Alignment;$/;"	m	struct:mTableViewColumn
Alignment	hiro/core/widget/table-view-item.hpp	/^  auto alignment() const -> Alignment;$/;"	m	struct:mTableViewItem
Alignment	hiro/core/widget/table-view.hpp	/^  auto alignment() const -> Alignment;$/;"	m	struct:mTableView
Alignment	hiro/extension/table-layout.hpp	/^  auto alignment() const -> Alignment;$/;"	m	struct:mTableLayout
Alignment	hiro/extension/table-layout.hpp	/^  auto alignment() const -> Alignment;$/;"	m	struct:mTableLayoutCell
Alignment	hiro/extension/table-layout.hpp	/^  auto alignment() const -> Alignment;$/;"	m	struct:mTableLayoutColumn
Alignment	hiro/extension/table-layout.hpp	/^  auto alignment() const -> Alignment;$/;"	m	struct:mTableLayoutRow
AppMessage	hiro/windows/platform.hpp	/^struct AppMessage {$/;"	s	namespace:hiro
Application	hiro/core/application.hpp	/^struct Application {$/;"	s
Application	hiro/resource/resource.cpp	/^namespace Application {$/;"	n	namespace:Icon	file:
Application	hiro/resource/resource.hpp	/^namespace Application {$/;"	n	namespace:Icon
Architecture	nall/intrinsics.hpp	/^  enum class Architecture : uint { x86, amd64, ARM, PPC32, PPC64, Unknown };$/;"	c	namespace:nall
Architecture	nall/intrinsics.hpp	/^  static inline constexpr auto architecture() -> Architecture;$/;"	m	namespace:nall
Archive	hiro/resource/resource.cpp	/^const unsigned char Archive[540] = {$/;"	m	namespace:Icon::Emblem	file:
Archive	nall/beat/archive/container.hpp	/^namespace nall { namespace Beat { namespace Archive {$/;"	n	namespace:nall::Beat
Archive	nall/beat/archive/create.hpp	/^namespace nall { namespace Beat { namespace Archive {$/;"	n	namespace:nall::Beat
Archive	nall/beat/archive/extract.hpp	/^namespace nall { namespace Beat { namespace Archive {$/;"	n	namespace:nall::Beat
Archive	nall/beat/archive/node.hpp	/^namespace nall { namespace Beat { namespace Archive {$/;"	n	namespace:nall::Beat
Arguments	nall/arguments.hpp	/^inline Arguments::Arguments(int argc, char** argv) {$/;"	f	class:nall::Arguments
Arguments	nall/arguments.hpp	/^inline Arguments::Arguments(vector<string> arguments) {$/;"	f	class:nall::Arguments
Arguments	nall/arguments.hpp	/^struct Arguments {$/;"	s	namespace:nall
ArithmeticNatural	nall/arithmetic.hpp	/^  template<> struct ArithmeticNatural<  8> { using type =   uint8_t; };$/;"	s	namespace:nall
ArithmeticNatural	nall/arithmetic.hpp	/^  template<> struct ArithmeticNatural< 16> { using type =  uint16_t; };$/;"	s	namespace:nall
ArithmeticNatural	nall/arithmetic.hpp	/^  template<> struct ArithmeticNatural< 32> { using type =  uint32_t; };$/;"	s	namespace:nall
ArithmeticNatural	nall/arithmetic.hpp	/^  template<> struct ArithmeticNatural< 64> { using type =  uint64_t; };$/;"	s	namespace:nall
ArithmeticNatural	nall/arithmetic.hpp	/^  template<> struct ArithmeticNatural<128> { using type = uint128_t; };$/;"	s	namespace:nall
ArithmeticNatural	nall/arithmetic/natural.hpp	/^template<> struct ArithmeticNatural<PairBits> {$/;"	s	namespace:nall
ArmDSP	higan/sfc/coprocessor/armdsp/armdsp.hpp	/^struct ArmDSP : Processor::ARM7TDMI, Thread {$/;"	s
Ascending	hiro/core/core.hpp	/^enum class Sort : uint { None, Ascending, Descending };$/;"	m	class:hiro::Sort
Assign	nall/string/eval/node.hpp	/^    Assign, Create,  \/\/all assignment operators have the same precedence$/;"	m	class:nall::Eval::Node::Type
AssignAdd	nall/string/eval/node.hpp	/^      AssignAdd, AssignSubtract,$/;"	m	class:nall::Eval::Node::Type
AssignBitwiseAnd	nall/string/eval/node.hpp	/^      AssignBitwiseAnd, AssignBitwiseOr, AssignBitwiseXor,$/;"	m	class:nall::Eval::Node::Type
AssignBitwiseOr	nall/string/eval/node.hpp	/^      AssignBitwiseAnd, AssignBitwiseOr, AssignBitwiseXor,$/;"	m	class:nall::Eval::Node::Type
AssignBitwiseXor	nall/string/eval/node.hpp	/^      AssignBitwiseAnd, AssignBitwiseOr, AssignBitwiseXor,$/;"	m	class:nall::Eval::Node::Type
AssignConcatenate	nall/string/eval/node.hpp	/^      AssignConcatenate,$/;"	m	class:nall::Eval::Node::Type
AssignDivide	nall/string/eval/node.hpp	/^      AssignMultiply, AssignDivide, AssignModulo,$/;"	m	class:nall::Eval::Node::Type
AssignModulo	nall/string/eval/node.hpp	/^      AssignMultiply, AssignDivide, AssignModulo,$/;"	m	class:nall::Eval::Node::Type
AssignMultiply	nall/string/eval/node.hpp	/^      AssignMultiply, AssignDivide, AssignModulo,$/;"	m	class:nall::Eval::Node::Type
AssignRotateLeft	nall/string/eval/node.hpp	/^      AssignRotateLeft, AssignRotateRight, AssignShiftLeft, AssignShiftRight,$/;"	m	class:nall::Eval::Node::Type
AssignRotateRight	nall/string/eval/node.hpp	/^      AssignRotateLeft, AssignRotateRight, AssignShiftLeft, AssignShiftRight,$/;"	m	class:nall::Eval::Node::Type
AssignShiftLeft	nall/string/eval/node.hpp	/^      AssignRotateLeft, AssignRotateRight, AssignShiftLeft, AssignShiftRight,$/;"	m	class:nall::Eval::Node::Type
AssignShiftRight	nall/string/eval/node.hpp	/^      AssignRotateLeft, AssignRotateRight, AssignShiftLeft, AssignShiftRight,$/;"	m	class:nall::Eval::Node::Type
AssignSubtract	nall/string/eval/node.hpp	/^      AssignAdd, AssignSubtract,$/;"	m	class:nall::Eval::Node::Type
Atom	nall/xorg/guard.hpp	13;"	d
Atom	nall/xorg/guard.hpp	4;"	d
Attach	hiro/resource/resource.cpp	/^const unsigned char Attach[649] = {$/;"	m	namespace:Icon::Action	file:
Attachment	nall/smtp.hpp	/^    struct Attachment {$/;"	s	struct:nall::SMTP::Information
Audio	higan/audio/audio.hpp	/^struct Audio {$/;"	s	namespace:Emulator
Audio	higan/target-bsnes/settings/settings.hpp	/^  struct Audio {$/;"	s	struct:Settings
Audio	hiro/resource/resource.cpp	/^const unsigned char Audio[688] = {$/;"	m	namespace:Icon::Emblem	file:
Audio	ruby/audio/audio.hpp	/^  Audio() : self(*this) { reset(); }$/;"	f	struct:Audio
Audio	ruby/audio/audio.hpp	/^struct Audio {$/;"	s
AudioALSA	ruby/audio/alsa.cpp	/^  AudioALSA(Audio& super) : AudioDriver(super) {}$/;"	f	struct:AudioALSA
AudioALSA	ruby/audio/alsa.cpp	/^struct AudioALSA : AudioDriver {$/;"	s	file:
AudioAO	ruby/audio/ao.cpp	/^  AudioAO(Audio& super) : AudioDriver(super) {}$/;"	f	struct:AudioAO
AudioAO	ruby/audio/ao.cpp	/^struct AudioAO : AudioDriver {$/;"	s	file:
AudioASIO	ruby/audio/asio.cpp	/^  AudioASIO(Audio& super) : AudioDriver(super) { instance = this; }$/;"	f	struct:AudioASIO
AudioASIO	ruby/audio/asio.cpp	/^struct AudioASIO : AudioDriver {$/;"	s	file:
AudioBusy	higan/sfc/coprocessor/msu1/msu1.hpp	/^    AudioBusy      = 0x40,$/;"	m	struct:MSU1	typeref:enum:MSU1::
AudioBytes	ruby/audio/xaudio2.hpp	/^  UINT32 AudioBytes;$/;"	m	struct:XAUDIO2_BUFFER
AudioCyclesSinceLastQuery	ruby/audio/xaudio2.hpp	/^  UINT64 AudioCyclesSinceLastQuery;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
AudioDirectSound	ruby/audio/directsound.cpp	/^  AudioDirectSound(Audio& super) : AudioDriver(super) {}$/;"	f	struct:AudioDirectSound
AudioDirectSound	ruby/audio/directsound.cpp	/^struct AudioDirectSound : AudioDriver {$/;"	s	file:
AudioDriver	ruby/audio/audio.hpp	/^  AudioDriver(Audio& super) : super(super) {}$/;"	f	struct:AudioDriver
AudioDriver	ruby/audio/audio.hpp	/^struct AudioDriver {$/;"	s
AudioError	higan/sfc/coprocessor/msu1/msu1.hpp	/^    AudioError     = 0x08,$/;"	m	struct:MSU1	typeref:enum:MSU1::
AudioOSS	ruby/audio/oss.cpp	/^  AudioOSS(Audio& super) : AudioDriver(super) {}$/;"	f	struct:AudioOSS
AudioOSS	ruby/audio/oss.cpp	/^struct AudioOSS : AudioDriver {$/;"	s	file:
AudioOpenAL	ruby/audio/openal.cpp	/^  AudioOpenAL(Audio& super) : AudioDriver(super) {}$/;"	f	struct:AudioOpenAL
AudioOpenAL	ruby/audio/openal.cpp	/^struct AudioOpenAL : AudioDriver {$/;"	s	file:
AudioPlaying	higan/sfc/coprocessor/msu1/msu1.hpp	/^    AudioPlaying   = 0x10,$/;"	m	struct:MSU1	typeref:enum:MSU1::
AudioPulseAudio	ruby/audio/pulseaudio.cpp	/^  AudioPulseAudio(Audio& super) : AudioDriver(super) {}$/;"	f	struct:AudioPulseAudio
AudioPulseAudio	ruby/audio/pulseaudio.cpp	/^struct AudioPulseAudio : AudioDriver {$/;"	s	file:
AudioPulseAudioSimple	ruby/audio/pulseaudio-simple.cpp	/^  AudioPulseAudioSimple(Audio& super) : AudioDriver(super) {}$/;"	f	struct:AudioPulseAudioSimple
AudioPulseAudioSimple	ruby/audio/pulseaudio-simple.cpp	/^struct AudioPulseAudioSimple : AudioDriver {$/;"	s	file:
AudioRepeating	higan/sfc/coprocessor/msu1/msu1.hpp	/^    AudioRepeating = 0x20,$/;"	m	struct:MSU1	typeref:enum:MSU1::
AudioSettings	higan/target-bsnes/settings/settings.hpp	/^struct AudioSettings : TabFrameItem {$/;"	s
AudioSettings	higan/target-higan/settings/audio.cpp	/^AudioSettings::AudioSettings(TabFrame* parent) : TabFrameItem(parent) {$/;"	f	class:AudioSettings
AudioSettings	higan/target-higan/settings/settings.hpp	/^struct AudioSettings : TabFrameItem {$/;"	s
AudioWASAPI	ruby/audio/wasapi.cpp	/^  AudioWASAPI(Audio& super) : AudioDriver(super) { construct(); }$/;"	f	struct:AudioWASAPI
AudioWASAPI	ruby/audio/wasapi.cpp	/^struct AudioWASAPI : AudioDriver {$/;"	s	file:
AudioXAudio2	ruby/audio/xaudio2.cpp	/^  AudioXAudio2(Audio& super) : AudioDriver(super) { construct(); }$/;"	f	struct:AudioXAudio2
AudioXAudio2	ruby/audio/xaudio2.cpp	/^struct AudioXAudio2 : AudioDriver, public IXAudio2VoiceCallback {$/;"	s	file:
Author	higan/emulator/emulator.hpp	/^  static const string Author  = "byuu";$/;"	m	namespace:Emulator
AutoSaveMemory	higan/target-bsnes/settings/settings.hpp	/^    struct AutoSaveMemory {$/;"	s	struct:Settings::Emulator
Axis	higan/emulator/interface.hpp	/^      Axis,$/;"	m	struct:Emulator::Input::Type	typeref:enum:Emulator::Input::Type::
B	higan/fc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
B	higan/gb/system/system.hpp	/^  Up, Down, Left, Right, B, A, Select, Start,$/;"	m	class:Input
B	higan/gba/system/system.hpp	/^  A, B, Select, Start, Right, Left, Up, Down, R, L,$/;"	m	class:Input
B	higan/md/controller/control-pad/control-pad.hpp	/^    Up, Down, Left, Right, A, B, C, Start,$/;"	m	struct:ControlPad	typeref:enum:ControlPad::
B	higan/md/controller/fighting-pad/fighting-pad.hpp	/^    Up, Down, Left, Right, A, B, C, X, Y, Z, Mode, Start,$/;"	m	struct:FightingPad	typeref:enum:FightingPad::
B	higan/processor/huc6280/huc6280.cpp	18;"	d	file:
B	higan/processor/huc6280/huc6280.cpp	45;"	d	file:
B	higan/processor/lr35902/registers.cpp	10;"	d	file:
B	higan/processor/wdc65816/wdc65816.cpp	13;"	d	file:
B	higan/processor/wdc65816/wdc65816.cpp	72;"	d	file:
B	higan/processor/z80/disassembler.cpp	1049;"	d	file:
B	higan/processor/z80/disassembler.cpp	61;"	d	file:
B	higan/processor/z80/registers.cpp	8;"	d	file:
B	higan/sfc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
B	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:SuperMultitap	typeref:enum:SuperMultitap::
B	nall/elliptic-curve/ed25519.hpp	/^  const point B = *decompress((field(4) * reciprocal(field(5)))());$/;"	m	struct:nall::EllipticCurve::Ed25519
BC	higan/processor/lr35902/registers.cpp	2;"	d	file:
BC	higan/processor/z80/disassembler.cpp	1060;"	d	file:
BC	higan/processor/z80/disassembler.cpp	72;"	d	file:
BC	higan/processor/z80/registers.cpp	2;"	d	file:
BCD	higan/processor/mos6502/mos6502.hpp	/^  bool BCD = true;$/;"	m	struct:Processor::MOS6502
BCM_FIRST	hiro/windows/header.hpp	29;"	d
BCM_SETIMAGELIST	hiro/windows/header.hpp	30;"	d
BC_	higan/processor/z80/disassembler.cpp	1065;"	d	file:
BC_	higan/processor/z80/disassembler.cpp	77;"	d	file:
BC_	higan/processor/z80/registers.cpp	20;"	d	file:
BF	higan/processor/spc700/spc700.cpp	18;"	d	file:
BF	higan/processor/spc700/spc700.cpp	55;"	d	file:
BG	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    BG(SDD1::Decompressor& self, uint8 codeNumber) : self(self), codeNumber(codeNumber) {}$/;"	f	struct:Decompressor::BG
BG	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  struct BG {  \/\/bits generator$/;"	s	struct:Decompressor
BG0	higan/gba/ppu/ppu.hpp	/^  enum : uint { OBJ = 0, BG0 = 1, BG1 = 2, BG2 = 3, BG3 = 4, SFX = 5 };$/;"	m	struct:PPU	typeref:enum:PPU::
BG1	higan/gba/ppu/ppu.hpp	/^  enum : uint { OBJ = 0, BG0 = 1, BG1 = 2, BG2 = 3, BG3 = 4, SFX = 5 };$/;"	m	struct:PPU	typeref:enum:PPU::
BG2	higan/gba/ppu/ppu.hpp	/^  enum : uint { OBJ = 0, BG0 = 1, BG1 = 2, BG2 = 3, BG3 = 4, SFX = 5 };$/;"	m	struct:PPU	typeref:enum:PPU::
BG2	higan/sfc/ppu-fast/ppu.hpp	/^  struct Source { enum : uint { BG1, BG2, BG3, BG4, OBJ1, OBJ2, COL }; };$/;"	m	struct:PPU::Source	typeref:enum:PPU::Source::
BG2	higan/sfc/ppu/background.hpp	/^  struct ID { enum : uint { BG1, BG2, BG3, BG4 }; };$/;"	m	struct:Background::ID	typeref:enum:Background::ID::
BG3	higan/gba/ppu/ppu.hpp	/^  enum : uint { OBJ = 0, BG0 = 1, BG1 = 2, BG2 = 3, BG3 = 4, SFX = 5 };$/;"	m	struct:PPU	typeref:enum:PPU::
BG3	higan/sfc/ppu-fast/ppu.hpp	/^  struct Source { enum : uint { BG1, BG2, BG3, BG4, OBJ1, OBJ2, COL }; };$/;"	m	struct:PPU::Source	typeref:enum:PPU::Source::
BG3	higan/sfc/ppu/background.hpp	/^  struct ID { enum : uint { BG1, BG2, BG3, BG4 }; };$/;"	m	struct:Background::ID	typeref:enum:Background::ID::
BG4	higan/sfc/ppu-fast/ppu.hpp	/^  struct Source { enum : uint { BG1, BG2, BG3, BG4, OBJ1, OBJ2, COL }; };$/;"	m	struct:PPU::Source	typeref:enum:PPU::Source::
BIOS	higan/gba/system/bios.cpp	/^BIOS::BIOS() {$/;"	f	class:BIOS
BIOS	higan/gba/system/system.hpp	/^struct BIOS {$/;"	s
BML	nall/string/markup/bml.hpp	/^namespace nall { namespace BML {$/;"	n	namespace:nall
BMP	nall/decode/bmp.hpp	/^  BMP(const string& filename) { load(filename); }$/;"	f	struct:nall::Decode::BMP
BMP	nall/decode/bmp.hpp	/^  BMP(const uint8_t* data, uint size) { load(data, size); }$/;"	f	struct:nall::Decode::BMP
BMP	nall/decode/bmp.hpp	/^struct BMP {$/;"	s	namespace:nall::Decode
BMP	nall/encode/bmp.hpp	/^struct BMP {$/;"	s	namespace:nall::Encode
BOOL	ruby/video/wgl.cpp	/^  auto (APIENTRY* wglSwapInterval)(int) -> BOOL = nullptr;$/;"	m	struct:VideoWGL	file:
BPP4	higan/sfc/ppu-fast/ppu.hpp	/^  struct TileMode { enum : uint { BPP2, BPP4, BPP8, Mode7, Inactive }; };$/;"	m	struct:TileMode	typeref:enum:TileMode::
BPP4	higan/sfc/ppu/background.hpp	/^  struct Mode { enum : uint { BPP2, BPP4, BPP8, Mode7, Inactive }; };$/;"	m	struct:Mode	typeref:enum:Mode::
BPP8	higan/sfc/ppu-fast/ppu.hpp	/^  struct TileMode { enum : uint { BPP2, BPP4, BPP8, Mode7, Inactive }; };$/;"	m	struct:TileMode	typeref:enum:TileMode::
BPP8	higan/sfc/ppu/background.hpp	/^  struct Mode { enum : uint { BPP2, BPP4, BPP8, Mode7, Inactive }; };$/;"	m	struct:Mode	typeref:enum:Mode::
BP_CHECKBOX	hiro/windows/header.hpp	59;"	d
BP_PUSHBUTTON	hiro/windows/header.hpp	35;"	d
BSD	nall/intrinsics.hpp	/^  enum class Platform : uint { Windows, MacOS, Linux, BSD, Unknown };$/;"	m	class:nall::Platform
BSMemory	higan/sfc/interface/interface.hpp	/^    BSMemory,$/;"	m	struct:SuperFamicom::ID	typeref:enum:SuperFamicom::ID::
BSMemory	higan/sfc/slot/bsmemory/bsmemory.cpp	/^BSMemory::BSMemory() {$/;"	f	class:SuperFamicom::BSMemory
BSMemory	higan/sfc/slot/bsmemory/bsmemory.hpp	/^struct BSMemory : Thread, Memory {$/;"	s
BSMemory	higan/target-bsnes/program/program.hpp	/^  struct BSMemory : Game {$/;"	s	struct:Program
BSMemory	icarus/core/core.hpp	/^  Markup::Node BSMemory;$/;"	m	namespace:Database
BSMemory	icarus/heuristics/bs-memory.cpp	/^BSMemory::BSMemory(vector<uint8_t>& data, string location) : data(data), location(location) {$/;"	f	class:Heuristics::BSMemory
BSMemory	icarus/heuristics/bs-memory.cpp	/^struct BSMemory {$/;"	s	namespace:Heuristics	file:
BSMemorySlot	higan/sfc/cartridge/cartridge.hpp	/^    boolean BSMemorySlot;$/;"	m	struct:Cartridge::Has
BUTTON_IMAGELIST	hiro/windows/header.hpp	/^  } BUTTON_IMAGELIST, *PBUTTON_IMAGELIST;$/;"	t	typeref:struct:__anon1
BUTTON_IMAGELIST_ALIGN_BOTTOM	hiro/windows/header.hpp	26;"	d
BUTTON_IMAGELIST_ALIGN_CENTER	hiro/windows/header.hpp	27;"	d
BUTTON_IMAGELIST_ALIGN_LEFT	hiro/windows/header.hpp	23;"	d
BUTTON_IMAGELIST_ALIGN_RIGHT	hiro/windows/header.hpp	24;"	d
BUTTON_IMAGELIST_ALIGN_TOP	hiro/windows/header.hpp	25;"	d
BWRAM	higan/sfc/coprocessor/sa1/sa1.hpp	/^  struct BWRAM : WritableMemory {$/;"	s	struct:SA1
B_	higan/processor/z80/registers.cpp	26;"	d	file:
Back	higan/ws/ppu/ppu.hpp	/^    enum class Source : uint { Back, ScreenOne, ScreenTwo, Sprite };$/;"	m	class:PPU::Pixel::Source
Back	hiro/resource/resource.cpp	/^const unsigned char Back[770] = {$/;"	m	namespace:Icon::Media	file:
Background	higan/gb/ppu/ppu.hpp	/^  struct Background {$/;"	s	struct:PPU
Background	higan/gba/ppu/ppu.hpp	/^  struct Background {$/;"	s	struct:PPU
Background	higan/md/vdp/vdp.hpp	/^  struct Background {$/;"	s	struct:VDP
Background	higan/ms/vdp/vdp.hpp	/^  struct Background {$/;"	s	struct:VDP
Background	higan/pce/vdc/vdc.hpp	/^  struct Background {$/;"	s	struct:VDC
Background	higan/sfc/ppu/background.hpp	/^  Background(uint id) : id(id) {}$/;"	f	struct:Background
Background	higan/sfc/ppu/background.hpp	/^struct Background {$/;"	s
BandPass	nall/dsp/iir/biquad.hpp	/^    BandPass,$/;"	m	class:nall::DSP::IIR::Biquad::Type
BandPassFilter	ruby/audio/xaudio2.hpp	/^  BandPassFilter,$/;"	e	enum:XAUDIO2_FILTER_TYPE
BandaiFCG	higan/fc/cartridge/board/bandai-fcg.cpp	/^  BandaiFCG(Markup::Node& document) : Board(document) {$/;"	f	struct:BandaiFCG
BandaiFCG	higan/fc/cartridge/board/bandai-fcg.cpp	/^struct BandaiFCG : Board {$/;"	s	file:
BarrettReduction	nall/arithmetic/barrett.hpp	/^  explicit BarrettReduction(type modulo) : modulo(modulo), factor(pair(1) + -pair(modulo) \/ modulo) {}$/;"	f	struct:nall::BarrettReduction
BarrettReduction	nall/arithmetic/barrett.hpp	/^template<uint Bits> struct BarrettReduction {$/;"	s	namespace:nall
Beat	nall/beat/archive/container.hpp	/^namespace nall { namespace Beat { namespace Archive {$/;"	n	namespace:nall
Beat	nall/beat/archive/create.hpp	/^namespace nall { namespace Beat { namespace Archive {$/;"	n	namespace:nall
Beat	nall/beat/archive/extract.hpp	/^namespace nall { namespace Beat { namespace Archive {$/;"	n	namespace:nall
Beat	nall/beat/archive/node.hpp	/^namespace nall { namespace Beat { namespace Archive {$/;"	n	namespace:nall
Beat	nall/beat/single/apply.hpp	/^namespace nall { namespace Beat { namespace Single {$/;"	n	namespace:nall
Beat	nall/beat/single/create.hpp	/^namespace nall { namespace Beat { namespace Single {$/;"	n	namespace:nall
Binary	hiro/resource/resource.cpp	/^const unsigned char Binary[560] = {$/;"	m	namespace:Icon::Emblem	file:
Binding	nall/database/odbc.hpp	/^    struct Binding {$/;"	s	struct:nall::Database::ODBC::Query
Biquad	nall/dsp/iir/biquad.hpp	/^struct Biquad {$/;"	s	namespace:nall::DSP::IIR
BitwiseAnd	nall/string/eval/node.hpp	/^    BitwiseAnd, BitwiseOr, BitwiseXor,$/;"	m	class:nall::Eval::Node::Type
BitwiseNot	nall/string/eval/node.hpp	/^    Reference, Dereference, LogicalNot, BitwiseNot, Positive, Negative, PrefixIncrement, PrefixDecrement,$/;"	m	class:nall::Eval::Node::Type
BitwiseOr	nall/string/eval/node.hpp	/^    BitwiseAnd, BitwiseOr, BitwiseXor,$/;"	m	class:nall::Eval::Node::Type
BitwiseXor	nall/string/eval/node.hpp	/^    BitwiseAnd, BitwiseOr, BitwiseXor,$/;"	m	class:nall::Eval::Node::Type
Block	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    auto operator()(uint6 id) -> Block&;$/;"	m	struct:BSMemory::Blocks
Block	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  struct Block : BlockInformation {$/;"	s	struct:BSMemory
BlockInformation	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  struct BlockInformation {$/;"	s	struct:BSMemory
Blocks	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  struct Blocks : BlockInformation {$/;"	s	struct:BSMemory
Board	higan/fc/cartridge/board/board.cpp	/^Board::Board(Markup::Node& document) {$/;"	f	class:Board
Board	higan/fc/cartridge/board/board.hpp	/^  static auto load(string manifest) -> Board*;$/;"	m	struct:Board
Board	higan/fc/cartridge/board/board.hpp	/^struct Board {$/;"	s
Board	higan/sfc/coprocessor/event/event.hpp	/^  enum class Board : uint { Unknown, CampusChallenge92, PowerFest94 } board;$/;"	c	struct:Event
Boards	higan/target-bsnes/resource/resource.cpp	/^const char Boards[30183] =$/;"	m	namespace:Resource::System	file:
Bookmark	hiro/resource/resource.cpp	/^const unsigned char Bookmark[686] = {$/;"	m	namespace:Icon::Action	file:
Bookmarks	hiro/resource/resource.cpp	/^const unsigned char Bookmarks[753] = {$/;"	m	namespace:Icon::Place	file:
Bool	nall/xorg/guard.hpp	14;"	d
Bool	nall/xorg/guard.hpp	5;"	d
Boolean	nall/macos/guard.hpp	11;"	d
Boolean	nall/macos/guard.hpp	4;"	d
Boolean	nall/primitives.hpp	/^  inline Boolean() : data(false) {}$/;"	f	struct:nall::Boolean
Boolean	nall/primitives.hpp	/^  template<typename T> inline Boolean(const T& value) : data(value) {}$/;"	f	struct:nall::Boolean
Boolean	nall/primitives.hpp	/^struct Boolean {$/;"	s	namespace:nall
BooleanBitField	nall/bit-field.hpp	/^template<typename Type, uint Bit> struct BooleanBitField {$/;"	s	namespace:nall
BootROM	higan/gb/system/system.hpp	/^  struct BootROM {$/;"	s	struct:System
Bottom	hiro/core/core.hpp	/^enum class Navigation : uint { Top, Bottom, Left, Right };$/;"	m	class:hiro::Navigation
BoundsCheck	higan/processor/m68k/m68k.hpp	/^    BoundsCheck     =  6,$/;"	m	struct:Vector	typeref:enum:Vector::
BoundsCheck	higan/processor/m68k/m68k.hpp	/^    BoundsCheck,$/;"	m	struct:Processor::Exception	typeref:enum:Processor::Exception::
BreakMask	ruby/audio/xaudio2.hpp	/^  UINT32 BreakMask;$/;"	m	struct:XAUDIO2_DEBUG_CONFIGURATION
Bridge	higan/sfc/coprocessor/armdsp/registers.hpp	/^struct Bridge {$/;"	s
Browser	hiro/resource/resource.cpp	/^const unsigned char Browser[928] = {$/;"	m	namespace:Icon::Application	file:
BrowserDialog	hiro/extension/browser-dialog.cpp	/^BrowserDialog::BrowserDialog() {$/;"	f	class:BrowserDialog
BrowserDialog	hiro/extension/browser-dialog.hpp	/^struct BrowserDialog {$/;"	s
BrowserDialogWindow	hiro/extension/browser-dialog.cpp	/^  BrowserDialogWindow(BrowserDialog::State& state) : state(state) {}$/;"	f	struct:BrowserDialogWindow
BrowserDialogWindow	hiro/extension/browser-dialog.cpp	/^struct BrowserDialogWindow {$/;"	s	file:
BrowserWindow	hiro/core/core.hpp	/^struct BrowserWindow {$/;"	s	namespace:hiro
BrrBlockSize	higan/sfc/dsp/dsp.hpp	/^    BrrBlockSize = 9,$/;"	e	enum:uint
Buffer	higan/sfc/coprocessor/armdsp/registers.hpp	/^  struct Buffer {$/;"	s	struct:Bridge
BuffersQueued	ruby/audio/xaudio2.hpp	/^  UINT32 BuffersQueued;$/;"	m	struct:XAUDIO2_VOICE_STATE
Build	nall/intrinsics.hpp	/^  enum class Build : uint { Debug, Stable, Size, Release, Performance };$/;"	c	namespace:nall
Build	nall/intrinsics.hpp	/^  static inline constexpr auto build() -> Build;$/;"	m	namespace:nall
Bus	higan/fc/memory/memory.hpp	/^struct Bus {$/;"	s
Bus	higan/gb/memory/memory.hpp	/^struct Bus {$/;"	s
Bus	higan/gba/memory/memory.hpp	/^struct Bus {$/;"	s
Bus	higan/processor/hg51b/hg51b.hpp	/^    struct Bus {$/;"	s	struct:Processor::HG51B::IO
Bus	higan/processor/m68k/m68k.hpp	/^  struct Bus {$/;"	s	struct:Processor::M68K
Bus	higan/processor/z80/z80.hpp	/^  struct Bus {$/;"	s	struct:Processor::Z80
Bus	higan/sfc/memory/memory.hpp	/^struct Bus {$/;"	s
Bus	higan/ws/memory/memory.hpp	/^struct Bus {$/;"	s
Button	higan/emulator/interface.hpp	/^      Button,$/;"	m	struct:Emulator::Input::Type	typeref:enum:Emulator::Input::Type::
Button	hiro/core/core.hpp	/^  enum class Button : uint { Left, Middle, Right };$/;"	c	struct:hiro::Mouse
Button	hiro/core/shared.hpp	/^struct Button : sButton {$/;"	s
Button1	nall/xorg/guard.hpp	34;"	d
Button2	nall/xorg/guard.hpp	35;"	d
Button3	nall/xorg/guard.hpp	36;"	d
Button4	nall/xorg/guard.hpp	37;"	d
Button5	nall/xorg/guard.hpp	38;"	d
Button_SetImageList	hiro/windows/header.hpp	31;"	d
Buttons	hiro/core/core.hpp	/^  enum class Buttons : uint { Ok, OkCancel, YesNo, YesNoCancel };$/;"	c	struct:hiro::MessageWindow
Byte	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    Byte          = 1 << 3,  \/\/ 8-bit access$/;"	m	struct:Processor::ARM7TDMI	typeref:enum:Processor::ARM7TDMI::
Byte	higan/processor/lr35902/lr35902.hpp	/^      struct Byte { uint8 order_msb2(hi, lo); } byte;$/;"	s	union:Processor::LR35902::Registers::Pair
Byte	higan/processor/spc700/spc700.hpp	/^      struct Byte { uint8 order_lsb2(l, h); } byte;$/;"	s	union:Processor::SPC700::Registers::Pair
Byte	higan/processor/z80/z80.hpp	/^      struct Byte { uint8 order_msb2(hi, lo); } byte;$/;"	s	union:Processor::Z80::Registers::Pair
C	higan/md/controller/control-pad/control-pad.hpp	/^    Up, Down, Left, Right, A, B, C, Start,$/;"	m	struct:ControlPad	typeref:enum:ControlPad::
C	higan/md/controller/fighting-pad/fighting-pad.hpp	/^    Up, Down, Left, Right, A, B, C, X, Y, Z, Mode, Start,$/;"	m	struct:FightingPad	typeref:enum:FightingPad::
C	higan/processor/huc6280/huc6280.cpp	14;"	d	file:
C	higan/processor/huc6280/huc6280.cpp	41;"	d	file:
C	higan/processor/lr35902/registers.cpp	11;"	d	file:
C	higan/processor/mos6502/mos6502.cpp	15;"	d	file:
C	higan/processor/mos6502/mos6502.cpp	39;"	d	file:
C	higan/processor/z80/disassembler.cpp	1050;"	d	file:
C	higan/processor/z80/disassembler.cpp	62;"	d	file:
C	higan/processor/z80/registers.cpp	9;"	d	file:
CBS_CHECKEDNORMAL	hiro/windows/header.hpp	67;"	d
CBS_UNCHECKEDNORMAL	hiro/windows/header.hpp	63;"	d
CF	higan/processor/lr35902/registers.cpp	17;"	d	file:
CF	higan/processor/spc700/spc700.cpp	14;"	d	file:
CF	higan/processor/spc700/spc700.cpp	51;"	d	file:
CF	higan/processor/wdc65816/wdc65816.cpp	16;"	d	file:
CF	higan/processor/wdc65816/wdc65816.cpp	75;"	d	file:
CF	higan/processor/z80/registers.cpp	43;"	d	file:
CFGR	higan/processor/gsu/registers.hpp	/^struct CFGR {$/;"	s
CM	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    CM(SDD1::Decompressor& self) : self(self) {}$/;"	f	struct:Decompressor::CM
CM	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  struct CM {  \/\/context model$/;"	s	struct:Decompressor
CML	nall/string/transform/cml.hpp	/^struct CML {$/;"	s	namespace:nall::__anon38
COMPILER_CLANG	nall/intrinsics.hpp	28;"	d
CO_SWAP_ASM	libco/ppc.c	255;"	d	file:
CO_SWAP_ASM	libco/ppc.c	258;"	d	file:
CPU	higan/fc/cpu/cpu.hpp	/^struct CPU : Processor::MOS6502, Thread {$/;"	s
CPU	higan/gb/cpu/cpu.hpp	/^struct CPU : Processor::LR35902, Thread, MMIO {$/;"	s
CPU	higan/gba/cpu/cpu.hpp	/^struct CPU : Processor::ARM7TDMI, Thread, IO {$/;"	s
CPU	higan/md/cpu/cpu.hpp	/^struct CPU : Processor::M68K, Processor::M68K::Bus, Thread {$/;"	s
CPU	higan/ms/cpu/cpu.hpp	/^struct CPU : Processor::Z80, Processor::Z80::Bus, Thread {$/;"	s
CPU	higan/pce/cpu/cpu.hpp	/^struct CPU : Processor::HuC6280, Thread {$/;"	s
CPU	higan/sfc/cpu/cpu.hpp	/^struct CPU : Processor::WDC65816, Thread, PPUcounter {$/;"	s
CPU	higan/sfc/interface/configuration.hpp	/^    struct CPU {$/;"	s	struct:Configuration::System
CPU	higan/ws/cpu/cpu.hpp	/^struct CPU : Processor::V30MZ, Thread, IO {$/;"	s
CPURAM	higan/sfc/coprocessor/superfx/superfx.hpp	/^  struct CPURAM : Memory {$/;"	s	struct:SuperFX
CPUROM	higan/sfc/coprocessor/superfx/superfx.hpp	/^  struct CPUROM : Memory {$/;"	s	struct:SuperFX
CRAM	higan/md/vdp/vdp.hpp	/^  struct CRAM {$/;"	s	struct:VDP
CRAM	higan/pce/vce/vce.hpp	/^  struct CRAM {$/;"	s	struct:VCE
CRC16	nall/hash/crc16.hpp	/^  CRC16(array_view<uint8_t> buffer = {}) {$/;"	f	struct:nall::Hash::CRC16
CRC16	nall/hash/crc16.hpp	/^struct CRC16 : Hash {$/;"	s	namespace:nall::Hash
CRC32	nall/hash/crc32.hpp	/^  CRC32(array_view<uint8_t> buffer = {}) {$/;"	f	struct:nall::Hash::CRC32
CRC32	nall/hash/crc32.hpp	/^struct CRC32 : Hash {$/;"	s	namespace:nall::Hash
CRC64	nall/hash/crc64.hpp	/^  CRC64(array_view<uint8_t> buffer = {}) {$/;"	f	struct:nall::Hash::CRC64
CRC64	nall/hash/crc64.hpp	/^struct CRC64 : Hash {$/;"	s	namespace:nall::Hash
CSPRNG	nall/random.hpp	/^namespace CSPRNG {$/;"	n	namespace:nall
C_	higan/processor/z80/registers.cpp	27;"	d	file:
Cache	higan/processor/gsu/registers.hpp	/^struct Cache {$/;"	s
Cache	higan/processor/hg51b/hg51b.hpp	/^    struct Cache {$/;"	s	struct:Processor::HG51B::IO
Calculator	hiro/resource/resource.cpp	/^const unsigned char Calculator[686] = {$/;"	m	namespace:Icon::Application	file:
Calendar	hiro/resource/resource.cpp	/^const unsigned char Calendar[603] = {$/;"	m	namespace:Icon::Application	file:
CampusChallenge92	higan/sfc/coprocessor/event/event.hpp	/^  enum class Board : uint { Unknown, CampusChallenge92, PowerFest94 } board;$/;"	m	class:Event::Board
Cancel	hiro/core/core.hpp	/^  enum class Response : uint { Ok, Cancel, Yes, No };$/;"	m	class:hiro::MessageWindow::Response
Canvas	hiro/core/shared.hpp	/^struct Canvas : sCanvas {$/;"	s
Cartridge	higan/fc/cartridge/cartridge.hpp	/^struct Cartridge : Thread {$/;"	s
Cartridge	higan/gb/cartridge/cartridge.hpp	/^struct Cartridge : Thread, MMIO {$/;"	s
Cartridge	higan/gb/interface/interface.hpp	/^    Cartridge,$/;"	m	struct:GameBoy::Port	typeref:enum:GameBoy::Port::
Cartridge	higan/gba/cartridge/cartridge.cpp	/^Cartridge::Cartridge() {$/;"	f	class:GameBoyAdvance::Cartridge
Cartridge	higan/gba/cartridge/cartridge.hpp	/^struct Cartridge {$/;"	s
Cartridge	higan/gba/cpu/cpu.hpp	/^    Cartridge    = 0x2000,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
Cartridge	higan/md/cartridge/cartridge.hpp	/^  Cartridge(uint depth) : depth(depth) {}$/;"	f	struct:Cartridge
Cartridge	higan/md/cartridge/cartridge.hpp	/^struct Cartridge {$/;"	s
Cartridge	higan/ms/cartridge/cartridge.hpp	/^struct Cartridge {$/;"	s
Cartridge	higan/pce/cartridge/cartridge.hpp	/^struct Cartridge {$/;"	s
Cartridge	higan/sfc/cartridge/cartridge.hpp	/^struct Cartridge {$/;"	s
Cartridge	higan/ws/cartridge/cartridge.hpp	/^struct Cartridge : Thread, IO {$/;"	s
Cartridge	higan/ws/cpu/cpu.hpp	/^    Cartridge,$/;"	m	class:CPU::Interrupt
Cast	nall/arithmetic/natural.hpp	9;"	d
Cast	nall/vector.hpp	/^  template<typename Cast = T> auto data() -> Cast*;$/;"	m	struct:nall::vector_base
Cast	nall/vector.hpp	/^  template<typename Cast = T> auto data() const -> const Cast*;$/;"	m	struct:nall::vector_base
ChaCha20	nall/cipher/chacha20.hpp	/^  ChaCha20(uint256_t key, uint64_t nonce, uint64_t counter = 0) {$/;"	f	struct:nall::Cipher::ChaCha20
ChaCha20	nall/cipher/chacha20.hpp	/^struct ChaCha20 {$/;"	s	namespace:nall::Cipher
Channel	higan/audio/audio.hpp	/^  struct Channel {$/;"	s	struct:Emulator::Stream
Channel	higan/gb/apu/apu.hpp	/^    struct Channel {$/;"	s	struct:APU::Sequencer
Channel	higan/md/ym2612/ym2612.hpp	/^  struct Channel {$/;"	s
Channel	higan/pce/psg/psg.hpp	/^  struct Channel {$/;"	s	struct:PSG
Channel	higan/sfc/cpu/cpu.hpp	/^    Channel() : transferSize(0xffff) {}$/;"	f	struct:CPU::Channel
Channel	higan/sfc/cpu/cpu.hpp	/^  struct Channel {$/;"	s	struct:CPU
Channel1	higan/ws/apu/apu.hpp	/^  struct Channel1 {$/;"	s	struct:APU
Channel2	higan/ws/apu/apu.hpp	/^  struct Channel2 {$/;"	s	struct:APU
Channel3	higan/ws/apu/apu.hpp	/^  struct Channel3 {$/;"	s	struct:APU
Channel4	higan/ws/apu/apu.hpp	/^  struct Channel4 {$/;"	s	struct:APU
Channel5	higan/ws/apu/apu.hpp	/^  struct Channel5 {$/;"	s	struct:APU
Chat	hiro/resource/resource.cpp	/^const unsigned char Chat[422] = {$/;"	m	namespace:Icon::Application	file:
Cheat	higan/emulator/cheat.hpp	/^struct Cheat {$/;"	s	namespace:Emulator
Cheat	higan/target-bsnes/tools/tools.hpp	/^struct Cheat {$/;"	s
Cheat	higan/target-higan/tools/tools.hpp	/^  struct Cheat {$/;"	s	struct:CheatEditor
CheatDatabase	higan/target-bsnes/tools/tools.hpp	/^struct CheatDatabase : Window {$/;"	s
CheatDatabase	higan/target-higan/tools/cheat-database.cpp	/^CheatDatabase::CheatDatabase() {$/;"	f	class:CheatDatabase
CheatDatabase	higan/target-higan/tools/tools.hpp	/^struct CheatDatabase : Window {$/;"	s
CheatEditor	higan/target-bsnes/tools/tools.hpp	/^struct CheatEditor : TabFrameItem {$/;"	s
CheatEditor	higan/target-higan/tools/cheat-editor.cpp	/^CheatEditor::CheatEditor(TabFrame* parent) : TabFrameItem(parent) {$/;"	f	class:CheatEditor
CheatEditor	higan/target-higan/tools/tools.hpp	/^struct CheatEditor : TabFrameItem {$/;"	s
CheatWindow	higan/target-bsnes/tools/tools.hpp	/^struct CheatWindow : Window {$/;"	s
Cheats	higan/target-bsnes/settings/settings.hpp	/^    struct Cheats {$/;"	s	struct:Settings::Emulator
CheckButton	hiro/core/shared.hpp	/^struct CheckButton : sCheckButton {$/;"	s
CheckLabel	hiro/core/shared.hpp	/^struct CheckLabel : sCheckLabel {$/;"	s
Chip	higan/fc/cartridge/chip/chip.cpp	/^Chip::Chip(Board& board) : board(board) {$/;"	f	class:Chip
Chip	higan/fc/cartridge/chip/chip.hpp	/^struct Chip {$/;"	s
Chip	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    Chip,$/;"	m	struct:BSMemory::Mode	typeref:enum:BSMemory::Mode::
Chip	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  struct Chip {$/;"	s	struct:BSMemory
Cipher	nall/cipher/chacha20.hpp	/^namespace nall { namespace Cipher {$/;"	n	namespace:nall
Clang	nall/intrinsics.hpp	/^  enum class Compiler : uint { Clang, GCC, Microsoft, Unknown };$/;"	m	class:nall::Compiler
Clear	hiro/resource/resource.cpp	/^const unsigned char Clear[773] = {$/;"	m	namespace:Icon::Edit	file:
Client	nall/http/client.hpp	/^struct Client : Role {$/;"	s	namespace:nall::HTTP
Clipboard	nall/xorg/clipboard.hpp	/^namespace nall { namespace Clipboard {$/;"	n	namespace:nall
Clock	hiro/resource/resource.cpp	/^const unsigned char Clock[897] = {$/;"	m	namespace:Icon::Device	file:
Coalesce	nall/string/eval/node.hpp	/^    Coalesce, Condition,$/;"	m	class:nall::Eval::Node::Type
Cocoa	hiro/core/application.hpp	/^    struct Cocoa {$/;"	s	struct:Application::State
Cocoa	hiro/core/application.hpp	/^  struct Cocoa {$/;"	s	struct:Application
Code	higan/emulator/cheat.hpp	/^  struct Code {$/;"	s	struct:Emulator::Cheat
Code	higan/md/cartridge/cartridge.hpp	/^    struct Code {$/;"	s	struct:Cartridge::GameGenie
Collision	higan/pce/vdc/vdc.hpp	/^      Collision,$/;"	m	class:VDC::IRQ::Line
Color	higan/sfc/ppu/window.hpp	/^    struct Color {$/;"	s	struct:Window::IO
Color	hiro/core/color.cpp	/^Color::Color() {$/;"	f	class:Color
Color	hiro/core/color.cpp	/^Color::Color(signed red, signed green, signed blue, signed alpha) {$/;"	f	class:Color
Color	hiro/core/core.hpp	/^  auto backgroundColor() const -> Color;$/;"	m	struct:hiro::mComboEdit
Color	hiro/core/core.hpp	/^  auto backgroundColor() const -> Color;$/;"	m	struct:hiro::mConsole
Color	hiro/core/core.hpp	/^  auto backgroundColor() const -> Color;$/;"	m	struct:hiro::mHexEdit
Color	hiro/core/core.hpp	/^  auto backgroundColor() const -> Color;$/;"	m	struct:hiro::mIconView
Color	hiro/core/core.hpp	/^  auto backgroundColor() const -> Color;$/;"	m	struct:hiro::mLabel
Color	hiro/core/core.hpp	/^  auto backgroundColor() const -> Color;$/;"	m	struct:hiro::mLineEdit
Color	hiro/core/core.hpp	/^  auto backgroundColor() const -> Color;$/;"	m	struct:hiro::mTextEdit
Color	hiro/core/core.hpp	/^  auto backgroundColor() const -> Color;$/;"	m	struct:hiro::mTreeView
Color	hiro/core/core.hpp	/^  auto backgroundColor(bool recursive = false) const -> Color;$/;"	m	struct:hiro::mTreeViewItem
Color	hiro/core/core.hpp	/^  auto color() const -> Color;$/;"	m	struct:hiro::mCanvas
Color	hiro/core/core.hpp	/^  auto foregroundColor() const -> Color;$/;"	m	struct:hiro::mComboEdit
Color	hiro/core/core.hpp	/^  auto foregroundColor() const -> Color;$/;"	m	struct:hiro::mConsole
Color	hiro/core/core.hpp	/^  auto foregroundColor() const -> Color;$/;"	m	struct:hiro::mHexEdit
Color	hiro/core/core.hpp	/^  auto foregroundColor() const -> Color;$/;"	m	struct:hiro::mIconView
Color	hiro/core/core.hpp	/^  auto foregroundColor() const -> Color;$/;"	m	struct:hiro::mLabel
Color	hiro/core/core.hpp	/^  auto foregroundColor() const -> Color;$/;"	m	struct:hiro::mLineEdit
Color	hiro/core/core.hpp	/^  auto foregroundColor() const -> Color;$/;"	m	struct:hiro::mTextEdit
Color	hiro/core/core.hpp	/^  auto foregroundColor() const -> Color;$/;"	m	struct:hiro::mTreeView
Color	hiro/core/core.hpp	/^  auto foregroundColor(bool recursive = false) const -> Color;$/;"	m	struct:hiro::mTreeViewItem
Color	hiro/core/core.hpp	/^struct Color {$/;"	s	namespace:hiro
Color	hiro/core/widget/table-view-cell.hpp	/^  auto backgroundColor(bool recursive = false) const -> Color;$/;"	m	struct:mTableViewCell
Color	hiro/core/widget/table-view-cell.hpp	/^  auto foregroundColor(bool recursive = false) const -> Color;$/;"	m	struct:mTableViewCell
Color	hiro/core/widget/table-view-column.hpp	/^  auto backgroundColor() const -> Color;$/;"	m	struct:mTableViewColumn
Color	hiro/core/widget/table-view-column.hpp	/^  auto foregroundColor() const -> Color;$/;"	m	struct:mTableViewColumn
Color	hiro/core/widget/table-view-item.hpp	/^  auto backgroundColor() const -> Color;$/;"	m	struct:mTableViewItem
Color	hiro/core/widget/table-view-item.hpp	/^  auto foregroundColor() const -> Color;$/;"	m	struct:mTableViewItem
Color	hiro/core/widget/table-view.hpp	/^  auto backgroundColor() const -> Color;$/;"	m	struct:mTableView
Color	hiro/core/widget/table-view.hpp	/^  auto foregroundColor() const -> Color;$/;"	m	struct:mTableView
Color	hiro/core/window.hpp	/^  auto backgroundColor() const -> Color;$/;"	m	struct:mWindow
Color	hiro/windows/widget/table-view.hpp	/^  auto _backgroundColor(unsigned row, unsigned column) -> Color;$/;"	m	struct:hiro::pTableView
Color	hiro/windows/widget/table-view.hpp	/^  auto _foregroundColor(unsigned row, unsigned column) -> Color;$/;"	m	struct:hiro::pTableView
ColorBleed	higan/video/video.hpp	/^    ColorBleed,$/;"	m	class:Emulator::Video::Effect
Colorburst	higan/emulator/emulator.hpp	/^    namespace Colorburst {$/;"	n	namespace:Emulator::Constants
ComboButton	hiro/core/shared.hpp	/^struct ComboButton : sComboButton {$/;"	s
ComboButtonItem	hiro/core/core.hpp	/^  auto item(uint position) const -> ComboButtonItem;$/;"	m	struct:hiro::mComboButton
ComboButtonItem	hiro/core/core.hpp	/^  auto selected() const -> ComboButtonItem;$/;"	m	struct:hiro::mComboButton
ComboButtonItem	hiro/core/shared.hpp	/^struct ComboButtonItem : sComboButtonItem {$/;"	s
ComboEdit	hiro/core/shared.hpp	/^struct ComboEdit : sComboEdit {$/;"	s
ComboEditItem	hiro/core/core.hpp	/^  auto item(uint position) const -> ComboEditItem;$/;"	m	struct:hiro::mComboEdit
ComboEditItem	hiro/core/shared.hpp	/^struct ComboEditItem : sComboEditItem {$/;"	s
Command	higan/gba/cartridge/memory.hpp	/^    Wait, Command, ReadAddress, ReadValidate, ReadData, WriteAddress, WriteData, WriteValidate$/;"	m	class:EEPROM::Mode
Command	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  enum class State : uint { Ready, Command, Read, Write } state;$/;"	m	class:SharpRTC::State
Command	higan/ws/eeprom/eeprom.hpp	/^    Command = Status,$/;"	m	struct:EEPROM	typeref:enum:EEPROM::
Compatible	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  struct Compatible {$/;"	s	struct:BSMemory
CompatibleStatus	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    CompatibleStatus,$/;"	m	struct:BSMemory::Mode	typeref:enum:BSMemory::Mode::
Compiler	nall/intrinsics.hpp	/^  enum class Compiler : uint { Clang, GCC, Microsoft, Unknown };$/;"	c	namespace:nall
Compiler	nall/intrinsics.hpp	/^  static inline constexpr auto compiler() -> Compiler;$/;"	m	namespace:nall
Component	genius/genius.hpp	/^struct Component {$/;"	s
Compression	nall/beat/archive/container.hpp	/^  struct Compression {$/;"	s	struct:nall::Beat::Archive::Container
Compression	nall/beat/archive/node.hpp	/^  struct Compression {$/;"	s	struct:nall::Beat::Archive::Node
Concatenate	nall/string/eval/node.hpp	/^    Concatenate,$/;"	m	class:nall::Eval::Node::Type
ConcatenateType	nall/arithmetic/natural.hpp	1;"	d
ConcatenateUDL	nall/arithmetic/natural.hpp	100;"	d
ConcatenateUDL	nall/arithmetic/natural.hpp	126;"	d
Condition	nall/string/eval/node.hpp	/^    Coalesce, Condition,$/;"	m	class:nall::Eval::Node::Type
Configuration	higan/sfc/interface/configuration.hpp	/^struct Configuration {$/;"	s
Console	hiro/core/shared.hpp	/^struct Console : sConsole {$/;"	s
Constants	higan/emulator/emulator.hpp	/^  namespace Constants {$/;"	n	namespace:Emulator
Contact	nall/smtp.hpp	/^    struct Contact {$/;"	s	struct:nall::SMTP::Information
Container	nall/beat/archive/container.hpp	/^Container::Container(array_view<uint8_t> memory) {$/;"	f	class:nall::Beat::Archive::Container
Container	nall/beat/archive/container.hpp	/^struct Container {$/;"	s	namespace:nall::Beat::Archive
Context	higan/gba/cpu/cpu.hpp	/^  struct Context {$/;"	s
Context	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  struct Context {$/;"	s	struct:Decompressor	file:
ContextInfo	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    struct ContextInfo {$/;"	s	struct:Decompressor::PEM
Control	higan/emulator/interface.hpp	/^      Control,$/;"	m	struct:Emulator::Input::Type	typeref:enum:Emulator::Input::Type::
ControlPad	higan/md/controller/control-pad/control-pad.cpp	/^ControlPad::ControlPad(uint port) : Controller(port) {$/;"	f	class:ControlPad
ControlPad	higan/md/controller/control-pad/control-pad.hpp	/^struct ControlPad : Controller {$/;"	s
ControlPad	higan/md/interface/interface.hpp	/^    ControlPad,$/;"	m	struct:Device	typeref:enum:Device::
Controller	higan/fc/controller/controller.cpp	/^Controller::Controller(uint port) : port(port) {$/;"	f	class:Famicom::Controller
Controller	higan/fc/controller/controller.hpp	/^struct Controller : Thread {$/;"	s
Controller	higan/md/controller/controller.cpp	/^Controller::Controller(uint port) : port(port) {$/;"	f	class:MegaDrive::Controller
Controller	higan/md/controller/controller.hpp	/^struct Controller : Thread {$/;"	s
Controller	higan/ms/controller/controller.cpp	/^Controller::Controller(uint port) : port(port) {$/;"	f	class:MasterSystem::Controller
Controller	higan/ms/controller/controller.hpp	/^struct Controller : Thread {$/;"	s
Controller	higan/pce/controller/controller.cpp	/^Controller::Controller() {$/;"	f	class:PCEngine::Controller
Controller	higan/pce/controller/controller.hpp	/^struct Controller : Thread {$/;"	s
Controller	higan/sfc/controller/controller.cpp	/^Controller::Controller(uint port) : port(port) {$/;"	f	class:SuperFamicom::Controller
Controller	higan/sfc/controller/controller.hpp	/^struct Controller : Thread {$/;"	s
Controller1	higan/ms/interface/interface.hpp	/^    Controller1,$/;"	m	struct:MasterSystem::Port	typeref:enum:MasterSystem::Port::
Controller2	higan/fc/interface/interface.hpp	/^    Controller2,$/;"	m	struct:Famicom::Port	typeref:enum:Famicom::Port::
Controller2	higan/md/interface/interface.hpp	/^    Controller2,$/;"	m	struct:MegaDrive::Port	typeref:enum:MegaDrive::Port::
Controller2	higan/ms/interface/interface.hpp	/^    Controller2,$/;"	m	struct:MasterSystem::Port	typeref:enum:MasterSystem::Port::
Controller2	higan/sfc/interface/interface.hpp	/^    Controller2,$/;"	m	struct:SuperFamicom::Port	typeref:enum:SuperFamicom::Port::
ControllerPort	higan/fc/controller/controller.hpp	/^struct ControllerPort {$/;"	s
ControllerPort	higan/md/controller/controller.hpp	/^struct ControllerPort {$/;"	s
ControllerPort	higan/ms/controller/controller.hpp	/^struct ControllerPort {$/;"	s
ControllerPort	higan/pce/controller/controller.hpp	/^struct ControllerPort {$/;"	s
ControllerPort	higan/sfc/controller/controller.hpp	/^struct ControllerPort {$/;"	s
Coprocessors	higan/sfc/interface/configuration.hpp	/^    struct Coprocessors {$/;"	s	struct:Configuration::Hacks
Coprocessors	higan/target-bsnes/settings/settings.hpp	/^      struct Coprocessors {$/;"	s	struct:Settings::Emulator::Hack
Copy	hiro/resource/resource.cpp	/^const unsigned char Copy[498] = {$/;"	m	namespace:Icon::Edit	file:
Copy	nall/windows/detour.hpp	11;"	d
Counter	higan/sfc/cpu/cpu.hpp	/^  struct Counter {$/;"	s	struct:CPU
CounterOffset	higan/sfc/dsp/counter.cpp	/^const uint16 DSP::CounterOffset[32] = {$/;"	m	class:DSP	file:
CounterOffset	higan/sfc/dsp/dsp.hpp	/^  static const uint16 CounterOffset[32];$/;"	v
CounterRange	higan/sfc/dsp/dsp.hpp	/^    CounterRange = 2048 * 5 * 3,  \/\/30720 (0x7800)$/;"	e	enum:uint
CounterRate	higan/sfc/dsp/counter.cpp	/^const uint16 DSP::CounterRate[32] = {$/;"	m	class:DSP	file:
CounterRate	higan/sfc/dsp/dsp.hpp	/^  static const uint16 CounterRate[32];$/;"	v
Create	nall/string/eval/node.hpp	/^    Assign, Create,  \/\/all assignment operators have the same precedence$/;"	m	class:nall::Eval::Node::Type
CreationFlags	ruby/audio/xaudio2.hpp	/^  UINT32 CreationFlags;$/;"	m	struct:XAUDIO2_VOICE_DETAILS
CrosshairBlue	higan/resource/resource.cpp	/^const unsigned char CrosshairBlue[332] = {$/;"	m	namespace:Resource::Sprite	file:
CrosshairGreen	higan/resource/resource.cpp	/^const unsigned char CrosshairGreen[329] = {$/;"	m	namespace:Resource::Sprite	file:
CrosshairRed	higan/resource/resource.cpp	/^const unsigned char CrosshairRed[342] = {$/;"	m	namespace:Resource::Sprite	file:
Cubic	nall/dsp/resampler/cubic.hpp	/^struct Cubic {$/;"	s	namespace:nall::DSP::Resampler
CurrentLatencyInSamples	ruby/audio/xaudio2.hpp	/^  UINT32 CurrentLatencyInSamples;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
CurrentTime	nall/xorg/guard.hpp	39;"	d
Cursor	higan/sfc/controller/super-scope/super-scope.hpp	/^    X, Y, Trigger, Cursor, Turbo, Pause,$/;"	m	struct:SuperScope	typeref:enum:SuperScope::
Cursor	hiro/core/core.hpp	/^  auto cursor() const -> Cursor;$/;"	m	struct:hiro::mTextEdit
Cursor	hiro/core/core.hpp	/^struct Cursor {$/;"	s	namespace:hiro
Cursor	hiro/core/cursor.cpp	/^Cursor::Cursor(signed offset, signed length) {$/;"	f	class:Cursor
Cursor	hiro/core/widget/source-edit.hpp	/^  auto cursor() const -> Cursor;$/;"	m	struct:mSourceEdit
Curve25519	nall/elliptic-curve/curve25519.hpp	/^struct Curve25519 {$/;"	s	namespace:nall::EllipticCurve
Cut	hiro/resource/resource.cpp	/^const unsigned char Cut[807] = {$/;"	m	namespace:Icon::Edit	file:
D	higan/processor/huc6280/huc6280.cpp	17;"	d	file:
D	higan/processor/huc6280/huc6280.cpp	44;"	d	file:
D	higan/processor/lr35902/registers.cpp	12;"	d	file:
D	higan/processor/mos6502/mos6502.cpp	18;"	d	file:
D	higan/processor/mos6502/mos6502.cpp	42;"	d	file:
D	higan/processor/wdc65816/wdc65816.cpp	12;"	d	file:
D	higan/processor/wdc65816/wdc65816.cpp	71;"	d	file:
D	higan/processor/z80/disassembler.cpp	1051;"	d	file:
D	higan/processor/z80/disassembler.cpp	63;"	d	file:
D	higan/processor/z80/registers.cpp	10;"	d	file:
D	nall/elliptic-curve/ed25519.hpp	/^  const field D = -field(121665) * reciprocal(field(121666));$/;"	m	struct:nall::EllipticCurve::Ed25519
DAC	higan/md/ym2612/ym2612.hpp	/^  struct DAC {$/;"	s	struct:YM2612
DE	higan/processor/lr35902/registers.cpp	3;"	d	file:
DE	higan/processor/z80/disassembler.cpp	1061;"	d	file:
DE	higan/processor/z80/disassembler.cpp	73;"	d	file:
DE	higan/processor/z80/registers.cpp	3;"	d	file:
DEBUG	nall/intrinsics.hpp	163;"	d
DEBUG	nall/intrinsics.hpp	169;"	d
DEBUG	nall/macos/guard.hpp	13;"	d
DEBUG	nall/macos/guard.hpp	6;"	d
DECLARE_INTERFACE	ruby/audio/xaudio2.hpp	/^DECLARE_INTERFACE(IXAudio2EngineCallback) {$/;"	f
DECLARE_INTERFACE	ruby/audio/xaudio2.hpp	/^DECLARE_INTERFACE(IXAudio2Voice) {$/;"	f
DECLARE_INTERFACE	ruby/audio/xaudio2.hpp	/^DECLARE_INTERFACE(IXAudio2VoiceCallback) {$/;"	f
DECLARE_INTERFACE_	ruby/audio/xaudio2.hpp	/^DECLARE_INTERFACE_(IXAudio2, IUnknown) {$/;"	f
DECLARE_INTERFACE_	ruby/audio/xaudio2.hpp	/^DECLARE_INTERFACE_(IXAudio2MasteringVoice, IXAudio2Voice) {$/;"	f
DECLARE_INTERFACE_	ruby/audio/xaudio2.hpp	/^DECLARE_INTERFACE_(IXAudio2SourceVoice, IXAudio2Voice) {$/;"	f
DECLARE_INTERFACE_	ruby/audio/xaudio2.hpp	/^DECLARE_INTERFACE_(IXAudio2SubmixVoice, IXAudio2Voice) {$/;"	f
DEFINE_CLSID_X	ruby/audio/xaudio2.hpp	13;"	d
DEFINE_GUID_X	ruby/audio/xaudio2.hpp	12;"	d
DEFINE_IID_X	ruby/audio/xaudio2.hpp	15;"	d
DE_	higan/processor/z80/disassembler.cpp	1066;"	d	file:
DE_	higan/processor/z80/disassembler.cpp	78;"	d	file:
DE_	higan/processor/z80/registers.cpp	21;"	d	file:
DF	higan/processor/wdc65816/wdc65816.cpp	19;"	d	file:
DF	higan/processor/wdc65816/wdc65816.cpp	78;"	d	file:
DIP	higan/sfc/cartridge/cartridge.hpp	/^    boolean DIP;$/;"	m	struct:Cartridge::Has
DIP	higan/sfc/coprocessor/dip/dip.hpp	/^struct DIP {$/;"	s
DIR	higan/sfc/dsp/dsp.hpp	/^    DIR   = 0x5d, ESA   = 0x6d,$/;"	m	struct:DSP	typeref:enum:DSP::
DIRECTINPUT_VERSION	ruby/input/windows.cpp	2;"	d	file:
DISPLAY_WINDOWS	nall/intrinsics.hpp	71;"	d
DMA	higan/gba/cpu/cpu.hpp	/^  struct DMA {$/;"	s
DMA	higan/md/vdp/vdp.hpp	/^  struct DMA {$/;"	s	struct:VDP
DMA	higan/pce/vdc/vdc.hpp	/^  struct DMA {$/;"	s	struct:VDC
DMA	higan/processor/hg51b/hg51b.hpp	/^    struct DMA {$/;"	s	struct:Processor::HG51B::IO
DMA	higan/sfc/coprocessor/sa1/sa1.hpp	/^  struct DMA {$/;"	s	struct:SA1
DMA	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  struct DMA {$/;"	s	struct:SDD1
DMA	higan/ws/apu/apu.hpp	/^  struct DMA {$/;"	s	struct:APU
DMA0	higan/gba/cpu/cpu.hpp	/^    DMA0         = 0x0100,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
DMA1	higan/gba/cpu/cpu.hpp	/^    DMA1         = 0x0200,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
DMA2	higan/gba/cpu/cpu.hpp	/^    DMA2         = 0x0400,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
DMA3	higan/gba/cpu/cpu.hpp	/^    DMA3         = 0x0800,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
DMC	higan/fc/apu/apu.hpp	/^  struct DMC {$/;"	s	struct:APU
DMG_PALETTE_GREEN	higan/gb/interface/game-boy.cpp	14;"	d	file:
DML	nall/string/transform/dml.hpp	/^struct DML {$/;"	s	namespace:nall::__anon37
DSP	higan/sfc/dsp/dsp.cpp	/^DSP::DSP() {$/;"	f	class:SuperFamicom::DSP
DSP	higan/sfc/dsp/dsp.hpp	/^struct DSP : Thread {$/;"	s
DSP	nall/dsp/dsp.hpp	/^namespace nall { namespace DSP {$/;"	n	namespace:nall
DSP	nall/dsp/iir/biquad.hpp	/^namespace nall { namespace DSP { namespace IIR {$/;"	n	namespace:nall
DSP	nall/dsp/iir/one-pole.hpp	/^namespace nall { namespace DSP { namespace IIR {$/;"	n	namespace:nall
DSP	nall/dsp/resampler/cubic.hpp	/^namespace nall { namespace DSP { namespace Resampler {$/;"	n	namespace:nall
DSPFast	higan/sfc/interface/configuration.hpp	/^    struct DSPFast {$/;"	s	struct:Configuration::Hacks
D_	higan/processor/z80/registers.cpp	28;"	d	file:
DataBusy	higan/sfc/coprocessor/msu1/msu1.hpp	/^    DataBusy       = 0x80,$/;"	m	struct:MSU1	typeref:enum:MSU1::
DataHi	higan/ws/eeprom/eeprom.hpp	/^    DataHi,$/;"	m	struct:EEPROM	typeref:enum:EEPROM::
Database	icarus/core/core.hpp	/^namespace Database {$/;"	n
Database	nall/database/odbc.hpp	/^namespace nall { namespace Database {$/;"	n	namespace:nall
Database	nall/database/sqlite3.hpp	/^namespace nall { namespace Database {$/;"	n	namespace:nall
DateAscending	higan/target-bsnes/tools/tools.hpp	/^    DateAscending,$/;"	m	class:StateManager::SortBy
DateDescending	higan/target-bsnes/tools/tools.hpp	/^    DateDescending,$/;"	m	class:StateManager::SortBy
Debug	nall/intrinsics.hpp	/^  enum class Build : uint { Debug, Stable, Size, Release, Performance };$/;"	m	class:nall::Build
Decay	higan/md/ym2612/ym2612.hpp	/^  enum : uint { Attack, Decay, Sustain, Release };$/;"	m	struct:YM2612	typeref:enum:YM2612::
Declare	hiro/cocoa/platform.hpp	1;"	d
Declare	hiro/cocoa/platform.hpp	62;"	d
Declare	hiro/core/core.hpp	1386;"	d
Declare	hiro/core/core.hpp	39;"	d
Declare	hiro/core/core.hpp	451;"	d
Declare	hiro/core/core.hpp	96;"	d
Declare	hiro/gtk/platform.hpp	1;"	d
Declare	hiro/gtk/platform.hpp	69;"	d
Declare	hiro/qt/platform.hpp	131;"	d
Declare	hiro/qt/platform.hpp	1;"	d
DeclareShared	hiro/core/shared.hpp	1;"	d
DeclareShared	hiro/hiro.hpp	16;"	d
DeclareSharedAction	hiro/core/shared.hpp	50;"	d
DeclareSharedAction	hiro/hiro.hpp	18;"	d
DeclareSharedLayout	hiro/hiro.hpp	20;"	d
DeclareSharedObject	hiro/core/shared.hpp	17;"	d
DeclareSharedObject	hiro/hiro.hpp	17;"	d
DeclareSharedSizable	hiro/core/shared.hpp	53;"	d
DeclareSharedSizable	hiro/hiro.hpp	19;"	d
DeclareSharedWidget	hiro/core/shared.hpp	61;"	d
DeclareSharedWidget	hiro/hiro.hpp	21;"	d
DeclareType	nall/arithmetic/natural.hpp	2;"	d
DeclareUDL	nall/arithmetic/natural.hpp	101;"	d
DeclareUDL	nall/arithmetic/natural.hpp	127;"	d
Declare_IXAudio2Voice_Methods	ruby/audio/xaudio2.hpp	185;"	d
Decode	nall/decode/base.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/base64.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/bmp.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/bwt.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/gzip.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/html.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/huffman.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/inflate.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/lzsa.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/mtf.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/png.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/rle.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/url.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decode	nall/decode/zip.hpp	/^namespace nall { namespace Decode {$/;"	n	namespace:nall
Decompressor	higan/sfc/coprocessor/sdd1/decompressor.cpp	/^SDD1::Decompressor::Decompressor():$/;"	f	class:SDD1::Decompressor
Decompressor	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^struct Decompressor {$/;"	s
Decompressor	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  Decompressor(SPC7110& spc7110) : spc7110(spc7110) {}$/;"	f	struct:Decompressor
Decompressor	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^struct Decompressor {$/;"	s	file:
DefaultCommunicationsDevice	ruby/audio/xaudio2.hpp	/^  DefaultCommunicationsDevice = 0x4,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
DefaultConsoleDevice	ruby/audio/xaudio2.hpp	/^  DefaultConsoleDevice        = 0x1,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
DefaultGameDevice	ruby/audio/xaudio2.hpp	/^  DefaultGameDevice           = 0x8,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
DefaultMultimediaDevice	ruby/audio/xaudio2.hpp	/^  DefaultMultimediaDevice     = 0x2,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
Delete	hiro/resource/resource.cpp	/^const unsigned char Delete[680] = {$/;"	m	namespace:Icon::Edit	file:
Dereference	nall/string/eval/node.hpp	/^    Reference, Dereference, LogicalNot, BitwiseNot, Positive, Negative, PrefixIncrement, PrefixDecrement,$/;"	m	class:nall::Eval::Node::Type
Desktop	hiro/core/desktop.hpp	/^struct Desktop {$/;"	s
Desktop	hiro/resource/resource.cpp	/^const unsigned char Desktop[722] = {$/;"	m	namespace:Icon::Place	file:
DestBWRAM	higan/sfc/coprocessor/sa1/sa1.hpp	/^    enum DD : uint { DestIRAM = 0, DestBWRAM = 1 };$/;"	m	struct:SA1::DMA	typeref:enum:SA1::DMA::
Device	higan/emulator/interface.hpp	/^  struct Device {$/;"	s	namespace:Emulator
Device	higan/fc/interface/interface.hpp	/^  struct Device { enum : uint {$/;"	s
Device	higan/gb/interface/interface.hpp	/^  struct Device { enum : uint {$/;"	s
Device	higan/gba/interface/interface.hpp	/^  struct Device { enum : uint {$/;"	s
Device	higan/md/interface/interface.hpp	/^  struct Device { enum : uint {$/;"	s
Device	higan/ms/interface/interface.hpp	/^  struct Device { enum : uint {$/;"	s
Device	higan/pce/interface/interface.hpp	/^  struct Device { enum : uint {$/;"	s
Device	higan/sfc/interface/interface.hpp	/^  struct Device { enum : uint {$/;"	s
Device	higan/ws/interface/interface.hpp	/^  struct Device { enum : uint {$/;"	s
Device	hiro/resource/resource.cpp	/^namespace Device {$/;"	n	namespace:Icon	file:
Device	hiro/resource/resource.hpp	/^namespace Device {$/;"	n	namespace:Icon
Device	nall/hid.hpp	/^  Device(const string& name) : _name(name) {}$/;"	f	struct:nall::HID::Device
Device	nall/hid.hpp	/^struct Device : vector<Group> {$/;"	s	namespace:nall::HID
Device	ruby/audio/asio.cpp	/^  struct Device {$/;"	s	struct:AudioASIO	file:
Device	ruby/audio/wasapi.cpp	/^  struct Device {$/;"	s	struct:AudioWASAPI	file:
Device	ruby/audio/xaudio2.cpp	/^  struct Device {$/;"	s	struct:AudioXAudio2	file:
Device	ruby/input/shared/rawinput.cpp	/^  struct Device {$/;"	s	struct:RawInput	file:
DeviceID	ruby/audio/xaudio2.hpp	/^  WCHAR DeviceID[256];$/;"	m	struct:XAUDIO2_DEVICE_DETAILS
Dictionary	nall/locale.hpp	/^  struct Dictionary {$/;"	s	struct:nall::Locale
Disable	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    Disable,$/;"	m	struct:ReadyBusyMode	typeref:enum:ReadyBusyMode::
Display	higan/emulator/interface.hpp	/^  struct Display {$/;"	s	struct:Emulator::Interface
Display	hiro/resource/resource.cpp	/^const unsigned char Display[662] = {$/;"	m	namespace:Icon::Device	file:
Display	nall/xorg/guard.hpp	15;"	d
Display	nall/xorg/guard.hpp	6;"	d
DisplayName	ruby/audio/xaudio2.hpp	/^  WCHAR DisplayName[256];$/;"	m	struct:XAUDIO2_DEVICE_DETAILS
DisplayServer	nall/intrinsics.hpp	/^  enum class DisplayServer : uint { Windows, Quartz, Xorg, Unknown };$/;"	c	namespace:nall
DisplayServer	nall/intrinsics.hpp	/^  static inline constexpr auto display() -> DisplayServer;$/;"	m	namespace:nall
Divide	nall/string/eval/node.hpp	/^    Multiply, Divide, Modulo,$/;"	m	class:nall::Eval::Node::Type
DivisionByZero	higan/processor/m68k/m68k.hpp	/^    DivisionByZero  =  5,$/;"	m	struct:Vector	typeref:enum:Vector::
DivisionByZero	higan/processor/m68k/m68k.hpp	/^    DivisionByZero,$/;"	m	struct:Processor::Exception	typeref:enum:Processor::Exception::
DmaCharConversion	higan/sfc/coprocessor/sa1/sa1.hpp	/^    enum CDEN : uint { DmaNormal = 0, DmaCharConversion = 1 };$/;"	m	struct:SA1::DMA	typeref:enum:SA1::DMA::
Down	higan/fc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Down	higan/gb/system/system.hpp	/^  Up, Down, Left, Right, B, A, Select, Start,$/;"	m	class:Input
Down	higan/gba/system/system.hpp	/^  A, B, Select, Start, Right, Left, Up, Down, R, L,$/;"	m	class:Input
Down	higan/md/controller/control-pad/control-pad.hpp	/^    Up, Down, Left, Right, A, B, C, Start,$/;"	m	struct:ControlPad	typeref:enum:ControlPad::
Down	higan/md/controller/fighting-pad/fighting-pad.hpp	/^    Up, Down, Left, Right, A, B, C, X, Y, Z, Mode, Start,$/;"	m	struct:FightingPad	typeref:enum:FightingPad::
Down	higan/ms/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, One, Two,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Down	higan/pce/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, Two, One, Select, Run,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Down	higan/sfc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Down	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:SuperMultitap	typeref:enum:SuperMultitap::
Down	hiro/resource/resource.cpp	/^const unsigned char Down[683] = {$/;"	m	namespace:Icon::Go	file:
DriverSettings	higan/target-bsnes/settings/settings.hpp	/^struct DriverSettings : TabFrameItem {$/;"	s
E	higan/processor/lr35902/registers.cpp	13;"	d	file:
E	higan/processor/wdc65816/wdc65816.cpp	26;"	d	file:
E	higan/processor/wdc65816/wdc65816.cpp	85;"	d	file:
E	higan/processor/z80/disassembler.cpp	1052;"	d	file:
E	higan/processor/z80/disassembler.cpp	64;"	d	file:
E	higan/processor/z80/registers.cpp	11;"	d	file:
EA	higan/processor/huc6280/huc6280.cpp	22;"	d	file:
EA	higan/processor/huc6280/huc6280.cpp	49;"	d	file:
EDL	higan/sfc/dsp/dsp.hpp	/^    EDL   = 0x7d, FIR   = 0x0f,  \/\/8 coefficients at 0x0f, 0x1f, ... 0x7f$/;"	m	struct:DSP	typeref:enum:DSP::
EEPROM	higan/gb/cartridge/mbc7/mbc7.hpp	/^  struct EEPROM {$/;"	s	struct:MBC7
EEPROM	higan/gba/cartridge/memory.hpp	/^struct EEPROM {$/;"	s
EEPROM	higan/ws/eeprom/eeprom.hpp	/^struct EEPROM {$/;"	s
EF	higan/processor/wdc65816/wdc65816.cpp	24;"	d	file:
EF	higan/processor/wdc65816/wdc65816.cpp	83;"	d	file:
EFB	higan/sfc/dsp/dsp.hpp	/^    EFB   = 0x0d, PMON  = 0x2d,$/;"	m	struct:DSP	typeref:enum:DSP::
EI	higan/processor/z80/registers.cpp	53;"	d	file:
EKROM	higan/fc/cartridge/board/nes-exrom.cpp	/^    EKROM,$/;"	m	class:NES_ExROM::Revision	file:
ELROM	higan/fc/cartridge/board/nes-exrom.cpp	/^    ELROM,$/;"	m	class:NES_ExROM::Revision	file:
ENDIAN_LSB	nall/intrinsics.hpp	148;"	d
ENDX	higan/sfc/dsp/dsp.hpp	/^    FLG   = 0x6c, ENDX  = 0x7c,$/;"	m	struct:DSP	typeref:enum:DSP::
ENVX	higan/sfc/dsp/dsp.hpp	/^    ENVX   = 0x08, OUTX   = 0x09,$/;"	e	enum:uint
EON	higan/sfc/dsp/dsp.hpp	/^    NON   = 0x3d, EON   = 0x4d,$/;"	m	struct:DSP	typeref:enum:DSP::
ESA	higan/sfc/dsp/dsp.hpp	/^    DIR   = 0x5d, ESA   = 0x6d,$/;"	m	struct:DSP	typeref:enum:DSP::
ETROM	higan/fc/cartridge/board/nes-exrom.cpp	/^    ETROM,$/;"	m	class:NES_ExROM::Revision	file:
EVOLL	higan/sfc/dsp/dsp.hpp	/^    EVOLL = 0x2c, EVOLR = 0x3c,$/;"	m	struct:DSP	typeref:enum:DSP::
EVOLR	higan/sfc/dsp/dsp.hpp	/^    EVOLL = 0x2c, EVOLR = 0x3c,$/;"	m	struct:DSP	typeref:enum:DSP::
EWROM	higan/fc/cartridge/board/nes-exrom.cpp	/^    EWROM,$/;"	m	class:NES_ExROM::Revision	file:
E_	higan/processor/z80/registers.cpp	29;"	d	file:
Ed25519	nall/elliptic-curve/ed25519.hpp	/^struct Ed25519 {$/;"	s	namespace:nall::EllipticCurve
Edit	hiro/resource/resource.cpp	/^namespace Edit {$/;"	n	namespace:Icon	file:
Edit	hiro/resource/resource.hpp	/^namespace Edit {$/;"	n	namespace:Icon
Effect	higan/video/video.hpp	/^  enum class Effect : uint {$/;"	c	struct:Emulator::Video
EffectCount	ruby/audio/xaudio2.hpp	/^  UINT32 EffectCount;$/;"	m	struct:XAUDIO2_EFFECT_CHAIN
Effects	higan/video/video.hpp	/^  struct Effects {$/;"	s	struct:Emulator::Video
Eject	hiro/resource/resource.cpp	/^const unsigned char Eject[628] = {$/;"	m	namespace:Icon::Media	file:
EllipticCurve	nall/elliptic-curve/curve25519.hpp	/^namespace nall { namespace EllipticCurve {$/;"	n	namespace:nall
EllipticCurve	nall/elliptic-curve/ed25519.hpp	/^namespace nall { namespace EllipticCurve {$/;"	n	namespace:nall
EllipticCurve	nall/elliptic-curve/modulo25519-optimized.hpp	/^namespace nall { namespace EllipticCurve {$/;"	n	namespace:nall
EllipticCurve	nall/elliptic-curve/modulo25519-reference.hpp	/^namespace nall { namespace EllipticCurve {$/;"	n	namespace:nall
Emblem	hiro/resource/resource.cpp	/^namespace Emblem {$/;"	n	namespace:Icon	file:
Emblem	hiro/resource/resource.hpp	/^namespace Emblem {$/;"	n	namespace:Icon
Emulator	higan/audio/audio.cpp	/^namespace Emulator {$/;"	n	file:
Emulator	higan/audio/audio.hpp	/^namespace Emulator {$/;"	n
Emulator	higan/emulator/cheat.hpp	/^namespace Emulator {$/;"	n
Emulator	higan/emulator/emulator.cpp	/^namespace Emulator {$/;"	n	file:
Emulator	higan/emulator/emulator.hpp	/^namespace Emulator {$/;"	n
Emulator	higan/emulator/game.hpp	/^namespace Emulator {$/;"	n
Emulator	higan/emulator/interface.hpp	/^namespace Emulator {$/;"	n
Emulator	higan/emulator/platform.hpp	/^namespace Emulator {$/;"	n
Emulator	higan/emulator/random.hpp	/^namespace Emulator {$/;"	n
Emulator	higan/emulator/scheduler.hpp	/^namespace Emulator {$/;"	n
Emulator	higan/emulator/thread.hpp	/^namespace Emulator {$/;"	n
Emulator	higan/target-bsnes/settings/settings.hpp	/^  struct Emulator {$/;"	s	struct:Settings
Emulator	higan/video/video.cpp	/^namespace Emulator {$/;"	n	file:
Emulator	higan/video/video.hpp	/^namespace Emulator {$/;"	n
EmulatorSettings	higan/target-bsnes/settings/settings.hpp	/^struct EmulatorSettings : TabFrameItem {$/;"	s
Encode	nall/encode/base.hpp	/^namespace nall { namespace Encode {$/;"	n	namespace:nall
Encode	nall/encode/base64.hpp	/^namespace nall { namespace Encode {$/;"	n	namespace:nall
Encode	nall/encode/bmp.hpp	/^namespace nall { namespace Encode {$/;"	n	namespace:nall
Encode	nall/encode/bwt.hpp	/^namespace nall { namespace Encode {$/;"	n	namespace:nall
Encode	nall/encode/html.hpp	/^namespace nall { namespace Encode {$/;"	n	namespace:nall
Encode	nall/encode/huffman.hpp	/^namespace nall { namespace Encode {$/;"	n	namespace:nall
Encode	nall/encode/lzsa.hpp	/^namespace nall { namespace Encode {$/;"	n	namespace:nall
Encode	nall/encode/mtf.hpp	/^namespace nall { namespace Encode {$/;"	n	namespace:nall
Encode	nall/encode/rle.hpp	/^namespace nall { namespace Encode {$/;"	n	namespace:nall
Encode	nall/encode/url.hpp	/^namespace nall { namespace Encode {$/;"	n	namespace:nall
Encode	nall/encode/zip.hpp	/^namespace nall { namespace Encode {$/;"	n	namespace:nall
Encryption	nall/beat/archive/container.hpp	/^  struct Encryption {$/;"	s	struct:nall::Beat::Archive::Container
Endian	nall/intrinsics.hpp	/^  enum class Endian : uint { LSB, MSB, Unknown };$/;"	c	namespace:nall
Endian	nall/intrinsics.hpp	/^  static inline constexpr auto endian() -> Endian;$/;"	m	namespace:nall
Entropy	higan/emulator/random.hpp	/^  enum class Entropy : uint { None, Low, High };$/;"	c	struct:Emulator::Random
Envelope	higan/fc/apu/apu.hpp	/^  struct Envelope {$/;"	s	struct:APU
Envelope	higan/gba/apu/apu.hpp	/^  struct Envelope {$/;"	s	struct:APU
Envelope	higan/md/ym2612/ym2612.hpp	/^      struct Envelope {$/;"	s	struct:Channel::Operator
Envelope	higan/md/ym2612/ym2612.hpp	/^  struct Envelope {$/;"	s	struct:YM2612
EnvelopeAttack	higan/sfc/dsp/dsp.hpp	/^    EnvelopeAttack,$/;"	e	enum:uint
EnvelopeDecay	higan/sfc/dsp/dsp.hpp	/^    EnvelopeDecay,$/;"	e	enum:uint
EnvelopeRate	higan/md/ym2612/ym2612.hpp	/^  struct EnvelopeRate {$/;"	s
EnvelopeRelease	higan/sfc/dsp/dsp.hpp	/^    EnvelopeRelease,$/;"	e	enum:uint
EnvelopeSustain	higan/sfc/dsp/dsp.hpp	/^    EnvelopeSustain,$/;"	e	enum:uint
EpsonRTC	higan/sfc/cartridge/cartridge.hpp	/^    boolean EpsonRTC;$/;"	m	struct:Cartridge::Has
EpsonRTC	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^struct EpsonRTC : Thread {$/;"	s
Equal	nall/string/eval/node.hpp	/^    Equal, NotEqual, LessThanEqual, GreaterThanEqual, LessThan, GreaterThan,$/;"	m	class:nall::Eval::Node::Type
Error	hiro/cocoa/message-window.cpp	/^enum class MessageWindowType : uint { Error, Information, Question, Warning };$/;"	m	class:hiro::MessageWindowType	file:
Error	hiro/resource/resource.cpp	/^const unsigned char Error[653] = {$/;"	m	namespace:Icon::Prompt	file:
ErrorDialog	icarus/ui/error-dialog.cpp	/^ErrorDialog::ErrorDialog() {$/;"	f	class:ErrorDialog
ErrorDialog	icarus/ui/ui.hpp	/^struct ErrorDialog : Window {$/;"	s
Eval	nall/string/eval/evaluator.hpp	/^namespace nall { namespace Eval {$/;"	n	namespace:nall
Eval	nall/string/eval/literal.hpp	/^namespace nall { namespace Eval {$/;"	n	namespace:nall
Eval	nall/string/eval/node.hpp	/^namespace nall { namespace Eval {$/;"	n	namespace:nall
Eval	nall/string/eval/parser.hpp	/^namespace nall { namespace Eval {$/;"	n	namespace:nall
Event	higan/emulator/scheduler.hpp	/^  enum class Event : uint {$/;"	c	struct:Emulator::Scheduler
Event	higan/sfc/cartridge/cartridge.hpp	/^    boolean Event;$/;"	m	struct:Cartridge::Has
Event	higan/sfc/coprocessor/event/event.hpp	/^struct Event : Thread {$/;"	s
Exception	higan/processor/m68k/m68k.hpp	/^  struct Exception { enum : uint {$/;"	s	namespace:Processor
Expansion	higan/fc/interface/interface.hpp	/^    Expansion,$/;"	m	struct:Famicom::Port	typeref:enum:Famicom::Port::
Expansion	higan/sfc/expansion/expansion.cpp	/^Expansion::Expansion() {$/;"	f	class:SuperFamicom::Expansion
Expansion	higan/sfc/expansion/expansion.hpp	/^struct Expansion : Thread {$/;"	s
Expansion	higan/sfc/interface/interface.hpp	/^    Expansion,$/;"	m	struct:SuperFamicom::Port	typeref:enum:SuperFamicom::Port::
ExpansionPort	higan/sfc/expansion/expansion.hpp	/^struct ExpansionPort {$/;"	s
ExtendedStatus	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    ExtendedStatus,$/;"	m	struct:BSMemory::Mode	typeref:enum:BSMemory::Mode::
Extension	higan/md/interface/interface.hpp	/^    Extension,$/;"	m	struct:MegaDrive::Port	typeref:enum:MegaDrive::Port::
F	higan/processor/lr35902/registers.cpp	9;"	d	file:
F	higan/processor/z80/disassembler.cpp	1048;"	d	file:
F	higan/processor/z80/disassembler.cpp	60;"	d	file:
F	higan/processor/z80/registers.cpp	7;"	d	file:
FIFO	higan/gba/apu/apu.hpp	/^  struct FIFO {$/;"	s	struct:APU
FIQ	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      FIQ = 0x11,  \/\/fast interrupt$/;"	m	struct:Processor::PSR	typeref:enum:Processor::PSR::
FIQ	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    struct FIQ {$/;"	s	struct:Processor
FIR	higan/sfc/dsp/dsp.hpp	/^    EDL   = 0x7d, FIR   = 0x0f,  \/\/8 coefficients at 0x0f, 0x1f, ... 0x7f$/;"	m	struct:DSP	typeref:enum:DSP::
FKROM	higan/fc/cartridge/board/nes-fxrom.cpp	/^    FKROM,$/;"	m	struct:NES_FxROM	typeref:enum:NES_FxROM::	file:
FLASH	higan/gba/cartridge/memory.hpp	/^struct FLASH {$/;"	s
FLG	higan/sfc/dsp/dsp.hpp	/^    FLG   = 0x6c, ENDX  = 0x7c,$/;"	m	struct:DSP	typeref:enum:DSP::
FX	nall/emulation/21fx.hpp	/^struct FX {$/;"	s
F_	higan/processor/z80/registers.cpp	25;"	d	file:
False	nall/xorg/guard.hpp	40;"	d
Famicom	higan/fc/apu/apu.cpp	/^namespace Famicom {$/;"	n	file:
Famicom	higan/fc/cartridge/cartridge.cpp	/^namespace Famicom {$/;"	n	file:
Famicom	higan/fc/controller/controller.cpp	/^namespace Famicom {$/;"	n	file:
Famicom	higan/fc/cpu/cpu.cpp	/^namespace Famicom {$/;"	n	file:
Famicom	higan/fc/fc.hpp	/^namespace Famicom {$/;"	n
Famicom	higan/fc/interface/interface.cpp	/^namespace Famicom {$/;"	n	file:
Famicom	higan/fc/interface/interface.hpp	/^    Famicom,$/;"	m	struct:Famicom::ID	typeref:enum:Famicom::ID::
Famicom	higan/fc/interface/interface.hpp	/^namespace Famicom {$/;"	n
Famicom	higan/fc/memory/memory.cpp	/^namespace Famicom {$/;"	n	file:
Famicom	higan/fc/ppu/ppu.cpp	/^namespace Famicom {$/;"	n	file:
Famicom	higan/fc/system/system.cpp	/^namespace Famicom {$/;"	n	file:
Famicom	icarus/core/core.hpp	/^  Markup::Node Famicom;$/;"	m	namespace:Database
Famicom	icarus/heuristics/famicom.cpp	/^Famicom::Famicom(vector<uint8_t>& data, string location) : data(data), location(location) {$/;"	f	class:Heuristics::Famicom
Famicom	icarus/heuristics/famicom.cpp	/^struct Famicom {$/;"	s	namespace:Heuristics	file:
FastDSP	higan/target-bsnes/settings/settings.hpp	/^      struct FastDSP {$/;"	s	struct:Settings::Emulator::Hack
FastPPU	higan/target-bsnes/settings/settings.hpp	/^      struct FastPPU {$/;"	s	struct:Settings::Emulator::Hack
FightingPad	higan/md/controller/fighting-pad/fighting-pad.cpp	/^FightingPad::FightingPad(uint port) : Controller(port) {$/;"	f	class:FightingPad
FightingPad	higan/md/controller/fighting-pad/fighting-pad.hpp	/^struct FightingPad : Controller {$/;"	s
FightingPad	higan/md/interface/interface.hpp	/^    FightingPad,$/;"	m	struct:Device	typeref:enum:Device::
File	hiro/resource/resource.cpp	/^const unsigned char File[741] = {$/;"	m	namespace:Icon::Emblem	file:
File	nall/decode/zip.hpp	/^  struct File {$/;"	s	struct:nall::Decode::ZIP
FileManager	hiro/resource/resource.cpp	/^const unsigned char FileManager[378] = {$/;"	m	namespace:Icon::Application	file:
Filter	higan/audio/audio.hpp	/^struct Filter {$/;"	s	namespace:Emulator
Find	hiro/resource/resource.cpp	/^const unsigned char Find[617] = {$/;"	m	namespace:Icon::Edit	file:
First	higan/audio/audio.hpp	/^  enum class Order : uint { First, Second };$/;"	m	class:Emulator::Filter::Order
FixedLayout	hiro/extension/shared.hpp	/^struct FixedLayout : sFixedLayout {$/;"	s
FixedLayoutCell	hiro/extension/fixed-layout.hpp	/^  auto cell(sSizable sizable) const -> FixedLayoutCell;$/;"	m	struct:mFixedLayout
FixedLayoutCell	hiro/extension/fixed-layout.hpp	/^  auto cell(uint position) const -> FixedLayoutCell;$/;"	m	struct:mFixedLayout
FixedLayoutCell	hiro/extension/shared.hpp	/^struct FixedLayoutCell : sFixedLayoutCell {$/;"	s
FixedStyle	hiro/windows/window.cpp	/^static const uint FixedStyle = WS_SYSMENU | WS_CAPTION | WS_MINIMIZEBOX | WS_BORDER | WS_CLIPCHILDREN;$/;"	m	namespace:hiro	file:
Flag	higan/processor/upd96050/upd96050.hpp	/^  struct Flag {$/;"	s	struct:Processor::uPD96050
Flags	higan/processor/huc6280/huc6280.hpp	/^  struct Flags {$/;"	s	struct:Processor::HuC6280
Flags	higan/processor/mos6502/mos6502.hpp	/^  struct Flags {$/;"	s	struct:Processor::MOS6502
Flags	higan/processor/spc700/spc700.hpp	/^  struct Flags {$/;"	s	struct:Processor::SPC700
Flags	higan/processor/upd96050/upd96050.hpp	/^  struct Flags {$/;"	s	struct:Processor::uPD96050
Flags	higan/processor/v30mz/v30mz.hpp	/^    struct Flags {$/;"	s	struct:Processor::Registers
Flags	higan/processor/wdc65816/wdc65816.hpp	/^  struct Flags {$/;"	s	struct:Processor::WDC65816
Flags	ruby/audio/xaudio2.hpp	/^  UINT32 Flags;$/;"	m	struct:XAUDIO2_BUFFER
Flash	hiro/resource/resource.cpp	/^const unsigned char Flash[607] = {$/;"	m	namespace:Icon::Media	file:
Floppy	hiro/resource/resource.cpp	/^const unsigned char Floppy[561] = {$/;"	m	namespace:Icon::Media	file:
Folder	hiro/resource/resource.cpp	/^const unsigned char Folder[581] = {$/;"	m	namespace:Icon::Emblem	file:
Font	hiro/core/application.hpp	/^  static auto font() -> Font;$/;"	m	struct:Application
Font	hiro/core/font.cpp	/^Font::Font(const string& family, float size) {$/;"	f	class:Font
Font	hiro/core/font.hpp	/^struct Font {$/;"	s
Font	hiro/core/object.hpp	/^  auto font(bool recursive = false) const -> Font;$/;"	m	struct:mObject
Font	hiro/core/widget/table-view-cell.hpp	/^  auto font(bool recursive = false) const -> Font;$/;"	m	struct:mTableViewCell
Font	hiro/resource/resource.cpp	/^const unsigned char Font[627] = {$/;"	m	namespace:Icon::Emblem	file:
Font	hiro/windows/widget/table-view.hpp	/^  auto _font(unsigned row, unsigned column) -> Font;$/;"	m	struct:hiro::pTableView
Format	nall/smtp.hpp	/^  enum class Format : uint { Plain, HTML };$/;"	c	struct:nall::SMTP
Format	ruby/audio/audio.hpp	/^  enum class Format : uint { none, int16, int32, float32, float64 };$/;"	c	struct:AudioDriver
FourCC	nall/decode/png.hpp	/^  enum class FourCC : uint {$/;"	c	struct:nall::Decode::PNG
Frame	higan/emulator/scheduler.hpp	/^    Frame,$/;"	m	class:Emulator::Scheduler::Event
Frame	hiro/core/shared.hpp	/^struct Frame : sFrame {$/;"	s
FrameCounter	higan/fc/apu/apu.hpp	/^  struct FrameCounter {$/;"	s	struct:APU
Frequency	higan/sfc/coprocessor/armdsp/armdsp.hpp	/^  uint Frequency;$/;"	m	struct:ArmDSP
Frequency	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  uint Frequency;$/;"	m	struct:HitachiDSP
Frequency	higan/sfc/coprocessor/icd/icd.hpp	/^  uint Frequency = 0;$/;"	m	struct:ICD
Frequency	higan/sfc/coprocessor/necdsp/necdsp.hpp	/^  uint Frequency = 0;$/;"	m	struct:NECDSP
Frequency	higan/sfc/coprocessor/superfx/superfx.hpp	/^  uint Frequency;$/;"	m	struct:SuperFX
Frequency	ruby/audio/xaudio2.hpp	/^  float Frequency;$/;"	m	struct:XAUDIO2_FILTER_PARAMETERS
FullScreen	hiro/resource/resource.cpp	/^const unsigned char FullScreen[650] = {$/;"	m	namespace:Icon::Action	file:
Function	nall/string/eval/node.hpp	/^    Function, Subscript, Member, SuffixIncrement, SuffixDecrement,$/;"	m	class:nall::Eval::Node::Type
GAIN	higan/sfc/dsp/dsp.hpp	/^    ADSR1  = 0x06, GAIN   = 0x07,$/;"	e	enum:uint
GCC	nall/intrinsics.hpp	/^  enum class Compiler : uint { Clang, GCC, Microsoft, Unknown };$/;"	m	class:nall::Compiler
GCD	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    GCD(SDD1::Decompressor& self) : self(self) {}$/;"	f	struct:Decompressor::GCD
GCD	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  struct GCD {  \/\/golomb-code decoder$/;"	s	struct:Decompressor
GLX_CONTEXT_MAJOR_VERSION_ARB	ruby/video/glx.cpp	3;"	d	file:
GLX_CONTEXT_MINOR_VERSION_ARB	ruby/video/glx.cpp	4;"	d	file:
GL_ALPHA_TEST	ruby/video/cgl.cpp	1;"	d	file:
GLuint	ruby/video/opengl/opengl.hpp	/^  auto getFormat() const -> GLuint;$/;"	m	struct:OpenGLTexture
GLuint	ruby/video/opengl/opengl.hpp	/^  auto getType() const -> GLuint;$/;"	m	struct:OpenGLTexture
GPR	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  inline auto r(uint4) -> GPR&;$/;"	m	namespace:Processor
GPR	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  struct GPR {$/;"	s	namespace:Processor
GSU	higan/processor/gsu/gsu.hpp	/^struct GSU {$/;"	s	namespace:Processor
GUID_EXT	ruby/audio/xaudio2.hpp	6;"	d
GUID_SECT	ruby/audio/xaudio2.hpp	7;"	d
GZIP	nall/decode/gzip.hpp	/^struct GZIP {$/;"	s	namespace:nall::Decode
Game	genius/genius.hpp	/^struct Game {$/;"	s
Game	higan/emulator/game.hpp	/^struct Game {$/;"	s	namespace:Emulator
Game	higan/target-bsnes/program/program.hpp	/^  struct Game {$/;"	s	struct:Program
GameBoy	higan/gb/apu/apu.cpp	/^namespace GameBoy {$/;"	n	file:
GameBoy	higan/gb/cartridge/cartridge.cpp	/^namespace GameBoy {$/;"	n	file:
GameBoy	higan/gb/cpu/cpu.cpp	/^namespace GameBoy {$/;"	n	file:
GameBoy	higan/gb/gb.hpp	/^namespace GameBoy {$/;"	n
GameBoy	higan/gb/interface/interface.cpp	/^namespace GameBoy {$/;"	n	file:
GameBoy	higan/gb/interface/interface.hpp	/^    GameBoy,$/;"	m	struct:GameBoy::ID	typeref:enum:GameBoy::ID::
GameBoy	higan/gb/interface/interface.hpp	/^namespace GameBoy {$/;"	n
GameBoy	higan/gb/memory/memory.cpp	/^namespace GameBoy {$/;"	n	file:
GameBoy	higan/gb/ppu/ppu.cpp	/^namespace GameBoy {$/;"	n	file:
GameBoy	higan/gb/system/system.cpp	/^namespace GameBoy {$/;"	n	file:
GameBoy	higan/gb/system/system.hpp	/^    GameBoy,$/;"	m	class:System::Model
GameBoy	higan/sfc/interface/interface.hpp	/^    GameBoy,$/;"	m	struct:SuperFamicom::ID	typeref:enum:SuperFamicom::ID::
GameBoy	higan/target-bsnes/program/program.hpp	/^  struct GameBoy : Game {$/;"	s	struct:Program
GameBoy	icarus/core/core.hpp	/^  Markup::Node GameBoy;$/;"	m	namespace:Database
GameBoy	icarus/heuristics/game-boy.cpp	/^GameBoy::GameBoy(vector<uint8_t>& data, string location) : data(data), location(location) {$/;"	f	class:Heuristics::GameBoy
GameBoy	icarus/heuristics/game-boy.cpp	/^struct GameBoy {$/;"	s	namespace:Heuristics	file:
GameBoyAdvance	higan/gba/apu/apu.cpp	/^namespace GameBoyAdvance {$/;"	n	file:
GameBoyAdvance	higan/gba/cartridge/cartridge.cpp	/^namespace GameBoyAdvance {$/;"	n	file:
GameBoyAdvance	higan/gba/cpu/cpu.cpp	/^namespace GameBoyAdvance {$/;"	n	file:
GameBoyAdvance	higan/gba/gba.hpp	/^namespace GameBoyAdvance {$/;"	n
GameBoyAdvance	higan/gba/interface/interface.cpp	/^namespace GameBoyAdvance {$/;"	n	file:
GameBoyAdvance	higan/gba/interface/interface.hpp	/^    GameBoyAdvance,$/;"	m	struct:GameBoyAdvance::ID	typeref:enum:GameBoyAdvance::ID::
GameBoyAdvance	higan/gba/interface/interface.hpp	/^namespace GameBoyAdvance {$/;"	n
GameBoyAdvance	higan/gba/memory/memory.cpp	/^namespace GameBoyAdvance {$/;"	n	file:
GameBoyAdvance	higan/gba/player/player.cpp	/^namespace GameBoyAdvance {$/;"	n	file:
GameBoyAdvance	higan/gba/ppu/ppu.cpp	/^namespace GameBoyAdvance {$/;"	n	file:
GameBoyAdvance	higan/gba/system/system.cpp	/^namespace GameBoyAdvance {$/;"	n	file:
GameBoyAdvance	icarus/core/core.hpp	/^  Markup::Node GameBoyAdvance;$/;"	m	namespace:Database
GameBoyAdvance	icarus/heuristics/game-boy-advance.cpp	/^GameBoyAdvance::GameBoyAdvance(vector<uint8_t>& data, string location) : data(data), location(location) {$/;"	f	class:Heuristics::GameBoyAdvance
GameBoyAdvance	icarus/heuristics/game-boy-advance.cpp	/^struct GameBoyAdvance {$/;"	s	namespace:Heuristics	file:
GameBoyColor	higan/gb/interface/interface.hpp	/^    GameBoyColor,$/;"	m	struct:GameBoy::ID	typeref:enum:GameBoy::ID::
GameBoyColor	higan/gb/system/system.hpp	/^    GameBoyColor,$/;"	m	class:System::Model
GameBoyColor	icarus/core/core.hpp	/^  Markup::Node GameBoyColor;$/;"	m	namespace:Database
GameBoySlot	higan/sfc/cartridge/cartridge.hpp	/^    boolean GameBoySlot;$/;"	m	struct:Cartridge::Has
GameGear	higan/ms/interface/interface.hpp	/^    GameGear,$/;"	m	struct:MasterSystem::ID	typeref:enum:MasterSystem::ID::
GameGear	icarus/core/core.hpp	/^  Markup::Node GameGear;$/;"	m	namespace:Database
GameGear	icarus/heuristics/game-gear.cpp	/^GameGear::GameGear(vector<uint8_t>& data, string location) : data(data), location(location) {$/;"	f	class:Heuristics::GameGear
GameGear	icarus/heuristics/game-gear.cpp	/^struct GameGear {$/;"	s	namespace:Heuristics	file:
GameGearControls	higan/ms/interface/interface.hpp	/^    GameGearControls,$/;"	m	struct:Device	typeref:enum:Device::
GameGenie	higan/md/cartridge/cartridge.hpp	/^  struct GameGenie {$/;"	s	struct:Cartridge
GameNotes	higan/target-higan/tools/game-notes.cpp	/^GameNotes::GameNotes(TabFrame* parent) : TabFrameItem(parent) {$/;"	f	class:GameNotes
GameNotes	higan/target-higan/tools/tools.hpp	/^struct GameNotes : TabFrameItem {$/;"	s
GameWindow	genius/genius.cpp	/^GameWindow::GameWindow() {$/;"	f	class:GameWindow
GameWindow	genius/genius.hpp	/^struct GameWindow : Window {$/;"	s
Gamepad	higan/fc/controller/gamepad/gamepad.cpp	/^Gamepad::Gamepad(uint port) : Controller(port) {$/;"	f	class:Gamepad
Gamepad	higan/fc/controller/gamepad/gamepad.hpp	/^struct Gamepad : Controller {$/;"	s
Gamepad	higan/fc/interface/interface.hpp	/^    Gamepad,$/;"	m	struct:Device	typeref:enum:Device::
Gamepad	higan/ms/controller/gamepad/gamepad.cpp	/^Gamepad::Gamepad(uint port) : Controller(port) {$/;"	f	class:Gamepad
Gamepad	higan/ms/controller/gamepad/gamepad.hpp	/^struct Gamepad : Controller {$/;"	s
Gamepad	higan/ms/interface/interface.hpp	/^    Gamepad,$/;"	m	struct:Device	typeref:enum:Device::
Gamepad	higan/pce/controller/gamepad/gamepad.cpp	/^Gamepad::Gamepad() {$/;"	f	class:Gamepad
Gamepad	higan/pce/controller/gamepad/gamepad.hpp	/^struct Gamepad : Controller {$/;"	s
Gamepad	higan/pce/interface/interface.hpp	/^    Gamepad,$/;"	m	struct:Device	typeref:enum:Device::
Gamepad	higan/sfc/controller/gamepad/gamepad.cpp	/^Gamepad::Gamepad(uint port) : Controller(port) {$/;"	f	class:Gamepad
Gamepad	higan/sfc/controller/gamepad/gamepad.hpp	/^struct Gamepad : Controller {$/;"	s
Gamepad	higan/sfc/controller/super-multitap/super-multitap.hpp	/^  struct Gamepad {$/;"	s
Gamepad	higan/sfc/interface/interface.hpp	/^    Gamepad,$/;"	m	struct:Device	typeref:enum:Device::
GaussianTable	higan/sfc/dsp/dsp.hpp	/^  static const int16 GaussianTable[512];$/;"	v
GaussianTable	higan/sfc/dsp/gaussian.cpp	/^const int16 DSP::GaussianTable[512] = {$/;"	m	class:DSP	file:
General	higan/target-bsnes/settings/settings.hpp	/^  struct General {$/;"	s	struct:Settings
GenericProductID	nall/hid.hpp	/^  enum : uint16_t { GenericVendorID = 0x0000, GenericProductID = 0x0000 };$/;"	m	struct:nall::HID::Null	typeref:enum:nall::HID::Null::
GenericProductID	nall/hid.hpp	/^  enum : uint16_t { GenericVendorID = 0x0000, GenericProductID = 0x0001 };$/;"	m	struct:nall::HID::Keyboard	typeref:enum:nall::HID::Keyboard::
GenericProductID	nall/hid.hpp	/^  enum : uint16_t { GenericVendorID = 0x0000, GenericProductID = 0x0002 };$/;"	m	struct:nall::HID::Mouse	typeref:enum:nall::HID::Mouse::
GenericProductID	nall/hid.hpp	/^  enum : uint16_t { GenericVendorID = 0x0000, GenericProductID = 0x0003 };$/;"	m	struct:nall::Joypad	typeref:enum:nall::Joypad::
Geometry	hiro/cocoa/desktop.hpp	/^  static auto workspace() -> Geometry;$/;"	m	struct:hiro::pDesktop
Geometry	hiro/cocoa/monitor.hpp	/^  static auto geometry(uint monitor) -> Geometry;$/;"	m	struct:hiro::pMonitor
Geometry	hiro/cocoa/monitor.hpp	/^  static auto workspace(uint monitor) -> Geometry;$/;"	m	struct:hiro::pMonitor
Geometry	hiro/cocoa/window.hpp	/^  auto _geometry() -> Geometry;$/;"	m	struct:hiro::pWindow
Geometry	hiro/cocoa/window.hpp	/^  auto frameMargin() const -> Geometry;$/;"	m	struct:hiro::pWindow
Geometry	hiro/core/core.hpp	/^  Geometry(X x, Y y, W width, H height) : Geometry((float)x, (float)y, (float)width, (float)height) {}$/;"	f	struct:hiro::Geometry
Geometry	hiro/core/core.hpp	/^struct Geometry {$/;"	s	namespace:hiro
Geometry	hiro/core/desktop.hpp	/^  static auto workspace() -> Geometry;$/;"	m	struct:Desktop
Geometry	hiro/core/geometry.cpp	/^Geometry::Geometry() {$/;"	f	class:Geometry
Geometry	hiro/core/geometry.cpp	/^Geometry::Geometry(Position position, Size size) {$/;"	f	class:Geometry
Geometry	hiro/core/geometry.cpp	/^Geometry::Geometry(float x, float y, float width, float height) {$/;"	f	class:Geometry
Geometry	hiro/core/monitor.hpp	/^  static auto geometry(maybe<uint> monitor = nothing) -> Geometry;$/;"	m	struct:Monitor
Geometry	hiro/core/monitor.hpp	/^  static auto workspace(maybe<uint> monitor = nothing) -> Geometry;$/;"	m	struct:Monitor
Geometry	hiro/core/sizable.hpp	/^  auto geometry() const -> Geometry;$/;"	m	struct:mSizable
Geometry	hiro/core/window.hpp	/^  auto frameGeometry() const -> Geometry;$/;"	m	struct:mWindow
Geometry	hiro/core/window.hpp	/^  auto geometry() const -> Geometry;$/;"	m	struct:mWindow
Geometry	hiro/extension/fixed-layout.hpp	/^  auto geometry() const -> Geometry;$/;"	m	struct:mFixedLayoutCell
Geometry	hiro/extension/horizontal-layout.hpp	/^  auto padding() const -> Geometry;$/;"	m	struct:mHorizontalLayout
Geometry	hiro/extension/table-layout.hpp	/^  auto padding() const -> Geometry;$/;"	m	struct:mTableLayout
Geometry	hiro/extension/vertical-layout.hpp	/^  auto padding() const -> Geometry;$/;"	m	struct:mVerticalLayout
Geometry	hiro/gtk/desktop.hpp	/^  static auto workspace() -> Geometry;$/;"	m	struct:hiro::pDesktop
Geometry	hiro/gtk/monitor.hpp	/^  static auto geometry(uint monitor) -> Geometry;$/;"	m	struct:hiro::pMonitor
Geometry	hiro/gtk/monitor.hpp	/^  static auto workspace(uint monitor) -> Geometry;$/;"	m	struct:hiro::pMonitor
Geometry	hiro/gtk/settings.hpp	/^  struct Geometry {$/;"	s	struct:hiro::Settings
Geometry	hiro/gtk/window.hpp	/^  auto frameMargin() const -> Geometry;$/;"	m	struct:hiro::pWindow
Geometry	hiro/qt/desktop.hpp	/^  static auto workspace() -> Geometry;$/;"	m	struct:hiro::pDesktop
Geometry	hiro/qt/monitor.hpp	/^  static auto geometry(uint monitor) -> Geometry;$/;"	m	struct:hiro::pMonitor
Geometry	hiro/qt/monitor.hpp	/^  static auto workspace(uint monitor) -> Geometry;$/;"	m	struct:hiro::pMonitor
Geometry	hiro/qt/settings.hpp	/^  struct Geometry {$/;"	s	struct:hiro::Settings
Geometry	hiro/qt/window.hpp	/^  auto frameMargin() const -> Geometry;$/;"	m	struct:hiro::pWindow
Geometry	hiro/windows/desktop.hpp	/^  static auto workspace() -> Geometry;$/;"	m	struct:hiro::pDesktop
Geometry	hiro/windows/monitor.hpp	/^  static auto geometry(uint monitor) -> Geometry;$/;"	m	struct:hiro::pMonitor
Geometry	hiro/windows/monitor.hpp	/^  static auto workspace(uint monitor) -> Geometry;$/;"	m	struct:hiro::pMonitor
Geometry	hiro/windows/window.hpp	/^  auto _geometry() -> Geometry;$/;"	m	struct:hiro::pWindow
Geometry	hiro/windows/window.hpp	/^  auto frameMargin() const -> Geometry;$/;"	m	struct:hiro::pWindow
Get	nall/http/request.hpp	/^  enum class RequestType : uint { None, Head, Get, Post };$/;"	m	class:nall::HTTP::Request::RequestType
GlitchesSinceEngineStarted	ruby/audio/xaudio2.hpp	/^  UINT32 GlitchesSinceEngineStarted;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
Global	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  struct Global {$/;"	s	struct:BSMemory
GlobalDefaultDevice	ruby/audio/xaudio2.hpp	/^  GlobalDefaultDevice         = 0xf,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
Go	hiro/resource/resource.cpp	/^namespace Go {$/;"	n	namespace:Icon	file:
Go	hiro/resource/resource.hpp	/^namespace Go {$/;"	n	namespace:Icon
Gradient	hiro/core/core.hpp	/^  auto gradient() const -> Gradient;$/;"	m	struct:hiro::mCanvas
Gradient	hiro/core/core.hpp	/^struct Gradient {$/;"	s	namespace:hiro
Gradient	hiro/core/gradient.cpp	/^Gradient::Gradient() {$/;"	f	class:Gradient
GreaterThan	nall/string/eval/node.hpp	/^    Equal, NotEqual, LessThanEqual, GreaterThanEqual, LessThan, GreaterThan,$/;"	m	class:nall::Eval::Node::Type
GreaterThanEqual	nall/string/eval/node.hpp	/^    Equal, NotEqual, LessThanEqual, GreaterThanEqual, LessThan, GreaterThan,$/;"	m	class:nall::Eval::Node::Type
Group	hiro/core/object.hpp	/^  virtual auto group() const -> Group;$/;"	m	struct:mObject
Group	hiro/core/shared.hpp	/^  template<typename... P> Group(P&&... p) : Group() { _append(std::forward<P>(p)...); }$/;"	f	struct:Group
Group	hiro/core/shared.hpp	/^struct Group : sGroup {$/;"	s
Group	nall/beat/archive/node.hpp	/^    struct Group {$/;"	s	struct:nall::Beat::Archive::Node::Permission
Group	nall/hid.hpp	/^  Group(const string& name) : _name(name) {}$/;"	f	struct:nall::HID::Group
Group	nall/hid.hpp	/^struct Group : vector<Input> {$/;"	s	namespace:nall::HID
GtkWidget	hiro/gtk/widget/widget.hpp	/^  virtual auto container(mWidget& widget) -> GtkWidget*;$/;"	m	struct:hiro::pWidget
H	higan/processor/lr35902/registers.cpp	14;"	d	file:
H	higan/processor/z80/disassembler.cpp	1053;"	d	file:
H	higan/processor/z80/disassembler.cpp	65;"	d	file:
H	higan/processor/z80/registers.cpp	12;"	d	file:
HALT	higan/processor/z80/registers.cpp	54;"	d	file:
HBlank	higan/gba/cpu/cpu.hpp	/^    HBlank       = 0x0002,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
HChaCha20	nall/cipher/chacha20.hpp	/^  HChaCha20(uint256_t key, uint128_t nonce) : ChaCha20(key, nonce >> 64, nonce >> 0) {$/;"	f	struct:nall::Cipher::HChaCha20
HChaCha20	nall/cipher/chacha20.hpp	/^struct HChaCha20 : protected ChaCha20 {$/;"	s	namespace:nall::Cipher
HF	higan/processor/lr35902/registers.cpp	18;"	d	file:
HF	higan/processor/spc700/spc700.cpp	17;"	d	file:
HF	higan/processor/spc700/spc700.cpp	54;"	d	file:
HF	higan/processor/z80/registers.cpp	48;"	d	file:
HFONT	hiro/windows/font.hpp	/^  static auto create(const Font& font) -> HFONT;$/;"	m	struct:hiro::pFont
HG51B	higan/processor/hg51b/hg51b.hpp	/^struct HG51B {$/;"	s	namespace:Processor
HG51B	higan/processor/hg51b/instruction.cpp	/^HG51B::HG51B() {$/;"	f	class:HG51B
HGLRC	ruby/video/wgl.cpp	/^  auto (APIENTRY* wglCreateContextAttribs)(HDC, HGLRC, const int*) -> HGLRC = nullptr;$/;"	m	struct:VideoWGL	file:
HID	nall/hid.hpp	/^namespace nall { namespace HID {$/;"	n	namespace:nall
HIRO_CPP	hiro/hiro.cpp	2;"	d	file:
HL	higan/processor/lr35902/registers.cpp	4;"	d	file:
HL	higan/processor/z80/disassembler.cpp	1062;"	d	file:
HL	higan/processor/z80/disassembler.cpp	74;"	d	file:
HL	higan/processor/z80/registers.cpp	4;"	d	file:
HL_	higan/processor/z80/disassembler.cpp	1067;"	d	file:
HL_	higan/processor/z80/disassembler.cpp	79;"	d	file:
HL_	higan/processor/z80/registers.cpp	22;"	d	file:
HTTP	nall/http/client.hpp	/^namespace nall { namespace HTTP {$/;"	n	namespace:nall
HTTP	nall/http/message.hpp	/^namespace nall { namespace HTTP {$/;"	n	namespace:nall
HTTP	nall/http/request.hpp	/^namespace nall { namespace HTTP {$/;"	n	namespace:nall
HTTP	nall/http/response.hpp	/^namespace nall { namespace HTTP {$/;"	n	namespace:nall
HTTP	nall/http/role.hpp	/^namespace nall { namespace HTTP {$/;"	n	namespace:nall
HTTP	nall/http/server.hpp	/^namespace nall { namespace HTTP {$/;"	n	namespace:nall
HWND	hiro/windows/widget/widget.hpp	/^  auto _parentHandle() -> HWND;$/;"	m	struct:hiro::pWidget
H_	higan/processor/z80/registers.cpp	30;"	d	file:
Hack	higan/target-bsnes/settings/settings.hpp	/^    struct Hack {$/;"	s	struct:Settings::Emulator
Hacks	higan/sfc/interface/configuration.hpp	/^  struct Hacks {$/;"	s	struct:Configuration
Hacks	higan/sfc/system/system.hpp	/^  struct Hacks {$/;"	s	struct:System
Half	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    Half          = 1 << 4,  \/\/16-bit access$/;"	m	struct:Processor::ARM7TDMI	typeref:enum:Processor::ARM7TDMI::
Half	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  enum : uint { One = 0xaa, Half = 0x55, Max = 0xff };$/;"	m	struct:Decompressor	typeref:enum:Decompressor::	file:
Half	nall/arithmetic/natural.hpp	6;"	d
HalfBits	nall/arithmetic.hpp	27;"	d
HalfBits	nall/arithmetic.hpp	31;"	d
HalfBits	nall/arithmetic.hpp	36;"	d
HalfBits	nall/arithmetic.hpp	40;"	d
HalfBits	nall/arithmetic.hpp	44;"	d
HalfBits	nall/arithmetic.hpp	48;"	d
HalfBits	nall/arithmetic.hpp	52;"	d
HalfBits	nall/arithmetic.hpp	56;"	d
HalfBits	nall/arithmetic.hpp	60;"	d
HalfBits	nall/arithmetic.hpp	64;"	d
HalfBits	nall/arithmetic.hpp	68;"	d
HalfBits	nall/arithmetic.hpp	72;"	d
HalfBits	nall/arithmetic.hpp	76;"	d
HalfBits	nall/arithmetic.hpp	80;"	d
Handle	hiro/core/lock.hpp	/^    Handle(const Lock* self) : self(self) {$/;"	f	struct:Lock::Handle
Handle	hiro/core/lock.hpp	/^  struct Handle {$/;"	s	struct:Lock
Has	higan/sfc/cartridge/cartridge.hpp	/^  struct Has {$/;"	s	struct:Cartridge
Hash	nall/hash/crc16.hpp	/^namespace nall { namespace Hash {$/;"	n	namespace:nall
Hash	nall/hash/crc32.hpp	/^namespace nall { namespace Hash {$/;"	n	namespace:nall
Hash	nall/hash/crc64.hpp	/^namespace nall { namespace Hash {$/;"	n	namespace:nall
Hash	nall/hash/hash.hpp	/^namespace nall { namespace Hash {$/;"	n	namespace:nall
Hash	nall/hash/hash.hpp	/^struct Hash {$/;"	s	namespace:nall::Hash
Hash	nall/hash/sha224.hpp	/^namespace nall { namespace Hash {$/;"	n	namespace:nall
Hash	nall/hash/sha256.hpp	/^namespace nall { namespace Hash {$/;"	n	namespace:nall
Hash	nall/hash/sha384.hpp	/^namespace nall { namespace Hash {$/;"	n	namespace:nall
Hash	nall/hash/sha512.hpp	/^namespace nall { namespace Hash {$/;"	n	namespace:nall
Hat	nall/hid.hpp	/^  enum GroupID : uint { Axis, Hat, Trigger, Button };$/;"	m	struct:nall::Joypad	typeref:enum:nall::Joypad::
HblankTimer	higan/ws/cpu/cpu.hpp	/^    HblankTimer,$/;"	m	class:CPU::Interrupt
Head	nall/http/request.hpp	/^  enum class RequestType : uint { None, Head, Get, Post };$/;"	m	class:nall::HTTP::Request::RequestType
Heuristics	icarus/heuristics/bs-memory.cpp	/^namespace Heuristics {$/;"	n	file:
Heuristics	icarus/heuristics/famicom.cpp	/^namespace Heuristics {$/;"	n	file:
Heuristics	icarus/heuristics/game-boy-advance.cpp	/^namespace Heuristics {$/;"	n	file:
Heuristics	icarus/heuristics/game-boy.cpp	/^namespace Heuristics {$/;"	n	file:
Heuristics	icarus/heuristics/game-gear.cpp	/^namespace Heuristics {$/;"	n	file:
Heuristics	icarus/heuristics/heuristics.cpp	/^namespace Heuristics {$/;"	n	file:
Heuristics	icarus/heuristics/heuristics.hpp	/^namespace Heuristics {$/;"	n
Heuristics	icarus/heuristics/master-system.cpp	/^namespace Heuristics {$/;"	n	file:
Heuristics	icarus/heuristics/mega-drive.cpp	/^namespace Heuristics {$/;"	n	file:
Heuristics	icarus/heuristics/pc-engine.cpp	/^namespace Heuristics {$/;"	n	file:
Heuristics	icarus/heuristics/sufami-turbo.cpp	/^namespace Heuristics {$/;"	n	file:
Heuristics	icarus/heuristics/super-famicom.cpp	/^namespace Heuristics {$/;"	n	file:
Heuristics	icarus/heuristics/supergrafx.cpp	/^namespace Heuristics {$/;"	n	file:
Heuristics	icarus/heuristics/wonderswan.cpp	/^namespace Heuristics {$/;"	n	file:
HexEdit	hiro/core/shared.hpp	/^struct HexEdit : sHexEdit {$/;"	s
Hi	higan/target-bsnes/input/input.hpp	/^  enum class Qualifier : uint { None, Lo, Hi, Rumble };$/;"	m	class:InputMapping::Qualifier
Hi	higan/target-higan/input/input.hpp	/^  enum class Qualifier : uint { None, Lo, Hi, Rumble };$/;"	m	class:InputMapping::Qualifier
Hi	nall/primitives.hpp	/^    const type Hi;$/;"	m	struct:nall::Natural::Reference
Hi	nall/primitives.hpp	/^    const uint Hi;$/;"	m	struct:nall::Integer::Reference
Hi	nall/varint.hpp	/^    const uint Hi;$/;"	m	struct:nall::VariadicNatural::Reference
HighPass	nall/dsp/iir/biquad.hpp	/^    HighPass,$/;"	m	class:nall::DSP::IIR::Biquad::Type
HighPass	nall/dsp/iir/one-pole.hpp	/^    HighPass,$/;"	m	class:nall::DSP::IIR::OnePole::Type
HighPassFilter	ruby/audio/xaudio2.hpp	/^  HighPassFilter,$/;"	e	enum:XAUDIO2_FILTER_TYPE
HighShelf	nall/dsp/iir/biquad.hpp	/^    HighShelf,$/;"	m	class:nall::DSP::IIR::Biquad::Type
Hiro_Action	hiro/components.hpp	42;"	d
Hiro_Alignment	hiro/components.hpp	14;"	d
Hiro_Application	hiro/components.hpp	21;"	d
Hiro_BrowserDialog	hiro/components.hpp	107;"	d
Hiro_BrowserWindow	hiro/components.hpp	26;"	d
Hiro_Button	hiro/components.hpp	51;"	d
Hiro_Canvas	hiro/components.hpp	52;"	d
Hiro_CheckButton	hiro/components.hpp	53;"	d
Hiro_CheckLabel	hiro/components.hpp	54;"	d
Hiro_Color	hiro/components.hpp	12;"	d
Hiro_ComboButton	hiro/components.hpp	55;"	d
Hiro_ComboEdit	hiro/components.hpp	56;"	d
Hiro_ComboEdit	hiro/components.hpp	80;"	d
Hiro_Console	hiro/components.hpp	57;"	d
Hiro_Console	hiro/components.hpp	81;"	d
Hiro_Cursor	hiro/components.hpp	15;"	d
Hiro_Desktop	hiro/components.hpp	22;"	d
Hiro_FixedLayout	hiro/components.hpp	93;"	d
Hiro_Font	hiro/components.hpp	19;"	d
Hiro_Frame	hiro/components.hpp	58;"	d
Hiro_Geometry	hiro/components.hpp	18;"	d
Hiro_Gradient	hiro/components.hpp	13;"	d
Hiro_Group	hiro/components.hpp	32;"	d
Hiro_HexEdit	hiro/components.hpp	59;"	d
Hiro_HexEdit	hiro/components.hpp	88;"	d
Hiro_HorizontalLayout	hiro/components.hpp	94;"	d
Hiro_HorizontalScrollBar	hiro/components.hpp	60;"	d
Hiro_HorizontalSlider	hiro/components.hpp	61;"	d
Hiro_Hotkey	hiro/components.hpp	34;"	d
Hiro_IconView	hiro/components.hpp	62;"	d
Hiro_IconView	hiro/components.hpp	82;"	d
Hiro_Keyboard	hiro/components.hpp	24;"	d
Hiro_Label	hiro/components.hpp	63;"	d
Hiro_LineEdit	hiro/components.hpp	64;"	d
Hiro_ListView	hiro/components.hpp	99;"	d
Hiro_Menu	hiro/components.hpp	43;"	d
Hiro_MenuBar	hiro/components.hpp	39;"	d
Hiro_MenuCheckItem	hiro/components.hpp	46;"	d
Hiro_MenuItem	hiro/components.hpp	45;"	d
Hiro_MenuRadioItem	hiro/components.hpp	47;"	d
Hiro_MenuSeparator	hiro/components.hpp	44;"	d
Hiro_MessageDialog	hiro/components.hpp	103;"	d
Hiro_MessageWindow	hiro/components.hpp	27;"	d
Hiro_Monitor	hiro/components.hpp	23;"	d
Hiro_Mouse	hiro/components.hpp	25;"	d
Hiro_Object	hiro/components.hpp	31;"	d
Hiro_PopupMenu	hiro/components.hpp	40;"	d
Hiro_Position	hiro/components.hpp	16;"	d
Hiro_ProgressBar	hiro/components.hpp	65;"	d
Hiro_Property	hiro/components.hpp	29;"	d
Hiro_RadioButton	hiro/components.hpp	66;"	d
Hiro_RadioLabel	hiro/components.hpp	67;"	d
Hiro_Sizable	hiro/components.hpp	49;"	d
Hiro_Size	hiro/components.hpp	17;"	d
Hiro_SourceEdit	hiro/components.hpp	68;"	d
Hiro_SourceEdit	hiro/components.hpp	83;"	d
Hiro_StatusBar	hiro/components.hpp	38;"	d
Hiro_TabFrame	hiro/components.hpp	69;"	d
Hiro_TableLayout	hiro/components.hpp	96;"	d
Hiro_TableView	hiro/components.hpp	70;"	d
Hiro_TextEdit	hiro/components.hpp	71;"	d
Hiro_Timer	hiro/components.hpp	35;"	d
Hiro_TreeView	hiro/components.hpp	72;"	d
Hiro_TreeView	hiro/components.hpp	84;"	d
Hiro_VerticalLayout	hiro/components.hpp	95;"	d
Hiro_VerticalScrollBar	hiro/components.hpp	73;"	d
Hiro_VerticalSlider	hiro/components.hpp	74;"	d
Hiro_Viewport	hiro/components.hpp	75;"	d
Hiro_Widget	hiro/components.hpp	50;"	d
Hiro_Window	hiro/components.hpp	37;"	d
HitachiDSP	higan/sfc/cartridge/cartridge.hpp	/^    boolean HitachiDSP;$/;"	m	struct:Cartridge::Has
HitachiDSP	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^struct HitachiDSP : Processor::HG51B, Thread {$/;"	s
Home	hiro/resource/resource.cpp	/^const unsigned char Home[606] = {$/;"	m	namespace:Icon::Go	file:
Home	hiro/resource/resource.cpp	/^const unsigned char Home[679] = {$/;"	m	namespace:Icon::Place	file:
Horizontal	hiro/core/core.hpp	/^enum class Orientation : uint { Horizontal, Vertical };$/;"	m	class:hiro::Orientation
HorizontalBlank	higan/md/cpu/cpu.hpp	/^    HorizontalBlank,$/;"	m	class:CPU::Interrupt
HorizontalBlank	higan/processor/m68k/m68k.hpp	/^    HorizontalBlank = 28,$/;"	m	struct:Vector	typeref:enum:Vector::
HorizontalLayout	hiro/extension/shared.hpp	/^struct HorizontalLayout : sHorizontalLayout {$/;"	s
HorizontalLayoutCell	hiro/extension/horizontal-layout.hpp	/^  auto cell(sSizable sizable) const -> HorizontalLayoutCell;$/;"	m	struct:mHorizontalLayout
HorizontalLayoutCell	hiro/extension/horizontal-layout.hpp	/^  auto cell(uint position) const -> HorizontalLayoutCell;$/;"	m	struct:mHorizontalLayout
HorizontalLayoutCell	hiro/extension/shared.hpp	/^struct HorizontalLayoutCell : sHorizontalLayoutCell {$/;"	s
HorizontalScrollBar	hiro/core/shared.hpp	/^struct HorizontalScrollBar : sHorizontalScrollBar {$/;"	s
HorizontalSlider	hiro/core/shared.hpp	/^struct HorizontalSlider : sHorizontalSlider {$/;"	s
Hotkey	hiro/core/core.hpp	/^  static auto hotkey(uint position) -> Hotkey;$/;"	m	struct:hiro::Keyboard
Hotkey	hiro/core/core.hpp	/^struct Hotkey {$/;"	s	namespace:hiro
Hotkey	hiro/core/hotkey.cpp	/^Hotkey::Hotkey() : state(new Hotkey::State) {$/;"	f	class:Hotkey
Hotkey	hiro/core/hotkey.cpp	/^Hotkey::Hotkey(const string& sequence) : state(new Hotkey::State) {$/;"	f	class:Hotkey
HotkeySettings	higan/target-bsnes/settings/settings.hpp	/^struct HotkeySettings : TabFrameItem {$/;"	s
HotkeySettings	higan/target-higan/settings/hotkeys.cpp	/^HotkeySettings::HotkeySettings(TabFrame* parent) : TabFrameItem(parent) {$/;"	f	class:HotkeySettings
HotkeySettings	higan/target-higan/settings/settings.hpp	/^struct HotkeySettings : TabFrameItem {$/;"	s
HuC1	higan/gb/cartridge/huc1/huc1.hpp	/^struct HuC1 : Mapper {$/;"	s
HuC3	higan/gb/cartridge/huc3/huc3.hpp	/^struct HuC3 : Mapper {$/;"	s
HuC6280	higan/processor/huc6280/huc6280.hpp	/^struct HuC6280 {$/;"	s	namespace:Processor
I	higan/processor/huc6280/huc6280.cpp	16;"	d	file:
I	higan/processor/huc6280/huc6280.cpp	43;"	d	file:
I	higan/processor/mos6502/mos6502.cpp	17;"	d	file:
I	higan/processor/mos6502/mos6502.cpp	41;"	d	file:
I	higan/processor/z80/disassembler.cpp	1072;"	d	file:
I	higan/processor/z80/disassembler.cpp	84;"	d	file:
I	higan/processor/z80/registers.cpp	40;"	d	file:
IASIO	ruby/audio/asio.hpp	/^struct IASIO : public IUnknown {$/;"	s
IBC	higan/processor/z80/disassembler.cpp	1076;"	d	file:
IBC	higan/processor/z80/disassembler.cpp	88;"	d	file:
IC	higan/processor/z80/disassembler.cpp	1075;"	d	file:
IC	higan/processor/z80/disassembler.cpp	87;"	d	file:
ICD	higan/sfc/cartridge/cartridge.hpp	/^    boolean ICD;$/;"	m	struct:Cartridge::Has
ICD	higan/sfc/coprocessor/icd/icd.hpp	/^struct ICD : Emulator::Platform, GameBoy::SuperGameBoyInterface, Thread {$/;"	s
ICD	higan/sfc/coprocessor/icd/icd.hpp	/^struct ICD : Thread {$/;"	s
ID	higan/fc/interface/interface.hpp	/^struct ID {$/;"	s	namespace:Famicom
ID	higan/gb/interface/interface.hpp	/^struct ID {$/;"	s	namespace:GameBoy
ID	higan/gba/interface/interface.hpp	/^struct ID {$/;"	s	namespace:GameBoyAdvance
ID	higan/md/interface/interface.hpp	/^struct ID {$/;"	s	namespace:MegaDrive
ID	higan/md/vdp/vdp.hpp	/^    enum class ID : uint { PlaneA, Window, PlaneB } id;$/;"	c	struct:VDP::Background
ID	higan/ms/interface/interface.hpp	/^struct ID {$/;"	s	namespace:MasterSystem
ID	higan/pce/interface/interface.hpp	/^struct ID {$/;"	s	namespace:PCEngine
ID	higan/sfc/interface/interface.hpp	/^struct ID {$/;"	s	namespace:SuperFamicom
ID	higan/sfc/ppu/background.hpp	/^  struct ID { enum : uint { BG1, BG2, BG3, BG4 }; };$/;"	s	struct:Background
ID	higan/ws/interface/interface.hpp	/^struct ID {$/;"	s	namespace:WonderSwan
IDAT	nall/decode/png.hpp	/^    IDAT = 0x49444154,$/;"	m	class:nall::Decode::PNG::FourCC
IDE	higan/processor/z80/disassembler.cpp	1077;"	d	file:
IDE	higan/processor/z80/disassembler.cpp	89;"	d	file:
IEND	nall/decode/png.hpp	/^    IEND = 0x49454e44,$/;"	m	class:nall::Decode::PNG::FourCC
IF	higan/processor/spc700/spc700.cpp	16;"	d	file:
IF	higan/processor/spc700/spc700.cpp	53;"	d	file:
IF	higan/processor/wdc65816/wdc65816.cpp	18;"	d	file:
IF	higan/processor/wdc65816/wdc65816.cpp	77;"	d	file:
IFF1	higan/processor/z80/registers.cpp	55;"	d	file:
IFF2	higan/processor/z80/registers.cpp	56;"	d	file:
IHDR	nall/decode/png.hpp	/^    IHDR = 0x49484452,$/;"	m	class:nall::Decode::PNG::FourCC
IHL	higan/processor/z80/disassembler.cpp	1078;"	d	file:
IHL	higan/processor/z80/disassembler.cpp	90;"	d	file:
IIR	nall/dsp/iir/biquad.hpp	/^namespace nall { namespace DSP { namespace IIR {$/;"	n	namespace:nall::DSP
IIR	nall/dsp/iir/one-pole.hpp	/^namespace nall { namespace DSP { namespace IIR {$/;"	n	namespace:nall::DSP
IM	higan/processor/z80/registers.cpp	57;"	d	file:
IM	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    IM(SDD1::Decompressor& self) : self(self) {}$/;"	f	struct:Decompressor::IM
IM	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  struct IM {  \/\/input manager$/;"	s	struct:Decompressor
IN	higan/processor/z80/disassembler.cpp	1042;"	d	file:
IN	higan/processor/z80/disassembler.cpp	54;"	d	file:
IN	nall/platform.hpp	63;"	d
IN1	higan/gba/ppu/ppu.hpp	/^  enum : uint { IN0 = 0, IN1 = 1, IN2 = 2, OUT = 3 };$/;"	m	struct:PPU	typeref:enum:PPU::
IN2	higan/gba/ppu/ppu.hpp	/^  enum : uint { IN0 = 0, IN1 = 1, IN2 = 2, OUT = 3 };$/;"	m	struct:PPU	typeref:enum:PPU::
INN	higan/processor/z80/disassembler.cpp	1044;"	d	file:
INN	higan/processor/z80/disassembler.cpp	56;"	d	file:
INTMAX_BITS	nall/stdint.hpp	34;"	d
IO	higan/fc/cpu/cpu.hpp	/^  struct IO {$/;"	s	struct:CPU
IO	higan/fc/ppu/ppu.hpp	/^  struct IO {$/;"	s	struct:PPU
IO	higan/gb/cartridge/huc1/huc1.hpp	/^  struct IO {$/;"	s	struct:HuC1
IO	higan/gb/cartridge/huc3/huc3.hpp	/^  struct IO {$/;"	s	struct:HuC3
IO	higan/gb/cartridge/mbc1/mbc1.hpp	/^  struct IO {$/;"	s	struct:MBC1
IO	higan/gb/cartridge/mbc1m/mbc1m.hpp	/^  struct IO {$/;"	s	struct:MBC1M
IO	higan/gb/cartridge/mbc2/mbc2.hpp	/^  struct IO {$/;"	s	struct:MBC2
IO	higan/gb/cartridge/mbc3/mbc3.hpp	/^  struct IO {$/;"	s	struct:MBC3
IO	higan/gb/cartridge/mbc5/mbc5.hpp	/^  struct IO {$/;"	s	struct:MBC5
IO	higan/gb/cartridge/mbc6/mbc6.hpp	/^  struct IO {$/;"	s	struct:MBC6
IO	higan/gb/cartridge/mbc7/mbc7.hpp	/^  struct IO {$/;"	s	struct:MBC7
IO	higan/gb/cartridge/mmm01/mmm01.hpp	/^  struct IO {$/;"	s	struct:MMM01
IO	higan/gb/cartridge/tama/tama.hpp	/^  struct IO {$/;"	s	struct:TAMA
IO	higan/gba/memory/memory.hpp	/^struct IO {$/;"	s
IO	higan/gba/ppu/ppu.hpp	/^    struct IO {$/;"	s	struct:PPU::Background
IO	higan/gba/ppu/ppu.hpp	/^    struct IO {$/;"	s	struct:PPU::Objects
IO	higan/gba/ppu/ppu.hpp	/^    struct IO {$/;"	s	struct:PPU::Screen
IO	higan/gba/ppu/ppu.hpp	/^    struct IO {$/;"	s	struct:PPU::Window
IO	higan/gba/ppu/ppu.hpp	/^  struct IO {$/;"	s	struct:PPU
IO	higan/md/apu/apu.hpp	/^  struct IO {$/;"	s	struct:APU
IO	higan/md/cpu/cpu.hpp	/^  struct IO {$/;"	s	struct:CPU
IO	higan/md/vdp/vdp.hpp	/^    struct IO {$/;"	s	struct:VDP::Background
IO	higan/md/vdp/vdp.hpp	/^    struct IO {$/;"	s	struct:VDP::DMA
IO	higan/md/vdp/vdp.hpp	/^    struct IO {$/;"	s	struct:VDP::Sprite
IO	higan/md/vdp/vdp.hpp	/^  struct IO {$/;"	s	struct:VDP
IO	higan/md/ym2612/ym2612.hpp	/^  struct IO {$/;"	s	struct:YM2612
IO	higan/ms/vdp/vdp.hpp	/^  struct IO {$/;"	s	struct:VDP
IO	higan/pce/cpu/cpu.hpp	/^  struct IO {$/;"	s	struct:CPU
IO	higan/pce/psg/psg.hpp	/^    struct IO {$/;"	s	struct:PSG::Channel
IO	higan/pce/psg/psg.hpp	/^  struct IO {$/;"	s	struct:PSG
IO	higan/pce/vce/vce.hpp	/^  struct IO {$/;"	s	struct:VCE
IO	higan/pce/vdc/vdc.hpp	/^  struct IO {$/;"	s	struct:VDC
IO	higan/processor/hg51b/hg51b.hpp	/^  struct IO {$/;"	s	struct:Processor::HG51B
IO	higan/sfc/coprocessor/msu1/msu1.hpp	/^  struct IO {$/;"	s
IO	higan/sfc/cpu/cpu.hpp	/^  struct IO {$/;"	s	struct:CPU
IO	higan/sfc/ppu/object.hpp	/^  struct IO {$/;"	s	struct:Object
IO	higan/sfc/ppu/ppu.hpp	/^  struct IO {$/;"	s	struct:PPU
IO	higan/sfc/ppu/screen.hpp	/^  struct IO {$/;"	s	struct:Screen
IO	higan/sfc/ppu/window.hpp	/^  struct IO {$/;"	s	struct:Window
IO	higan/sfc/smp/smp.hpp	/^  struct IO {$/;"	s	struct:SMP
IO	higan/ws/memory/memory.hpp	/^struct IO {$/;"	s
IPLROM	higan/target-bsnes/resource/resource.cpp	/^const unsigned char IPLROM[64] = {$/;"	m	namespace:Resource::System	file:
IR	higan/processor/z80/registers.cpp	38;"	d	file:
IRAM	higan/sfc/coprocessor/sa1/sa1.hpp	/^  struct IRAM : WritableMemory {$/;"	s	struct:SA1
IRQ	higan/gba/cpu/cpu.hpp	/^  struct IRQ {$/;"	s
IRQ	higan/pce/cpu/cpu.hpp	/^  struct IRQ {$/;"	s	struct:CPU
IRQ	higan/pce/vdc/vdc.hpp	/^  struct IRQ {$/;"	s	struct:VDC
IRQ	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      IRQ = 0x12,  \/\/interrupt$/;"	m	struct:Processor::PSR	typeref:enum:Processor::PSR::
IRQ	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    struct IRQ {$/;"	s	struct:Processor
IRQ	higan/sfc/coprocessor/mcc/mcc.hpp	/^  struct IRQ {$/;"	s	struct:MCC
ISP	higan/processor/z80/disassembler.cpp	1079;"	d	file:
ISP	higan/processor/z80/disassembler.cpp	91;"	d	file:
IX	higan/processor/z80/registers.cpp	36;"	d	file:
IXAudio2Voice	ruby/audio/xaudio2.hpp	/^DECLARE_INTERFACE(IXAudio2Voice);$/;"	v
IY	higan/processor/z80/registers.cpp	37;"	d	file:
Icarus	icarus/core/core.cpp	/^Icarus::Icarus() {$/;"	f	class:Icarus
Icarus	icarus/core/core.hpp	/^struct Icarus {$/;"	s
Icon	higan/target-bsnes/resource/resource.cpp	/^const unsigned char Icon[3463] = {$/;"	m	namespace:Resource	file:
Icon	higan/target-higan/resource/resource.cpp	/^const unsigned char Icon[3088] = {$/;"	m	namespace:Resource	file:
Icon	hiro/resource/resource.cpp	/^namespace Icon {$/;"	n	file:
Icon	hiro/resource/resource.hpp	/^namespace Icon {$/;"	n
IconView	hiro/core/shared.hpp	/^struct IconView : sIconView {$/;"	s
IconViewItem	hiro/core/core.hpp	/^  auto item(uint position) const -> IconViewItem;$/;"	m	struct:hiro::mIconView
IconViewItem	hiro/core/core.hpp	/^  auto selected() const -> IconViewItem;$/;"	m	struct:hiro::mIconView
IconViewItem	hiro/core/shared.hpp	/^struct IconViewItem : sIconViewItem {$/;"	s
IllegalLineA	higan/processor/m68k/m68k.hpp	/^    IllegalLineA    = 10,$/;"	m	struct:Vector	typeref:enum:Vector::
IllegalLineF	higan/processor/m68k/m68k.hpp	/^    IllegalLineF    = 11,$/;"	m	struct:Vector	typeref:enum:Vector::
Image	hiro/resource/resource.cpp	/^const unsigned char Image[558] = {$/;"	m	namespace:Icon::Emblem	file:
Implied	nall/windows/detour.hpp	186;"	d
ImportDialog	icarus/ui/import-dialog.cpp	/^ImportDialog::ImportDialog() {$/;"	f	class:ImportDialog
ImportDialog	icarus/ui/ui.hpp	/^struct ImportDialog : Window {$/;"	s
Info	nall/decode/png.hpp	/^  struct Info {$/;"	s	struct:nall::Decode::PNG
Information	higan/emulator/interface.hpp	/^  struct Information {$/;"	s	struct:Emulator::Interface
Information	higan/fc/cartridge/board/board.hpp	/^  struct Information {$/;"	s	struct:Board
Information	higan/fc/cartridge/cartridge.hpp	/^  struct Information {$/;"	s	struct:Cartridge
Information	higan/fc/system/system.hpp	/^  struct Information {$/;"	s	struct:System
Information	higan/gb/cartridge/cartridge.hpp	/^  struct Information {$/;"	s	struct:Cartridge
Information	higan/gb/system/system.hpp	/^  struct Information {$/;"	s	struct:System
Information	higan/gba/cartridge/cartridge.hpp	/^  struct Information {$/;"	s	struct:Cartridge
Information	higan/gba/system/system.hpp	/^  struct Information {$/;"	s	struct:System
Information	higan/md/cartridge/cartridge.hpp	/^  struct Information {$/;"	s	struct:Cartridge
Information	higan/md/system/system.hpp	/^  struct Information {$/;"	s	struct:System
Information	higan/ms/cartridge/cartridge.hpp	/^  struct Information {$/;"	s	struct:Cartridge
Information	higan/ms/system/system.hpp	/^  struct Information {$/;"	s	struct:System
Information	higan/pce/cartridge/cartridge.hpp	/^  struct Information {$/;"	s	struct:Cartridge
Information	higan/pce/system/system.hpp	/^  struct Information {$/;"	s	struct:System
Information	higan/sfc/cartridge/cartridge.hpp	/^  struct Information {$/;"	s	struct:Cartridge
Information	higan/sfc/system/system.hpp	/^  struct Information {$/;"	s	struct:System
Information	higan/ws/cartridge/cartridge.hpp	/^  struct Information {$/;"	s	struct:Cartridge
Information	higan/ws/system/system.hpp	/^  struct Information {$/;"	s	struct:System
Information	hiro/cocoa/message-window.cpp	/^enum class MessageWindowType : uint { Error, Information, Question, Warning };$/;"	m	class:hiro::MessageWindowType	file:
Information	hiro/resource/resource.cpp	/^const unsigned char Information[863] = {$/;"	m	namespace:Icon::Prompt	file:
Information	nall/smtp.hpp	/^  struct Information {$/;"	s	struct:nall::SMTP
InitialState	ruby/audio/xaudio2.hpp	/^  BOOL InitialState;$/;"	m	struct:XAUDIO2_EFFECT_DESCRIPTOR
Input	higan/emulator/interface.hpp	/^  struct Input {$/;"	s	namespace:Emulator
Input	higan/gb/system/system.hpp	/^enum class Input : uint {$/;"	c
Input	higan/gba/system/system.hpp	/^enum class Input : uint {$/;"	c
Input	higan/target-bsnes/settings/settings.hpp	/^  struct Input {$/;"	s	struct:Settings
Input	higan/ws/cpu/cpu.hpp	/^    Input,$/;"	m	class:CPU::Interrupt
Input	nall/hid.hpp	/^  Input(const string& name) : _name(name) {}$/;"	f	struct:nall::HID::Input
Input	nall/hid.hpp	/^struct Input {$/;"	s	namespace:nall::HID
Input	ruby/input/input.hpp	/^  Input() : self(*this) { reset(); }$/;"	f	struct:Input
Input	ruby/input/input.hpp	/^struct Input {$/;"	s
InputCarbon	ruby/input/carbon.cpp	/^  InputCarbon(Input& super) : InputDriver(super), keyboard(super) {}$/;"	f	struct:InputCarbon
InputCarbon	ruby/input/carbon.cpp	/^struct InputCarbon : InputDriver {$/;"	s	file:
InputChannels	ruby/audio/xaudio2.hpp	/^  UINT32 InputChannels;$/;"	m	struct:XAUDIO2_VOICE_DETAILS
InputDevice	higan/target-bsnes/input/input.hpp	/^struct InputDevice {$/;"	s
InputDevice	higan/target-bsnes/settings/settings.hpp	/^  auto activeDevice() -> InputDevice&;$/;"	m	struct:InputSettings
InputDevice	higan/target-higan/input/input.hpp	/^struct InputDevice {$/;"	s
InputDevice	higan/target-higan/settings/settings.hpp	/^  auto activeDevice() -> InputDevice&;$/;"	m	struct:InputSettings
InputDriver	ruby/input/input.hpp	/^  InputDriver(Input& super) : super(super) {}$/;"	f	struct:InputDriver
InputDriver	ruby/input/input.hpp	/^struct InputDriver {$/;"	s
InputEmulator	higan/target-higan/input/input.hpp	/^struct InputEmulator {$/;"	s
InputEmulator	higan/target-higan/settings/settings.hpp	/^  auto activeEmulator() -> InputEmulator&;$/;"	m	struct:InputSettings
InputHotkey	higan/target-bsnes/input/input.hpp	/^  InputHotkey(string name) { this->name = name; }$/;"	f	struct:InputHotkey
InputHotkey	higan/target-bsnes/input/input.hpp	/^struct InputHotkey : InputMapping {$/;"	s
InputHotkey	higan/target-higan/input/input.hpp	/^struct InputHotkey : InputMapping {$/;"	s
InputJoypadDirectInput	ruby/input/joypad/directinput.cpp	/^  InputJoypadDirectInput(Input& input) : input(input) {}$/;"	f	struct:InputJoypadDirectInput
InputJoypadDirectInput	ruby/input/joypad/directinput.cpp	/^struct InputJoypadDirectInput {$/;"	s	file:
InputJoypadSDL	ruby/input/joypad/sdl.cpp	/^  InputJoypadSDL(Input& input) : input(input) {}$/;"	f	struct:InputJoypadSDL
InputJoypadSDL	ruby/input/joypad/sdl.cpp	/^struct InputJoypadSDL {$/;"	s	file:
InputJoypadUdev	ruby/input/joypad/udev.cpp	/^  InputJoypadUdev(Input& input) : input(input) {}$/;"	f	struct:InputJoypadUdev
InputJoypadUdev	ruby/input/joypad/udev.cpp	/^struct InputJoypadUdev {$/;"	s	file:
InputJoypadXInput	ruby/input/joypad/xinput.cpp	/^  InputJoypadXInput(Input& input) : input(input) {}$/;"	f	struct:InputJoypadXInput
InputJoypadXInput	ruby/input/joypad/xinput.cpp	/^struct InputJoypadXInput {$/;"	s	file:
InputKeyboardCarbon	ruby/input/keyboard/carbon.cpp	/^  InputKeyboardCarbon(Input& input) : input(input) {}$/;"	f	struct:InputKeyboardCarbon
InputKeyboardCarbon	ruby/input/keyboard/carbon.cpp	/^struct InputKeyboardCarbon {$/;"	s	file:
InputKeyboardQuartz	ruby/input/keyboard/quartz.cpp	/^  InputKeyboardQuartz(Input& input) : input(input) {}$/;"	f	struct:InputKeyboardQuartz
InputKeyboardQuartz	ruby/input/keyboard/quartz.cpp	/^struct InputKeyboardQuartz {$/;"	s	file:
InputKeyboardRawInput	ruby/input/keyboard/rawinput.cpp	/^  InputKeyboardRawInput(Input& input) : input(input) {}$/;"	f	struct:InputKeyboardRawInput
InputKeyboardRawInput	ruby/input/keyboard/rawinput.cpp	/^struct InputKeyboardRawInput {$/;"	s	file:
InputKeyboardXlib	ruby/input/keyboard/xlib.cpp	/^  InputKeyboardXlib(Input& input) : input(input) {}$/;"	f	struct:InputKeyboardXlib
InputKeyboardXlib	ruby/input/keyboard/xlib.cpp	/^struct InputKeyboardXlib {$/;"	s	file:
InputManager	higan/target-bsnes/input/input.hpp	/^struct InputManager {$/;"	s
InputManager	higan/target-higan/input/input.cpp	/^InputManager::InputManager() {$/;"	f	class:InputManager
InputManager	higan/target-higan/input/input.hpp	/^struct InputManager {$/;"	s
InputMapping	higan/target-bsnes/input/input.hpp	/^struct InputMapping {$/;"	s
InputMapping	higan/target-higan/input/input.hpp	/^struct InputMapping {$/;"	s
InputMouseRawInput	ruby/input/mouse/rawinput.cpp	/^  InputMouseRawInput(Input& input) : input(input) {}$/;"	f	struct:InputMouseRawInput
InputMouseRawInput	ruby/input/mouse/rawinput.cpp	/^struct InputMouseRawInput {$/;"	s	file:
InputMouseXlib	ruby/input/mouse/xlib.cpp	/^  InputMouseXlib(Input& input) : input(input) {}$/;"	f	struct:InputMouseXlib
InputMouseXlib	ruby/input/mouse/xlib.cpp	/^struct InputMouseXlib {$/;"	s	file:
InputPort	higan/target-bsnes/input/input.hpp	/^struct InputPort {$/;"	s
InputPort	higan/target-bsnes/settings/settings.hpp	/^  auto activePort() -> InputPort&;$/;"	m	struct:InputSettings
InputPort	higan/target-higan/input/input.hpp	/^struct InputPort {$/;"	s
InputPort	higan/target-higan/settings/settings.hpp	/^  auto activePort() -> InputPort&;$/;"	m	struct:InputSettings
InputQuartz	ruby/input/quartz.cpp	/^  InputQuartz(Input& super) : InputDriver(super), keyboard(super) {}$/;"	f	struct:InputQuartz
InputQuartz	ruby/input/quartz.cpp	/^struct InputQuartz : InputDriver {$/;"	s	file:
InputSDL	ruby/input/sdl.cpp	/^  InputSDL(Input& super) : InputDriver(super), keyboard(super), mouse(super), joypad(super) {}$/;"	f	struct:InputSDL
InputSDL	ruby/input/sdl.cpp	/^struct InputSDL : InputDriver {$/;"	s	file:
InputSampleRate	ruby/audio/xaudio2.hpp	/^  UINT32 InputSampleRate;$/;"	m	struct:XAUDIO2_VOICE_DETAILS
InputSettings	higan/target-bsnes/settings/settings.hpp	/^struct InputSettings : TabFrameItem {$/;"	s
InputSettings	higan/target-higan/settings/input.cpp	/^InputSettings::InputSettings(TabFrame* parent) : TabFrameItem(parent) {$/;"	f	class:InputSettings
InputSettings	higan/target-higan/settings/settings.hpp	/^struct InputSettings : TabFrameItem {$/;"	s
InputShiftRegister	higan/gb/cartridge/mbc7/mbc7.hpp	/^    struct InputShiftRegister : ShiftRegister {$/;"	s	struct:MBC7::EEPROM
InputUdev	ruby/input/udev.cpp	/^  InputUdev(Input& super) : InputDriver(super), keyboard(super), mouse(super), joypad(super) {}$/;"	f	struct:InputUdev
InputUdev	ruby/input/udev.cpp	/^struct InputUdev : InputDriver {$/;"	s	file:
InputWindows	ruby/input/windows.cpp	/^  InputWindows(Input& super) : InputDriver(super), keyboard(super), mouse(super), joypadXInput(super), joypadDirectInput(super) {}$/;"	f	struct:InputWindows
InputWindows	ruby/input/windows.cpp	/^struct InputWindows : InputDriver {$/;"	s	file:
InputXlib	ruby/input/xlib.cpp	/^  InputXlib(Input& super) : InputDriver(super), keyboard(super), mouse(super) {}$/;"	f	struct:InputXlib
InputXlib	ruby/input/xlib.cpp	/^struct InputXlib : InputDriver {$/;"	s	file:
Instruction	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    struct Instruction {$/;"	s	struct:Pipeline
Integer	nall/primitives.hpp	/^  inline Integer() : data(0) {}$/;"	f	struct:nall::Integer
Integer	nall/primitives.hpp	/^  template<typename T> inline Integer(const T& value) { set(value); }$/;"	f	struct:nall::Integer
Integer	nall/primitives.hpp	/^template<uint Bits> struct Integer {$/;"	s	namespace:nall
Interface	higan/emulator/interface.hpp	/^struct Interface {$/;"	s	namespace:Emulator
InterframeBlending	higan/video/video.hpp	/^    InterframeBlending,$/;"	m	class:Emulator::Video::Effect
InternalRAM	higan/ws/memory/memory.hpp	/^struct InternalRAM {$/;"	s
Interpolation	nall/interpolation.hpp	/^struct Interpolation {$/;"	s	namespace:nall
Interrupt	higan/gb/cpu/cpu.hpp	/^  enum class Interrupt : uint { Vblank, Stat, Timer, Serial, Joypad };$/;"	c	struct:CPU
Interrupt	higan/gba/cpu/cpu.hpp	/^  struct Interrupt { enum : uint {$/;"	s	struct:CPU
Interrupt	higan/md/cpu/cpu.hpp	/^  enum class Interrupt : uint {$/;"	c	struct:CPU
Interrupt	higan/processor/m68k/m68k.hpp	/^    Interrupt,$/;"	m	struct:Processor::Exception	typeref:enum:Processor::Exception::
Interrupt	higan/ws/cpu/cpu.hpp	/^  enum class Interrupt : uint {$/;"	c	struct:CPU
InvalidDeviceRole	ruby/audio/xaudio2.hpp	/^  InvalidDeviceRole = ~GlobalDefaultDevice,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
Item	higan/sfc/ppu/object.hpp	/^  struct Item {$/;"	s	struct:Object
Iterator	nall/database/odbc.hpp	/^      Iterator(Query& query, bool finished) : query(query), finished(finished) {}$/;"	f	struct:nall::Database::ODBC::Query::Iterator
Iterator	nall/database/odbc.hpp	/^    struct Iterator {$/;"	s	struct:nall::Database::ODBC::Query
Iterator	nall/database/sqlite3.hpp	/^      Iterator(Query& query, bool finished) : query(query), finished(finished) {}$/;"	f	struct:nall::Database::SQLite3::Query::Iterator
Iterator	nall/database/sqlite3.hpp	/^    struct Iterator {$/;"	s	struct:nall::Database::SQLite3::Query
Joybus	higan/gba/cpu/cpu.hpp	/^  struct Joybus {$/;"	s
Joypad	hiro/resource/resource.cpp	/^const unsigned char Joypad[812] = {$/;"	m	namespace:Icon::Device	file:
Joypad	nall/hid.hpp	/^  Joypad() : Device("Joypad") { append("Axis"), append("Hat"), append("Trigger"), append("Button"); }$/;"	f	namespace:nall
Joypad	nall/hid.hpp	/^struct Joypad : Device {$/;"	s	namespace:nall
Joypad	ruby/input/joypad/directinput.cpp	/^  struct Joypad {$/;"	s	struct:InputJoypadDirectInput	file:
Joypad	ruby/input/joypad/sdl.cpp	/^  struct Joypad {$/;"	s	struct:InputJoypadSDL	file:
Joypad	ruby/input/joypad/udev.cpp	/^  struct Joypad {$/;"	s	struct:InputJoypadUdev	file:
Joypad	ruby/input/joypad/xinput.cpp	/^  struct Joypad {$/;"	s	struct:InputJoypadXInput	file:
JoypadInput	ruby/input/joypad/udev.cpp	/^    JoypadInput() {}$/;"	f	struct:InputJoypadUdev::JoypadInput
JoypadInput	ruby/input/joypad/udev.cpp	/^    JoypadInput(int code) : code(code) {}$/;"	f	struct:InputJoypadUdev::JoypadInput
JoypadInput	ruby/input/joypad/udev.cpp	/^    JoypadInput(int code, uint id) : code(code), id(id) {}$/;"	f	struct:InputJoypadUdev::JoypadInput
JoypadInput	ruby/input/joypad/udev.cpp	/^  struct JoypadInput {$/;"	s	struct:InputJoypadUdev	file:
Justifier	higan/sfc/controller/justifier/justifier.cpp	/^Justifier::Justifier(uint port, bool chained):$/;"	f	class:Justifier
Justifier	higan/sfc/controller/justifier/justifier.hpp	/^struct Justifier : Controller {$/;"	s
Justifier	higan/sfc/interface/interface.hpp	/^    Justifier,$/;"	m	struct:Device	typeref:enum:Device::
Justifiers	higan/sfc/interface/interface.hpp	/^    Justifiers,$/;"	m	struct:Device	typeref:enum:Device::
KEY_WOW64_32KEY	nall/windows/registry.hpp	12;"	d
KEY_WOW64_64KEY	nall/windows/registry.hpp	9;"	d
KOFF	higan/sfc/dsp/dsp.hpp	/^    KON   = 0x4c, KOFF  = 0x5c,$/;"	m	struct:DSP	typeref:enum:DSP::
KON	higan/sfc/dsp/dsp.hpp	/^    KON   = 0x4c, KOFF  = 0x5c,$/;"	m	struct:DSP	typeref:enum:DSP::
Key	ruby/input/keyboard/carbon.cpp	/^  struct Key {$/;"	s	struct:InputKeyboardCarbon	file:
Key	ruby/input/keyboard/quartz.cpp	/^  struct Key {$/;"	s	struct:InputKeyboardQuartz	file:
Key	ruby/input/keyboard/rawinput.cpp	/^  struct Key {$/;"	s	struct:InputKeyboardRawInput	file:
Key	ruby/input/keyboard/xlib.cpp	/^  struct Key {$/;"	s	struct:InputKeyboardXlib	file:
Keyboard	hiro/core/core.hpp	/^struct Keyboard {$/;"	s	namespace:hiro
Keyboard	hiro/resource/resource.cpp	/^const unsigned char Keyboard[587] = {$/;"	m	namespace:Icon::Device	file:
Keyboard	nall/hid.hpp	/^  Keyboard() : Device("Keyboard") { append("Button"); }$/;"	f	struct:nall::HID::Keyboard
Keyboard	nall/hid.hpp	/^struct Keyboard : Device {$/;"	s	namespace:nall::HID
Keyboard	ruby/input/keyboard/rawinput.cpp	/^  struct Keyboard {$/;"	s	struct:InputKeyboardRawInput	file:
Keyboard	ruby/input/shared/rawinput.cpp	/^    enum class Type : uint { Keyboard, Mouse, Joypad } type;$/;"	m	class:RawInput::Device::Type	file:
Keypad	higan/gba/cpu/cpu.hpp	/^    Keypad       = 0x1000,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
Keypad	higan/gba/cpu/cpu.hpp	/^  struct Keypad {$/;"	s
Keypad	higan/ws/system/system.hpp	/^  struct Keypad {$/;"	s	struct:System
KonamiVRC1	higan/fc/cartridge/board/konami-vrc1.cpp	/^  KonamiVRC1(Markup::Node& document) : Board(document), vrc1(*this) {$/;"	f	struct:KonamiVRC1
KonamiVRC1	higan/fc/cartridge/board/konami-vrc1.cpp	/^struct KonamiVRC1 : Board {$/;"	s	file:
KonamiVRC2	higan/fc/cartridge/board/konami-vrc2.cpp	/^  KonamiVRC2(Markup::Node& document) : Board(document), vrc2(*this) {$/;"	f	struct:KonamiVRC2
KonamiVRC2	higan/fc/cartridge/board/konami-vrc2.cpp	/^struct KonamiVRC2 : Board {$/;"	s	file:
KonamiVRC3	higan/fc/cartridge/board/konami-vrc3.cpp	/^  KonamiVRC3(Markup::Node& document) : Board(document), vrc3(*this) {$/;"	f	struct:KonamiVRC3
KonamiVRC3	higan/fc/cartridge/board/konami-vrc3.cpp	/^struct KonamiVRC3 : Board {$/;"	s	file:
KonamiVRC4	higan/fc/cartridge/board/konami-vrc4.cpp	/^  KonamiVRC4(Markup::Node& document) : Board(document), vrc4(*this) {$/;"	f	struct:KonamiVRC4
KonamiVRC4	higan/fc/cartridge/board/konami-vrc4.cpp	/^struct KonamiVRC4 : Board {$/;"	s	file:
KonamiVRC6	higan/fc/cartridge/board/konami-vrc6.cpp	/^  KonamiVRC6(Markup::Node& document) : Board(document), vrc6(*this) {$/;"	f	struct:KonamiVRC6
KonamiVRC6	higan/fc/cartridge/board/konami-vrc6.cpp	/^struct KonamiVRC6 : Board {$/;"	s	file:
KonamiVRC7	higan/fc/cartridge/board/konami-vrc7.cpp	/^  KonamiVRC7(Markup::Node& document) : Board(document), vrc7(*this) {$/;"	f	struct:KonamiVRC7
KonamiVRC7	higan/fc/cartridge/board/konami-vrc7.cpp	/^struct KonamiVRC7 : Board {$/;"	s	file:
L	higan/gba/system/system.hpp	/^  A, B, Select, Start, Right, Left, Up, Down, R, L,$/;"	m	class:Input
L	higan/processor/huc6280/huc6280.cpp	23;"	d	file:
L	higan/processor/huc6280/huc6280.cpp	50;"	d	file:
L	higan/processor/lr35902/registers.cpp	15;"	d	file:
L	higan/processor/mos6502/mos6502.cpp	21;"	d	file:
L	higan/processor/mos6502/mos6502.cpp	45;"	d	file:
L	higan/processor/wdc65816/wdc65816.cpp	28;"	d	file:
L	higan/processor/wdc65816/wdc65816.cpp	87;"	d	file:
L	higan/processor/z80/disassembler.cpp	1054;"	d	file:
L	higan/processor/z80/disassembler.cpp	66;"	d	file:
L	higan/processor/z80/registers.cpp	13;"	d	file:
L	higan/sfc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
L	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:SuperMultitap	typeref:enum:SuperMultitap::
L	nall/elliptic-curve/ed25519.hpp	/^  const BarrettReduction<256> L = BarrettReduction<256>{EllipticCurve::L};$/;"	m	struct:nall::EllipticCurve::Ed25519
L	nall/elliptic-curve/ed25519.hpp	/^static const uint256_t L = (1_u256 << 252) + 27742317777372353535851937790883648493_u256;$/;"	m	namespace:nall::EllipticCurve
LCD	higan/emulator/interface.hpp	/^      LCD,$/;"	m	struct:Emulator::Interface::Display::Type	typeref:enum:Emulator::Interface::Display::Type::
LFO	higan/md/ym2612/ym2612.hpp	/^  struct LFO {$/;"	s	struct:YM2612
LFSR	nall/random.hpp	/^struct LFSR : RNG<LFSR> {$/;"	s	namespace:nall::PRNG
LIBCO_C	libco/amd64.c	1;"	d	file:
LIBCO_C	libco/arm.c	1;"	d	file:
LIBCO_C	libco/fiber.c	1;"	d	file:
LIBCO_C	libco/ppc.c	1;"	d	file:
LIBCO_C	libco/sjlj.c	6;"	d	file:
LIBCO_C	libco/ucontext.c	13;"	d	file:
LIBCO_C	libco/x86.c	1;"	d	file:
LIBCO_H	libco/libco.h	8;"	d
LIBCO_PPC64	libco/ppc.c	35;"	d	file:
LIBCO_PPCDESC	libco/ppc.c	40;"	d	file:
LPS	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  enum : uint { MPS = 0, LPS = 1 };$/;"	m	struct:Decompressor	typeref:enum:Decompressor::	file:
LR35902	higan/processor/lr35902/lr35902.hpp	/^struct LR35902 {$/;"	s	namespace:Processor
LRESULT	hiro/windows/application.cpp	/^static auto CALLBACK Window_windowProc(HWND, UINT, WPARAM, LPARAM) -> LRESULT;$/;"	m	namespace:hiro	file:
LRESULT	hiro/windows/widget/table-view.hpp	/^  auto onCustomDraw(LPARAM lparam) -> LRESULT;$/;"	m	struct:hiro::pTableView
LSB	nall/intrinsics.hpp	/^  enum class Endian : uint { LSB, MSB, Unknown };$/;"	m	class:nall::Endian
LVCFMT_FIXED_WIDTH	hiro/windows/header.hpp	71;"	d
L_	higan/processor/z80/registers.cpp	31;"	d	file:
Label	hiro/core/shared.hpp	/^struct Label : sLabel {$/;"	s
Latch	higan/gba/cpu/cpu.hpp	/^    struct Latch {$/;"	s	struct:DMA
Latch	higan/gba/ppu/ppu.hpp	/^    struct Latch {$/;"	s	struct:PPU::Background
Latch	higan/md/vdp/vdp.hpp	/^  struct Latch {$/;"	s	struct:VDP
Latches	higan/fc/ppu/ppu.hpp	/^  struct Latches {$/;"	s	struct:PPU
Latches	higan/sfc/ppu/ppu.hpp	/^  struct Latches {$/;"	s	struct:PPU
Latches	higan/ws/ppu/ppu.hpp	/^  struct Latches {$/;"	s	struct:PPU
Layer	higan/sfc/ppu/screen.hpp	/^    struct Layer {$/;"	s	struct:Screen::IO
Layer	higan/sfc/ppu/window.hpp	/^    struct Layer {$/;"	s	struct:Window::IO
Left	higan/fc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Left	higan/gb/system/system.hpp	/^  Up, Down, Left, Right, B, A, Select, Start,$/;"	m	class:Input
Left	higan/gba/system/system.hpp	/^  A, B, Select, Start, Right, Left, Up, Down, R, L,$/;"	m	class:Input
Left	higan/md/controller/control-pad/control-pad.hpp	/^    Up, Down, Left, Right, A, B, C, Start,$/;"	m	struct:ControlPad	typeref:enum:ControlPad::
Left	higan/md/controller/fighting-pad/fighting-pad.hpp	/^    Up, Down, Left, Right, A, B, C, X, Y, Z, Mode, Start,$/;"	m	struct:FightingPad	typeref:enum:FightingPad::
Left	higan/ms/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, One, Two,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Left	higan/pce/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, Two, One, Select, Run,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Left	higan/sfc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Left	higan/sfc/controller/mouse/mouse.hpp	/^    X, Y, Left, Right,$/;"	m	struct:Mouse	typeref:enum:Mouse::
Left	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:SuperMultitap	typeref:enum:SuperMultitap::
Left	hiro/core/core.hpp	/^  enum class Button : uint { Left, Middle, Right };$/;"	m	class:hiro::Mouse::Button
Left	hiro/core/core.hpp	/^enum class Navigation : uint { Top, Bottom, Left, Right };$/;"	m	class:hiro::Navigation
Left	hiro/resource/resource.cpp	/^const unsigned char Left[655] = {$/;"	m	namespace:Icon::Go	file:
LessThan	nall/string/eval/node.hpp	/^    Equal, NotEqual, LessThanEqual, GreaterThanEqual, LessThan, GreaterThan,$/;"	m	class:nall::Eval::Node::Type
LessThanEqual	nall/string/eval/node.hpp	/^    Equal, NotEqual, LessThanEqual, GreaterThanEqual, LessThan, GreaterThan,$/;"	m	class:nall::Eval::Node::Type
License	higan/emulator/emulator.hpp	/^  static const string License = "GPLv3";$/;"	m	namespace:Emulator
Line	higan/pce/vdc/vdc.hpp	/^    enum class Line : uint {$/;"	c	struct:VDC::IRQ
LineCoincidence	higan/pce/vdc/vdc.hpp	/^      LineCoincidence,$/;"	m	class:VDC::IRQ::Line
LineCompare	higan/ws/cpu/cpu.hpp	/^    LineCompare,$/;"	m	class:CPU::Interrupt
LineEdit	hiro/core/shared.hpp	/^struct LineEdit : sLineEdit {$/;"	s
Linux	nall/intrinsics.hpp	/^  enum class Platform : uint { Windows, MacOS, Linux, BSD, Unknown };$/;"	m	class:nall::Platform
ListView	hiro/extension/shared.hpp	/^struct ListView : sListView {$/;"	s
ListViewItem	hiro/extension/list-view.hpp	/^  auto item(uint position) const -> ListViewItem;$/;"	m	struct:mListView
ListViewItem	hiro/extension/list-view.hpp	/^  auto selected() const -> ListViewItem;$/;"	m	struct:mListView
ListViewItem	hiro/extension/shared.hpp	/^struct ListViewItem : sListViewItem {$/;"	s
ListWindow	genius/genius.cpp	/^ListWindow::ListWindow() {$/;"	f	class:ListWindow
ListWindow	genius/genius.hpp	/^struct ListWindow : Window {$/;"	s
Literal	nall/string/eval/node.hpp	/^    Literal,$/;"	m	class:nall::Eval::Node::Type
Lo	higan/target-bsnes/input/input.hpp	/^  enum class Qualifier : uint { None, Lo, Hi, Rumble };$/;"	m	class:InputMapping::Qualifier
Lo	higan/target-higan/input/input.hpp	/^  enum class Qualifier : uint { None, Lo, Hi, Rumble };$/;"	m	class:InputMapping::Qualifier
Lo	nall/primitives.hpp	/^    const type Lo;$/;"	m	struct:nall::Natural::Reference
Lo	nall/primitives.hpp	/^    const uint Lo;$/;"	m	struct:nall::Integer::Reference
Lo	nall/varint.hpp	/^    const uint Lo;$/;"	m	struct:nall::VariadicNatural::Reference
Load	higan/emulator/platform.hpp	/^    Load(uint pathID, string option = "") : valid(true), pathID(pathID), option(option) {}$/;"	f	struct:Emulator::Platform::Load
Load	higan/emulator/platform.hpp	/^  struct Load {$/;"	s	struct:Emulator::Platform
Load	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    Load          = 1 << 6,  \/\/load operation$/;"	m	struct:Processor::ARM7TDMI	typeref:enum:Processor::ARM7TDMI::
Locale	hiro/core/application.hpp	/^  static auto locale() -> Locale&;$/;"	m	struct:Application
Locale	nall/locale.hpp	/^struct Locale {$/;"	s	namespace:nall
Location	nall/location.hpp	/^namespace nall { namespace Location {$/;"	n	namespace:nall
Lock	higan/processor/v30mz/v30mz.hpp	/^    Lock               = 0xf0,$/;"	m	struct:Processor::V30MZ	typeref:enum:Processor::V30MZ::
Lock	hiro/core/lock.hpp	/^struct Lock {$/;"	s
LogFileline	ruby/audio/xaudio2.hpp	/^  BOOL LogFileline;$/;"	m	struct:XAUDIO2_DEBUG_CONFIGURATION
LogFunctionName	ruby/audio/xaudio2.hpp	/^  BOOL LogFunctionName;$/;"	m	struct:XAUDIO2_DEBUG_CONFIGURATION
LogThreadID	ruby/audio/xaudio2.hpp	/^  BOOL LogThreadID;$/;"	m	struct:XAUDIO2_DEBUG_CONFIGURATION
LogTiming	ruby/audio/xaudio2.hpp	/^  BOOL LogTiming;$/;"	m	struct:XAUDIO2_DEBUG_CONFIGURATION
Logic	higan/target-bsnes/input/input.hpp	/^  enum class Logic : uint { AND, OR };$/;"	c	struct:InputMapping
Logic	higan/target-higan/input/input.hpp	/^  enum class Logic : uint { AND, OR };$/;"	c	struct:InputMapping
LogicalAnd	nall/string/eval/node.hpp	/^    LogicalAnd, LogicalOr,$/;"	m	class:nall::Eval::Node::Type
LogicalNot	nall/string/eval/node.hpp	/^    Reference, Dereference, LogicalNot, BitwiseNot, Positive, Negative, PrefixIncrement, PrefixDecrement,$/;"	m	class:nall::Eval::Node::Type
LogicalOr	nall/string/eval/node.hpp	/^    LogicalAnd, LogicalOr,$/;"	m	class:nall::Eval::Node::Type
Logo	higan/target-bsnes/resource/resource.cpp	/^const unsigned char Logo[23467] = {$/;"	m	namespace:Resource	file:
Logo	higan/target-higan/resource/resource.cpp	/^const unsigned char Logo[25128] = {$/;"	m	namespace:Resource	file:
Long	higan/processor/v30mz/v30mz.hpp	/^  enum : uint { Byte = 1, Word = 2, Long = 4 };$/;"	m	struct:Processor::V30MZ	typeref:enum:Processor::V30MZ::
LoopBegin	ruby/audio/xaudio2.hpp	/^  UINT32 LoopBegin;$/;"	m	struct:XAUDIO2_BUFFER
LoopCount	ruby/audio/xaudio2.hpp	/^  UINT32 LoopCount;$/;"	m	struct:XAUDIO2_BUFFER
LoopLength	ruby/audio/xaudio2.hpp	/^  UINT32 LoopLength;$/;"	m	struct:XAUDIO2_BUFFER
Low	higan/emulator/random.hpp	/^  enum class Entropy : uint { None, Low, High };$/;"	m	class:Emulator::Random::Entropy
LowPass	higan/audio/audio.hpp	/^  enum class Type : uint { LowPass, HighPass };$/;"	m	class:Emulator::Filter::Type
LowPass	nall/dsp/iir/biquad.hpp	/^    LowPass,$/;"	m	class:nall::DSP::IIR::Biquad::Type
LowPass	nall/dsp/iir/one-pole.hpp	/^    LowPass,$/;"	m	class:nall::DSP::IIR::OnePole::Type
LowPassFilter	ruby/audio/xaudio2.hpp	/^  LowPassFilter,$/;"	e	enum:XAUDIO2_FILTER_TYPE
LowShelf	nall/dsp/iir/biquad.hpp	/^    LowShelf,$/;"	m	class:nall::DSP::IIR::Biquad::Type
M68K	higan/processor/m68k/instruction.cpp	/^M68K::M68K() {$/;"	f	class:M68K
M68K	higan/processor/m68k/m68k.hpp	/^struct M68K {$/;"	s	namespace:Processor
MAC	nall/mac/poly1305.hpp	/^namespace nall { namespace MAC {$/;"	n	namespace:nall
MAKEFLAGS	nall/GNUmakefile	/^MAKEFLAGS := Rr$/;"	m
MBC0	higan/gb/cartridge/mbc0/mbc0.hpp	/^struct MBC0 : Mapper {$/;"	s
MBC1	higan/gb/cartridge/mbc1/mbc1.hpp	/^struct MBC1 : Mapper {$/;"	s
MBC1M	higan/gb/cartridge/mbc1m/mbc1m.hpp	/^struct MBC1M : Mapper {$/;"	s
MBC2	higan/gb/cartridge/mbc2/mbc2.hpp	/^struct MBC2 : Mapper {$/;"	s
MBC3	higan/gb/cartridge/mbc3/mbc3.hpp	/^struct MBC3 : Mapper {$/;"	s
MBC5	higan/gb/cartridge/mbc5/mbc5.hpp	/^struct MBC5 : Mapper {$/;"	s
MBC5	higan/gb/interface/interface.hpp	/^    MBC5,$/;"	m	struct:Device	typeref:enum:Device::
MBC6	higan/gb/cartridge/mbc6/mbc6.hpp	/^struct MBC6 : Mapper {$/;"	s
MBC7	higan/gb/cartridge/mbc7/mbc7.hpp	/^struct MBC7 : Mapper {$/;"	s
MBC7	higan/gb/interface/interface.hpp	/^    MBC7,$/;"	m	struct:Device	typeref:enum:Device::
MCC	higan/sfc/cartridge/cartridge.hpp	/^    boolean MCC;$/;"	m	struct:Cartridge::Has
MCC	higan/sfc/coprocessor/mcc/mcc.hpp	/^struct MCC {$/;"	s
MF	higan/processor/wdc65816/wdc65816.cpp	21;"	d	file:
MF	higan/processor/wdc65816/wdc65816.cpp	80;"	d	file:
MMC1	higan/fc/cartridge/chip/mmc1.cpp	/^    MMC1,$/;"	m	class:MMC1::Revision	file:
MMC1	higan/fc/cartridge/chip/mmc1.cpp	/^  MMC1(Board& board) : Chip(board) {$/;"	f	struct:MMC1
MMC1	higan/fc/cartridge/chip/mmc1.cpp	/^struct MMC1 : Chip {$/;"	s	file:
MMC1A	higan/fc/cartridge/chip/mmc1.cpp	/^    MMC1A,$/;"	m	class:MMC1::Revision	file:
MMC1B1	higan/fc/cartridge/chip/mmc1.cpp	/^    MMC1B1,$/;"	m	class:MMC1::Revision	file:
MMC1B2	higan/fc/cartridge/chip/mmc1.cpp	/^    MMC1B2,$/;"	m	class:MMC1::Revision	file:
MMC1B3	higan/fc/cartridge/chip/mmc1.cpp	/^    MMC1B3,$/;"	m	class:MMC1::Revision	file:
MMC1C	higan/fc/cartridge/chip/mmc1.cpp	/^    MMC1C,$/;"	m	class:MMC1::Revision	file:
MMC3	higan/fc/cartridge/chip/mmc3.cpp	/^  MMC3(Board& board) : Chip(board) {$/;"	f	struct:MMC3
MMC3	higan/fc/cartridge/chip/mmc3.cpp	/^struct MMC3 : Chip {$/;"	s	file:
MMC5	higan/fc/cartridge/chip/mmc5.cpp	/^    MMC5,$/;"	m	class:MMC5::Revision	file:
MMC5	higan/fc/cartridge/chip/mmc5.cpp	/^  MMC5(Board& board) : Chip(board) {$/;"	f	struct:MMC5
MMC5	higan/fc/cartridge/chip/mmc5.cpp	/^struct MMC5 : Chip {$/;"	s	file:
MMC5B	higan/fc/cartridge/chip/mmc5.cpp	/^    MMC5B,$/;"	m	class:MMC5::Revision	file:
MMC6	higan/fc/cartridge/chip/mmc6.cpp	/^  MMC6(Board& board) : Chip(board) {$/;"	f	struct:MMC6
MMC6	higan/fc/cartridge/chip/mmc6.cpp	/^struct MMC6 : Chip {$/;"	s	file:
MMIO	higan/gb/memory/memory.hpp	/^struct MMIO {$/;"	s
MMIO	higan/sfc/coprocessor/sa1/sa1.hpp	/^  struct MMIO {$/;"	s	struct:SA1
MMM01	higan/gb/cartridge/mmm01/mmm01.hpp	/^struct MMM01 : Mapper {$/;"	s
MOS6502	higan/processor/mos6502/mos6502.hpp	/^struct MOS6502 {$/;"	s	namespace:Processor
MROM	higan/gba/cartridge/memory.hpp	/^struct MROM {$/;"	s
MSB	nall/intrinsics.hpp	/^  enum class Endian : uint { LSB, MSB, Unknown };$/;"	m	class:nall::Endian
MSG_NOSIGNAL	nall/platform.hpp	102;"	d
MSG_NOSIGNAL	nall/platform.hpp	67;"	d
MSU1	higan/sfc/cartridge/cartridge.hpp	/^    boolean MSU1;$/;"	m	struct:Cartridge::Has
MSU1	higan/sfc/coprocessor/msu1/msu1.hpp	/^struct MSU1 : Thread {$/;"	s
MVOLR	higan/sfc/dsp/dsp.hpp	/^    MVOLL = 0x0c, MVOLR = 0x1c,$/;"	m	struct:DSP	typeref:enum:DSP::
MacOS	nall/intrinsics.hpp	/^  enum class Platform : uint { Windows, MacOS, Linux, BSD, Unknown };$/;"	m	class:nall::Platform
Mail	hiro/resource/resource.cpp	/^const unsigned char Mail[550] = {$/;"	m	namespace:Icon::Application	file:
ManagedNode	nall/string/markup/bml.hpp	/^struct ManagedNode : Markup::ManagedNode {$/;"	s	namespace:nall::BML
ManagedNode	nall/string/markup/node.hpp	/^  ManagedNode(const string& name) : _name(name) {}$/;"	f	struct:nall::Markup::ManagedNode
ManagedNode	nall/string/markup/node.hpp	/^  ManagedNode(const string& name, const string& value) : _name(name), _value(value) {}$/;"	f	struct:nall::Markup::ManagedNode
ManagedNode	nall/string/markup/node.hpp	/^struct ManagedNode {$/;"	s	namespace:nall::Markup
ManagedNode	nall/string/markup/xml.hpp	/^struct ManagedNode : Markup::ManagedNode {$/;"	s	namespace:nall::XML
ManifestViewer	higan/target-bsnes/tools/tools.hpp	/^struct ManifestViewer : TabFrameItem {$/;"	s
ManifestViewer	higan/target-higan/tools/manifest-viewer.cpp	/^ManifestViewer::ManifestViewer(TabFrame* parent) : TabFrameItem(parent) {$/;"	f	class:ManifestViewer
ManifestViewer	higan/target-higan/tools/tools.hpp	/^struct ManifestViewer : TabFrameItem {$/;"	s
Mapper	higan/gb/cartridge/cartridge.hpp	/^  struct Mapper {$/;"	s	struct:Cartridge
Mapper	higan/ms/cartridge/cartridge.hpp	/^  struct Mapper {$/;"	s	struct:Cartridge
Mapping	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  bool Mapping;$/;"	m	struct:HitachiDSP
Mapping	higan/target-bsnes/input/input.hpp	/^  struct Mapping {$/;"	s	struct:InputMapping
Mapping	higan/target-higan/input/input.hpp	/^  struct Mapping {$/;"	s	struct:InputMapping
Markup	hiro/resource/resource.cpp	/^const unsigned char Markup[709] = {$/;"	m	namespace:Icon::Emblem	file:
Markup	nall/string/markup/find.hpp	/^namespace nall { namespace Markup {$/;"	n	namespace:nall
Markup	nall/string/markup/node.hpp	/^namespace nall { namespace Markup {$/;"	n	namespace:nall
Mask	nall/elliptic-curve/modulo25519-optimized.hpp	216;"	d
Mask	nall/elliptic-curve/modulo25519-optimized.hpp	9;"	d
MasterSystem	higan/ms/cartridge/cartridge.cpp	/^namespace MasterSystem {$/;"	n	file:
MasterSystem	higan/ms/controller/controller.cpp	/^namespace MasterSystem {$/;"	n	file:
MasterSystem	higan/ms/cpu/cpu.cpp	/^namespace MasterSystem {$/;"	n	file:
MasterSystem	higan/ms/interface/interface.cpp	/^namespace MasterSystem {$/;"	n	file:
MasterSystem	higan/ms/interface/interface.hpp	/^    MasterSystem,$/;"	m	struct:MasterSystem::ID	typeref:enum:MasterSystem::ID::
MasterSystem	higan/ms/interface/interface.hpp	/^namespace MasterSystem {$/;"	n
MasterSystem	higan/ms/ms.hpp	/^namespace MasterSystem {$/;"	n
MasterSystem	higan/ms/psg/psg.cpp	/^namespace MasterSystem {$/;"	n	file:
MasterSystem	higan/ms/system/system.cpp	/^namespace MasterSystem {$/;"	n	file:
MasterSystem	higan/ms/system/system.hpp	/^  enum class Model : uint { MasterSystem, GameGear };$/;"	m	class:System::Model
MasterSystem	higan/ms/vdp/vdp.cpp	/^namespace MasterSystem {$/;"	n	file:
MasterSystem	icarus/core/core.hpp	/^  Markup::Node MasterSystem;$/;"	m	namespace:Database
MasterSystem	icarus/heuristics/master-system.cpp	/^MasterSystem::MasterSystem(vector<uint8_t>& data, string location) : data(data), location(location) {$/;"	f	class:Heuristics::MasterSystem
MasterSystem	icarus/heuristics/master-system.cpp	/^struct MasterSystem {$/;"	s	namespace:Heuristics	file:
MasterSystemControls	higan/ms/interface/interface.hpp	/^    MasterSystemControls,$/;"	m	struct:Device	typeref:enum:Device::
Math	higan/sfc/ppu/screen.hpp	/^  struct Math {$/;"	s	struct:Screen
Math	nall/platform.hpp	/^namespace Math {$/;"	n
Matrix	nall/matrix.hpp	/^namespace nall { namespace Matrix {$/;"	n	namespace:nall
Max	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  enum : uint { One = 0xaa, Half = 0x55, Max = 0xff };$/;"	m	struct:Decompressor	typeref:enum:Decompressor::	file:
Maximum	hiro/core/core.hpp	/^  static constexpr float Maximum = -1.0;$/;"	m	struct:hiro::Size
MaximumCyclesPerQuantum	ruby/audio/xaudio2.hpp	/^  UINT32 MaximumCyclesPerQuantum;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
Media	hiro/resource/resource.cpp	/^namespace Media {$/;"	n	namespace:Icon	file:
Media	hiro/resource/resource.hpp	/^namespace Media {$/;"	n	namespace:Icon
MegaDrive	higan/md/apu/apu.cpp	/^namespace MegaDrive {$/;"	n	file:
MegaDrive	higan/md/cartridge/cartridge.cpp	/^namespace MegaDrive {$/;"	n	file:
MegaDrive	higan/md/controller/controller.cpp	/^namespace MegaDrive {$/;"	n	file:
MegaDrive	higan/md/cpu/cpu.cpp	/^namespace MegaDrive {$/;"	n	file:
MegaDrive	higan/md/interface/interface.cpp	/^namespace MegaDrive {$/;"	n	file:
MegaDrive	higan/md/interface/interface.hpp	/^    MegaDrive,$/;"	m	struct:MegaDrive::ID	typeref:enum:MegaDrive::ID::
MegaDrive	higan/md/interface/interface.hpp	/^namespace MegaDrive {$/;"	n
MegaDrive	higan/md/md.hpp	/^namespace MegaDrive {$/;"	n
MegaDrive	higan/md/psg/psg.cpp	/^namespace MegaDrive {$/;"	n	file:
MegaDrive	higan/md/system/system.cpp	/^namespace MegaDrive {$/;"	n	file:
MegaDrive	higan/md/vdp/vdp.cpp	/^namespace MegaDrive {$/;"	n	file:
MegaDrive	higan/md/ym2612/ym2612.cpp	/^namespace MegaDrive {$/;"	n	file:
MegaDrive	icarus/core/core.hpp	/^  Markup::Node MegaDrive;$/;"	m	namespace:Database
MegaDrive	icarus/heuristics/mega-drive.cpp	/^MegaDrive::MegaDrive(vector<uint8_t>& data, string location) : data(data), location(location) {$/;"	f	class:Heuristics::MegaDrive
MegaDrive	icarus/heuristics/mega-drive.cpp	/^struct MegaDrive {$/;"	s	namespace:Heuristics	file:
Member	nall/string/eval/node.hpp	/^    Function, Subscript, Member, SuffixIncrement, SuffixDecrement,$/;"	m	class:nall::Eval::Node::Type
Memory	genius/genius.hpp	/^    Memory,$/;"	m	class:Component::Type
Memory	genius/genius.hpp	/^struct Memory {$/;"	s
Memory	higan/emulator/game.hpp	/^  struct Memory {$/;"	s	struct:Emulator::Game
Memory	higan/emulator/game.hpp	/^Game::Memory::Memory(Markup::Node node) {$/;"	f	class:Emulator::Game::Memory
Memory	higan/fc/cartridge/board/board.hpp	/^    inline Memory() : data(nullptr), size(0u), writable(false) {}$/;"	f	struct:Board::Memory
Memory	higan/fc/cartridge/board/board.hpp	/^    inline Memory(uint8_t* data, uint size) : data(data), size(size) {}$/;"	f	struct:Board::Memory
Memory	higan/fc/cartridge/board/board.hpp	/^  struct Memory {$/;"	s	struct:Board
Memory	higan/gb/cartridge/cartridge.hpp	/^  struct Memory {$/;"	s	struct:Cartridge
Memory	higan/gb/memory/memory.hpp	/^struct Memory {$/;"	s
Memory	higan/gba/cpu/cpu.hpp	/^  struct Memory {$/;"	s
Memory	higan/md/cartridge/cartridge.hpp	/^  struct Memory {$/;"	s	struct:Cartridge
Memory	higan/ms/cartridge/cartridge.hpp	/^  struct Memory {$/;"	s	struct:Cartridge
Memory	higan/pce/cartridge/cartridge.hpp	/^  struct Memory {$/;"	s	struct:Cartridge
Memory	higan/sfc/memory/memory.hpp	/^struct Memory {$/;"	s
Memory	higan/ws/cartridge/cartridge.hpp	/^  struct Memory {$/;"	s	struct:Cartridge
Memory	icarus/heuristics/heuristics.hpp	/^struct Memory {$/;"	s	namespace:Heuristics
MemoryUsageInBytes	ruby/audio/xaudio2.hpp	/^  UINT32 MemoryUsageInBytes;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
MemoryWindow	genius/genius.cpp	/^MemoryWindow::MemoryWindow() {$/;"	f	class:MemoryWindow
MemoryWindow	genius/genius.hpp	/^struct MemoryWindow : Window {$/;"	s
Menu	hiro/core/core.hpp	/^  auto menu(uint position) const -> Menu;$/;"	m	struct:hiro::mMenuBar
Menu	hiro/core/shared.hpp	/^struct Menu : sMenu {$/;"	s
MenuBar	hiro/core/shared.hpp	/^struct MenuBar : sMenuBar {$/;"	s
MenuBar	hiro/core/window.hpp	/^  auto menuBar() const -> MenuBar;$/;"	m	struct:mWindow
MenuCheckItem	hiro/core/shared.hpp	/^struct MenuCheckItem : sMenuCheckItem {$/;"	s
MenuItem	hiro/core/shared.hpp	/^struct MenuItem : sMenuItem {$/;"	s
MenuRadioItem	hiro/core/shared.hpp	/^struct MenuRadioItem : sMenuRadioItem {$/;"	s
MenuSeparator	hiro/core/shared.hpp	/^struct MenuSeparator : sMenuSeparator {$/;"	s
Message	nall/http/message.hpp	/^struct Message {$/;"	s	namespace:nall::HTTP
MessageDialog	hiro/extension/message-dialog.cpp	/^MessageDialog::MessageDialog(const string& text) {$/;"	f	class:MessageDialog
MessageDialog	hiro/extension/message-dialog.hpp	/^struct MessageDialog {$/;"	s
MessageWindow	hiro/core/core.hpp	/^struct MessageWindow {$/;"	s	namespace:hiro
MessageWindow	hiro/core/message-window.cpp	/^MessageWindow::MessageWindow(const string& text) {$/;"	f	class:MessageWindow
MessageWindowType	hiro/cocoa/message-window.cpp	/^enum class MessageWindowType : uint { Error, Information, Question, Warning };$/;"	c	namespace:hiro	file:
Microphone	hiro/resource/resource.cpp	/^const unsigned char Microphone[703] = {$/;"	m	namespace:Icon::Device	file:
Microsoft	nall/intrinsics.hpp	/^  enum class Compiler : uint { Clang, GCC, Microsoft, Unknown };$/;"	m	class:nall::Compiler
Middle	hiro/core/core.hpp	/^  enum class Button : uint { Left, Middle, Right };$/;"	m	class:hiro::Mouse::Button
Minimum	hiro/core/core.hpp	/^  static constexpr float Minimum = +0.0;$/;"	m	struct:hiro::Size
MinimumCyclesPerQuantum	ruby/audio/xaudio2.hpp	/^  UINT32 MinimumCyclesPerQuantum;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
ModRM	higan/processor/v30mz/v30mz.hpp	/^  struct ModRM {$/;"	s	namespace:Processor
Mode	higan/emulator/scheduler.hpp	/^  enum class Mode : uint {$/;"	c	struct:Emulator::Scheduler
Mode	higan/gba/cartridge/memory.hpp	/^  enum class Mode : uint {$/;"	c	struct:EEPROM
Mode	higan/md/controller/fighting-pad/fighting-pad.hpp	/^    Up, Down, Left, Right, A, B, C, X, Y, Z, Mode, Start,$/;"	m	struct:FightingPad	typeref:enum:FightingPad::
Mode	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  enum class State : uint { Mode, Seek, Read, Write } state;$/;"	m	class:EpsonRTC::State
Mode	higan/sfc/ppu/background.hpp	/^  struct Mode { enum : uint { BPP2, BPP4, BPP8, Mode7, Inactive }; };$/;"	s
Mode	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  struct Mode { enum : uint {$/;"	s	struct:BSMemory
Mode7	higan/sfc/ppu-fast/ppu.hpp	/^  struct TileMode { enum : uint { BPP2, BPP4, BPP8, Mode7, Inactive }; };$/;"	m	struct:TileMode	typeref:enum:TileMode::
Mode7	higan/sfc/ppu/background.hpp	/^  struct Mode { enum : uint { BPP2, BPP4, BPP8, Mode7, Inactive }; };$/;"	m	struct:Mode	typeref:enum:Mode::
Model	higan/gb/gb.hpp	/^  struct Model {$/;"	s	namespace:GameBoy
Model	higan/gb/system/system.hpp	/^  enum class Model : uint {$/;"	c	struct:System
Model	higan/ms/ms.hpp	/^  struct Model {$/;"	s	namespace:MasterSystem
Model	higan/ms/system/system.hpp	/^  enum class Model : uint { MasterSystem, GameGear };$/;"	c	struct:System
Model	higan/pce/pce.hpp	/^  struct Model {$/;"	s	namespace:PCEngine
Model	higan/pce/system/system.hpp	/^  enum class Model : uint { PCEngine, SuperGrafx };$/;"	c	struct:System
Model	higan/ws/system/system.hpp	/^  enum class Model : uint { WonderSwan, WonderSwanColor, SwanCrystal, PocketChallengeV2 };$/;"	c	struct:System
Model	higan/ws/ws.hpp	/^  struct Model {$/;"	s	namespace:WonderSwan
ModelState	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  struct ModelState {$/;"	s	struct:Decompressor	file:
Modulo	nall/string/eval/node.hpp	/^    Multiply, Divide, Modulo,$/;"	m	class:nall::Eval::Node::Type
Modulo25519	nall/elliptic-curve/modulo25519-optimized.hpp	/^  inline Modulo25519(uint64_t a, uint64_t b = 0, uint64_t c = 0, uint64_t d = 0, uint64_t e = 0) : l{a, b, c, d, e} {}$/;"	f	struct:nall::EllipticCurve::Modulo25519
Modulo25519	nall/elliptic-curve/modulo25519-optimized.hpp	/^inline Modulo25519::Modulo25519(uint256_t n) {$/;"	f	class:nall::EllipticCurve::Modulo25519
Modulo25519	nall/elliptic-curve/modulo25519-optimized.hpp	/^struct Modulo25519 {$/;"	s	namespace:nall::EllipticCurve
Modulo25519	nall/elliptic-curve/modulo25519-reference.hpp	/^  inline Modulo25519(const Modulo25519& source) : value(source.value) {}$/;"	f	struct:nall::EllipticCurve::Modulo25519
Modulo25519	nall/elliptic-curve/modulo25519-reference.hpp	/^  template<typename T> inline Modulo25519(const T& value) : value(value) {}$/;"	f	struct:nall::EllipticCurve::Modulo25519
Modulo25519	nall/elliptic-curve/modulo25519-reference.hpp	/^struct Modulo25519 {$/;"	s	namespace:nall::EllipticCurve
Monitor	hiro/core/monitor.hpp	/^struct Monitor {$/;"	s
Monitor	hiro/resource/resource.cpp	/^const unsigned char Monitor[611] = {$/;"	m	namespace:Icon::Application	file:
MonitorInfo	hiro/windows/monitor.cpp	/^struct MonitorInfo {$/;"	s	namespace:hiro	file:
Mono	hiro/core/font.cpp	/^const string Font::Mono  = "{mono}";$/;"	m	class:Font	file:
Mono	hiro/core/font.hpp	/^  static const string Mono;$/;"	m	struct:Font
Mouse	higan/sfc/controller/mouse/mouse.cpp	/^Mouse::Mouse(uint port) : Controller(port) {$/;"	f	class:Mouse
Mouse	higan/sfc/controller/mouse/mouse.hpp	/^struct Mouse : Controller {$/;"	s
Mouse	higan/sfc/interface/interface.hpp	/^    Mouse,$/;"	m	struct:Device	typeref:enum:Device::
Mouse	hiro/core/core.hpp	/^struct Mouse {$/;"	s	namespace:hiro
Mouse	hiro/resource/resource.cpp	/^const unsigned char Mouse[720] = {$/;"	m	namespace:Icon::Device	file:
Mouse	nall/hid.hpp	/^  Mouse() : Device("Mouse") { append("Axis"), append("Button"); }$/;"	f	namespace:nall::HID
Mouse	nall/hid.hpp	/^struct Mouse : Device {$/;"	s	namespace:nall::HID
Mouse	ruby/input/mouse/rawinput.cpp	/^  struct Mouse {$/;"	s	struct:InputMouseRawInput	file:
Mouse	ruby/input/mouse/xlib.cpp	/^  struct Mouse {$/;"	s	struct:InputMouseXlib	file:
Mouse	ruby/input/shared/rawinput.cpp	/^    enum class Type : uint { Keyboard, Mouse, Joypad } type;$/;"	m	class:RawInput::Device::Type	file:
Multiply	nall/string/eval/node.hpp	/^    Multiply, Divide, Modulo,$/;"	m	class:nall::Eval::Node::Type
Mute	hiro/resource/resource.cpp	/^const unsigned char Mute[632] = {$/;"	m	namespace:Icon::Action	file:
N	higan/processor/huc6280/huc6280.cpp	21;"	d	file:
N	higan/processor/huc6280/huc6280.cpp	48;"	d	file:
N	higan/processor/mos6502/mos6502.cpp	20;"	d	file:
N	higan/processor/mos6502/mos6502.cpp	44;"	d	file:
N	higan/processor/wdc65816/wdc65816.cpp	27;"	d	file:
N	higan/processor/wdc65816/wdc65816.cpp	86;"	d	file:
N	higan/processor/z80/disassembler.cpp	1041;"	d	file:
N	higan/processor/z80/disassembler.cpp	53;"	d	file:
NALL_MACOS_GUARD_HPP	nall/macos/guard.hpp	2;"	d
NALL_MACOS_GUARD_HPP	nall/macos/guard.hpp	9;"	d
NALL_MERGE_SORT_INSERTION	nall/merge-sort.hpp	19;"	d
NALL_STRING_ALLOCATOR_ADAPTIVE	nall/string.hpp	63;"	d
NALL_WINDOWS_GUARD_HPP	nall/windows/guard.hpp	26;"	d
NALL_WINDOWS_GUARD_HPP	nall/windows/guard.hpp	2;"	d
NALL_XORG_GUARD_CONSTANTS	nall/xorg/guard.hpp	20;"	d
NALL_XORG_GUARD_HPP	nall/xorg/guard.hpp	11;"	d
NALL_XORG_GUARD_HPP	nall/xorg/guard.hpp	2;"	d
NDEBUG	nall/intrinsics.hpp	164;"	d
NECDSP	higan/sfc/cartridge/cartridge.hpp	/^    boolean NECDSP;$/;"	m	struct:Cartridge::Has
NECDSP	higan/sfc/coprocessor/necdsp/necdsp.hpp	/^struct NECDSP : Processor::uPD96050, Thread {$/;"	s
NES_AxROM	higan/fc/cartridge/board/nes-axrom.cpp	/^  NES_AxROM(Markup::Node& document) : Board(document) {$/;"	f	struct:NES_AxROM
NES_AxROM	higan/fc/cartridge/board/nes-axrom.cpp	/^struct NES_AxROM : Board {$/;"	s	file:
NES_BNROM	higan/fc/cartridge/board/nes-bnrom.cpp	/^  NES_BNROM(Markup::Node& document) : Board(document) {$/;"	f	struct:NES_BNROM
NES_BNROM	higan/fc/cartridge/board/nes-bnrom.cpp	/^struct NES_BNROM : Board {$/;"	s	file:
NES_CNROM	higan/fc/cartridge/board/nes-cnrom.cpp	/^  NES_CNROM(Markup::Node& document) : Board(document) {$/;"	f	struct:NES_CNROM
NES_CNROM	higan/fc/cartridge/board/nes-cnrom.cpp	/^struct NES_CNROM : Board {$/;"	s	file:
NES_ExROM	higan/fc/cartridge/board/nes-exrom.cpp	/^  NES_ExROM(Markup::Node& document) : Board(document), mmc5(*this) {$/;"	f	struct:NES_ExROM
NES_ExROM	higan/fc/cartridge/board/nes-exrom.cpp	/^struct NES_ExROM : Board {$/;"	s	file:
NES_FxROM	higan/fc/cartridge/board/nes-fxrom.cpp	/^  NES_FxROM(Markup::Node& document) : Board(document) {$/;"	f	struct:NES_FxROM
NES_FxROM	higan/fc/cartridge/board/nes-fxrom.cpp	/^struct NES_FxROM : Board {$/;"	s	file:
NES_GxROM	higan/fc/cartridge/board/nes-gxrom.cpp	/^  NES_GxROM(Markup::Node& document) : Board(document) {$/;"	f	struct:NES_GxROM
NES_GxROM	higan/fc/cartridge/board/nes-gxrom.cpp	/^struct NES_GxROM : Board {$/;"	s	file:
NES_HKROM	higan/fc/cartridge/board/nes-hkrom.cpp	/^  NES_HKROM(Markup::Node& document) : Board(document), mmc6(*this) {$/;"	f	struct:NES_HKROM
NES_HKROM	higan/fc/cartridge/board/nes-hkrom.cpp	/^struct NES_HKROM : Board {$/;"	s	file:
NES_NROM	higan/fc/cartridge/board/nes-nrom.cpp	/^  NES_NROM(Markup::Node& document) : Board(document) {$/;"	f	struct:NES_NROM
NES_NROM	higan/fc/cartridge/board/nes-nrom.cpp	/^struct NES_NROM : Board {$/;"	s	file:
NES_PxROM	higan/fc/cartridge/board/nes-pxrom.cpp	/^  NES_PxROM(Markup::Node& document) : Board(document) {$/;"	f	struct:NES_PxROM
NES_PxROM	higan/fc/cartridge/board/nes-pxrom.cpp	/^struct NES_PxROM : Board {$/;"	s	file:
NES_SxROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^  NES_SxROM(Markup::Node& document) : Board(document), mmc1(*this) {$/;"	f	struct:NES_SxROM
NES_SxROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^struct NES_SxROM : Board {$/;"	s	file:
NES_TxROM	higan/fc/cartridge/board/nes-txrom.cpp	/^  NES_TxROM(Markup::Node& document) : Board(document), mmc3(*this) {$/;"	f	struct:NES_TxROM
NES_TxROM	higan/fc/cartridge/board/nes-txrom.cpp	/^struct NES_TxROM : Board {$/;"	s	file:
NES_UxROM	higan/fc/cartridge/board/nes-uxrom.cpp	/^  NES_UxROM(Markup::Node& document) : Board(document) {$/;"	f	struct:NES_UxROM
NES_UxROM	higan/fc/cartridge/board/nes-uxrom.cpp	/^struct NES_UxROM : Board {$/;"	s	file:
NF	higan/processor/lr35902/registers.cpp	19;"	d	file:
NF	higan/processor/spc700/spc700.cpp	21;"	d	file:
NF	higan/processor/spc700/spc700.cpp	58;"	d	file:
NF	higan/processor/wdc65816/wdc65816.cpp	23;"	d	file:
NF	higan/processor/wdc65816/wdc65816.cpp	82;"	d	file:
NF	higan/processor/z80/registers.cpp	44;"	d	file:
NN	higan/processor/z80/disassembler.cpp	1043;"	d	file:
NN	higan/processor/z80/disassembler.cpp	55;"	d	file:
NOMINMAX	nall/windows/guard.hpp	13;"	d
NOMINMAX	nall/windows/guard.hpp	22;"	d
NON	higan/sfc/dsp/dsp.hpp	/^    NON   = 0x3d, EON   = 0x4d,$/;"	m	struct:DSP	typeref:enum:DSP::
NSFont	hiro/cocoa/font.hpp	/^  static auto create(const Font& font) -> NSFont*;$/;"	m	struct:hiro::pFont
NTSC	higan/emulator/emulator.hpp	/^      static constexpr double NTSC = 315.0 \/ 88.0 * 1'000'000.0;$/;"	m	namespace:Emulator::Constants::Colorburst
NTSC	higan/ms/system/system.hpp	/^  enum class Region : uint { NTSC, PAL };$/;"	m	class:System::Region
NTSC	higan/sfc/system/system.hpp	/^  enum class Region : uint { NTSC, PAL };$/;"	m	class:System::Region
NTSCJ	higan/fc/system/system.hpp	/^  enum class Region : uint { NTSCJ, NTSCU, PAL };$/;"	m	class:System::Region
NTSCJ	higan/md/system/system.hpp	/^    NTSCJ,$/;"	m	class:System::Region
NTSCU	higan/fc/system/system.hpp	/^  enum class Region : uint { NTSCJ, NTSCU, PAL };$/;"	m	class:System::Region
NTSCU	higan/md/system/system.hpp	/^    NTSCU,$/;"	m	class:System::Region
NWR_FLAGS	nall/windows/registry.hpp	16;"	d
NWR_SIZE	nall/windows/registry.hpp	20;"	d
Name	higan/emulator/emulator.hpp	/^  static const string Name    = "higan";$/;"	m	namespace:Emulator
NameAscending	higan/target-bsnes/tools/tools.hpp	/^    NameAscending,$/;"	m	class:StateManager::SortBy
NameDescending	higan/target-bsnes/tools/tools.hpp	/^    NameDescending,$/;"	m	class:StateManager::SortBy
Namespace	hiro/core/application.hpp	/^    Namespace(const string& value) : Locale::Namespace(Application::locale(), value) {}$/;"	f	struct:Application::Namespace
Namespace	hiro/core/application.hpp	/^  struct Namespace : Locale::Namespace {$/;"	s	struct:Application
Namespace	nall/locale.hpp	/^    Namespace(Locale& _locale, string _namespace) : _locale(_locale), _namespace(_namespace) {}$/;"	f	struct:nall::Locale::Namespace
Namespace	nall/locale.hpp	/^  struct Namespace {$/;"	s	struct:nall::Locale
Natural	nall/primitives.hpp	/^  inline Natural() : data(0) {}$/;"	f	struct:nall::Natural
Natural	nall/primitives.hpp	/^  template<typename T> inline Natural(const T& value) { set(value); }$/;"	f	struct:nall::Natural
Natural	nall/primitives.hpp	/^template<uint Bits> struct Natural {$/;"	s	namespace:nall
Navigation	hiro/core/core.hpp	/^enum class Navigation : uint { Top, Bottom, Left, Right };$/;"	c	namespace:hiro
Navigation	hiro/core/widget/tab-frame.hpp	/^  auto navigation() const -> Navigation;$/;"	m	struct:mTabFrame
Negative	nall/string/eval/node.hpp	/^    Reference, Dereference, LogicalNot, BitwiseNot, Positive, Negative, PrefixIncrement, PrefixDecrement,$/;"	m	class:nall::Eval::Node::Type
Network	hiro/resource/resource.cpp	/^const unsigned char Network[408] = {$/;"	m	namespace:Icon::Device	file:
New	hiro/resource/resource.cpp	/^const unsigned char New[477] = {$/;"	m	namespace:Icon::Action	file:
Next	hiro/resource/resource.cpp	/^const unsigned char Next[771] = {$/;"	m	namespace:Icon::Media	file:
Node	higan/sfc/cartridge/cartridge.hpp	/^  auto loadBoard(string) -> Markup::Node;$/;"	m	class:Cartridge::Markup
Node	nall/beat/archive/node.hpp	/^struct Node {$/;"	s	namespace:nall::Beat::Archive
Node	nall/string/eval/node.hpp	/^  Node() : type(Type::Null) {}$/;"	f	struct:nall::Eval::Node
Node	nall/string/eval/node.hpp	/^  Node(Type type) : type(type) {}$/;"	f	struct:nall::Eval::Node
Node	nall/string/eval/node.hpp	/^struct Node {$/;"	s	namespace:nall::Eval
Node	nall/string/markup/bml.hpp	/^  friend auto unserialize(const string&, string_view) -> Markup::Node;$/;"	m	class:nall::BML::ManagedNode::Markup
Node	nall/string/markup/node.hpp	/^  Node() : shared(new ManagedNode) {}$/;"	f	struct:nall::Markup::Node
Node	nall/string/markup/node.hpp	/^  Node(const SharedNode& source) : shared(source ? source : new ManagedNode) {}$/;"	f	struct:nall::Markup::Node
Node	nall/string/markup/node.hpp	/^  Node(const string& name) : shared(new ManagedNode(name)) {}$/;"	f	struct:nall::Markup::Node
Node	nall/string/markup/node.hpp	/^  Node(const string& name, const string& value) : shared(new ManagedNode(name, value)) {}$/;"	f	struct:nall::Markup::Node
Node	nall/string/markup/node.hpp	/^  inline auto _create(const string& path) -> Node;$/;"	m	struct:nall::Markup::ManagedNode
Node	nall/string/markup/node.hpp	/^  inline auto _lookup(const string& path) const -> Node;$/;"	m	struct:nall::Markup::ManagedNode
Node	nall/string/markup/node.hpp	/^struct Node {$/;"	s	namespace:nall::Markup
Noise	higan/fc/apu/apu.hpp	/^  struct Noise {$/;"	s	struct:APU
Noise	higan/gb/apu/apu.hpp	/^  struct Noise {$/;"	s	struct:APU
Noise	higan/gba/apu/apu.hpp	/^  struct Noise {$/;"	s	struct:APU
Noise	higan/md/psg/psg.hpp	/^  struct Noise {$/;"	s	struct:PSG
Noise	higan/ms/psg/psg.hpp	/^  struct Noise {$/;"	s	struct:PSG
None	higan/emulator/random.hpp	/^  enum class Entropy : uint { None, Low, High };$/;"	m	class:Emulator::Random::Entropy
None	higan/target-bsnes/input/input.hpp	/^  enum class Qualifier : uint { None, Lo, Hi, Rumble };$/;"	m	class:InputMapping::Qualifier
None	higan/target-higan/input/input.hpp	/^  enum class Qualifier : uint { None, Lo, Hi, Rumble };$/;"	m	class:InputMapping::Qualifier
None	hiro/core/core.hpp	/^enum class Sort : uint { None, Ascending, Descending };$/;"	m	class:hiro::Sort
None	nall/http/request.hpp	/^  enum class RequestType : uint { None, Head, Get, Post };$/;"	m	class:nall::HTTP::Request::RequestType
None	nall/xorg/guard.hpp	41;"	d
NotDefaultDevice	ruby/audio/xaudio2.hpp	/^  NotDefaultDevice            = 0x0,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
NotEqual	nall/string/eval/node.hpp	/^    Equal, NotEqual, LessThanEqual, GreaterThanEqual, LessThan, GreaterThan,$/;"	m	class:nall::Eval::Node::Type
Notch	nall/dsp/iir/biquad.hpp	/^    Notch,$/;"	m	class:nall::DSP::IIR::Biquad::Type
Null	nall/hid.hpp	/^  Null() : Device("Null") {}$/;"	f	struct:nall::HID::Null
Null	nall/hid.hpp	/^struct Null : Device {$/;"	s	namespace:nall::HID
Null	nall/string/eval/node.hpp	/^    Null,$/;"	m	class:nall::Eval::Node::Type
OAM	higan/fc/ppu/ppu.hpp	/^  struct OAM {$/;"	s	struct:PPU
OAM	higan/sfc/ppu/object.hpp	/^struct OAM {$/;"	s
OBC1	higan/sfc/cartridge/cartridge.hpp	/^    boolean OBC1;$/;"	m	struct:Cartridge::Has
OBC1	higan/sfc/coprocessor/obc1/obc1.hpp	/^struct OBC1 {$/;"	s
OBJ1	higan/sfc/ppu-fast/ppu.hpp	/^  struct Source { enum : uint { BG1, BG2, BG3, BG4, OBJ1, OBJ2, COL }; };$/;"	m	struct:PPU::Source	typeref:enum:PPU::Source::
OBJ2	higan/sfc/ppu-fast/ppu.hpp	/^  struct Source { enum : uint { BG1, BG2, BG3, BG4, OBJ1, OBJ2, COL }; };$/;"	m	struct:PPU::Source	typeref:enum:PPU::Source::
ODBC	nall/database/odbc.hpp	/^  ODBC() {$/;"	f	struct:nall::Database::ODBC
ODBC	nall/database/odbc.hpp	/^  ODBC(const string& database, const string& username, const string& password) : ODBC() {$/;"	f	struct:nall::Database::ODBC
ODBC	nall/database/odbc.hpp	/^struct ODBC {$/;"	s	namespace:nall::Database
OL	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    OL(SDD1::Decompressor& self) : self(self) {}$/;"	f	struct:Decompressor::OL
OL	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  struct OL {  \/\/output logic$/;"	s	struct:Decompressor
OPTYPE_ADDR	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_ADDR,      \/\/addr$/;"	e	enum:uint	file:
OPTYPE_ADDRX	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_ADDRX,     \/\/addr,x$/;"	e	enum:uint	file:
OPTYPE_ADDRY	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_ADDRY,     \/\/addr,y$/;"	e	enum:uint	file:
OPTYPE_ADDR_PC	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_ADDR_PC,   \/\/pbr:addr$/;"	e	enum:uint	file:
OPTYPE_DP	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_DP = 0,    \/\/dp$/;"	e	enum:uint	file:
OPTYPE_DPX	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_DPX,       \/\/dp,x$/;"	e	enum:uint	file:
OPTYPE_DPY	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_DPY,       \/\/dp,y$/;"	e	enum:uint	file:
OPTYPE_IADDRX	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_IADDRX,    \/\/(addr,x)$/;"	e	enum:uint	file:
OPTYPE_IADDR_PC	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_IADDR_PC,  \/\/pbr:(addr)$/;"	e	enum:uint	file:
OPTYPE_IDP	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_IDP,       \/\/(dp)$/;"	e	enum:uint	file:
OPTYPE_IDPX	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_IDPX,      \/\/(dp,x)$/;"	e	enum:uint	file:
OPTYPE_IDPY	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_IDPY,      \/\/(dp),y$/;"	e	enum:uint	file:
OPTYPE_ILADDR	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_ILADDR,    \/\/[addr]$/;"	e	enum:uint	file:
OPTYPE_ILDP	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_ILDP,      \/\/[dp]$/;"	e	enum:uint	file:
OPTYPE_ILDPY	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_ILDPY,     \/\/[dp],y$/;"	e	enum:uint	file:
OPTYPE_ISRY	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_ISRY,      \/\/(sr,s),y$/;"	e	enum:uint	file:
OPTYPE_LONG	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_LONG,      \/\/long$/;"	e	enum:uint	file:
OPTYPE_LONGX	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_LONGX,     \/\/long, x$/;"	e	enum:uint	file:
OPTYPE_RELB	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_RELB,      \/\/relb$/;"	e	enum:uint	file:
OPTYPE_RELW	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_RELW,      \/\/relw$/;"	e	enum:uint	file:
OPTYPE_SR	higan/processor/wdc65816/disassembler.cpp	/^  OPTYPE_SR,        \/\/sr,s$/;"	e	enum:uint	file:
OUT	higan/gba/ppu/ppu.hpp	/^  enum : uint { IN0 = 0, IN1 = 1, IN2 = 2, OUT = 3 };$/;"	m	struct:PPU	typeref:enum:PPU::
OUT	nall/platform.hpp	64;"	d
OUTX	higan/sfc/dsp/dsp.hpp	/^    ENVX   = 0x08, OUTX   = 0x09,$/;"	e	enum:uint
Object	higan/gba/ppu/ppu.hpp	/^  struct Object {$/;"	s	struct:PPU
Object	higan/md/vdp/vdp.hpp	/^  struct Object {$/;"	s	struct:VDP
Object	higan/ms/vdp/vdp.hpp	/^    struct Object {$/;"	s	struct:VDP::Sprite
Object	higan/pce/vdc/vdc.hpp	/^    struct Object {$/;"	s	struct:VDC::Sprite
Object	higan/sfc/ppu/object.hpp	/^  struct Object {$/;"	s	struct:OAM
Object	higan/sfc/ppu/object.hpp	/^struct Object {$/;"	s
Object	hiro/core/group.hpp	/^  auto object(uint offset) const -> Object;$/;"	m	struct:mGroup
Object	hiro/core/shared.hpp	/^struct Object : sObject {$/;"	s
ObjectParam	higan/gba/ppu/ppu.hpp	/^  struct ObjectParam {$/;"	s	struct:PPU
Objects	higan/gba/ppu/ppu.hpp	/^  struct Objects {$/;"	s	struct:PPU
Octave	higan/md/ym2612/ym2612.hpp	/^      struct Octave {$/;"	s	struct:Channel::Operator
Ok	hiro/core/core.hpp	/^  enum class Buttons : uint { Ok, OkCancel, YesNo, YesNoCancel };$/;"	m	class:hiro::MessageWindow::Buttons
Ok	hiro/core/core.hpp	/^  enum class Response : uint { Ok, Cancel, Yes, No };$/;"	m	class:hiro::MessageWindow::Response
OkCancel	hiro/core/core.hpp	/^  enum class Buttons : uint { Ok, OkCancel, YesNo, YesNoCancel };$/;"	m	class:hiro::MessageWindow::Buttons
OnBufferEnd	ruby/audio/xaudio2.cpp	/^  STDMETHODIMP_(void) OnBufferEnd(void* pBufferContext) {$/;"	f	struct:AudioXAudio2	file:
OnBufferStart	ruby/audio/xaudio2.cpp	/^  STDMETHODIMP_(void) OnBufferStart(void* pBufferContext){}$/;"	f	struct:AudioXAudio2	file:
OnLoopEnd	ruby/audio/xaudio2.cpp	/^  STDMETHODIMP_(void) OnLoopEnd(void* pBufferContext){}$/;"	f	struct:AudioXAudio2	file:
OnStreamEnd	ruby/audio/xaudio2.cpp	/^  STDMETHODIMP_(void) OnStreamEnd() {}$/;"	f	struct:AudioXAudio2	file:
OnVoiceError	ruby/audio/xaudio2.cpp	/^  STDMETHODIMP_(void) OnVoiceError(void* pBufferContext, HRESULT Error) {}$/;"	f	struct:AudioXAudio2	file:
OnVoiceProcessingPassEnd	ruby/audio/xaudio2.cpp	/^  STDMETHODIMP_(void) OnVoiceProcessingPassEnd() {}$/;"	f	struct:AudioXAudio2	file:
OnVoiceProcessingPassStart	ruby/audio/xaudio2.cpp	/^  STDMETHODIMP_(void) OnVoiceProcessingPassStart(UINT32 BytesRequired) {}$/;"	f	struct:AudioXAudio2	file:
One	higan/ms/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, One, Two,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
One	higan/pce/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, Two, One, Select, Run,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
OneOverQ	ruby/audio/xaudio2.hpp	/^  float OneOverQ;$/;"	m	struct:XAUDIO2_FILTER_PARAMETERS
OnePole	nall/dsp/iir/one-pole.hpp	/^struct OnePole {$/;"	s	namespace:nall::DSP::IIR
Open	hiro/resource/resource.cpp	/^const unsigned char Open[672] = {$/;"	m	namespace:Icon::Action	file:
OpenGL	ruby/video/opengl/opengl.hpp	/^struct OpenGL : OpenGLProgram {$/;"	s
OpenGLBind	ruby/video/opengl/bind.hpp	/^static bool OpenGLBind() {$/;"	f
OpenGLFragmentShader	ruby/video/opengl/shaders.hpp	/^static string OpenGLFragmentShader = R"($/;"	v
OpenGLGeometryShader	ruby/video/opengl/shaders.hpp	/^static string OpenGLGeometryShader = R"($/;"	v
OpenGLOutputVertexShader	ruby/video/opengl/shaders.hpp	/^static string OpenGLOutputVertexShader = R"($/;"	v
OpenGLProgram	ruby/video/opengl/opengl.hpp	/^struct OpenGLProgram : OpenGLSurface {$/;"	s
OpenGLSurface	ruby/video/opengl/opengl.hpp	/^struct OpenGLSurface : OpenGLTexture {$/;"	s
OpenGLTexture	ruby/video/opengl/opengl.hpp	/^struct OpenGLTexture {$/;"	s
OpenGLVertexShader	ruby/video/opengl/shaders.hpp	/^static string OpenGLVertexShader = R"($/;"	v
Operator	higan/md/ym2612/ym2612.hpp	/^      Operator(Channel& channel) : channel(channel) {}$/;"	f	struct:Channel::Operator
Operator	higan/md/ym2612/ym2612.hpp	/^    struct Operator {$/;"	s	struct:Channel
Optical	hiro/resource/resource.cpp	/^const unsigned char Optical[720] = {$/;"	m	namespace:Icon::Device	file:
Optical	hiro/resource/resource.cpp	/^const unsigned char Optical[931] = {$/;"	m	namespace:Icon::Media	file:
Order	higan/audio/audio.hpp	/^  enum class Order : uint { First, Second };$/;"	c	struct:Emulator::Filter
Orientation	hiro/core/core.hpp	/^  auto flow() const -> Orientation;$/;"	m	struct:hiro::mIconView
Orientation	hiro/core/core.hpp	/^  auto orientation() const -> Orientation;$/;"	m	struct:hiro::mButton
Orientation	hiro/core/core.hpp	/^  auto orientation() const -> Orientation;$/;"	m	struct:hiro::mCheckButton
Orientation	hiro/core/core.hpp	/^  auto orientation() const -> Orientation;$/;"	m	struct:hiro::mIconView
Orientation	hiro/core/core.hpp	/^  auto orientation() const -> Orientation;$/;"	m	struct:hiro::mRadioButton
Orientation	hiro/core/core.hpp	/^enum class Orientation : uint { Horizontal, Vertical };$/;"	c	namespace:hiro
Oscillator	genius/genius.hpp	/^    Oscillator,$/;"	m	class:Component::Type
Oscillator	genius/genius.hpp	/^struct Oscillator {$/;"	s
Oscillator	higan/emulator/game.hpp	/^  struct Oscillator {$/;"	s	struct:Emulator::Game
Oscillator	higan/emulator/game.hpp	/^Game::Oscillator::Oscillator(Markup::Node node) {$/;"	f	class:Emulator::Game::Oscillator
Oscillator	icarus/heuristics/heuristics.hpp	/^struct Oscillator {$/;"	s	namespace:Heuristics
OscillatorWindow	genius/genius.cpp	/^OscillatorWindow::OscillatorWindow() {$/;"	f	class:OscillatorWindow
OscillatorWindow	genius/genius.hpp	/^struct OscillatorWindow : Window {$/;"	s
Other	nall/beat/archive/node.hpp	/^    struct Other {$/;"	s	struct:nall::Beat::Archive::Node::Permission
Output	higan/ms/vdp/vdp.hpp	/^    struct Output {$/;"	s	struct:VDP::Background
Output	higan/ms/vdp/vdp.hpp	/^    struct Output {$/;"	s	struct:VDP::Sprite
Output	higan/sfc/ppu/object.hpp	/^  struct Output {$/;"	s	struct:Object
Output	higan/sfc/ppu/window.hpp	/^  struct Output {$/;"	s	struct:Window
Output	higan/ws/apu/apu.hpp	/^    struct Output {$/;"	s	struct:APU::Channel1
Output	higan/ws/apu/apu.hpp	/^    struct Output {$/;"	s	struct:APU::Channel2
Output	higan/ws/apu/apu.hpp	/^    struct Output {$/;"	s	struct:APU::Channel3
Output	higan/ws/apu/apu.hpp	/^    struct Output {$/;"	s	struct:APU::Channel4
Output	higan/ws/apu/apu.hpp	/^    struct Output {$/;"	s	struct:APU::Channel5
OutputChannels	ruby/audio/xaudio2.hpp	/^  UINT32 OutputChannels;$/;"	m	struct:XAUDIO2_EFFECT_DESCRIPTOR
OutputCount	ruby/audio/xaudio2.hpp	/^  UINT32 OutputCount;$/;"	m	struct:XAUDIO2_VOICE_SENDS
OutputFormat	ruby/audio/xaudio2.hpp	/^  WAVEFORMATEXTENSIBLE OutputFormat;$/;"	m	struct:XAUDIO2_DEVICE_DETAILS
OutputShiftRegister	higan/gb/cartridge/mbc7/mbc7.hpp	/^    struct OutputShiftRegister : ShiftRegister {$/;"	s	struct:MBC7::EEPROM
Overflow	higan/pce/vdc/vdc.hpp	/^      Overflow,$/;"	m	class:VDC::IRQ::Line
Overflow	higan/processor/m68k/m68k.hpp	/^    Overflow        =  7,$/;"	m	struct:Vector	typeref:enum:Vector::
Overflow	higan/processor/m68k/m68k.hpp	/^    Overflow,$/;"	m	struct:Processor::Exception	typeref:enum:Processor::Exception::
Owner	nall/beat/archive/node.hpp	/^    struct Owner {$/;"	s	struct:nall::Beat::Archive::Node::Permission
P	higan/processor/huc6280/huc6280.cpp	13;"	d	file:
P	higan/processor/huc6280/huc6280.cpp	40;"	d	file:
P	higan/processor/mos6502/mos6502.cpp	10;"	d	file:
P	higan/processor/mos6502/mos6502.cpp	34;"	d	file:
P	higan/processor/spc700/spc700.cpp	12;"	d	file:
P	higan/processor/spc700/spc700.cpp	49;"	d	file:
P	higan/processor/wdc65816/wdc65816.cpp	14;"	d	file:
P	higan/processor/wdc65816/wdc65816.cpp	73;"	d	file:
P	nall/elliptic-curve/curve25519.hpp	/^  const BarrettReduction<256> P = BarrettReduction<256>{EllipticCurve::P};$/;"	m	struct:nall::EllipticCurve::Curve25519
P	nall/elliptic-curve/modulo25519-optimized.hpp	/^static const uint256_t P = (1_u256 << 255) - 19;$/;"	m	namespace:nall::EllipticCurve
P	nall/elliptic-curve/modulo25519-reference.hpp	/^static const uint256_t P = (1_u256 << 255) - 19;$/;"	m	namespace:nall::EllipticCurve
PAL	higan/emulator/emulator.hpp	/^      static constexpr double PAL  = 283.75 * 15'625.0 + 25.0;$/;"	m	namespace:Emulator::Constants::Colorburst
PAL	higan/md/system/system.hpp	/^    PAL,$/;"	m	class:System::Region
PATH_MAX	nall/windows/guard.hpp	14;"	d
PATH_MAX	nall/windows/guard.hpp	23;"	d
PBS_DEFAULTED	hiro/windows/header.hpp	55;"	d
PBS_DISABLED	hiro/windows/header.hpp	51;"	d
PBS_HOT	hiro/windows/header.hpp	43;"	d
PBS_NORMAL	hiro/windows/header.hpp	39;"	d
PBS_PRESSED	hiro/windows/header.hpp	47;"	d
PBUTTON_IMAGELIST	hiro/windows/header.hpp	/^  } BUTTON_IMAGELIST, *PBUTTON_IMAGELIST;$/;"	t	typeref:struct:__anon1
PC	higan/processor/huc6280/huc6280.cpp	10;"	d	file:
PC	higan/processor/huc6280/huc6280.cpp	37;"	d	file:
PC	higan/processor/lr35902/registers.cpp	6;"	d	file:
PC	higan/processor/mos6502/mos6502.cpp	11;"	d	file:
PC	higan/processor/mos6502/mos6502.cpp	35;"	d	file:
PC	higan/processor/spc700/spc700.cpp	43;"	d	file:
PC	higan/processor/spc700/spc700.cpp	6;"	d	file:
PC	higan/processor/wdc65816/wdc65816.cpp	65;"	d	file:
PC	higan/processor/wdc65816/wdc65816.cpp	6;"	d	file:
PC	higan/processor/z80/disassembler.cpp	1070;"	d	file:
PC	higan/processor/z80/disassembler.cpp	82;"	d	file:
PC	higan/processor/z80/registers.cpp	34;"	d	file:
PCEngine	higan/pce/cartridge/cartridge.cpp	/^namespace PCEngine {$/;"	n	file:
PCEngine	higan/pce/controller/controller.cpp	/^namespace PCEngine {$/;"	n	file:
PCEngine	higan/pce/cpu/cpu.cpp	/^namespace PCEngine {$/;"	n	file:
PCEngine	higan/pce/interface/interface.cpp	/^namespace PCEngine {$/;"	n	file:
PCEngine	higan/pce/interface/interface.hpp	/^    PCEngine,$/;"	m	struct:PCEngine::ID	typeref:enum:PCEngine::ID::
PCEngine	higan/pce/interface/interface.hpp	/^namespace PCEngine {$/;"	n
PCEngine	higan/pce/pce.hpp	/^namespace PCEngine {$/;"	n
PCEngine	higan/pce/psg/psg.cpp	/^namespace PCEngine {$/;"	n	file:
PCEngine	higan/pce/system/system.cpp	/^namespace PCEngine {$/;"	n	file:
PCEngine	higan/pce/system/system.hpp	/^  enum class Model : uint { PCEngine, SuperGrafx };$/;"	m	class:System::Model
PCEngine	higan/pce/vce/vce.cpp	/^namespace PCEngine {$/;"	n	file:
PCEngine	higan/pce/vdc/vdc.cpp	/^namespace PCEngine {$/;"	n	file:
PCEngine	higan/pce/vpc/vpc.cpp	/^namespace PCEngine {$/;"	n	file:
PCEngine	icarus/core/core.hpp	/^  Markup::Node PCEngine;$/;"	m	namespace:Database
PCEngine	icarus/heuristics/pc-engine.cpp	/^PCEngine::PCEngine(vector<uint8_t>& data, string location) : data(data), location(location) {$/;"	f	class:Heuristics::PCEngine
PCEngine	icarus/heuristics/pc-engine.cpp	/^struct PCEngine {$/;"	s	namespace:Heuristics	file:
PCG	nall/random.hpp	/^struct PCG : RNG<PCG> {$/;"	s	namespace:nall::PRNG
PCH	higan/processor/huc6280/huc6280.cpp	11;"	d	file:
PCH	higan/processor/huc6280/huc6280.cpp	38;"	d	file:
PCH	higan/processor/mos6502/mos6502.cpp	12;"	d	file:
PCH	higan/processor/mos6502/mos6502.cpp	36;"	d	file:
PCL	higan/processor/huc6280/huc6280.cpp	12;"	d	file:
PCL	higan/processor/huc6280/huc6280.cpp	39;"	d	file:
PCL	higan/processor/mos6502/mos6502.cpp	13;"	d	file:
PCL	higan/processor/mos6502/mos6502.cpp	37;"	d	file:
PEM	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    PEM(SDD1::Decompressor& self) : self(self) {}$/;"	f	struct:Decompressor::PEM
PEM	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  struct PEM {  \/\/probability estimation module$/;"	s	struct:Decompressor
PF	higan/processor/spc700/spc700.cpp	19;"	d	file:
PF	higan/processor/spc700/spc700.cpp	56;"	d	file:
PF	higan/processor/z80/registers.cpp	45;"	d	file:
PITCHH	higan/sfc/dsp/dsp.hpp	/^    PITCHL = 0x02, PITCHH = 0x03,$/;"	e	enum:uint
PITCHL	higan/sfc/dsp/dsp.hpp	/^    PITCHL = 0x02, PITCHH = 0x03,$/;"	e	enum:uint
PLATFORM_WINDOWS	nall/intrinsics.hpp	69;"	d
PLTE	nall/decode/png.hpp	/^    PLTE = 0x504c5445,$/;"	m	class:nall::Decode::PNG::FourCC
PMON	higan/sfc/dsp/dsp.hpp	/^    EFB   = 0x0d, PMON  = 0x2d,$/;"	m	struct:DSP	typeref:enum:DSP::
PNG	nall/decode/png.hpp	/^PNG::PNG() {$/;"	f	class:nall::Decode::PNG
PNG	nall/decode/png.hpp	/^struct PNG {$/;"	s	namespace:nall::Decode
PNROM	higan/fc/cartridge/board/nes-pxrom.cpp	/^    PNROM,$/;"	m	struct:NES_PxROM	typeref:enum:NES_PxROM::	file:
POR	higan/processor/gsu/registers.hpp	/^struct POR {$/;"	s
PPC32	nall/intrinsics.hpp	/^  enum class Architecture : uint { x86, amd64, ARM, PPC32, PPC64, Unknown };$/;"	m	class:nall::Architecture
PPC64	nall/intrinsics.hpp	/^  enum class Architecture : uint { x86, amd64, ARM, PPC32, PPC64, Unknown };$/;"	m	class:nall::Architecture
PPU	higan/fc/ppu/ppu.hpp	/^struct PPU : Thread {$/;"	s
PPU	higan/gb/ppu/ppu.hpp	/^struct PPU : Thread, MMIO {$/;"	s
PPU	higan/gba/ppu/ppu.cpp	/^PPU::PPU() {$/;"	f	class:GameBoyAdvance::PPU
PPU	higan/gba/ppu/ppu.hpp	/^struct PPU : Thread, IO {$/;"	s
PPU	higan/sfc/ppu-fast/ppu.cpp	/^PPU::PPU() {$/;"	f	class:SuperFamicom::PPU
PPU	higan/sfc/ppu-fast/ppu.cpp	6;"	d	file:
PPU	higan/sfc/ppu-fast/ppu.hpp	/^struct PPU : Thread, PPUcounter {$/;"	s
PPU	higan/sfc/ppu-fast/ppu.hpp	8;"	d
PPU	higan/sfc/ppu/ppu.cpp	/^PPU::PPU() :$/;"	f	class:SuperFamicom::PPU
PPU	higan/sfc/ppu/ppu.hpp	/^struct PPU : Thread, PPUcounter {$/;"	s
PPU	higan/ws/ppu/ppu.hpp	/^struct PPU : Thread, IO {$/;"	s
PPU1	higan/sfc/interface/configuration.hpp	/^    struct PPU1 {$/;"	s	struct:Configuration::System
PPU2	higan/sfc/interface/configuration.hpp	/^    struct PPU2 {$/;"	s	struct:Configuration::System
PPUFast	higan/sfc/interface/configuration.hpp	/^    struct PPUFast {$/;"	s	struct:Configuration::Hacks
PPUcounter	higan/sfc/ppu/counter/counter.hpp	/^struct PPUcounter {$/;"	s
PRNG	nall/random.hpp	/^namespace PRNG {$/;"	n	namespace:nall
PSG	higan/md/psg/psg.hpp	/^struct PSG : Thread {$/;"	s
PSG	higan/ms/psg/psg.hpp	/^struct PSG : Thread {$/;"	s
PSG	higan/pce/psg/psg.hpp	/^struct PSG : Thread {$/;"	s
PSR	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  inline auto cpsr() -> PSR&;$/;"	m	namespace:Processor
PSR	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  inline auto spsr() -> PSR&;$/;"	m	namespace:Processor
PSR	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  struct PSR {$/;"	s	namespace:Processor
Packet	higan/sfc/coprocessor/icd/icd.hpp	/^  struct Packet {$/;"	s	struct:ICD
PacketCount	ruby/audio/xaudio2.hpp	/^  UINT32 PacketCount;$/;"	m	struct:XAUDIO2_BUFFER_WMA
Page	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    Page,$/;"	m	struct:BSMemory::Mode	typeref:enum:BSMemory::Mode::
Page	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  struct Page {$/;"	s	struct:BSMemory
Pair	higan/processor/lr35902/lr35902.hpp	/^      Pair() : word(0) {}$/;"	f	union:Processor::LR35902::Registers::Pair
Pair	higan/processor/lr35902/lr35902.hpp	/^    union Pair {$/;"	u	struct:Processor::LR35902::Registers
Pair	higan/processor/spc700/spc700.hpp	/^      Pair() : w(0) {}$/;"	f	union:Processor::SPC700::Registers::Pair
Pair	higan/processor/spc700/spc700.hpp	/^    union Pair {$/;"	u	struct:Processor::SPC700::Registers
Pair	higan/processor/z80/z80.hpp	/^      Pair() : word(0) {}$/;"	f	union:Processor::Z80::Registers::Pair
Pair	higan/processor/z80/z80.hpp	/^    union Pair {$/;"	u	struct:Processor::Z80::Registers
Pair	nall/arithmetic/natural.hpp	/^  explicit constexpr Pair(const Pair& source) : hi(source.hi), lo(source.lo) {}$/;"	f	struct:nall::Pair
Pair	nall/arithmetic/natural.hpp	/^  friend auto mul(const Pair&, const Pair&) -> Pair;$/;"	m	struct:nall::Pair
Pair	nall/arithmetic/natural.hpp	/^  friend auto square(const Pair&) -> Pair;$/;"	m	struct:nall::Pair
Pair	nall/arithmetic/natural.hpp	/^  template<typename Hi, typename Lo> constexpr Pair(const Hi& hi, const Lo& lo) : hi(hi), lo(lo) {}$/;"	f	struct:nall::Pair
Pair	nall/arithmetic/natural.hpp	/^  template<typename T> Pair(const T& source) { _set(*this, source); }$/;"	f	struct:nall::Pair
Pair	nall/arithmetic/natural.hpp	/^  template<typename T> friend auto shl(const Pair&, const T&) -> Pair;$/;"	m	struct:nall::Pair
Pair	nall/arithmetic/natural.hpp	/^  template<typename T> friend auto shr(const Pair&, const T&) -> Pair;$/;"	m	struct:nall::Pair
Pair	nall/arithmetic/natural.hpp	/^struct Pair {$/;"	s	namespace:nall
Pair	nall/arithmetic/natural.hpp	4;"	d
PairBits	nall/arithmetic.hpp	25;"	d
PairBits	nall/arithmetic.hpp	29;"	d
PairBits	nall/arithmetic.hpp	34;"	d
PairBits	nall/arithmetic.hpp	38;"	d
PairBits	nall/arithmetic.hpp	42;"	d
PairBits	nall/arithmetic.hpp	46;"	d
PairBits	nall/arithmetic.hpp	50;"	d
PairBits	nall/arithmetic.hpp	54;"	d
PairBits	nall/arithmetic.hpp	58;"	d
PairBits	nall/arithmetic.hpp	62;"	d
PairBits	nall/arithmetic.hpp	66;"	d
PairBits	nall/arithmetic.hpp	70;"	d
PairBits	nall/arithmetic.hpp	74;"	d
PairBits	nall/arithmetic.hpp	78;"	d
Palette	higan/ws/ppu/ppu.hpp	/^    struct Palette {$/;"	s	struct:PPU::Registers
PangoFontDescription	hiro/gtk/font.hpp	/^  static auto create(const Font& font) -> PangoFontDescription*;$/;"	m	struct:hiro::pFont
Paste	hiro/resource/resource.cpp	/^const unsigned char Paste[561] = {$/;"	m	namespace:Icon::Edit	file:
Path	higan/target-bsnes/settings/settings.hpp	/^  struct Path {$/;"	s	struct:Settings
Path	nall/path.hpp	/^namespace nall { namespace Path {$/;"	n	namespace:nall
PathSettings	higan/target-bsnes/settings/settings.hpp	/^struct PathSettings : TabFrameItem {$/;"	s
Pause	higan/sfc/controller/super-scope/super-scope.hpp	/^    X, Y, Trigger, Cursor, Turbo, Pause,$/;"	m	struct:SuperScope	typeref:enum:SuperScope::
Pause	hiro/resource/resource.cpp	/^const unsigned char Pause[464] = {$/;"	m	namespace:Icon::Media	file:
Peak	nall/dsp/iir/biquad.hpp	/^    Peak,$/;"	m	class:nall::DSP::IIR::Biquad::Type
Permission	nall/beat/archive/node.hpp	/^  struct Permission {$/;"	s	struct:nall::Beat::Archive::Node
Phase	higan/md/ym2612/ym2612.hpp	/^      struct Phase {$/;"	s	struct:Channel::Operator
Pi	nall/platform.hpp	/^  static const long double Pi = 3.14159265358979323846;$/;"	m	namespace:Math
Pin	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  struct Pin {$/;"	s	struct:BSMemory
Pinout	higan/fc/cartridge/board/konami-vrc2.cpp	/^    struct Pinout {$/;"	s	struct:KonamiVRC2::Settings	file:
Pinout	higan/fc/cartridge/board/konami-vrc4.cpp	/^    struct Pinout {$/;"	s	struct:KonamiVRC4::Settings	file:
Pipeline	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  struct Pipeline {$/;"	s
Pitch	higan/md/ym2612/ym2612.hpp	/^      struct Pitch {$/;"	s	struct:Channel::Operator
Pixel	higan/gb/ppu/ppu.hpp	/^  struct Pixel {$/;"	s	struct:PPU
Pixel	higan/gba/ppu/ppu.hpp	/^  struct Pixel {$/;"	s	struct:PPU
Pixel	higan/md/vdp/vdp.hpp	/^  struct Pixel {$/;"	s	struct:VDP
Pixel	higan/sfc/ppu/object.hpp	/^    struct Pixel {$/;"	s	struct:Object::Output
Pixel	higan/sfc/ppu/window.hpp	/^    struct Pixel {$/;"	s	struct:Window::Output
Pixel	higan/ws/ppu/ppu.hpp	/^  struct Pixel {$/;"	s	struct:PPU
PixelCache	higan/processor/gsu/registers.hpp	/^struct PixelCache {$/;"	s
Place	hiro/resource/resource.cpp	/^namespace Place {$/;"	n	namespace:Icon	file:
Place	hiro/resource/resource.hpp	/^namespace Place {$/;"	n	namespace:Icon
Plain	nall/smtp.hpp	/^  enum class Format : uint { Plain, HTML };$/;"	m	class:nall::SMTP::Format
PlaneA	higan/md/vdp/vdp.hpp	/^    enum class ID : uint { PlaneA, Window, PlaneB } id;$/;"	m	class:VDP::Background::ID
Platform	higan/emulator/platform.hpp	/^struct Platform {$/;"	s	namespace:Emulator
Platform	nall/intrinsics.hpp	/^  enum class Platform : uint { Windows, MacOS, Linux, BSD, Unknown };$/;"	c	namespace:nall
Platform	nall/intrinsics.hpp	/^  static inline constexpr auto platform() -> Platform;$/;"	m	namespace:nall
Play	hiro/resource/resource.cpp	/^const unsigned char Play[660] = {$/;"	m	namespace:Icon::Media	file:
PlayBegin	ruby/audio/xaudio2.hpp	/^  UINT32 PlayBegin;$/;"	m	struct:XAUDIO2_BUFFER
PlayLength	ruby/audio/xaudio2.hpp	/^  UINT32 PlayLength;$/;"	m	struct:XAUDIO2_BUFFER
Player	higan/gba/player/player.hpp	/^struct Player : Thread {$/;"	s
Player	higan/sfc/controller/justifier/justifier.hpp	/^  struct Player {$/;"	s
PocketChallengeV2	higan/ws/interface/interface.hpp	/^    PocketChallengeV2,$/;"	m	struct:WonderSwan::ID	typeref:enum:WonderSwan::ID::
PocketChallengeV2	icarus/core/core.hpp	/^  Markup::Node PocketChallengeV2;$/;"	m	namespace:Database
Poly1305	nall/mac/poly1305.hpp	/^struct Poly1305 {$/;"	s	namespace:nall::MAC
PopupMenu	hiro/core/shared.hpp	/^struct PopupMenu : sPopupMenu {$/;"	s
Port	higan/emulator/interface.hpp	/^  struct Port {$/;"	s	namespace:Emulator
Port	higan/fc/interface/interface.hpp	/^  struct Port { enum : uint {$/;"	s	namespace:Famicom
Port	higan/gb/interface/interface.hpp	/^  struct Port { enum : uint {$/;"	s	namespace:GameBoy
Port	higan/gba/interface/interface.hpp	/^  struct Port { enum : uint {$/;"	s	namespace:GameBoyAdvance
Port	higan/md/interface/interface.hpp	/^  struct Port { enum : uint {$/;"	s	namespace:MegaDrive
Port	higan/ms/interface/interface.hpp	/^  struct Port { enum : uint {$/;"	s	namespace:MasterSystem
Port	higan/pce/interface/interface.hpp	/^  struct Port { enum : uint {$/;"	s	namespace:PCEngine
Port	higan/sfc/interface/interface.hpp	/^  struct Port { enum : uint {$/;"	s	namespace:SuperFamicom
Port	higan/ws/interface/interface.hpp	/^  struct Port { enum : uint {$/;"	s	namespace:WonderSwan
Position	hiro/cocoa/monitor.hpp	/^  static auto dpi(uint monitor) -> Position;$/;"	m	struct:hiro::pMonitor
Position	hiro/cocoa/mouse.hpp	/^  static auto position() -> Position;$/;"	m	struct:hiro::pMouse
Position	hiro/core/core.hpp	/^  Position(X x, Y y) : Position((float)x, (float)y) {}$/;"	f	struct:hiro::Position
Position	hiro/core/core.hpp	/^  auto position() const -> Position;$/;"	m	struct:hiro::Geometry
Position	hiro/core/core.hpp	/^  static auto position() -> Position;$/;"	m	struct:hiro::Mouse
Position	hiro/core/core.hpp	/^struct Position {$/;"	s	namespace:hiro
Position	hiro/core/monitor.hpp	/^  static auto dpi(maybe<uint> monitor = nothing) -> Position;$/;"	m	struct:Monitor
Position	hiro/core/position.cpp	/^Position::Position() {$/;"	f	class:Position
Position	hiro/core/position.cpp	/^Position::Position(float x, float y) {$/;"	f	class:Position
Position	hiro/gtk/monitor.hpp	/^  static auto dpi(uint monitor) -> Position;$/;"	m	struct:hiro::pMonitor
Position	hiro/gtk/mouse.hpp	/^  static auto position() -> Position;$/;"	m	struct:hiro::pMouse
Position	hiro/qt/monitor.hpp	/^  static auto dpi(uint monitor) -> Position;$/;"	m	struct:hiro::pMonitor
Position	hiro/qt/mouse.hpp	/^  static auto position() -> Position;$/;"	m	struct:hiro::pMouse
Position	hiro/windows/monitor.hpp	/^  static auto dpi(uint monitor) -> Position;$/;"	m	struct:hiro::pMonitor
Position	hiro/windows/mouse.hpp	/^  static auto position() -> Position;$/;"	m	struct:hiro::pMouse
Positive	nall/string/eval/node.hpp	/^    Reference, Dereference, LogicalNot, BitwiseNot, Positive, Negative, PrefixIncrement, PrefixDecrement,$/;"	m	class:nall::Eval::Node::Type
Posix	nall/intrinsics.hpp	/^  enum class API : uint { Windows, Posix, Unknown };$/;"	m	class:nall::API
Prefetch	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    Prefetch      = 1 << 2,  \/\/instruction fetch$/;"	m	struct:Processor::ARM7TDMI	typeref:enum:Processor::ARM7TDMI::
Prefix	higan/processor/z80/z80.hpp	/^  enum class Prefix : uint { hl, ix, iy } prefix = Prefix::hl;$/;"	c	struct:Processor::Z80
PrefixDecrement	nall/string/eval/node.hpp	/^    Reference, Dereference, LogicalNot, BitwiseNot, Positive, Negative, PrefixIncrement, PrefixDecrement,$/;"	m	class:nall::Eval::Node::Type
PrefixIncrement	nall/string/eval/node.hpp	/^    Reference, Dereference, LogicalNot, BitwiseNot, Positive, Negative, PrefixIncrement, PrefixDecrement,$/;"	m	class:nall::Eval::Node::Type
Presentation	higan/target-bsnes/presentation/presentation.hpp	/^struct Presentation : Window {$/;"	s
Presentation	higan/target-higan/presentation/presentation.cpp	/^Presentation::Presentation() {$/;"	f	class:Presentation
Presentation	higan/target-higan/presentation/presentation.hpp	/^struct Presentation : Window {$/;"	s
Printer	hiro/resource/resource.cpp	/^const unsigned char Printer[481] = {$/;"	m	namespace:Icon::Device	file:
Processor	higan/processor/arm7tdmi/arm7tdmi.cpp	/^namespace Processor {$/;"	n	file:
Processor	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  struct Processor {$/;"	s
Processor	higan/processor/arm7tdmi/arm7tdmi.hpp	/^namespace Processor {$/;"	n
Processor	higan/processor/gsu/gsu.cpp	/^namespace Processor {$/;"	n	file:
Processor	higan/processor/gsu/gsu.hpp	/^namespace Processor {$/;"	n
Processor	higan/processor/hg51b/hg51b.cpp	/^namespace Processor {$/;"	n	file:
Processor	higan/processor/hg51b/hg51b.hpp	/^namespace Processor {$/;"	n
Processor	higan/processor/huc6280/huc6280.cpp	/^namespace Processor {$/;"	n	file:
Processor	higan/processor/huc6280/huc6280.hpp	/^namespace Processor {$/;"	n
Processor	higan/processor/lr35902/lr35902.cpp	/^namespace Processor {$/;"	n	file:
Processor	higan/processor/lr35902/lr35902.hpp	/^namespace Processor {$/;"	n
Processor	higan/processor/m68k/m68k.cpp	/^namespace Processor {$/;"	n	file:
Processor	higan/processor/m68k/m68k.hpp	/^namespace Processor {$/;"	n
Processor	higan/processor/mos6502/mos6502.cpp	/^namespace Processor {$/;"	n	file:
Processor	higan/processor/mos6502/mos6502.hpp	/^namespace Processor {$/;"	n
Processor	higan/processor/spc700/spc700.cpp	/^namespace Processor {$/;"	n	file:
Processor	higan/processor/spc700/spc700.hpp	/^namespace Processor {$/;"	n
Processor	higan/processor/upd96050/upd96050.cpp	/^namespace Processor {$/;"	n	file:
Processor	higan/processor/upd96050/upd96050.hpp	/^namespace Processor {$/;"	n
Processor	higan/processor/v30mz/v30mz.cpp	/^namespace Processor {$/;"	n	file:
Processor	higan/processor/v30mz/v30mz.hpp	/^namespace Processor {$/;"	n
Processor	higan/processor/wdc65816/wdc65816.cpp	/^namespace Processor {$/;"	n	file:
Processor	higan/processor/wdc65816/wdc65816.hpp	/^namespace Processor {$/;"	n
Processor	higan/processor/z80/z80.cpp	/^namespace Processor {$/;"	n	file:
Processor	higan/processor/z80/z80.hpp	/^namespace Processor {$/;"	n
Processor1	ruby/audio/xaudio2.hpp	/^  Processor1  = 0x00000001,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor10	ruby/audio/xaudio2.hpp	/^  Processor10 = 0x00000200,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor11	ruby/audio/xaudio2.hpp	/^  Processor11 = 0x00000400,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor12	ruby/audio/xaudio2.hpp	/^  Processor12 = 0x00000800,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor13	ruby/audio/xaudio2.hpp	/^  Processor13 = 0x00001000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor14	ruby/audio/xaudio2.hpp	/^  Processor14 = 0x00002000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor15	ruby/audio/xaudio2.hpp	/^  Processor15 = 0x00004000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor16	ruby/audio/xaudio2.hpp	/^  Processor16 = 0x00008000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor17	ruby/audio/xaudio2.hpp	/^  Processor17 = 0x00010000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor18	ruby/audio/xaudio2.hpp	/^  Processor18 = 0x00020000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor19	ruby/audio/xaudio2.hpp	/^  Processor19 = 0x00040000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor2	ruby/audio/xaudio2.hpp	/^  Processor2  = 0x00000002,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor20	ruby/audio/xaudio2.hpp	/^  Processor20 = 0x00080000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor21	ruby/audio/xaudio2.hpp	/^  Processor21 = 0x00100000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor22	ruby/audio/xaudio2.hpp	/^  Processor22 = 0x00200000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor23	ruby/audio/xaudio2.hpp	/^  Processor23 = 0x00400000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor24	ruby/audio/xaudio2.hpp	/^  Processor24 = 0x00800000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor25	ruby/audio/xaudio2.hpp	/^  Processor25 = 0x01000000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor26	ruby/audio/xaudio2.hpp	/^  Processor26 = 0x02000000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor27	ruby/audio/xaudio2.hpp	/^  Processor27 = 0x04000000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor28	ruby/audio/xaudio2.hpp	/^  Processor28 = 0x08000000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor29	ruby/audio/xaudio2.hpp	/^  Processor29 = 0x10000000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor3	ruby/audio/xaudio2.hpp	/^  Processor3  = 0x00000004,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor30	ruby/audio/xaudio2.hpp	/^  Processor30 = 0x20000000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor31	ruby/audio/xaudio2.hpp	/^  Processor31 = 0x40000000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor32	ruby/audio/xaudio2.hpp	/^  Processor32 = 0x80000000,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor4	ruby/audio/xaudio2.hpp	/^  Processor4  = 0x00000008,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor5	ruby/audio/xaudio2.hpp	/^  Processor5  = 0x00000010,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor6	ruby/audio/xaudio2.hpp	/^  Processor6  = 0x00000020,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor7	ruby/audio/xaudio2.hpp	/^  Processor7  = 0x00000040,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor8	ruby/audio/xaudio2.hpp	/^  Processor8  = 0x00000080,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Processor9	ruby/audio/xaudio2.hpp	/^  Processor9  = 0x00000100,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
Program	higan/target-bsnes/program/program.hpp	/^struct Program : Lock, Emulator::Platform {$/;"	s
Program	higan/target-higan/program/program.cpp	/^Program::Program(Arguments arguments) {$/;"	f	class:Program
Program	higan/target-higan/program/program.hpp	/^struct Program : Emulator::Platform {$/;"	s
Program	hiro/resource/resource.cpp	/^const unsigned char Program[609] = {$/;"	m	namespace:Icon::Emblem	file:
ProgressBar	hiro/core/shared.hpp	/^struct ProgressBar : sProgressBar {$/;"	s
Prompt	hiro/resource/resource.cpp	/^namespace Prompt {$/;"	n	namespace:Icon	file:
Prompt	hiro/resource/resource.hpp	/^namespace Prompt {$/;"	n	namespace:Icon
Properties	hiro/resource/resource.cpp	/^const unsigned char Properties[464] = {$/;"	m	namespace:Icon::Action	file:
Property	hiro/core/core.hpp	/^struct Property {$/;"	s	namespace:hiro
Property	hiro/core/property.cpp	/^Property::Property(const string& name, const string& value) {$/;"	f	class:Property
ProtectableMemory	higan/sfc/memory/protectable.hpp	/^struct ProtectableMemory : Memory {$/;"	s
Pulse	higan/fc/apu/apu.hpp	/^  struct Pulse {$/;"	s	struct:APU
Pulse	higan/fc/cartridge/board/sunsoft-5b.cpp	/^  struct Pulse {$/;"	s	struct:Sunsoft5B	file:
Pulse	higan/fc/cartridge/chip/vrc6.cpp	/^  struct Pulse {$/;"	s	struct:VRC6	file:
PulseOnErase	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    PulseOnErase,$/;"	m	struct:ReadyBusyMode	typeref:enum:ReadyBusyMode::
PulseOnWrite	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    PulseOnWrite,$/;"	m	struct:ReadyBusyMode	typeref:enum:ReadyBusyMode::
QFont	hiro/qt/font.hpp	/^  static auto create(const Font& font) -> QFont;$/;"	m	struct:hiro::pFont
QLOCATION	hiro/qt/header.hpp	21;"	d
QLOCATION	hiro/qt/header.hpp	22;"	d
QSize	hiro/qt/qt.hpp	/^  auto sizeHint() const -> QSize;$/;"	m	struct:hiro::QtWindow
QString	hiro/qt/font.hpp	/^  static auto family(const string& family) -> QString;$/;"	m	struct:hiro::pFont
QtButton	hiro/qt/qt.hpp	/^  QtButton(pButton& p) : p(p) {}$/;"	f	struct:hiro::QtButton
QtButton	hiro/qt/qt.hpp	/^struct QtButton : public QToolButton {$/;"	s	namespace:hiro
QtCanvas	hiro/qt/qt.hpp	/^  QtCanvas(pCanvas& p) : p(p) {}$/;"	f	struct:hiro::QtCanvas
QtCanvas	hiro/qt/qt.hpp	/^struct QtCanvas : public QWidget {$/;"	s	namespace:hiro
QtCheckButton	hiro/qt/qt.hpp	/^  QtCheckButton(pCheckButton& p) : p(p) {}$/;"	f	struct:hiro::QtCheckButton
QtCheckButton	hiro/qt/qt.hpp	/^struct QtCheckButton : public QToolButton {$/;"	s	namespace:hiro
QtCheckLabel	hiro/qt/qt.hpp	/^  QtCheckLabel(pCheckLabel& p) : p(p) {}$/;"	f	struct:hiro::QtCheckLabel
QtCheckLabel	hiro/qt/qt.hpp	/^struct QtCheckLabel : public QCheckBox {$/;"	s	namespace:hiro
QtComboButton	hiro/qt/qt.hpp	/^  QtComboButton(pComboButton& p) : p(p) {}$/;"	f	struct:hiro::QtComboButton
QtComboButton	hiro/qt/qt.hpp	/^struct QtComboButton : public QComboBox {$/;"	s	namespace:hiro
QtConsole	hiro/qt/platform.hpp	/^    QtConsole(pConsole& self) : self(self) {}$/;"	f	struct:hiro::pConsole::QtConsole
QtConsole	hiro/qt/platform.hpp	/^  struct QtConsole : public QTextEdit {$/;"	s	struct:hiro::pConsole
QtHexEdit	hiro/qt/qt.hpp	/^  QtHexEdit(pHexEdit& p) : p(p) {}$/;"	f	struct:hiro::QtHexEdit
QtHexEdit	hiro/qt/qt.hpp	/^struct QtHexEdit : public QTextEdit {$/;"	s	namespace:hiro
QtHexEditScrollBar	hiro/qt/qt.hpp	/^  QtHexEditScrollBar(pHexEdit& p) : p(p) {}$/;"	f	struct:hiro::QtHexEditScrollBar
QtHexEditScrollBar	hiro/qt/qt.hpp	/^struct QtHexEditScrollBar : public QScrollBar {$/;"	s	namespace:hiro
QtHorizontalScrollBar	hiro/qt/qt.hpp	/^  QtHorizontalScrollBar(pHorizontalScrollBar& p) : QScrollBar(Qt::Horizontal), p(p) {}$/;"	f	struct:hiro::QtHorizontalScrollBar
QtHorizontalScrollBar	hiro/qt/qt.hpp	/^struct QtHorizontalScrollBar : public QScrollBar {$/;"	s	namespace:hiro
QtHorizontalSlider	hiro/qt/qt.hpp	/^  QtHorizontalSlider(pHorizontalSlider& p) : QSlider(Qt::Horizontal), p(p) {}$/;"	f	struct:hiro::QtHorizontalSlider
QtHorizontalSlider	hiro/qt/qt.hpp	/^struct QtHorizontalSlider : public QSlider {$/;"	s	namespace:hiro
QtLabel	hiro/qt/qt.hpp	/^  QtLabel(pLabel& p) : p(p) {}$/;"	f	struct:hiro::QtLabel
QtLabel	hiro/qt/qt.hpp	/^struct QtLabel : public QWidget {$/;"	s	namespace:hiro
QtLineEdit	hiro/qt/qt.hpp	/^  QtLineEdit(pLineEdit& p) : p(p) {}$/;"	f	struct:hiro::QtLineEdit
QtLineEdit	hiro/qt/qt.hpp	/^struct QtLineEdit : public QLineEdit {$/;"	s	namespace:hiro
QtListWidget	hiro/qt/platform.hpp	/^  struct QtListWidget : public QListWidget {$/;"	s	struct:hiro::pIconView
QtMenuCheckItem	hiro/qt/qt.hpp	/^  QtMenuCheckItem(pMenuCheckItem& p) : QAction(nullptr), p(p) {}$/;"	f	struct:hiro::QtMenuCheckItem
QtMenuCheckItem	hiro/qt/qt.hpp	/^struct QtMenuCheckItem : public QAction {$/;"	s	namespace:hiro
QtMenuItem	hiro/qt/qt.hpp	/^  QtMenuItem(pMenuItem& p) : QAction(nullptr), p(p) {}$/;"	f	struct:hiro::QtMenuItem
QtMenuItem	hiro/qt/qt.hpp	/^struct QtMenuItem : public QAction {$/;"	s	namespace:hiro
QtMenuRadioItem	hiro/qt/qt.hpp	/^  QtMenuRadioItem(pMenuRadioItem& p) : QAction(nullptr), p(p) {}$/;"	f	struct:hiro::QtMenuRadioItem
QtMenuRadioItem	hiro/qt/qt.hpp	/^struct QtMenuRadioItem : public QAction {$/;"	s	namespace:hiro
QtRadioButton	hiro/qt/qt.hpp	/^  QtRadioButton(pRadioButton& p) : p(p) {}$/;"	f	struct:hiro::QtRadioButton
QtRadioButton	hiro/qt/qt.hpp	/^struct QtRadioButton : public QToolButton {$/;"	s	namespace:hiro
QtRadioLabel	hiro/qt/qt.hpp	/^  QtRadioLabel(pRadioLabel& p) : p(p) {}$/;"	f	struct:hiro::QtRadioLabel
QtRadioLabel	hiro/qt/qt.hpp	/^struct QtRadioLabel : public QRadioButton {$/;"	s	namespace:hiro
QtTabFrame	hiro/qt/qt.hpp	/^  QtTabFrame(pTabFrame& p) : p(p) {}$/;"	f	struct:hiro::QtTabFrame
QtTabFrame	hiro/qt/qt.hpp	/^struct QtTabFrame : public QTabWidget {$/;"	s	namespace:hiro
QtTableView	hiro/qt/qt.hpp	/^  QtTableView(pTableView& p) : p(p) {}$/;"	f	struct:hiro::QtTableView
QtTableView	hiro/qt/qt.hpp	/^struct QtTableView : public QTreeWidget {$/;"	s	namespace:hiro
QtTableViewDelegate	hiro/qt/qt.hpp	/^struct QtTableViewDelegate : public QStyledItemDelegate {$/;"	s	namespace:hiro
QtTableViewDelegate	hiro/qt/widget/table-view.cpp	/^QtTableViewDelegate::QtTableViewDelegate(pTableView& p) : QStyledItemDelegate(p.qtTableView), p(p) {$/;"	f	class:hiro::QtTableViewDelegate
QtTextEdit	hiro/qt/qt.hpp	/^  QtTextEdit(pTextEdit& p) : p(p) {}$/;"	f	struct:hiro::QtTextEdit
QtTextEdit	hiro/qt/qt.hpp	/^struct QtTextEdit : public QTextEdit {$/;"	s	namespace:hiro
QtTimer	hiro/qt/qt.hpp	/^  QtTimer(pTimer& p) : p(p) {}$/;"	f	struct:hiro::QtTimer
QtTimer	hiro/qt/qt.hpp	/^struct QtTimer : public QTimer {$/;"	s	namespace:hiro
QtVerticalScrollBar	hiro/qt/qt.hpp	/^  QtVerticalScrollBar(pVerticalScrollBar& p) : QScrollBar(Qt::Vertical), p(p) {}$/;"	f	struct:hiro::QtVerticalScrollBar
QtVerticalScrollBar	hiro/qt/qt.hpp	/^struct QtVerticalScrollBar : public QScrollBar {$/;"	s	namespace:hiro
QtVerticalSlider	hiro/qt/qt.hpp	/^  QtVerticalSlider(pVerticalSlider& p) : QSlider(Qt::Vertical), p(p) {}$/;"	f	struct:hiro::QtVerticalSlider
QtVerticalSlider	hiro/qt/qt.hpp	/^struct QtVerticalSlider : public QSlider {$/;"	s	namespace:hiro
QtViewport	hiro/qt/qt.hpp	/^  QtViewport(pViewport& p) : p(p) {}$/;"	f	struct:hiro::QtViewport
QtViewport	hiro/qt/qt.hpp	/^struct QtViewport : public QWidget {$/;"	s	namespace:hiro
QtWindow	hiro/qt/qt.hpp	/^  QtWindow(pWindow& p) : p(p) {}$/;"	f	struct:hiro::QtWindow
QtWindow	hiro/qt/qt.hpp	/^struct QtWindow : public QWidget {$/;"	s	namespace:hiro
Qualifier	higan/target-bsnes/input/input.hpp	/^  enum class Qualifier : uint { None, Lo, Hi, Rumble };$/;"	c	struct:InputMapping
Qualifier	higan/target-higan/input/input.hpp	/^  enum class Qualifier : uint { None, Lo, Hi, Rumble };$/;"	c	struct:InputMapping
Quartz	nall/intrinsics.hpp	/^  enum class DisplayServer : uint { Windows, Quartz, Xorg, Unknown };$/;"	m	class:nall::DisplayServer
Query	nall/database/odbc.hpp	/^    Query(Query&& source) : Statement(source._statement) { operator=(move(source)); }$/;"	f	struct:nall::Database::ODBC::Query
Query	nall/database/odbc.hpp	/^    Query(SQLHANDLE statement) : Statement(statement) {}$/;"	f	struct:nall::Database::ODBC::Query
Query	nall/database/odbc.hpp	/^    auto operator=(const Query& source) -> Query& = delete;$/;"	m	struct:nall::Database::ODBC::Query
Query	nall/database/odbc.hpp	/^  struct Query : Statement {$/;"	s	struct:nall::Database::ODBC
Query	nall/database/sqlite3.hpp	/^    Query(Query&& source) : Statement(source._statement) { operator=(move(source)); }$/;"	f	struct:nall::Database::SQLite3::Query
Query	nall/database/sqlite3.hpp	/^    Query(sqlite3_stmt* statement) : Statement(statement) {}$/;"	f	struct:nall::Database::SQLite3::Query
Query	nall/database/sqlite3.hpp	/^    auto operator=(const Query& source) -> Query& = delete;$/;"	m	struct:nall::Database::SQLite3::Query
Query	nall/database/sqlite3.hpp	/^  struct Query : Statement {$/;"	s	struct:nall::Database::SQLite3
Question	hiro/cocoa/message-window.cpp	/^enum class MessageWindowType : uint { Error, Information, Question, Warning };$/;"	m	class:hiro::MessageWindowType	file:
Question	hiro/resource/resource.cpp	/^const unsigned char Question[932] = {$/;"	m	namespace:Icon::Prompt	file:
Queue	ruby/audio/asio.cpp	/^  struct Queue {$/;"	s	struct:AudioASIO	file:
Queue	ruby/audio/wasapi.cpp	/^  struct Queue {$/;"	s	struct:AudioWASAPI	file:
QuickStates	higan/target-bsnes/presentation/presentation.hpp	/^  enum : uint { RecentGames = 9, QuickStates = 9 };$/;"	m	struct:Presentation	typeref:enum:Presentation::
Quit	hiro/resource/resource.cpp	/^const unsigned char Quit[799] = {$/;"	m	namespace:Icon::Action	file:
R	higan/gba/system/system.hpp	/^  A, B, Select, Start, Right, Left, Up, Down, R, L,$/;"	m	class:Input
R	higan/processor/z80/disassembler.cpp	1073;"	d	file:
R	higan/processor/z80/disassembler.cpp	85;"	d	file:
R	higan/processor/z80/registers.cpp	41;"	d	file:
R	higan/sfc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
R	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:SuperMultitap	typeref:enum:SuperMultitap::
R	nall/function.hpp	/^    auto (*function)(P...) -> R;$/;"	m	struct:nall::R::global
R	nall/function.hpp	/^    auto (C::*function)(P...) -> R;$/;"	m	struct:nall::R::global::member
R	nall/function.hpp	/^    member(auto (C::*function)(P...) -> R, C* object) : function(function), object(object) {}$/;"	m	struct:nall::R::global::member
R	nall/function.hpp	/^    virtual auto operator()(P... p) const -> R = 0;$/;"	m	struct:nall::R::container
R	nall/function.hpp	/^  template<typename C> function(auto (C::*function)(P...) -> R, C* object) { callback = new member<C>(function, object); }$/;"	m	struct:nall::R
R	nall/function.hpp	/^  template<typename C> function(auto (C::*function)(P...) const -> R, C* object) { callback = new member<C>((auto (C::*)(P...) -> R)function, object); }$/;"	m	struct:nall::R
R	nall/function.hpp	/^template<typename R, typename... P> struct function<auto (P...) -> R> {$/;"	s	namespace:nall
RAM	higan/gb/cartridge/huc1/huc1.hpp	/^    struct RAM {$/;"	s	struct:HuC1::IO
RAM	higan/gb/cartridge/huc3/huc3.hpp	/^    struct RAM {$/;"	s	struct:HuC3::IO
RAM	higan/gb/cartridge/mbc1/mbc1.hpp	/^    struct RAM {$/;"	s	struct:MBC1::IO
RAM	higan/gb/cartridge/mbc2/mbc2.hpp	/^    struct RAM {$/;"	s	struct:MBC2::IO
RAM	higan/gb/cartridge/mbc3/mbc3.hpp	/^    struct RAM {$/;"	s	struct:MBC3::IO
RAM	higan/gb/cartridge/mbc5/mbc5.hpp	/^    struct RAM {$/;"	s	struct:MBC5::IO
RAM	higan/gb/cartridge/mbc6/mbc6.hpp	/^    struct RAM {$/;"	s	struct:MBC6::IO
RAM	higan/gb/cartridge/mbc7/mbc7.hpp	/^    struct RAM {$/;"	s	struct:MBC7::IO
RAM	higan/gb/cartridge/mmm01/mmm01.hpp	/^    struct RAM {$/;"	s	struct:MMM01::IO
RAM_ANALYZE	higan/gba/cartridge/cartridge.cpp	133;"	d	file:
REG	higan/sfc/dsp/dsp.cpp	260;"	d	file:
REG	higan/sfc/dsp/dsp.cpp	7;"	d	file:
REL	higan/processor/z80/disassembler.cpp	1045;"	d	file:
REL	higan/processor/z80/disassembler.cpp	57;"	d	file:
RNG	nall/random.hpp	/^template<typename Base> struct RNG {$/;"	s	namespace:nall
ROM	higan/gb/cartridge/huc1/huc1.hpp	/^    struct ROM {$/;"	s	struct:HuC1::IO
ROM	higan/gb/cartridge/huc3/huc3.hpp	/^    struct ROM {$/;"	s	struct:HuC3::IO
ROM	higan/gb/cartridge/mbc1/mbc1.hpp	/^    struct ROM {$/;"	s	struct:MBC1::IO
ROM	higan/gb/cartridge/mbc1m/mbc1m.hpp	/^    struct ROM {$/;"	s	struct:MBC1M::IO
ROM	higan/gb/cartridge/mbc2/mbc2.hpp	/^    struct ROM {$/;"	s	struct:MBC2::IO
ROM	higan/gb/cartridge/mbc3/mbc3.hpp	/^    struct ROM {$/;"	s	struct:MBC3::IO
ROM	higan/gb/cartridge/mbc5/mbc5.hpp	/^    struct ROM {$/;"	s	struct:MBC5::IO
ROM	higan/gb/cartridge/mbc6/mbc6.hpp	/^    struct ROM {$/;"	s	struct:MBC6::IO
ROM	higan/gb/cartridge/mbc7/mbc7.hpp	/^    struct ROM {$/;"	s	struct:MBC7::IO
ROM	higan/gb/cartridge/mmm01/mmm01.hpp	/^    struct ROM {$/;"	s	struct:MMM01::IO
ROM	higan/gb/cartridge/tama/tama.hpp	/^    struct ROM {$/;"	s	struct:TAMA::IO
ROM	higan/sfc/coprocessor/sa1/sa1.hpp	/^  struct ROM : ReadableMemory {$/;"	s	struct:SA1
ROM	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  uint ROM = 1;$/;"	m	struct:BSMemory
RTC	higan/gb/cartridge/mbc3/mbc3.hpp	/^    struct RTC {$/;"	s	struct:MBC3::IO
RTC	higan/gb/cartridge/tama/tama.hpp	/^  struct RTC {$/;"	s	struct:TAMA
RTC	higan/ws/cartridge/cartridge.hpp	/^  struct RTC : Memory {$/;"	s	struct:Cartridge
RadioButton	hiro/core/shared.hpp	/^struct RadioButton : sRadioButton {$/;"	s
RadioLabel	hiro/core/shared.hpp	/^struct RadioLabel : sRadioLabel {$/;"	s
Random	higan/emulator/random.hpp	/^struct Random {$/;"	s	namespace:Emulator
RawInput	ruby/input/shared/rawinput.cpp	/^struct RawInput {$/;"	s	file:
Read	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  enum class State : uint { Mode, Seek, Read, Write } state;$/;"	m	class:EpsonRTC::State
Read	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  enum class State : uint { Ready, Command, Read, Write } state;$/;"	m	class:SharpRTC::State
ReadAddress	higan/gba/cartridge/memory.hpp	/^    Wait, Command, ReadAddress, ReadValidate, ReadData, WriteAddress, WriteData, WriteValidate$/;"	m	class:EEPROM::Mode
ReadData	higan/gba/cartridge/memory.hpp	/^    Wait, Command, ReadAddress, ReadValidate, ReadData, WriteAddress, WriteData, WriteValidate$/;"	m	class:EEPROM::Mode
ReadValidate	higan/gba/cartridge/memory.hpp	/^    Wait, Command, ReadAddress, ReadValidate, ReadData, WriteAddress, WriteData, WriteValidate$/;"	m	class:EEPROM::Mode
ReadableMemory	higan/sfc/memory/readable.hpp	/^struct ReadableMemory : Memory {$/;"	s
Ready	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  enum class State : uint { Ready, Command, Read, Write } state;$/;"	m	class:SharpRTC::State
ReadyBusyMode	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  struct ReadyBusyMode { enum : uint {$/;"	s
Real	nall/primitives.hpp	/^  inline Real() : data(0.0) {}$/;"	f	struct:nall::Real
Real	nall/primitives.hpp	/^  template<typename T> inline Real(const T& value) : data((type)value) {}$/;"	f	struct:nall::Real
Real	nall/primitives.hpp	/^template<uint Bits> struct Real {$/;"	s	namespace:nall
Recent	higan/target-bsnes/settings/settings.hpp	/^    struct Recent {$/;"	s	struct:Settings::Path
Record	hiro/resource/resource.cpp	/^const unsigned char Record[653] = {$/;"	m	namespace:Icon::Media	file:
Redo	hiro/resource/resource.cpp	/^const unsigned char Redo[591] = {$/;"	m	namespace:Icon::Edit	file:
Reference	nall/primitives.hpp	/^    inline Reference(Integer& source, uint lo, uint hi) : source(source), Lo(lo), Hi(hi) {}$/;"	f	struct:nall::Integer::Reference
Reference	nall/primitives.hpp	/^    inline Reference(Natural& source, uint lo, uint hi) : source(source), Lo(lo), Hi(hi) {}$/;"	f	struct:nall::Natural::Reference
Reference	nall/primitives.hpp	/^  struct Reference {$/;"	s	struct:nall::Integer
Reference	nall/primitives.hpp	/^  struct Reference {$/;"	s	struct:nall::Natural
Reference	nall/string/eval/node.hpp	/^    Reference, Dereference, LogicalNot, BitwiseNot, Positive, Negative, PrefixIncrement, PrefixDecrement,$/;"	m	class:nall::Eval::Node::Type
Reference	nall/varint.hpp	/^    inline Reference(VariadicNatural& self, uint lo, uint hi) : self(self), Lo(lo), Hi(hi) {}$/;"	f	struct:nall::VariadicNatural::Reference
Reference	nall/varint.hpp	/^  struct Reference {$/;"	s	struct:nall::VariadicNatural
Refresh	hiro/resource/resource.cpp	/^const unsigned char Refresh[912] = {$/;"	m	namespace:Icon::Action	file:
Region	higan/fc/fc.hpp	/^  struct Region {$/;"	s	namespace:Famicom
Region	higan/fc/system/system.hpp	/^  enum class Region : uint { NTSCJ, NTSCU, PAL };$/;"	c	struct:System
Region	higan/md/md.hpp	/^  struct Region {$/;"	s
Region	higan/md/system/system.hpp	/^  enum class Region : uint {$/;"	c	struct:System
Region	higan/ms/ms.hpp	/^  struct Region {$/;"	s	namespace:MasterSystem
Region	higan/ms/system/system.hpp	/^  enum class Region : uint { NTSC, PAL };$/;"	c	struct:System
Region	higan/sfc/sfc.hpp	/^  struct Region {$/;"	s	namespace:SuperFamicom
Region	higan/sfc/system/system.hpp	/^  enum class Region : uint { NTSC, PAL };$/;"	c	struct:System
Register	higan/processor/gsu/registers.hpp	/^struct Register {$/;"	s
Registers	higan/gba/apu/apu.hpp	/^  struct Registers {$/;"	s	struct:APU
Registers	higan/processor/gsu/registers.hpp	/^struct Registers {$/;"	s
Registers	higan/processor/hg51b/hg51b.hpp	/^  struct Registers {$/;"	s	struct:Processor::HG51B
Registers	higan/processor/huc6280/huc6280.hpp	/^  struct Registers {$/;"	s	struct:Processor::HuC6280
Registers	higan/processor/lr35902/lr35902.hpp	/^  struct Registers {$/;"	s	struct:Processor::LR35902
Registers	higan/processor/mos6502/mos6502.hpp	/^  struct Registers {$/;"	s	struct:Processor::MOS6502
Registers	higan/processor/spc700/spc700.hpp	/^  struct Registers {$/;"	s	struct:Processor::SPC700
Registers	higan/processor/upd96050/upd96050.hpp	/^  struct Registers {$/;"	s	struct:Processor::uPD96050
Registers	higan/processor/v30mz/v30mz.hpp	/^  struct Registers {$/;"	s	namespace:Processor
Registers	higan/processor/wdc65816/wdc65816.hpp	/^  struct Registers {$/;"	s	struct:Processor::WDC65816
Registers	higan/processor/z80/z80.hpp	/^  struct Registers {$/;"	s	struct:Processor::Z80
Registers	higan/sfc/coprocessor/mcc/mcc.hpp	/^  struct Registers {$/;"	s	struct:MCC
Registers	higan/ws/apu/apu.hpp	/^    struct Registers {$/;"	s	struct:APU::Channel1
Registers	higan/ws/apu/apu.hpp	/^    struct Registers {$/;"	s	struct:APU::Channel2
Registers	higan/ws/apu/apu.hpp	/^    struct Registers {$/;"	s	struct:APU::Channel3
Registers	higan/ws/apu/apu.hpp	/^    struct Registers {$/;"	s	struct:APU::Channel4
Registers	higan/ws/apu/apu.hpp	/^    struct Registers {$/;"	s	struct:APU::Channel5
Registers	higan/ws/apu/apu.hpp	/^    struct Registers {$/;"	s	struct:APU::DMA
Registers	higan/ws/apu/apu.hpp	/^  struct Registers {$/;"	s	struct:APU
Registers	higan/ws/cartridge/cartridge.hpp	/^  struct Registers {$/;"	s	struct:Cartridge
Registers	higan/ws/cpu/cpu.hpp	/^  struct Registers {$/;"	s	struct:CPU
Registers	higan/ws/eeprom/eeprom.hpp	/^  struct Registers {$/;"	s
Registers	higan/ws/ppu/ppu.hpp	/^  struct Registers {$/;"	s	struct:PPU
Registers	higan/ws/system/system.hpp	/^  struct Registers {$/;"	s	struct:System
RelNear	nall/windows/detour.hpp	12;"	d
RelNear	nall/windows/detour.hpp	187;"	d
Release	nall/intrinsics.hpp	/^  enum class Build : uint { Debug, Stable, Size, Release, Performance };$/;"	m	class:nall::Build
Remove	hiro/resource/resource.cpp	/^const unsigned char Remove[247] = {$/;"	m	namespace:Icon::Action	file:
RepeatWhileNotZero	higan/processor/v30mz/v30mz.hpp	/^    RepeatWhileNotZero = 0xf2,$/;"	m	struct:Processor::V30MZ	typeref:enum:Processor::V30MZ::
RepeatWhileZero	higan/processor/v30mz/v30mz.hpp	/^    RepeatWhileZero    = 0xf3,$/;"	m	struct:Processor::V30MZ	typeref:enum:Processor::V30MZ::
Replace	hiro/resource/resource.cpp	/^const unsigned char Replace[776] = {$/;"	m	namespace:Icon::Edit	file:
Request	nall/http/request.hpp	/^struct Request : Message {$/;"	s	namespace:nall::HTTP
RequestType	nall/http/request.hpp	/^  enum class RequestType : uint { None, Head, Get, Post };$/;"	c	struct:nall::HTTP::Request
Resampler	nall/dsp/resampler/cubic.hpp	/^namespace nall { namespace DSP { namespace Resampler {$/;"	n	namespace:nall::DSP
Reset	higan/md/cpu/cpu.hpp	/^    Reset,$/;"	m	class:CPU::Interrupt
ResizableStyle	hiro/windows/window.cpp	/^static const uint ResizableStyle = WS_SYSMENU | WS_CAPTION | WS_MINIMIZEBOX | WS_MAXIMIZEBOX | WS_THICKFRAME | WS_CLIPCHILDREN;$/;"	m	namespace:hiro	file:
Resource	higan/resource/resource.cpp	/^namespace Resource {$/;"	n	file:
Resource	higan/resource/resource.hpp	/^namespace Resource {$/;"	n
Resource	higan/target-bsnes/resource/resource.cpp	/^namespace Resource {$/;"	n	file:
Resource	higan/target-bsnes/resource/resource.hpp	/^namespace Resource {$/;"	n
Resource	higan/target-higan/resource/resource.cpp	/^namespace Resource {$/;"	n	file:
Resource	higan/target-higan/resource/resource.hpp	/^namespace Resource {$/;"	n
Response	hiro/cocoa/message-window.hpp	/^  static auto error(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/cocoa/message-window.hpp	/^  static auto information(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/cocoa/message-window.hpp	/^  static auto question(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/cocoa/message-window.hpp	/^  static auto warning(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/core/core.hpp	/^  auto error(Buttons = Buttons::Ok) -> Response;$/;"	m	struct:hiro::MessageWindow
Response	hiro/core/core.hpp	/^  auto information(Buttons = Buttons::Ok) -> Response;$/;"	m	struct:hiro::MessageWindow
Response	hiro/core/core.hpp	/^  auto question(Buttons = Buttons::YesNo) -> Response;$/;"	m	struct:hiro::MessageWindow
Response	hiro/core/core.hpp	/^  auto warning(Buttons = Buttons::Ok) -> Response;$/;"	m	struct:hiro::MessageWindow
Response	hiro/core/core.hpp	/^  enum class Response : uint { Ok, Cancel, Yes, No };$/;"	c	struct:hiro::MessageWindow
Response	hiro/extension/browser-dialog.cpp	/^  auto run() -> BrowserDialog::Response;$/;"	m	class:BrowserDialogWindow::BrowserDialog	file:
Response	hiro/extension/browser-dialog.hpp	/^  struct Response {$/;"	s	struct:BrowserDialog
Response	hiro/gtk/message-window.hpp	/^  static auto error(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/gtk/message-window.hpp	/^  static auto information(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/gtk/message-window.hpp	/^  static auto question(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/gtk/message-window.hpp	/^  static auto warning(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/qt/message-window.hpp	/^  static auto error(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/qt/message-window.hpp	/^  static auto information(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/qt/message-window.hpp	/^  static auto question(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/qt/message-window.hpp	/^  static auto warning(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/windows/message-window.hpp	/^  static auto error(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/windows/message-window.hpp	/^  static auto information(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/windows/message-window.hpp	/^  static auto question(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	hiro/windows/message-window.hpp	/^  static auto warning(MessageWindow::State& state) -> MessageWindow::Response;$/;"	m	class:hiro::pMessageWindow::MessageWindow
Response	nall/http/client.hpp	/^  inline auto download(const Request& request) -> Response;$/;"	m	struct:nall::HTTP::Client
Response	nall/http/response.hpp	/^  Response(const Request& request) { setRequest(request); }$/;"	f	struct:nall::HTTP::Response
Response	nall/http/response.hpp	/^struct Response : Message {$/;"	s	namespace:nall::HTTP
Revision	higan/fc/cartridge/board/nes-exrom.cpp	/^  enum class Revision : uint {$/;"	c	struct:NES_ExROM	file:
Revision	higan/fc/cartridge/board/nes-sxrom.cpp	/^  enum class Revision : uint {$/;"	c	struct:NES_SxROM	file:
Revision	higan/fc/cartridge/board/nes-txrom.cpp	/^  enum class Revision : uint {$/;"	c	struct:NES_TxROM	file:
Revision	higan/fc/cartridge/chip/mmc1.cpp	/^  enum class Revision : uint {$/;"	c	struct:MMC1	file:
Revision	higan/fc/cartridge/chip/mmc5.cpp	/^  enum class Revision : uint {$/;"	c	struct:MMC5	file:
Revision	higan/processor/upd96050/upd96050.hpp	/^  enum class Revision : uint { uPD7725, uPD96050 } revision;$/;"	c	struct:Processor::uPD96050
Revision	higan/sfc/coprocessor/icd/icd.hpp	/^  uint Revision = 0;$/;"	m	struct:ICD
Rewind	hiro/resource/resource.cpp	/^const unsigned char Rewind[764] = {$/;"	m	namespace:Icon::Media	file:
Right	higan/fc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Right	higan/gb/system/system.hpp	/^  Up, Down, Left, Right, B, A, Select, Start,$/;"	m	class:Input
Right	higan/gba/system/system.hpp	/^  A, B, Select, Start, Right, Left, Up, Down, R, L,$/;"	m	class:Input
Right	higan/md/controller/control-pad/control-pad.hpp	/^    Up, Down, Left, Right, A, B, C, Start,$/;"	m	struct:ControlPad	typeref:enum:ControlPad::
Right	higan/md/controller/fighting-pad/fighting-pad.hpp	/^    Up, Down, Left, Right, A, B, C, X, Y, Z, Mode, Start,$/;"	m	struct:FightingPad	typeref:enum:FightingPad::
Right	higan/ms/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, One, Two,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Right	higan/pce/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, Two, One, Select, Run,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Right	higan/sfc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Right	higan/sfc/controller/mouse/mouse.hpp	/^    X, Y, Left, Right,$/;"	m	struct:Mouse	typeref:enum:Mouse::
Right	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:SuperMultitap	typeref:enum:SuperMultitap::
Right	hiro/resource/resource.cpp	/^const unsigned char Right[676] = {$/;"	m	namespace:Icon::Go	file:
Role	nall/http/role.hpp	/^struct Role {$/;"	s	namespace:nall::HTTP
Role	ruby/audio/xaudio2.hpp	/^  XAUDIO2_DEVICE_ROLE Role;$/;"	m	struct:XAUDIO2_DEVICE_DETAILS
Roms	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  uint Roms;$/;"	m	struct:HitachiDSP
RotateLeft	higan/video/video.hpp	/^    RotateLeft,$/;"	m	class:Emulator::Video::Effect
RotateLeft	nall/string/eval/node.hpp	/^    RotateLeft, RotateRight, ShiftLeft, ShiftRight,$/;"	m	class:nall::Eval::Node::Type
RotateRight	nall/string/eval/node.hpp	/^    RotateLeft, RotateRight, ShiftLeft, ShiftRight,$/;"	m	class:nall::Eval::Node::Type
Rumble	higan/emulator/interface.hpp	/^      Rumble,$/;"	m	struct:Emulator::Input::Type	typeref:enum:Emulator::Input::Type::
Run	higan/emulator/scheduler.hpp	/^    Run,$/;"	m	class:Emulator::Scheduler::Mode
Run	higan/pce/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, Two, One, Select, Run,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
S	higan/processor/huc6280/huc6280.cpp	36;"	d	file:
S	higan/processor/huc6280/huc6280.cpp	9;"	d	file:
S	higan/processor/mos6502/mos6502.cpp	33;"	d	file:
S	higan/processor/mos6502/mos6502.cpp	9;"	d	file:
S	higan/processor/spc700/spc700.cpp	11;"	d	file:
S	higan/processor/spc700/spc700.cpp	48;"	d	file:
S	higan/processor/wdc65816/wdc65816.cpp	11;"	d	file:
S	higan/processor/wdc65816/wdc65816.cpp	70;"	d	file:
S21FX	higan/sfc/expansion/21fx/21fx.cpp	/^S21FX::S21FX() {$/;"	f	class:SuperFamicom::S21FX
S21FX	higan/sfc/expansion/21fx/21fx.hpp	/^struct S21FX : Expansion {$/;"	s
S21FX	higan/sfc/interface/interface.hpp	/^    S21FX,$/;"	m	struct:Device	typeref:enum:Device::
SA1	higan/sfc/cartridge/cartridge.hpp	/^    boolean SA1;$/;"	m	struct:Cartridge::Has
SA1	higan/sfc/coprocessor/sa1/sa1.hpp	/^struct SA1 : Processor::WDC65816, Thread {$/;"	s
SAROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SAROM,$/;"	m	class:NES_SxROM::Revision	file:
SATB	higan/pce/vdc/vdc.hpp	/^  struct SATB {$/;"	s	struct:VDC
SBROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SBROM,$/;"	m	class:NES_SxROM::Revision	file:
SC1ROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SC1ROM,$/;"	m	class:NES_SxROM::Revision	file:
SCMR	higan/processor/gsu/registers.hpp	/^struct SCMR {$/;"	s
SCROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SCROM,$/;"	m	class:NES_SxROM::Revision	file:
SDD1	higan/sfc/cartridge/cartridge.hpp	/^    boolean SDD1;$/;"	m	struct:Cartridge::Has
SDD1	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^struct SDD1 {$/;"	s
SEROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SEROM,$/;"	m	class:NES_SxROM::Revision	file:
SF	higan/processor/z80/registers.cpp	51;"	d	file:
SFR	higan/processor/gsu/registers.hpp	/^struct SFR {$/;"	s
SFROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SFROM,$/;"	m	class:NES_SxROM::Revision	file:
SFX	higan/gba/ppu/ppu.hpp	/^  enum : uint { OBJ = 0, BG0 = 1, BG1 = 2, BG2 = 3, BG3 = 4, SFX = 5 };$/;"	m	struct:PPU	typeref:enum:PPU::
SGROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SGROM,$/;"	m	class:NES_SxROM::Revision	file:
SH1ROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SH1ROM,$/;"	m	class:NES_SxROM::Revision	file:
SHA224	nall/hash/sha224.hpp	/^  SHA224(array_view<uint8_t> buffer = {}) {$/;"	f	struct:nall::Hash::SHA224
SHA224	nall/hash/sha224.hpp	/^struct SHA224 : Hash {$/;"	s	namespace:nall::Hash
SHA256	nall/hash/sha256.hpp	/^  SHA256(array_view<uint8_t> buffer = {}) {$/;"	f	struct:nall::Hash::SHA256
SHA256	nall/hash/sha256.hpp	/^struct SHA256 : Hash {$/;"	s	namespace:nall::Hash
SHA384	nall/hash/sha384.hpp	/^  SHA384(array_view<uint8_t> buffer = {}) {$/;"	f	struct:nall::Hash::SHA384
SHA384	nall/hash/sha384.hpp	/^struct SHA384 : Hash {$/;"	s	namespace:nall::Hash
SHA512	nall/hash/sha512.hpp	/^  SHA512(array_view<uint8_t> buffer = {}) {$/;"	f	struct:nall::Hash::SHA512
SHA512	nall/hash/sha512.hpp	/^struct SHA512 : Hash {$/;"	s	namespace:nall::Hash
SHROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SHROM,$/;"	m	class:NES_SxROM::Revision	file:
SIMD	nall/simd.hpp	6;"	d
SIMD_AVX2	nall/simd.hpp	7;"	d
SIROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SIROM,$/;"	m	class:NES_SxROM::Revision	file:
SJROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SJROM,$/;"	m	class:NES_SxROM::Revision	file:
SKROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SKROM,$/;"	m	class:NES_SxROM::Revision	file:
SL1ROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SL1ROM,$/;"	m	class:NES_SxROM::Revision	file:
SL2ROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SL2ROM,$/;"	m	class:NES_SxROM::Revision	file:
SL3ROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SL3ROM,$/;"	m	class:NES_SxROM::Revision	file:
SLROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SLROM,$/;"	m	class:NES_SxROM::Revision	file:
SLRROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SLRROM,$/;"	m	class:NES_SxROM::Revision	file:
SMP	higan/sfc/smp/smp.hpp	/^struct SMP : Processor::SPC700, Thread {$/;"	s
SMROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SMROM,$/;"	m	class:NES_SxROM::Revision	file:
SMTP	nall/smtp.hpp	/^SMTP::SMTP() {$/;"	f	class:nall::SMTP
SMTP	nall/smtp.hpp	/^struct SMTP {$/;"	s	namespace:nall
SNDCTL_DSP_COOKEDMODE	ruby/audio/oss.cpp	9;"	d	file:
SNDCTL_DSP_POLICY	ruby/audio/oss.cpp	13;"	d	file:
SNROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SNROM,$/;"	m	class:NES_SxROM::Revision	file:
SOROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SOROM,$/;"	m	class:NES_SxROM::Revision	file:
SP	higan/processor/lr35902/registers.cpp	5;"	d	file:
SP	higan/processor/z80/disassembler.cpp	1069;"	d	file:
SP	higan/processor/z80/disassembler.cpp	81;"	d	file:
SP	higan/processor/z80/registers.cpp	33;"	d	file:
SPC700	higan/processor/spc700/spc700.hpp	/^struct SPC700 {$/;"	s	namespace:Processor
SPC7110	higan/sfc/cartridge/cartridge.hpp	/^    boolean SPC7110;$/;"	m	struct:Cartridge::Has
SPC7110	higan/sfc/coprocessor/spc7110/spc7110.cpp	/^SPC7110::SPC7110() {$/;"	f	class:SuperFamicom::SPC7110
SPC7110	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^struct SPC7110 : Thread {$/;"	s
SQLite3	nall/database/sqlite3.hpp	/^  SQLite3(const string& filename) { open(filename); }$/;"	f	struct:nall::Database::SQLite3
SQLite3	nall/database/sqlite3.hpp	/^struct SQLite3 {$/;"	s	namespace:nall::Database
SRAM	higan/gba/cartridge/memory.hpp	/^struct SRAM {$/;"	s
SRCN	higan/sfc/dsp/dsp.hpp	/^    SRCN   = 0x04, ADSR0  = 0x05,$/;"	e	enum:uint
SSG	higan/md/ym2612/ym2612.hpp	/^      struct SSG {$/;"	s	struct:Channel::Operator
SUROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SUROM,$/;"	m	class:NES_SxROM::Revision	file:
SVC	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      SVC = 0x13,  \/\/service$/;"	m	struct:Processor::PSR	typeref:enum:Processor::PSR::
SVC	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    struct SVC {$/;"	s	struct:Processor
SXROM	higan/fc/cartridge/board/nes-sxrom.cpp	/^    SXROM,$/;"	m	class:NES_SxROM::Revision	file:
SYS	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      SYS = 0x1f,  \/\/system$/;"	m	struct:Processor::PSR	typeref:enum:Processor::PSR::
SamplesPlayed	ruby/audio/xaudio2.hpp	/^  UINT64 SamplesPlayed;$/;"	m	struct:XAUDIO2_VOICE_STATE
Sans	hiro/core/font.cpp	/^const string Font::Sans  = "{sans}";$/;"	m	class:Font	file:
Sans	hiro/core/font.hpp	/^  static const string Sans;$/;"	m	struct:Font
Satellaview	higan/sfc/expansion/satellaview/satellaview.cpp	/^Satellaview::Satellaview() {$/;"	f	class:SuperFamicom::Satellaview
Satellaview	higan/sfc/expansion/satellaview/satellaview.hpp	/^struct Satellaview : Expansion {$/;"	s
Satellaview	higan/sfc/interface/interface.hpp	/^    Satellaview,$/;"	m	struct:Device	typeref:enum:Device::
Save	hiro/resource/resource.cpp	/^const unsigned char Save[911] = {$/;"	m	namespace:Icon::Action	file:
Save	nall/serializer.hpp	/^  enum Mode : uint { Load, Save, Size };$/;"	m	struct:nall::serializer	typeref:enum:nall::serializer::
Sawtooth	higan/fc/cartridge/chip/vrc6.cpp	/^  struct Sawtooth {$/;"	s	struct:VRC6	file:
ScanDialog	icarus/ui/scan-dialog.cpp	/^ScanDialog::ScanDialog() {$/;"	f	class:ScanDialog
ScanDialog	icarus/ui/ui.hpp	/^struct ScanDialog : Window {$/;"	s
Scheduler	higan/emulator/scheduler.hpp	/^struct Scheduler {$/;"	s	namespace:Emulator
Screen	higan/gba/ppu/ppu.hpp	/^  struct Screen {$/;"	s	struct:PPU
Screen	higan/sfc/ppu/screen.hpp	/^    struct Screen {$/;"	s	struct:Screen::Math
Screen	higan/sfc/ppu/screen.hpp	/^struct Screen {$/;"	s
Screen	nall/xorg/guard.hpp	16;"	d
Screen	nall/xorg/guard.hpp	7;"	d
ScreenOne	higan/ws/ppu/ppu.hpp	/^    enum class Source : uint { Back, ScreenOne, ScreenTwo, Sprite };$/;"	m	class:PPU::Pixel::Source
ScreenTwo	higan/ws/ppu/ppu.hpp	/^    enum class Source : uint { Back, ScreenOne, ScreenTwo, Sprite };$/;"	m	class:PPU::Pixel::Source
Screenshot	higan/target-bsnes/program/program.hpp	/^  struct Screenshot {$/;"	s	struct:Program
Script	hiro/resource/resource.cpp	/^const unsigned char Script[516] = {$/;"	m	namespace:Icon::Emblem	file:
Search	hiro/resource/resource.cpp	/^const unsigned char Search[935] = {$/;"	m	namespace:Icon::Action	file:
Seek	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  enum class State : uint { Mode, Seek, Read, Write } state;$/;"	m	class:EpsonRTC::State
SegmentOverrideCS	higan/processor/v30mz/v30mz.hpp	/^    SegmentOverrideCS  = 0x2e,$/;"	m	struct:Processor::V30MZ	typeref:enum:Processor::V30MZ::
SegmentOverrideDS	higan/processor/v30mz/v30mz.hpp	/^    SegmentOverrideDS  = 0x3e,$/;"	m	struct:Processor::V30MZ	typeref:enum:Processor::V30MZ::
SegmentOverrideSS	higan/processor/v30mz/v30mz.hpp	/^    SegmentOverrideSS  = 0x36,$/;"	m	struct:Processor::V30MZ	typeref:enum:Processor::V30MZ::
Select	higan/fc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Select	higan/gb/system/system.hpp	/^  Up, Down, Left, Right, B, A, Select, Start,$/;"	m	class:Input
Select	higan/gba/system/system.hpp	/^  A, B, Select, Start, Right, Left, Up, Down, R, L,$/;"	m	class:Input
Select	higan/pce/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, Two, One, Select, Run,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Select	higan/sfc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Select	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:SuperMultitap	typeref:enum:SuperMultitap::
Separator	nall/string/eval/node.hpp	/^    Separator,$/;"	m	class:nall::Eval::Node::Type
Sequencer	higan/gb/apu/apu.hpp	/^  struct Sequencer {$/;"	s	struct:APU
Sequencer	higan/gba/apu/apu.hpp	/^  struct Sequencer {$/;"	s	struct:APU
Sequential	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    Sequential    = 1 << 1,  \/\/S cycle$/;"	m	struct:Processor::ARM7TDMI	typeref:enum:Processor::ARM7TDMI::
Serial	higan/gb/cpu/cpu.hpp	/^  enum class Interrupt : uint { Vblank, Stat, Timer, Serial, Joypad };$/;"	m	class:CPU::Interrupt
Serial	higan/gba/cpu/cpu.hpp	/^    Serial       = 0x0080,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
Serial	higan/gba/cpu/cpu.hpp	/^  struct Serial {$/;"	s
SerialReceive	higan/ws/cpu/cpu.hpp	/^    SerialReceive,$/;"	m	class:CPU::Interrupt
SerialSend	higan/ws/cpu/cpu.hpp	/^    SerialSend,$/;"	m	class:CPU::Interrupt
SerializerVersion	higan/emulator/emulator.hpp	/^  static const string SerializerVersion = "106.63";$/;"	m	namespace:Emulator
Serif	hiro/core/font.cpp	/^const string Font::Serif = "{serif}";$/;"	m	class:Font	file:
Serif	hiro/core/font.hpp	/^  static const string Serif;$/;"	m	struct:Font
Server	hiro/resource/resource.cpp	/^const unsigned char Server[642] = {$/;"	m	namespace:Icon::Place	file:
Server	nall/http/server.hpp	/^struct Server : Role, service {$/;"	s	namespace:nall::HTTP
Setting	ruby/video/opengl/opengl.hpp	/^    Setting(const string& name) : name(name) {}$/;"	f	struct:OpenGL::Setting
Setting	ruby/video/opengl/opengl.hpp	/^    Setting(const string& name, const string& value) : name(name), value(value) {}$/;"	f	struct:OpenGL::Setting
Setting	ruby/video/opengl/opengl.hpp	/^  struct Setting {$/;"	s	struct:OpenGL
Settings	higan/fc/cartridge/board/konami-vrc2.cpp	/^  struct Settings {$/;"	s	struct:KonamiVRC2	file:
Settings	higan/fc/cartridge/board/konami-vrc3.cpp	/^  struct Settings {$/;"	s	struct:KonamiVRC3	file:
Settings	higan/fc/cartridge/board/konami-vrc4.cpp	/^  struct Settings {$/;"	s	struct:KonamiVRC4	file:
Settings	higan/fc/cartridge/board/nes-bnrom.cpp	/^  struct Settings {$/;"	s	struct:NES_BNROM	file:
Settings	higan/fc/cartridge/board/nes-cnrom.cpp	/^  struct Settings {$/;"	s	struct:NES_CNROM	file:
Settings	higan/fc/cartridge/board/nes-gxrom.cpp	/^  struct Settings {$/;"	s	struct:NES_GxROM	file:
Settings	higan/fc/cartridge/board/nes-nrom.cpp	/^  struct Settings {$/;"	s	struct:NES_NROM	file:
Settings	higan/fc/cartridge/board/nes-uxrom.cpp	/^  struct Settings {$/;"	s	struct:NES_UxROM	file:
Settings	higan/pce/vpc/vpc.hpp	/^  struct Settings {$/;"	s	struct:VPC
Settings	higan/target-bsnes/settings/settings.hpp	/^struct Settings : Markup::Node {$/;"	s
Settings	higan/target-higan/settings/settings.cpp	/^Settings::Settings() {$/;"	f	class:Settings
Settings	higan/target-higan/settings/settings.hpp	/^struct Settings : Markup::Node {$/;"	s
Settings	hiro/gtk/settings.cpp	/^Settings::Settings() {$/;"	f	class:hiro::Settings
Settings	hiro/gtk/settings.hpp	/^struct Settings {$/;"	s	namespace:hiro
Settings	hiro/qt/settings.cpp	/^Settings::Settings() {$/;"	f	class:hiro::Settings
Settings	hiro/qt/settings.hpp	/^struct Settings {$/;"	s	namespace:hiro
Settings	hiro/resource/resource.cpp	/^const unsigned char Settings[611] = {$/;"	m	namespace:Icon::Action	file:
Settings	hiro/resource/resource.cpp	/^const unsigned char Settings[629] = {$/;"	m	namespace:Icon::Place	file:
Settings	icarus/settings.cpp	/^Settings::Settings() {$/;"	f	class:Settings
Settings	icarus/settings.cpp	/^struct Settings : Markup::Node {$/;"	s	file:
Settings	nall/http/role.hpp	/^  struct Settings {$/;"	s	struct:nall::HTTP::Role
Settings	nall/string/transform/cml.hpp	/^  struct Settings {$/;"	s	struct:nall::__anon38::CML
Settings	nall/string/transform/dml.hpp	/^  struct Settings {$/;"	s	struct:nall::__anon37::DML
SettingsDialog	icarus/ui/settings-dialog.cpp	/^SettingsDialog::SettingsDialog() {$/;"	f	class:SettingsDialog
SettingsDialog	icarus/ui/ui.hpp	/^struct SettingsDialog : Window {$/;"	s
SettingsManager	higan/target-higan/settings/settings.cpp	/^SettingsManager::SettingsManager() {$/;"	f	class:SettingsManager
SettingsManager	higan/target-higan/settings/settings.hpp	/^  auto setVisible(bool visible = true) -> SettingsManager&;$/;"	m	struct:SettingsManager
SettingsManager	higan/target-higan/settings/settings.hpp	/^struct SettingsManager : Window {$/;"	s
SettingsWindow	higan/target-bsnes/settings/settings.hpp	/^  auto setVisible(bool visible = true) -> SettingsWindow&;$/;"	m	struct:SettingsWindow
SettingsWindow	higan/target-bsnes/settings/settings.hpp	/^struct SettingsWindow : Window {$/;"	s
Share	hiro/resource/resource.cpp	/^const unsigned char Share[697] = {$/;"	m	namespace:Icon::Place	file:
SharedNode	nall/string/markup/xml.hpp	/^  friend auto unserialize(const string&) -> Markup::SharedNode;$/;"	m	class:nall::XML::ManagedNode::Markup
SharedVariable	nall/http/message.hpp	/^  SharedVariable(const string& name = "", const string& value = "") : shared(new Variable{name, value}) {}$/;"	f	struct:nall::HTTP::SharedVariable
SharedVariable	nall/http/message.hpp	/^struct SharedVariable {$/;"	s	namespace:nall::HTTP
SharpRTC	higan/sfc/cartridge/cartridge.hpp	/^    boolean SharpRTC;$/;"	m	struct:Cartridge::Has
SharpRTC	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^struct SharpRTC : Thread {$/;"	s
ShiftLeft	nall/string/eval/node.hpp	/^    RotateLeft, RotateRight, ShiftLeft, ShiftRight,$/;"	m	class:nall::Eval::Node::Type
ShiftRegister	higan/gb/cartridge/mbc7/mbc7.hpp	/^    struct ShiftRegister {$/;"	s	struct:MBC7::EEPROM
ShiftRight	nall/string/eval/node.hpp	/^    RotateLeft, RotateRight, ShiftLeft, ShiftRight,$/;"	m	class:nall::Eval::Node::Type
Sign	nall/primitives.hpp	/^  enum : utype { Mask = ~0ull >> (64 - Bits), Sign = 1ull << (Bits - 1) };$/;"	m	struct:nall::Integer	typeref:enum:nall::Integer::
Signature	higan/target-bsnes/program/program.hpp	/^    static const uint Signature;$/;"	m	struct:Program::State
Signature	nall/beat/archive/container.hpp	/^  struct Signature {$/;"	s	struct:nall::Beat::Archive::Container
Signed	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    Signed        = 1 << 8,  \/\/sign-extend$/;"	m	struct:Processor::ARM7TDMI	typeref:enum:Processor::ARM7TDMI::
Single	nall/beat/single/apply.hpp	/^namespace nall { namespace Beat { namespace Single {$/;"	n	namespace:nall::Beat
Single	nall/beat/single/create.hpp	/^namespace nall { namespace Beat { namespace Single {$/;"	n	namespace:nall::Beat
Sizable	hiro/core/core.hpp	/^  auto sizable() const -> Sizable;$/;"	m	struct:hiro::mFrame
Sizable	hiro/core/shared.hpp	/^struct Sizable : sSizable {$/;"	s
Sizable	hiro/core/widget/tab-frame-item.hpp	/^  auto sizable() const -> Sizable;$/;"	m	struct:mTabFrameItem
Sizable	hiro/core/window.hpp	/^  auto sizable() const -> Sizable;$/;"	m	struct:mWindow
Sizable	hiro/extension/fixed-layout.hpp	/^  auto sizable() const -> Sizable;$/;"	m	struct:mFixedLayoutCell
Sizable	hiro/extension/horizontal-layout.hpp	/^  auto sizable() const -> Sizable;$/;"	m	struct:mHorizontalLayoutCell
Sizable	hiro/extension/table-layout.hpp	/^  auto sizable() const -> Sizable;$/;"	m	struct:mTableLayoutCell
Sizable	hiro/extension/vertical-layout.hpp	/^  auto sizable() const -> Sizable;$/;"	m	struct:mVerticalLayoutCell
Size	hiro/cocoa/desktop.hpp	/^  static auto size() -> Size;$/;"	m	struct:hiro::pDesktop
Size	hiro/cocoa/font.hpp	/^  static auto size(NSFont* font, const string& text) -> Size;$/;"	m	struct:hiro::pFont
Size	hiro/cocoa/font.hpp	/^  static auto size(const Font& font, const string& text) -> Size;$/;"	m	struct:hiro::pFont
Size	hiro/cocoa/sizable.hpp	/^  virtual auto minimumSize() const -> Size;$/;"	m	struct:hiro::pSizable
Size	hiro/cocoa/widget/canvas.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pCanvas
Size	hiro/core/core.hpp	/^  Size(W width, H height) : Size((float)width, (float)height) {}$/;"	f	struct:hiro::Size
Size	hiro/core/core.hpp	/^  auto size() const -> Size;$/;"	m	struct:hiro::Geometry
Size	hiro/core/core.hpp	/^  auto size() const -> Size;$/;"	m	struct:hiro::mCanvas
Size	hiro/core/core.hpp	/^struct Size {$/;"	s	namespace:hiro
Size	hiro/core/desktop.hpp	/^  static auto size() -> Size;$/;"	m	struct:Desktop
Size	hiro/core/font.hpp	/^  auto size(const string& text) const -> Size;$/;"	m	struct:Font
Size	hiro/core/sizable.hpp	/^  virtual auto minimumSize() const -> Size;$/;"	m	struct:mSizable
Size	hiro/core/size.cpp	/^Size::Size() {$/;"	f	class:Size
Size	hiro/core/size.cpp	/^Size::Size(float width, float height) {$/;"	f	class:Size
Size	hiro/core/window.hpp	/^  auto maximumSize() const -> Size;$/;"	m	struct:mWindow
Size	hiro/core/window.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:mWindow
Size	hiro/extension/horizontal-layout.hpp	/^  auto size() const -> Size;$/;"	m	struct:mHorizontalLayoutCell
Size	hiro/extension/table-layout.hpp	/^  auto size() const -> Size;$/;"	m	struct:mTableLayout
Size	hiro/extension/table-layout.hpp	/^  auto size() const -> Size;$/;"	m	struct:mTableLayoutCell
Size	hiro/extension/vertical-layout.hpp	/^  auto size() const -> Size;$/;"	m	struct:mVerticalLayoutCell
Size	hiro/gtk/desktop.hpp	/^  static auto size() -> Size;$/;"	m	struct:hiro::pDesktop
Size	hiro/gtk/font.hpp	/^  static auto size(PangoFontDescription* font, const string& text) -> Size;$/;"	m	struct:hiro::pFont
Size	hiro/gtk/font.hpp	/^  static auto size(const Font& font, const string& text) -> Size;$/;"	m	struct:hiro::pFont
Size	hiro/gtk/sizable.hpp	/^  virtual auto minimumSize() const -> Size;$/;"	m	struct:hiro::pSizable
Size	hiro/gtk/widget/canvas.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pCanvas
Size	hiro/gtk/widget/check-label.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pCheckLabel
Size	hiro/gtk/widget/horizontal-scroll-bar.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pHorizontalScrollBar
Size	hiro/gtk/widget/line-edit.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pLineEdit
Size	hiro/gtk/widget/progress-bar.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pProgressBar
Size	hiro/gtk/widget/radio-button.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pRadioButton
Size	hiro/gtk/widget/radio-label.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pRadioLabel
Size	hiro/gtk/widget/vertical-scroll-bar.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pVerticalScrollBar
Size	hiro/qt/desktop.hpp	/^  static auto size() -> Size;$/;"	m	struct:hiro::pDesktop
Size	hiro/qt/font.hpp	/^  static auto size(const Font& font, const string& text) -> Size;$/;"	m	struct:hiro::pFont
Size	hiro/qt/font.hpp	/^  static auto size(const QFont& qtFont, const string& text) -> Size;$/;"	m	struct:hiro::pFont
Size	hiro/qt/sizable.hpp	/^  virtual auto minimumSize() const -> Size;$/;"	m	struct:hiro::pSizable
Size	hiro/qt/widget/canvas.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pCanvas
Size	hiro/qt/widget/horizontal-slider.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pHorizontalSlider
Size	hiro/qt/widget/radio-label.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pRadioLabel
Size	hiro/windows/desktop.hpp	/^  static auto size() -> Size;$/;"	m	struct:hiro::pDesktop
Size	hiro/windows/font.hpp	/^  static auto size(HFONT hfont, const string& text) -> Size;$/;"	m	struct:hiro::pFont
Size	hiro/windows/font.hpp	/^  static auto size(const Font& font, const string& text) -> Size;$/;"	m	struct:hiro::pFont
Size	hiro/windows/sizable.hpp	/^  virtual auto minimumSize() const -> Size;$/;"	m	struct:hiro::pSizable
Size	hiro/windows/widget/line-edit.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pLineEdit
Size	hiro/windows/widget/vertical-slider.hpp	/^  auto minimumSize() const -> Size;$/;"	m	struct:hiro::pVerticalSlider
Size	hiro/windows/widget/widget.hpp	/^  virtual auto minimumSize() -> Size;$/;"	m	struct:hiro::pWidget
Size	nall/intrinsics.hpp	/^  enum class Build : uint { Debug, Stable, Size, Release, Performance };$/;"	m	class:nall::Build
Skip	hiro/resource/resource.cpp	/^const unsigned char Skip[782] = {$/;"	m	namespace:Icon::Media	file:
Slot	icarus/heuristics/heuristics.hpp	/^struct Slot {$/;"	s	namespace:Heuristics
Sort	hiro/core/core.hpp	/^enum class Sort : uint { None, Ascending, Descending };$/;"	c	namespace:hiro
Sort	hiro/core/widget/table-view-column.hpp	/^  auto sorting() const -> Sort;$/;"	m	struct:mTableViewColumn
SortBy	higan/target-bsnes/tools/tools.hpp	/^  enum class SortBy : uint {$/;"	c	struct:StateManager
SoundBias	higan/gba/apu/apu.hpp	/^    struct SoundBias {$/;"	s	struct:APU::Registers
Source	higan/sfc/ppu-fast/ppu.hpp	/^  struct Source { enum : uint { BG1, BG2, BG3, BG4, OBJ1, OBJ2, COL }; };$/;"	s	struct:PPU
Source	higan/ws/ppu/ppu.hpp	/^    enum class Source : uint { Back, ScreenOne, ScreenTwo, Sprite };$/;"	c	struct:PPU::Pixel
SourceBWRAM	higan/sfc/coprocessor/sa1/sa1.hpp	/^    enum SD : uint { SourceROM = 0, SourceBWRAM = 1, SourceIRAM = 2 };$/;"	m	struct:SA1::DMA	typeref:enum:SA1::DMA::
SourceEdit	hiro/core/shared.hpp	/^struct SourceEdit : sSourceEdit {$/;"	s
SourceIRAM	higan/sfc/coprocessor/sa1/sa1.hpp	/^    enum SD : uint { SourceROM = 0, SourceBWRAM = 1, SourceIRAM = 2 };$/;"	m	struct:SA1::DMA	typeref:enum:SA1::DMA::
Speaker	hiro/resource/resource.cpp	/^const unsigned char Speaker[592] = {$/;"	m	namespace:Icon::Device	file:
Sprite	higan/gb/ppu/ppu.hpp	/^  struct Sprite {$/;"	s	struct:PPU
Sprite	higan/md/vdp/vdp.hpp	/^  struct Sprite {$/;"	s	struct:VDP
Sprite	higan/ms/vdp/vdp.hpp	/^  struct Sprite {$/;"	s	struct:VDP
Sprite	higan/pce/vdc/vdc.hpp	/^  struct Sprite {$/;"	s	struct:VDC
Sprite	higan/resource/resource.cpp	/^namespace Sprite {$/;"	n	namespace:Resource	file:
Sprite	higan/resource/resource.hpp	/^namespace Sprite {$/;"	n	namespace:Resource
Sprite	higan/video/sprite.cpp	/^Sprite::Sprite(uint width, uint height) : width(width), height(height) {$/;"	f	class:Sprite
Sprite	higan/video/video.hpp	/^struct Sprite {$/;"	s	namespace:Emulator
Square	higan/gba/apu/apu.hpp	/^  struct Square {$/;"	s	struct:APU
Square1	higan/gb/apu/apu.hpp	/^  struct Square1 {$/;"	s	struct:APU
Square1	higan/gba/apu/apu.hpp	/^  struct Square1 : Square {$/;"	s	struct:APU
Square2	higan/gb/apu/apu.hpp	/^  struct Square2 {$/;"	s	struct:APU
Square2	higan/gba/apu/apu.hpp	/^  struct Square2 : Square {$/;"	s	struct:APU
Stable	nall/intrinsics.hpp	/^  enum class Build : uint { Debug, Stable, Size, Release, Performance };$/;"	m	class:nall::Build
Start	higan/fc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Start	higan/gb/system/system.hpp	/^  Up, Down, Left, Right, B, A, Select, Start,$/;"	m	class:Input
Start	higan/gba/system/system.hpp	/^  A, B, Select, Start, Right, Left, Up, Down, R, L,$/;"	m	class:Input
Start	higan/md/controller/control-pad/control-pad.hpp	/^    Up, Down, Left, Right, A, B, C, Start,$/;"	m	struct:ControlPad	typeref:enum:ControlPad::
Start	higan/md/controller/fighting-pad/fighting-pad.hpp	/^    Up, Down, Left, Right, A, B, C, X, Y, Z, Mode, Start,$/;"	m	struct:FightingPad	typeref:enum:FightingPad::
Start	higan/sfc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Start	higan/sfc/controller/justifier/justifier.hpp	/^    X, Y, Trigger, Start,$/;"	m	struct:Justifier	typeref:enum:Justifier::
Start	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:SuperMultitap	typeref:enum:SuperMultitap::
Stat	higan/gb/cpu/cpu.hpp	/^  enum class Interrupt : uint { Vblank, Stat, Timer, Serial, Joypad };$/;"	m	class:CPU::Interrupt
State	higan/md/apu/apu.hpp	/^  struct State {$/;"	s	struct:APU
State	higan/md/cpu/cpu.hpp	/^  struct State {$/;"	s	struct:CPU
State	higan/md/vdp/vdp.hpp	/^    struct State {$/;"	s	struct:VDP::Background
State	higan/md/vdp/vdp.hpp	/^  struct State {$/;"	s	struct:VDP
State	higan/ms/cpu/cpu.hpp	/^  struct State {$/;"	s	struct:CPU
State	higan/ms/vdp/vdp.hpp	/^    struct State {$/;"	s	struct:VDP::Background
State	higan/ms/vdp/vdp.hpp	/^    struct State {$/;"	s	struct:VDP::Sprite
State	higan/processor/v30mz/v30mz.hpp	/^  struct State {$/;"	s	namespace:Processor
State	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  enum class State : uint { Mode, Seek, Read, Write } state;$/;"	c	struct:EpsonRTC
State	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    struct State {$/;"	s	struct:Decompressor::PEM
State	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  enum class State : uint { Ready, Command, Read, Write } state;$/;"	c	struct:SharpRTC
State	higan/sfc/dsp/dsp.hpp	/^  struct State {$/;"	s
State	higan/sfc/ppu/object.hpp	/^  struct State {$/;"	s	struct:Object
State	higan/target-bsnes/program/program.hpp	/^  struct State {$/;"	s	struct:Program
State	higan/ws/apu/apu.hpp	/^    struct State {$/;"	s	struct:APU::Channel1
State	higan/ws/apu/apu.hpp	/^    struct State {$/;"	s	struct:APU::Channel2
State	higan/ws/apu/apu.hpp	/^    struct State {$/;"	s	struct:APU::Channel3
State	higan/ws/apu/apu.hpp	/^    struct State {$/;"	s	struct:APU::Channel4
State	higan/ws/apu/apu.hpp	/^    struct State {$/;"	s	struct:APU::Channel5
State	higan/ws/apu/apu.hpp	/^    struct State {$/;"	s	struct:APU::DMA
State	higan/ws/apu/apu.hpp	/^  struct State {$/;"	s	struct:APU
State	higan/ws/ppu/ppu.hpp	/^  struct State {$/;"	s	struct:PPU
State	hiro/core/application.hpp	/^  static auto state() -> State&;$/;"	m	struct:Application
State	hiro/core/application.hpp	/^  struct State {$/;"	s	struct:Application
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::Alignment
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::BrowserWindow
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::Color
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::Cursor
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::Geometry
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::Gradient
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::Hotkey
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::Keyboard
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::MessageWindow
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::Position
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::Property
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::Size
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mAction
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mButton
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mCanvas
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mCheckButton
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mCheckLabel
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mComboButton
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mComboButtonItem
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mComboEdit
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mComboEditItem
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mConsole
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mFrame
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mHexEdit
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mHorizontalScrollBar
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mHorizontalSlider
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mIconView
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mIconViewItem
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mLabel
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mLineEdit
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mMenu
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mMenuBar
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mMenuCheckItem
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mMenuItem
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mMenuRadioItem
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mMenuSeparator
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mPopupMenu
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mProgressBar
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mRadioButton
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mRadioLabel
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mStatusBar
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mTextEdit
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mTreeView
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mTreeViewItem
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mVerticalScrollBar
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mVerticalSlider
State	hiro/core/core.hpp	/^  struct State {$/;"	s	struct:hiro::mViewport
State	hiro/core/font.hpp	/^  struct State {$/;"	s	struct:Font
State	hiro/core/group.hpp	/^  struct State {$/;"	s	struct:mGroup
State	hiro/core/object.hpp	/^  struct State {$/;"	s	struct:mObject
State	hiro/core/sizable.hpp	/^  struct State {$/;"	s	struct:mSizable
State	hiro/core/timer.hpp	/^  struct State {$/;"	s	struct:mTimer
State	hiro/core/widget/source-edit.hpp	/^  struct State {$/;"	s	struct:mSourceEdit
State	hiro/core/widget/tab-frame-item.hpp	/^  struct State {$/;"	s	struct:mTabFrameItem
State	hiro/core/widget/tab-frame.hpp	/^  struct State {$/;"	s	struct:mTabFrame
State	hiro/core/widget/table-view-cell.hpp	/^  struct State {$/;"	s	struct:mTableViewCell
State	hiro/core/widget/table-view-column.hpp	/^  struct State {$/;"	s	struct:mTableViewColumn
State	hiro/core/widget/table-view-item.hpp	/^  struct State {$/;"	s	struct:mTableViewItem
State	hiro/core/widget/table-view.hpp	/^  struct State {$/;"	s	struct:mTableView
State	hiro/core/widget/widget.hpp	/^  struct State {$/;"	s	struct:mWidget
State	hiro/core/window.hpp	/^  struct State {$/;"	s	struct:mWindow
State	hiro/extension/browser-dialog.hpp	/^  struct State {$/;"	s	struct:BrowserDialog
State	hiro/extension/fixed-layout.hpp	/^  struct State {$/;"	s	struct:mFixedLayout
State	hiro/extension/fixed-layout.hpp	/^  struct State {$/;"	s	struct:mFixedLayoutCell
State	hiro/extension/horizontal-layout.hpp	/^  struct State {$/;"	s	struct:mHorizontalLayout
State	hiro/extension/horizontal-layout.hpp	/^  struct State {$/;"	s	struct:mHorizontalLayoutCell
State	hiro/extension/list-view.hpp	/^  struct State {$/;"	s	struct:mListView
State	hiro/extension/message-dialog.hpp	/^  struct State {$/;"	s	struct:MessageDialog
State	hiro/extension/table-layout.hpp	/^  struct State {$/;"	s	struct:mTableLayout
State	hiro/extension/table-layout.hpp	/^  struct State {$/;"	s	struct:mTableLayoutCell
State	hiro/extension/table-layout.hpp	/^  struct State {$/;"	s	struct:mTableLayoutColumn
State	hiro/extension/table-layout.hpp	/^  struct State {$/;"	s	struct:mTableLayoutRow
State	hiro/extension/vertical-layout.hpp	/^  struct State {$/;"	s	struct:mVerticalLayout
State	hiro/extension/vertical-layout.hpp	/^  struct State {$/;"	s	struct:mVerticalLayoutCell
State	hiro/gtk/application.hpp	/^  static auto state() -> State&;$/;"	m	struct:hiro::pApplication
State	hiro/gtk/application.hpp	/^  struct State {$/;"	s	struct:hiro::pApplication
State	hiro/qt/application.hpp	/^  static auto state() -> State&;$/;"	m	struct:hiro::pApplication
State	hiro/qt/application.hpp	/^  struct State {$/;"	s	struct:hiro::pApplication
State	hiro/windows/application.hpp	/^  static auto state() -> State&;$/;"	m	struct:hiro::pApplication
State	hiro/windows/application.hpp	/^  struct State {$/;"	s	struct:hiro::pApplication
State	nall/string/transform/cml.hpp	/^  struct State {$/;"	s	struct:nall::__anon38::CML
State	nall/string/transform/dml.hpp	/^  struct State {$/;"	s	struct:nall::__anon37::DML
StateManager	higan/target-bsnes/tools/tools.hpp	/^struct StateManager : TabFrameItem, Lock {$/;"	s
StateManager	higan/target-higan/tools/state-manager.cpp	/^StateManager::StateManager(TabFrame* parent) : TabFrameItem(parent) {$/;"	f	class:StateManager
StateManager	higan/target-higan/tools/tools.hpp	/^struct StateManager : TabFrameItem {$/;"	s
StateWindow	higan/target-bsnes/tools/tools.hpp	/^struct StateWindow : Window {$/;"	s
Statement	nall/database/odbc.hpp	/^    Statement(SQLHANDLE statement) : _statement(statement) {}$/;"	f	struct:nall::Database::ODBC::Statement
Statement	nall/database/odbc.hpp	/^    Statement(Statement&& source) { operator=(move(source)); }$/;"	f	struct:nall::Database::ODBC::Statement
Statement	nall/database/odbc.hpp	/^    auto operator=(const Statement& source) -> Statement& = delete;$/;"	m	struct:nall::Database::ODBC::Statement
Statement	nall/database/odbc.hpp	/^  struct Statement {$/;"	s	struct:nall::Database::ODBC
Statement	nall/database/sqlite3.hpp	/^    Statement(Statement&& source) { operator=(move(source)); }$/;"	f	struct:nall::Database::SQLite3::Statement
Statement	nall/database/sqlite3.hpp	/^    Statement(sqlite3_stmt* statement) : _statement(statement) {}$/;"	f	struct:nall::Database::SQLite3::Statement
Statement	nall/database/sqlite3.hpp	/^    auto operator=(const Statement& source) -> Statement& = delete;$/;"	m	struct:nall::Database::SQLite3::Statement
Statement	nall/database/sqlite3.hpp	/^  struct Statement {$/;"	s	struct:nall::Database::SQLite3
Status	higan/gb/cpu/cpu.hpp	/^  struct Status {$/;"	s	struct:CPU
Status	higan/gb/ppu/ppu.hpp	/^  struct Status {$/;"	s	struct:PPU
Status	higan/gba/player/player.hpp	/^  struct Status {$/;"	s	struct:Player
Status	higan/processor/upd96050/upd96050.hpp	/^  struct Status {$/;"	s	struct:Processor::uPD96050
Status	higan/sfc/coprocessor/sa1/sa1.hpp	/^  struct Status {$/;"	s	struct:SA1
Status	higan/sfc/cpu/cpu.hpp	/^  struct Status {$/;"	s	struct:CPU
Status	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    struct Status {$/;"	s	struct:BSMemory::Block
Status	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    struct Status {$/;"	s	struct:BSMemory::Compatible
Status	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    struct Status {$/;"	s	struct:BSMemory::Global
Status	higan/ws/eeprom/eeprom.hpp	/^    Status,$/;"	m	struct:EEPROM	typeref:enum:EEPROM::
StatusBar	hiro/core/shared.hpp	/^struct StatusBar : sStatusBar {$/;"	s
StatusBar	hiro/core/window.hpp	/^  auto statusBar() const -> StatusBar;$/;"	m	struct:mWindow
Step	higan/emulator/scheduler.hpp	/^    Step,$/;"	m	class:Emulator::Scheduler::Event
Stop	hiro/resource/resource.cpp	/^const unsigned char Stop[429] = {$/;"	m	namespace:Icon::Media	file:
Stop	hiro/resource/resource.cpp	/^const unsigned char Stop[820] = {$/;"	m	namespace:Icon::Action	file:
Storage	hiro/resource/resource.cpp	/^const unsigned char Storage[603] = {$/;"	m	namespace:Icon::Device	file:
Store	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    Store         = 1 << 7,  \/\/store operation$/;"	m	struct:Processor::ARM7TDMI	typeref:enum:Processor::ARM7TDMI::
Stream	higan/audio/audio.hpp	/^struct Stream {$/;"	s	namespace:Emulator
Subscript	nall/string/eval/node.hpp	/^    Function, Subscript, Member, SuffixIncrement, SuffixDecrement,$/;"	m	class:nall::Eval::Node::Type
Subtract	nall/string/eval/node.hpp	/^    Add, Subtract,$/;"	m	class:nall::Eval::Node::Type
SufamiTurbo	higan/target-bsnes/program/program.hpp	/^  struct SufamiTurbo : Game {$/;"	s	struct:Program
SufamiTurbo	icarus/core/core.hpp	/^  Markup::Node SufamiTurbo;$/;"	m	namespace:Database
SufamiTurbo	icarus/heuristics/sufami-turbo.cpp	/^SufamiTurbo::SufamiTurbo(vector<uint8_t>& data, string location) : data(data), location(location) {$/;"	f	class:Heuristics::SufamiTurbo
SufamiTurbo	icarus/heuristics/sufami-turbo.cpp	/^struct SufamiTurbo {$/;"	s	namespace:Heuristics	file:
SufamiTurboA	higan/sfc/interface/interface.hpp	/^    SufamiTurboA,$/;"	m	struct:SuperFamicom::ID	typeref:enum:SuperFamicom::ID::
SufamiTurboB	higan/sfc/interface/interface.hpp	/^    SufamiTurboB,$/;"	m	struct:SuperFamicom::ID	typeref:enum:SuperFamicom::ID::
SufamiTurboCartridge	higan/sfc/slot/sufamiturbo/sufamiturbo.hpp	/^struct SufamiTurboCartridge {$/;"	s
SufamiTurboSlotA	higan/sfc/cartridge/cartridge.hpp	/^    boolean SufamiTurboSlotA;$/;"	m	struct:Cartridge::Has
SufamiTurboSlotB	higan/sfc/cartridge/cartridge.hpp	/^    boolean SufamiTurboSlotB;$/;"	m	struct:Cartridge::Has
SuffixArray	nall/suffix-array.hpp	/^  inline SuffixArray(array_view<uint8_t> input) : input(input) {$/;"	f	struct:nall::SuffixArray
SuffixArray	nall/suffix-array.hpp	/^struct SuffixArray {$/;"	s	namespace:nall
SuffixDecrement	nall/string/eval/node.hpp	/^    Function, Subscript, Member, SuffixIncrement, SuffixDecrement,$/;"	m	class:nall::Eval::Node::Type
SuffixIncrement	nall/string/eval/node.hpp	/^    Function, Subscript, Member, SuffixIncrement, SuffixDecrement,$/;"	m	class:nall::Eval::Node::Type
Sunsoft5B	higan/fc/cartridge/board/sunsoft-5b.cpp	/^  Sunsoft5B(Markup::Node& document) : Board(document) {$/;"	f	struct:Sunsoft5B
Sunsoft5B	higan/fc/cartridge/board/sunsoft-5b.cpp	/^struct Sunsoft5B : Board {$/;"	s	file:
SuperFX	higan/sfc/cartridge/cartridge.hpp	/^    boolean SuperFX;$/;"	m	struct:Cartridge::Has
SuperFX	higan/sfc/coprocessor/superfx/superfx.hpp	/^struct SuperFX : Processor::GSU, Thread {$/;"	s
SuperFamicom	higan/sfc/cartridge/cartridge.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/controller/controller.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/armdsp/armdsp.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/dip/dip.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/epsonrtc/epsonrtc.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/event/event.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/hitachidsp/hitachidsp.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/icd/icd.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/mcc/mcc.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/msu1/msu1.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/necdsp/necdsp.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/obc1/obc1.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/sa1/sa1.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/sdd1/sdd1.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/sharprtc/sharprtc.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/spc7110/spc7110.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/coprocessor/superfx/superfx.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/cpu/cpu.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/dsp/dsp.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/expansion/21fx/21fx.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/expansion/expansion.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/expansion/satellaview/satellaview.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/interface/interface.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/interface/interface.hpp	/^    SuperFamicom,$/;"	m	struct:SuperFamicom::ID	typeref:enum:SuperFamicom::ID::
SuperFamicom	higan/sfc/interface/interface.hpp	/^namespace SuperFamicom {$/;"	n
SuperFamicom	higan/sfc/memory/memory.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/ppu-fast/ppu.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/ppu/ppu.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/sfc.hpp	/^namespace SuperFamicom {$/;"	n
SuperFamicom	higan/sfc/slot/bsmemory/bsmemory.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/slot/sufamiturbo/sufamiturbo.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/smp/smp.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/sfc/system/system.cpp	/^namespace SuperFamicom {$/;"	n	file:
SuperFamicom	higan/target-bsnes/program/program.hpp	/^  struct SuperFamicom : Game {$/;"	s	struct:Program
SuperFamicom	icarus/core/core.hpp	/^  Markup::Node SuperFamicom;$/;"	m	namespace:Database
SuperFamicom	icarus/heuristics/super-famicom.cpp	/^SuperFamicom::SuperFamicom(vector<uint8_t>& data, string location) : data(data), location(location) {$/;"	f	class:Heuristics::SuperFamicom
SuperFamicom	icarus/heuristics/super-famicom.cpp	/^struct SuperFamicom {$/;"	s	namespace:Heuristics	file:
SuperGameBoy	higan/gb/interface/interface.hpp	/^    SuperGameBoy,$/;"	m	struct:GameBoy::ID	typeref:enum:GameBoy::ID::
SuperGameBoy	higan/gb/system/system.hpp	/^    SuperGameBoy,$/;"	m	class:System::Model
SuperGrafx	higan/pce/interface/interface.hpp	/^    SuperGrafx,$/;"	m	struct:PCEngine::ID	typeref:enum:PCEngine::ID::
SuperGrafx	icarus/core/core.hpp	/^  Markup::Node SuperGrafx;$/;"	m	namespace:Database
SuperGrafx	icarus/heuristics/supergrafx.cpp	/^SuperGrafx::SuperGrafx(vector<uint8_t>& data, string location) : data(data), location(location) {$/;"	f	class:Heuristics::SuperGrafx
SuperGrafx	icarus/heuristics/supergrafx.cpp	/^struct SuperGrafx {$/;"	s	namespace:Heuristics	file:
SuperMultitap	higan/sfc/controller/super-multitap/super-multitap.cpp	/^SuperMultitap::SuperMultitap(uint port) : Controller(port) {$/;"	f	class:SuperMultitap
SuperMultitap	higan/sfc/controller/super-multitap/super-multitap.hpp	/^struct SuperMultitap : Controller {$/;"	s
SuperMultitap	higan/sfc/interface/interface.hpp	/^    SuperMultitap,$/;"	m	struct:Device	typeref:enum:Device::
SuperScope	higan/sfc/controller/super-scope/super-scope.cpp	/^SuperScope::SuperScope(uint port) : Controller(port) {$/;"	f	class:SuperScope
SuperScope	higan/sfc/controller/super-scope/super-scope.hpp	/^struct SuperScope : Controller {$/;"	s
SuperScope	higan/sfc/interface/interface.hpp	/^    SuperScope,$/;"	m	struct:Device	typeref:enum:Device::
Suspend	higan/processor/hg51b/hg51b.hpp	/^    struct Suspend {$/;"	s	struct:Processor::HG51B::IO
Sustain	higan/md/ym2612/ym2612.hpp	/^  enum : uint { Attack, Decay, Sustain, Release };$/;"	m	struct:YM2612	typeref:enum:YM2612::
SwanCrystal	higan/ws/system/system.hpp	/^  enum class Model : uint { WonderSwan, WonderSwanColor, SwanCrystal, PocketChallengeV2 };$/;"	m	class:System::Model
Sweep	higan/fc/apu/apu.hpp	/^  struct Sweep {$/;"	s	struct:APU
Sweep	higan/gba/apu/apu.hpp	/^  struct Sweep {$/;"	s	struct:APU
Synchronize	higan/emulator/scheduler.hpp	/^    Synchronize,$/;"	m	class:Emulator::Scheduler::Event
SynchronizeMaster	higan/emulator/scheduler.hpp	/^    SynchronizeMaster,$/;"	m	class:Emulator::Scheduler::Mode
SynchronizeSlave	higan/emulator/scheduler.hpp	/^    SynchronizeSlave,$/;"	m	class:Emulator::Scheduler::Mode
System	higan/fc/system/system.hpp	/^struct System {$/;"	s
System	higan/gb/system/system.hpp	/^struct System {$/;"	s
System	higan/gba/system/system.hpp	/^struct System {$/;"	s
System	higan/md/system/system.hpp	/^struct System {$/;"	s
System	higan/ms/system/system.hpp	/^struct System {$/;"	s
System	higan/pce/system/system.hpp	/^struct System {$/;"	s
System	higan/sfc/interface/configuration.hpp	/^  struct System {$/;"	s	struct:Configuration
System	higan/sfc/system/system.hpp	/^struct System {$/;"	s
System	higan/target-bsnes/resource/resource.cpp	/^namespace System {$/;"	n	namespace:Resource	file:
System	higan/target-bsnes/resource/resource.hpp	/^namespace System {$/;"	n	namespace:Resource
System	higan/ws/system/system.hpp	/^struct System : IO {$/;"	s
SystemProperties	higan/target-higan/settings/settings.hpp	/^struct SystemProperties : Window {$/;"	s
SystemProperties	higan/target-higan/settings/system-properties.cpp	/^SystemProperties::SystemProperties() {$/;"	f	class:SystemProperties
SystemSettings	higan/target-higan/settings/settings.hpp	/^struct SystemSettings : TabFrameItem {$/;"	s
SystemSettings	higan/target-higan/settings/systems.cpp	/^SystemSettings::SystemSettings(TabFrame* parent) : TabFrameItem(parent) {$/;"	f	class:SystemSettings
T	higan/processor/huc6280/huc6280.cpp	19;"	d	file:
T	higan/processor/huc6280/huc6280.cpp	46;"	d	file:
T	nall/memory.hpp	/^  template<typename T = uint8_t> inline auto allocate(uint size) -> T*;$/;"	m	namespace:nall::memory
T	nall/memory.hpp	/^  template<typename T = uint8_t> inline auto allocate(uint size, const T& value) -> T*;$/;"	m	namespace:nall::memory
T	nall/memory.hpp	/^  template<typename T = uint8_t> inline auto copy(void* target, const void* source, uint size) -> T*;$/;"	m	namespace:nall::memory
T	nall/memory.hpp	/^  template<typename T = uint8_t> inline auto copy(void* target, uint capacity, const void* source, uint size) -> T*;$/;"	m	namespace:nall::memory
T	nall/memory.hpp	/^  template<typename T = uint8_t> inline auto fill(void* target, uint capacity, const T& value = {}) -> T*;$/;"	m	namespace:nall::memory
T	nall/memory.hpp	/^  template<typename T = uint8_t> inline auto move(void* target, const void* source, uint size) -> T*;$/;"	m	namespace:nall::memory
T	nall/memory.hpp	/^  template<typename T = uint8_t> inline auto move(void* target, uint capacity, const void* source, uint size) -> T*;$/;"	m	namespace:nall::memory
T	nall/memory.hpp	/^  template<typename T = uint8_t> inline auto resize(void* target, uint size) -> T*;$/;"	m	namespace:nall::memory
T	nall/memory.hpp	/^  template<uint size, typename T = uint64_t> inline auto readl(const void* source) -> T;$/;"	m	namespace:nall::memory
T	nall/memory.hpp	/^  template<uint size, typename T = uint64_t> inline auto readm(const void* source) -> T;$/;"	m	namespace:nall::memory
T	nall/string.hpp	/^  template<typename T = char> inline auto data() const -> const T*;$/;"	m	struct:nall::string
T	nall/string.hpp	/^  template<typename T = char> inline auto get() -> T*;$/;"	m	struct:nall::string
T	nall/vector.hpp	/^  alwaysinline auto left() -> T&;$/;"	m	struct:nall::vector_base
T	nall/vector.hpp	/^  alwaysinline auto left() const -> const T&;$/;"	m	struct:nall::vector_base
T	nall/vector.hpp	/^  alwaysinline auto operator()(uint offset) -> T&;$/;"	m	struct:nall::vector_base
T	nall/vector.hpp	/^  alwaysinline auto operator()(uint offset, const T& value) const -> const T&;$/;"	m	struct:nall::vector_base
T	nall/vector.hpp	/^  alwaysinline auto operator[](uint offset) -> T&;$/;"	m	struct:nall::vector_base
T	nall/vector.hpp	/^  alwaysinline auto operator[](uint offset) const -> const T&;$/;"	m	struct:nall::vector_base
T	nall/vector.hpp	/^  alwaysinline auto right() -> T&;$/;"	m	struct:nall::vector_base
T	nall/vector.hpp	/^  alwaysinline auto right() const -> const T&;$/;"	m	struct:nall::vector_base
T	nall/vector.hpp	/^  auto release() -> T*;$/;"	m	struct:nall::vector_base
T	nall/vector.hpp	/^  auto take(uint offset) -> T;$/;"	m	struct:nall::vector_base
T	nall/vector.hpp	/^  auto takeLeft() -> T;$/;"	m	struct:nall::vector_base
T	nall/vector.hpp	/^  auto takeRight() -> T;$/;"	m	struct:nall::vector_base
TAMA	higan/gb/cartridge/tama/tama.hpp	/^struct TAMA : Mapper {$/;"	s
TBROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TBROM,$/;"	m	class:NES_TxROM::Revision	file:
TBS_TRANSPARENTBKGND	hiro/gtk/header.hpp	2;"	d
TBS_TRANSPARENTBKGND	hiro/windows/header.hpp	75;"	d
TEROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TEROM,$/;"	m	class:NES_TxROM::Revision	file:
TFROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TFROM,$/;"	m	class:NES_TxROM::Revision	file:
TGROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TGROM,$/;"	m	class:NES_TxROM::Revision	file:
TKROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TKROM,$/;"	m	class:NES_TxROM::Revision	file:
TKSROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TKSROM,$/;"	m	class:NES_TxROM::Revision	file:
TL1ROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TL1ROM,$/;"	m	class:NES_TxROM::Revision	file:
TL2ROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TL2ROM,$/;"	m	class:NES_TxROM::Revision	file:
TLROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TLROM,$/;"	m	class:NES_TxROM::Revision	file:
TLSROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TLSROM,$/;"	m	class:NES_TxROM::Revision	file:
TNROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TNROM,$/;"	m	class:NES_TxROM::Revision	file:
TQROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TQROM,$/;"	m	class:NES_TxROM::Revision	file:
TR1ROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TR1ROM,$/;"	m	class:NES_TxROM::Revision	file:
TSROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TSROM,$/;"	m	class:NES_TxROM::Revision	file:
TTP_STANDARD	hiro/windows/header.hpp	79;"	d
TTSS_NORMAL	hiro/windows/header.hpp	83;"	d
TVROM	higan/fc/cartridge/board/nes-txrom.cpp	/^    TVROM,$/;"	m	class:NES_TxROM::Revision	file:
Tab	hiro/gtk/widget/tab-frame.hpp	/^  struct Tab {$/;"	s	struct:hiro::pTabFrame
TabFrame	hiro/core/shared.hpp	/^struct TabFrame : sTabFrame {$/;"	s
TabFrameItem	hiro/core/shared.hpp	/^struct TabFrameItem : sTabFrameItem {$/;"	s
TabFrameItem	hiro/core/widget/tab-frame.hpp	/^  auto item(uint position) const -> TabFrameItem;$/;"	m	struct:mTabFrame
TabFrameItem	hiro/core/widget/tab-frame.hpp	/^  auto selected() const -> TabFrameItem;$/;"	m	struct:mTabFrame
TableLayout	hiro/extension/shared.hpp	/^struct TableLayout : sTableLayout {$/;"	s
TableLayoutCell	hiro/extension/shared.hpp	/^struct TableLayoutCell : sTableLayoutCell {$/;"	s
TableLayoutCell	hiro/extension/table-layout.hpp	/^  auto cell(sSizable sizable) const -> TableLayoutCell;$/;"	m	struct:mTableLayout
TableLayoutCell	hiro/extension/table-layout.hpp	/^  auto cell(uint position) const -> TableLayoutCell;$/;"	m	struct:mTableLayout
TableLayoutCell	hiro/extension/table-layout.hpp	/^  auto cell(uint x, uint y) const -> TableLayoutCell;$/;"	m	struct:mTableLayout
TableLayoutColumn	hiro/extension/shared.hpp	/^struct TableLayoutColumn : sTableLayoutColumn {$/;"	s
TableLayoutColumn	hiro/extension/table-layout.hpp	/^  auto column(uint position) const -> TableLayoutColumn;$/;"	m	struct:mTableLayout
TableLayoutRow	hiro/extension/shared.hpp	/^struct TableLayoutRow : sTableLayoutRow {$/;"	s
TableLayoutRow	hiro/extension/table-layout.hpp	/^  auto row(uint position) const -> TableLayoutRow;$/;"	m	struct:mTableLayout
TableView	hiro/core/shared.hpp	/^struct TableView : sTableView {$/;"	s
TableViewCell	hiro/core/shared.hpp	/^struct TableViewCell : sTableViewCell {$/;"	s
TableViewCell	hiro/core/widget/table-view-item.hpp	/^  auto cell(uint position) const -> TableViewCell;$/;"	m	struct:mTableViewItem
TableViewColumn	hiro/core/shared.hpp	/^struct TableViewColumn : sTableViewColumn {$/;"	s
TableViewColumn	hiro/core/widget/table-view.hpp	/^  auto column(uint position) const -> TableViewColumn;$/;"	m	struct:mTableView
TableViewItem	hiro/core/shared.hpp	/^struct TableViewItem : sTableViewItem {$/;"	s
TableViewItem	hiro/core/widget/table-view.hpp	/^  auto item(uint position) const -> TableViewItem;$/;"	m	struct:mTableView
TableViewItem	hiro/core/widget/table-view.hpp	/^  auto selected() const -> TableViewItem;$/;"	m	struct:mTableView
TableView_doPaint	hiro/windows/platform.hpp	/^    TableView_doPaint,$/;"	m	struct:hiro::AppMessage	typeref:enum:hiro::AppMessage::
TableView_onActivate	hiro/windows/platform.hpp	/^    TableView_onActivate,$/;"	m	struct:hiro::AppMessage	typeref:enum:hiro::AppMessage::
TableView_onChange	hiro/windows/platform.hpp	/^    TableView_onChange,$/;"	m	struct:hiro::AppMessage	typeref:enum:hiro::AppMessage::
Terminal	hiro/resource/resource.cpp	/^const unsigned char Terminal[668] = {$/;"	m	namespace:Icon::Application	file:
Text	hiro/resource/resource.cpp	/^const unsigned char Text[333] = {$/;"	m	namespace:Icon::Emblem	file:
TextEdit	hiro/core/shared.hpp	/^struct TextEdit : sTextEdit {$/;"	s
TextEditor	hiro/resource/resource.cpp	/^const unsigned char TextEditor[574] = {$/;"	m	namespace:Icon::Application	file:
Theme	hiro/gtk/settings.hpp	/^  struct Theme {$/;"	s	struct:hiro::Settings
Thread	higan/emulator/thread.hpp	/^struct Thread {$/;"	s	namespace:Emulator
Thread	higan/fc/fc.hpp	/^  struct Thread : Emulator::Thread {$/;"	s	namespace:Famicom
Thread	higan/gb/gb.hpp	/^  struct Thread : Emulator::Thread {$/;"	s	namespace:GameBoy
Thread	higan/gba/gba.hpp	/^  struct Thread : Emulator::Thread {$/;"	s	namespace:GameBoyAdvance
Thread	higan/md/md.hpp	/^  struct Thread : Emulator::Thread {$/;"	s
Thread	higan/ms/ms.hpp	/^  struct Thread : Emulator::Thread {$/;"	s	namespace:MasterSystem
Thread	higan/pce/pce.hpp	/^  struct Thread : Emulator::Thread {$/;"	s	namespace:PCEngine
Thread	higan/sfc/sfc.hpp	/^  struct Thread : Emulator::Thread {$/;"	s	namespace:SuperFamicom
Thread	higan/ws/ws.hpp	/^  struct Thread : Emulator::Thread {$/;"	s	namespace:WonderSwan
Tile	higan/sfc/ppu/object.hpp	/^  struct Tile {$/;"	s	struct:Object
TileMode	higan/sfc/ppu-fast/ppu.hpp	/^  struct TileMode { enum : uint { BPP2, BPP4, BPP8, Mode7, Inactive }; };$/;"	s
Timeout	hiro/windows/tool-tip.hpp	/^  enum : uint { Delay = 1000, Timeout = 10000 };$/;"	m	struct:hiro::pToolTip	typeref:enum:hiro::pToolTip::
Timer	higan/gb/cpu/cpu.hpp	/^  enum class Interrupt : uint { Vblank, Stat, Timer, Serial, Joypad };$/;"	m	class:CPU::Interrupt
Timer	higan/gba/cpu/cpu.hpp	/^  struct Timer {$/;"	s
Timer	higan/pce/cpu/cpu.hpp	/^  struct Timer {$/;"	s	struct:CPU
Timer	higan/sfc/smp/smp.hpp	/^  struct Timer {$/;"	s	struct:SMP
Timer	hiro/core/shared.hpp	/^struct Timer : sTimer {$/;"	s
Timer0	higan/gba/cpu/cpu.hpp	/^    Timer0       = 0x0008,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
Timer1	higan/gba/cpu/cpu.hpp	/^    Timer1       = 0x0010,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
Timer2	higan/gba/cpu/cpu.hpp	/^    Timer2       = 0x0020,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
Timer3	higan/gba/cpu/cpu.hpp	/^    Timer3       = 0x0040,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
TimerA	higan/md/ym2612/ym2612.hpp	/^  struct TimerA {$/;"	s	struct:YM2612
TimerB	higan/md/ym2612/ym2612.hpp	/^  struct TimerB {$/;"	s	struct:YM2612
Timestamp	nall/beat/archive/node.hpp	/^  struct Timestamp {$/;"	s	struct:nall::Beat::Archive::Node
Timing	higan/pce/vce/vce.hpp	/^  struct Timing {$/;"	s	struct:VCE
Timing	higan/pce/vdc/vdc.hpp	/^  struct Timing {$/;"	s	struct:VDC
Tone	higan/md/psg/psg.hpp	/^  struct Tone {$/;"	s	struct:PSG
Tone	higan/ms/psg/psg.hpp	/^  struct Tone {$/;"	s	struct:PSG
ToolsManager	higan/target-higan/tools/tools.cpp	/^ToolsManager::ToolsManager() {$/;"	f	class:ToolsManager
ToolsManager	higan/target-higan/tools/tools.hpp	/^struct ToolsManager : Window {$/;"	s
ToolsWindow	higan/target-bsnes/tools/tools.hpp	/^  auto setVisible(bool visible = true) -> ToolsWindow&;$/;"	m	struct:ToolsWindow
ToolsWindow	higan/target-bsnes/tools/tools.hpp	/^struct ToolsWindow : Window {$/;"	s
Top	hiro/core/core.hpp	/^enum class Navigation : uint { Top, Bottom, Left, Right };$/;"	m	class:hiro::Navigation
TotalCyclesSinceLastQuery	ruby/audio/xaudio2.hpp	/^  UINT64 TotalCyclesSinceLastQuery;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
TotalSourceVoiceCount	ruby/audio/xaudio2.hpp	/^  UINT32 TotalSourceVoiceCount;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
TotalSubmixVoiceCount	ruby/audio/xaudio2.hpp	/^  UINT32 TotalSubmixVoiceCount;$/;"	m	struct:XAUDIO2_PERFORMANCE_DATA
TraceMask	ruby/audio/xaudio2.hpp	/^  UINT32 TraceMask;$/;"	m	struct:XAUDIO2_DEBUG_CONFIGURATION
TransferSATB	higan/pce/vdc/vdc.hpp	/^      TransferSATB,$/;"	m	class:VDC::IRQ::Line
TransferVRAM	higan/pce/vdc/vdc.hpp	/^      TransferVRAM,$/;"	m	class:VDC::IRQ::Line
Trap	higan/processor/m68k/m68k.hpp	/^    Trap,$/;"	m	struct:Processor::Exception	typeref:enum:Processor::Exception::
TreeView	hiro/core/shared.hpp	/^struct TreeView : sTreeView {$/;"	s
TreeViewItem	hiro/core/core.hpp	/^  auto item(const string& path) const -> TreeViewItem;$/;"	m	struct:hiro::mTreeView
TreeViewItem	hiro/core/core.hpp	/^  auto item(const string& path) const -> TreeViewItem;$/;"	m	struct:hiro::mTreeViewItem
TreeViewItem	hiro/core/core.hpp	/^  auto selected() const -> TreeViewItem;$/;"	m	struct:hiro::mTreeView
TreeViewItem	hiro/core/shared.hpp	/^struct TreeViewItem : sTreeViewItem {$/;"	s
Triangle	higan/fc/apu/apu.hpp	/^  struct Triangle {$/;"	s	struct:APU
Trigger	higan/emulator/interface.hpp	/^      Trigger,$/;"	m	struct:Emulator::Input::Type	typeref:enum:Emulator::Input::Type::
Trigger	higan/sfc/controller/justifier/justifier.hpp	/^    X, Y, Trigger, Start,$/;"	m	struct:Justifier	typeref:enum:Justifier::
Trigger	higan/sfc/controller/super-scope/super-scope.hpp	/^    X, Y, Trigger, Cursor, Turbo, Pause,$/;"	m	struct:SuperScope	typeref:enum:SuperScope::
Trigger	nall/hid.hpp	/^  enum GroupID : uint { Axis, Hat, Trigger, Button };$/;"	m	struct:nall::Joypad	typeref:enum:nall::Joypad::
True	nall/xorg/guard.hpp	42;"	d
Turbo	higan/sfc/controller/super-scope/super-scope.hpp	/^    X, Y, Trigger, Cursor, Turbo, Pause,$/;"	m	struct:SuperScope	typeref:enum:SuperScope::
Turbo	higan/target-bsnes/settings/settings.hpp	/^    struct Turbo {$/;"	s	struct:Settings::Input
Two	higan/ms/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, One, Two,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Two	higan/pce/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, Two, One, Select, Run,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Type	genius/genius.hpp	/^  enum class Type : uint {$/;"	c	struct:Component
Type	higan/audio/audio.hpp	/^  enum class Type : uint { LowPass, HighPass };$/;"	c	struct:Emulator::Filter
Type	higan/emulator/interface.hpp	/^    struct Type { enum : uint {$/;"	s	struct:Emulator::Input
Type	higan/emulator/interface.hpp	/^    struct Type { enum : uint {$/;"	s	struct:Emulator::Interface::Display
Type	nall/arithmetic/natural.hpp	/^  friend auto lower(const Pair&) -> Type;$/;"	m	struct:nall::Pair
Type	nall/arithmetic/natural.hpp	/^  friend auto upper(const Pair&) -> Type;$/;"	m	struct:nall::Pair
Type	nall/arithmetic/natural.hpp	5;"	d
Type	nall/dsp/iir/biquad.hpp	/^  enum class Type : uint {$/;"	c	struct:nall::DSP::IIR::Biquad
Type	nall/dsp/iir/one-pole.hpp	/^  enum class Type : uint {$/;"	c	struct:nall::DSP::IIR::OnePole
Type	nall/string/eval/node.hpp	/^  enum class Type : uint {$/;"	c	struct:nall::Eval::Node
Type	ruby/audio/xaudio2.hpp	/^  XAUDIO2_FILTER_TYPE Type;$/;"	m	struct:XAUDIO2_FILTER_PARAMETERS
Type	ruby/input/shared/rawinput.cpp	/^    enum class Type : uint { Keyboard, Mouse, Joypad } type;$/;"	c	struct:RawInput::Device	file:
TypeBits	nall/arithmetic.hpp	26;"	d
TypeBits	nall/arithmetic.hpp	30;"	d
TypeBits	nall/arithmetic.hpp	35;"	d
TypeBits	nall/arithmetic.hpp	39;"	d
TypeBits	nall/arithmetic.hpp	43;"	d
TypeBits	nall/arithmetic.hpp	47;"	d
TypeBits	nall/arithmetic.hpp	51;"	d
TypeBits	nall/arithmetic.hpp	55;"	d
TypeBits	nall/arithmetic.hpp	59;"	d
TypeBits	nall/arithmetic.hpp	63;"	d
TypeBits	nall/arithmetic.hpp	67;"	d
TypeBits	nall/arithmetic.hpp	71;"	d
TypeBits	nall/arithmetic.hpp	75;"	d
TypeBits	nall/arithmetic.hpp	79;"	d
TypeBits	nall/arithmetic/natural.hpp	/^  lhs = {lower(rhs) >> TypeBits, lower(rhs)};$/;"	m	namespace:nall
U	higan/processor/huc6280/disassembler.cpp	333;"	d	file:
U	higan/processor/huc6280/disassembler.cpp	75;"	d	file:
U	higan/processor/huc6280/instruction.cpp	288;"	d	file:
U	higan/processor/huc6280/instruction.cpp	29;"	d	file:
U	nall/adaptive-array.hpp	/^    U() {}$/;"	f	union:nall::adaptive_array::U
U	nall/adaptive-array.hpp	/^  union U {$/;"	u	struct:nall::adaptive_array
U	nall/array-view.hpp	/^  template<typename U> auto readl(U& value, uint size) -> U;$/;"	m	struct:nall::array_view
U	nall/array-view.hpp	/^  template<typename U> auto readm(U& value, uint size) -> U;$/;"	m	struct:nall::array_view
U	nall/array-view.hpp	/^  template<typename U> auto readvi(U& value, uint size) -> U;$/;"	m	struct:nall::array_view
U	nall/array-view.hpp	/^  template<typename U> auto readvn(U& value, uint size) -> U;$/;"	m	struct:nall::array_view
U	nall/maybe.hpp	/^    U() {}$/;"	f	union:nall::maybe::U
U	nall/maybe.hpp	/^  union U {$/;"	u	struct:nall::maybe
UND	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      UND = 0x1b,  \/\/undefined$/;"	m	struct:Processor::PSR	typeref:enum:Processor::PSR::
UND	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    struct UND {$/;"	s	struct:Processor
UNICODE	nall/windows/guard.hpp	16;"	d
UNICODE	nall/windows/guard.hpp	7;"	d
Undo	hiro/resource/resource.cpp	/^const unsigned char Undo[650] = {$/;"	m	namespace:Icon::Edit	file:
Union	higan/fc/ppu/ppu.hpp	/^    union Union {$/;"	u	struct:PPU::IO
Unknown	higan/sfc/coprocessor/event/event.hpp	/^  enum class Board : uint { Unknown, CampusChallenge92, PowerFest94 } board;$/;"	m	class:Event::Board
Unmapped	higan/gb/memory/memory.hpp	/^struct Unmapped : MMIO {$/;"	s
UnmappedIO	higan/gba/memory/memory.cpp	/^struct UnmappedIO : IO {$/;"	s	namespace:GameBoyAdvance	file:
Unprivileged	higan/processor/m68k/m68k.hpp	/^    Unprivileged    =  8,$/;"	m	struct:Vector	typeref:enum:Vector::
Unprivileged	higan/processor/m68k/m68k.hpp	/^    Unprivileged,$/;"	m	struct:Processor::Exception	typeref:enum:Processor::Exception::
Up	higan/gb/system/system.hpp	/^  Up, Down, Left, Right, B, A, Select, Start,$/;"	m	class:Input
Up	higan/gba/system/system.hpp	/^  A, B, Select, Start, Right, Left, Up, Down, R, L,$/;"	m	class:Input
Up	hiro/resource/resource.cpp	/^const unsigned char Up[652] = {$/;"	m	namespace:Icon::Go	file:
V	higan/processor/huc6280/huc6280.cpp	20;"	d	file:
V	higan/processor/huc6280/huc6280.cpp	47;"	d	file:
V	higan/processor/mos6502/mos6502.cpp	19;"	d	file:
V	higan/processor/mos6502/mos6502.cpp	43;"	d	file:
V30MZ	higan/processor/v30mz/v30mz.hpp	/^struct V30MZ {$/;"	s	namespace:Processor
VCE	higan/pce/vce/vce.hpp	/^struct VCE : Thread {$/;"	s
VCoincidence	higan/gba/cpu/cpu.hpp	/^    VCoincidence = 0x0004,$/;"	m	struct:CPU::Interrupt	typeref:enum:CPU::Interrupt::
VDC	higan/pce/vdc/vdc.hpp	/^struct VDC : Thread {$/;"	s
VDP	higan/md/vdp/vdp.hpp	/^struct VDP : Thread {$/;"	s
VDP	higan/ms/vdp/vdp.hpp	/^struct VDP : Thread {$/;"	s
VF	higan/processor/spc700/spc700.cpp	20;"	d	file:
VF	higan/processor/spc700/spc700.cpp	57;"	d	file:
VF	higan/processor/wdc65816/wdc65816.cpp	22;"	d	file:
VF	higan/processor/wdc65816/wdc65816.cpp	81;"	d	file:
VF	higan/processor/z80/registers.cpp	46;"	d	file:
VOLL	higan/sfc/dsp/dsp.hpp	/^    VOLL   = 0x00, VOLR   = 0x01,$/;"	e	enum:uint
VOLR	higan/sfc/dsp/dsp.hpp	/^    VOLL   = 0x00, VOLR   = 0x01,$/;"	e	enum:uint
VPC	higan/pce/vpc/vpc.hpp	/^struct VPC {$/;"	s
VRAM	higan/md/vdp/vdp.hpp	/^  struct VRAM {$/;"	s	struct:VDP
VRAM	higan/pce/vdc/vdc.hpp	/^  struct VRAM {$/;"	s	struct:VDC
VRAM	higan/sfc/interface/configuration.hpp	/^      struct VRAM {$/;"	s	struct:Configuration::System::PPU1
VRAM	higan/sfc/ppu/ppu.hpp	/^  struct VRAM {$/;"	s	struct:PPU
VRC1	higan/fc/cartridge/chip/vrc1.cpp	/^  VRC1(Board& board) : Chip(board) {$/;"	f	struct:VRC1
VRC1	higan/fc/cartridge/chip/vrc1.cpp	/^struct VRC1 : Chip {$/;"	s	file:
VRC2	higan/fc/cartridge/chip/vrc2.cpp	/^  VRC2(Board& board) : Chip(board) {$/;"	f	struct:VRC2
VRC2	higan/fc/cartridge/chip/vrc2.cpp	/^struct VRC2 : Chip {$/;"	s	file:
VRC3	higan/fc/cartridge/chip/vrc3.cpp	/^  VRC3(Board& board) : Chip(board) {$/;"	f	struct:VRC3
VRC3	higan/fc/cartridge/chip/vrc3.cpp	/^struct VRC3 : Chip {$/;"	s	file:
VRC4	higan/fc/cartridge/chip/vrc4.cpp	/^  VRC4(Board& board) : Chip(board) {$/;"	f	struct:VRC4
VRC4	higan/fc/cartridge/chip/vrc4.cpp	/^struct VRC4 : Chip {$/;"	s	file:
VRC6	higan/fc/cartridge/chip/vrc6.cpp	/^  VRC6(Board& board) : Chip(board) {$/;"	f	struct:VRC6
VRC6	higan/fc/cartridge/chip/vrc6.cpp	/^struct VRC6 : Chip {$/;"	s	file:
VRC7	higan/fc/cartridge/chip/vrc7.cpp	/^  VRC7(Board& board) : Chip(board) {$/;"	f	struct:VRC7
VRC7	higan/fc/cartridge/chip/vrc7.cpp	/^struct VRC7 : Chip {$/;"	s	file:
VREG	higan/sfc/dsp/dsp.cpp	261;"	d	file:
VREG	higan/sfc/dsp/dsp.cpp	8;"	d	file:
VSRAM	higan/md/vdp/vdp.hpp	/^  struct VSRAM {$/;"	s	struct:VDP
Variable	nall/http/message.hpp	/^struct Variable {$/;"	s	namespace:nall::HTTP
Variable	nall/string/transform/cml.hpp	/^  struct Variable {$/;"	s	struct:nall::__anon38::CML
Variables	nall/http/message.hpp	/^struct Variables {$/;"	s	namespace:nall::HTTP
VariadicNatural	nall/varint.hpp	/^  inline VariadicNatural() : mask(~0ull) { assign(0); }$/;"	f	struct:nall::VariadicNatural
VariadicNatural	nall/varint.hpp	/^  template<typename T> inline VariadicNatural(const T& value) : mask(~0ull) { assign(value); }$/;"	f	struct:nall::VariadicNatural
VariadicNatural	nall/varint.hpp	/^struct VariadicNatural {$/;"	s	namespace:nall
Vblank	higan/gb/cpu/cpu.hpp	/^  enum class Interrupt : uint { Vblank, Stat, Timer, Serial, Joypad };$/;"	m	class:CPU::Interrupt
Vblank	higan/pce/vdc/vdc.hpp	/^      Vblank,$/;"	m	class:VDC::IRQ::Line
Vblank	higan/ws/cpu/cpu.hpp	/^    Vblank,$/;"	m	class:CPU::Interrupt
VblankTimer	higan/ws/cpu/cpu.hpp	/^    VblankTimer,$/;"	m	class:CPU::Interrupt
Vector	higan/processor/m68k/m68k.hpp	/^  struct Vector { enum : uint {$/;"	s
Version	higan/emulator/emulator.hpp	/^  static const string Version = "106.65";$/;"	m	namespace:Emulator
Vertex	ruby/video/direct3d.cpp	/^  struct Vertex {$/;"	s	struct:VideoDirect3D	file:
VerticalBlank	higan/md/cpu/cpu.hpp	/^    VerticalBlank,$/;"	m	class:CPU::Interrupt
VerticalBlank	higan/processor/m68k/m68k.hpp	/^    VerticalBlank   = 30,$/;"	m	struct:Vector	typeref:enum:Vector::
VerticalLayout	hiro/extension/shared.hpp	/^struct VerticalLayout : sVerticalLayout {$/;"	s
VerticalLayoutCell	hiro/extension/shared.hpp	/^struct VerticalLayoutCell : sVerticalLayoutCell {$/;"	s
VerticalLayoutCell	hiro/extension/vertical-layout.hpp	/^  auto cell(sSizable sizable) const -> VerticalLayoutCell;$/;"	m	struct:mVerticalLayout
VerticalLayoutCell	hiro/extension/vertical-layout.hpp	/^  auto cell(uint position) const -> VerticalLayoutCell;$/;"	m	struct:mVerticalLayout
VerticalScrollBar	hiro/core/shared.hpp	/^struct VerticalScrollBar : sVerticalScrollBar {$/;"	s
VerticalSlider	hiro/core/shared.hpp	/^struct VerticalSlider : sVerticalSlider {$/;"	s
Video	higan/sfc/interface/configuration.hpp	/^  struct Video {$/;"	s	struct:Configuration
Video	higan/target-bsnes/settings/settings.hpp	/^  struct Video {$/;"	s	struct:Settings
Video	higan/video/video.hpp	/^struct Video {$/;"	s	namespace:Emulator
Video	hiro/resource/resource.cpp	/^const unsigned char Video[592] = {$/;"	m	namespace:Icon::Emblem	file:
Video	ruby/video/video.hpp	/^  Video() : self(*this) { reset(); }$/;"	f	struct:Video
Video	ruby/video/video.hpp	/^struct Video {$/;"	s
VideoCGL	ruby/video/cgl.cpp	/^  VideoCGL(Video& super) : VideoDriver(super) {}$/;"	f	struct:VideoCGL
VideoCGL	ruby/video/cgl.cpp	/^struct VideoCGL : VideoDriver, OpenGL {$/;"	s	file:
VideoDirect3D	ruby/video/direct3d.cpp	/^  VideoDirect3D(Video& super) : VideoDriver(super) {}$/;"	f	struct:VideoDirect3D
VideoDirect3D	ruby/video/direct3d.cpp	/^struct VideoDirect3D : VideoDriver {$/;"	s	file:
VideoDirect3D_WindowProcedure	ruby/video/direct3d.cpp	/^static LRESULT CALLBACK VideoDirect3D_WindowProcedure(HWND hwnd, UINT msg, WPARAM wparam, LPARAM lparam) {$/;"	f	file:
VideoDirectDraw	ruby/video/directdraw.cpp	/^  VideoDirectDraw(Video& super) : VideoDriver(super) {}$/;"	f	struct:VideoDirectDraw
VideoDirectDraw	ruby/video/directdraw.cpp	/^struct VideoDirectDraw : VideoDriver {$/;"	s	file:
VideoDriver	ruby/video/video.hpp	/^  VideoDriver(Video& super) : super(super) {}$/;"	f	struct:VideoDriver
VideoDriver	ruby/video/video.hpp	/^struct VideoDriver {$/;"	s
VideoGDI	ruby/video/gdi.cpp	/^  VideoGDI(Video& super) : VideoDriver(super) {}$/;"	f	struct:VideoGDI
VideoGDI	ruby/video/gdi.cpp	/^struct VideoGDI : VideoDriver {$/;"	s	file:
VideoGLX	ruby/video/glx.cpp	/^  VideoGLX(Video& super) : VideoDriver(super) {}$/;"	f	struct:VideoGLX
VideoGLX	ruby/video/glx.cpp	/^struct VideoGLX : VideoDriver, OpenGL {$/;"	s	file:
VideoGLX2	ruby/video/glx2.cpp	/^  VideoGLX2(Video& super) : VideoDriver(super) {}$/;"	f	struct:VideoGLX2
VideoGLX2	ruby/video/glx2.cpp	/^struct VideoGLX2 : VideoDriver {$/;"	s	file:
VideoSettings	higan/target-bsnes/settings/settings.hpp	/^struct VideoSettings : TabFrameItem {$/;"	s
VideoSettings	higan/target-higan/settings/settings.hpp	/^struct VideoSettings : TabFrameItem {$/;"	s
VideoSettings	higan/target-higan/settings/video.cpp	/^VideoSettings::VideoSettings(TabFrame* parent) : TabFrameItem(parent) {$/;"	f	class:VideoSettings
VideoWGL	ruby/video/wgl.cpp	/^  VideoWGL(Video& super) : VideoDriver(super) {}$/;"	f	struct:VideoWGL
VideoWGL	ruby/video/wgl.cpp	/^struct VideoWGL : VideoDriver, OpenGL {$/;"	s	file:
VideoXShm	ruby/video/xshm.cpp	/^  VideoXShm(Video& super) : VideoDriver(super) { construct(); }$/;"	f	struct:VideoXShm
VideoXShm	ruby/video/xshm.cpp	/^struct VideoXShm : VideoDriver {$/;"	s	file:
VideoXVideo	ruby/video/xvideo.cpp	/^  VideoXVideo(Video& super) : VideoDriver(super) {}$/;"	f	struct:VideoXVideo
VideoXVideo	ruby/video/xvideo.cpp	/^struct VideoXVideo : VideoDriver {$/;"	s	file:
Viewport	hiro/core/shared.hpp	/^struct Viewport : sViewport {$/;"	s
Voice	higan/sfc/dsp/dsp.hpp	/^  struct Voice {$/;"	s
Volatile	genius/genius.hpp	/^  boolean Volatile;$/;"	m	struct:Memory
WDC65816	higan/processor/wdc65816/wdc65816.hpp	/^struct WDC65816 {$/;"	s	namespace:Processor
WGL_CONTEXT_MAJOR_VERSION_ARB	ruby/video/wgl.cpp	3;"	d	file:
WGL_CONTEXT_MINOR_VERSION_ARB	ruby/video/wgl.cpp	4;"	d	file:
WIN32_LEAN_AND_LEAN	nall/windows/guard.hpp	9;"	d
WIN32_LEAN_AND_MEAN	nall/windows/guard.hpp	18;"	d
WINVER	libco/fiber.c	5;"	d	file:
WINVER	nall/windows/guard.hpp	17;"	d
WINVER	nall/windows/guard.hpp	8;"	d
Wait	higan/gba/cartridge/memory.hpp	/^    Wait, Command, ReadAddress, ReadValidate, ReadData, WriteAddress, WriteData, WriteValidate$/;"	m	class:EEPROM::Mode
Wait	higan/gba/cpu/cpu.hpp	/^  struct Wait {$/;"	s
Wait	higan/md/md.hpp	/^  struct Wait {$/;"	s	namespace:MegaDrive
Wait	higan/processor/hg51b/hg51b.hpp	/^    struct Wait {$/;"	s	struct:Processor::HG51B::IO
Warning	hiro/resource/resource.cpp	/^const unsigned char Warning[603] = {$/;"	m	namespace:Icon::Prompt	file:
Wave	higan/gb/apu/apu.hpp	/^  struct Wave {$/;"	s	struct:APU
Wave	higan/gba/apu/apu.hpp	/^  struct Wave {$/;"	s	struct:APU
Website	higan/emulator/emulator.hpp	/^  static const string Website = "https:\/\/byuu.org\/";$/;"	m	namespace:Emulator
Widget	hiro/core/shared.hpp	/^struct Widget : sWidget {$/;"	s
Window	higan/gba/ppu/ppu.hpp	/^  struct Window {$/;"	s	struct:PPU
Window	higan/md/vdp/vdp.hpp	/^    enum class ID : uint { PlaneA, Window, PlaneB } id;$/;"	m	class:VDP::Background::ID
Window	higan/sfc/ppu/window.hpp	/^struct Window {$/;"	s
Window	hiro/core/shared.hpp	/^struct Window : sWindow {$/;"	s
Window	nall/xorg/guard.hpp	17;"	d
Window	nall/xorg/guard.hpp	8;"	d
Windows	nall/intrinsics.hpp	/^  enum class API : uint { Windows, Posix, Unknown };$/;"	m	class:nall::API
Windows	nall/intrinsics.hpp	/^  enum class DisplayServer : uint { Windows, Quartz, Xorg, Unknown };$/;"	m	class:nall::DisplayServer
Windows	nall/intrinsics.hpp	/^  enum class Platform : uint { Windows, MacOS, Linux, BSD, Unknown };$/;"	m	class:nall::Platform
Windows2000	hiro/windows/utility.cpp	/^static const uint Windows2000  = 0x0500;$/;"	m	namespace:hiro	file:
Windows7	hiro/windows/utility.cpp	/^static const uint Windows7     = 0x0601;$/;"	m	namespace:hiro	file:
WindowsVista	hiro/windows/utility.cpp	/^static const uint WindowsVista = 0x0600;$/;"	m	namespace:hiro	file:
WindowsXP	hiro/windows/utility.cpp	/^static const uint WindowsXP    = 0x0501;$/;"	m	namespace:hiro	file:
WonderSwan	higan/ws/apu/apu.cpp	/^namespace WonderSwan {$/;"	n	file:
WonderSwan	higan/ws/cartridge/cartridge.cpp	/^namespace WonderSwan {$/;"	n	file:
WonderSwan	higan/ws/cpu/cpu.cpp	/^namespace WonderSwan {$/;"	n	file:
WonderSwan	higan/ws/eeprom/eeprom.cpp	/^namespace WonderSwan {$/;"	n	file:
WonderSwan	higan/ws/interface/interface.cpp	/^namespace WonderSwan {$/;"	n	file:
WonderSwan	higan/ws/interface/interface.hpp	/^    WonderSwan,$/;"	m	struct:WonderSwan::ID	typeref:enum:WonderSwan::ID::
WonderSwan	higan/ws/interface/interface.hpp	/^namespace WonderSwan {$/;"	n
WonderSwan	higan/ws/memory/memory.cpp	/^namespace WonderSwan {$/;"	n	file:
WonderSwan	higan/ws/ppu/ppu.cpp	/^namespace WonderSwan {$/;"	n	file:
WonderSwan	higan/ws/system/system.cpp	/^namespace WonderSwan {$/;"	n	file:
WonderSwan	higan/ws/system/system.hpp	/^  enum class Model : uint { WonderSwan, WonderSwanColor, SwanCrystal, PocketChallengeV2 };$/;"	m	class:System::Model
WonderSwan	higan/ws/ws.hpp	/^namespace WonderSwan {$/;"	n
WonderSwan	icarus/core/core.hpp	/^  Markup::Node WonderSwan;$/;"	m	namespace:Database
WonderSwan	icarus/heuristics/wonderswan.cpp	/^WonderSwan::WonderSwan(vector<uint8_t>& data, string location) : data(data), location(location) {$/;"	f	class:Heuristics::WonderSwan
WonderSwan	icarus/heuristics/wonderswan.cpp	/^struct WonderSwan {$/;"	s	namespace:Heuristics	file:
WonderSwanColor	higan/ws/interface/interface.hpp	/^    WonderSwanColor,$/;"	m	struct:WonderSwan::ID	typeref:enum:WonderSwan::ID::
WonderSwanColor	higan/ws/system/system.hpp	/^  enum class Model : uint { WonderSwan, WonderSwanColor, SwanCrystal, PocketChallengeV2 };$/;"	m	class:System::Model
WonderSwanColor	icarus/core/core.hpp	/^  Markup::Node WonderSwanColor;$/;"	m	namespace:Database
Word	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    Word          = 1 << 5,  \/\/32-bit access$/;"	m	struct:Processor::ARM7TDMI	typeref:enum:Processor::ARM7TDMI::
Word	higan/processor/v30mz/v30mz.hpp	/^  enum : uint { Byte = 1, Word = 2, Long = 4 };$/;"	m	struct:Processor::V30MZ	typeref:enum:Processor::V30MZ::
WritableMemory	higan/sfc/memory/writable.hpp	/^struct WritableMemory : Memory {$/;"	s
WriteAddress	higan/gba/cartridge/memory.hpp	/^    Wait, Command, ReadAddress, ReadValidate, ReadData, WriteAddress, WriteData, WriteValidate$/;"	m	class:EEPROM::Mode
WriteData	higan/gba/cartridge/memory.hpp	/^    Wait, Command, ReadAddress, ReadValidate, ReadData, WriteAddress, WriteData, WriteValidate$/;"	m	class:EEPROM::Mode
X	higan/md/controller/fighting-pad/fighting-pad.hpp	/^    Up, Down, Left, Right, A, B, C, X, Y, Z, Mode, Start,$/;"	m	struct:FightingPad	typeref:enum:FightingPad::
X	higan/processor/huc6280/huc6280.cpp	34;"	d	file:
X	higan/processor/huc6280/huc6280.cpp	7;"	d	file:
X	higan/processor/mos6502/mos6502.cpp	31;"	d	file:
X	higan/processor/mos6502/mos6502.cpp	7;"	d	file:
X	higan/processor/spc700/spc700.cpp	46;"	d	file:
X	higan/processor/spc700/spc700.cpp	9;"	d	file:
X	higan/processor/wdc65816/wdc65816.cpp	67;"	d	file:
X	higan/processor/wdc65816/wdc65816.cpp	8;"	d	file:
X	higan/sfc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
X	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:SuperMultitap	typeref:enum:SuperMultitap::
X2DEFAULT	ruby/audio/xaudio2.hpp	17;"	d
XAUDIO2_ANY_PROCESSOR	ruby/audio/xaudio2.hpp	/^  XAUDIO2_ANY_PROCESSOR = 0xffffffff,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
XAUDIO2_BUFFER	ruby/audio/xaudio2.hpp	/^typedef struct XAUDIO2_BUFFER {$/;"	s
XAUDIO2_BUFFER	ruby/audio/xaudio2.hpp	/^} XAUDIO2_BUFFER;$/;"	t	typeref:struct:XAUDIO2_BUFFER
XAUDIO2_BUFFER_WMA	ruby/audio/xaudio2.hpp	/^typedef struct XAUDIO2_BUFFER_WMA {$/;"	s
XAUDIO2_BUFFER_WMA	ruby/audio/xaudio2.hpp	/^} XAUDIO2_BUFFER_WMA;$/;"	t	typeref:struct:XAUDIO2_BUFFER_WMA
XAUDIO2_COMMIT_NOW	ruby/audio/xaudio2.hpp	25;"	d
XAUDIO2_DEBUG_CONFIGURATION	ruby/audio/xaudio2.hpp	/^typedef struct XAUDIO2_DEBUG_CONFIGURATION {$/;"	s
XAUDIO2_DEBUG_CONFIGURATION	ruby/audio/xaudio2.hpp	/^} XAUDIO2_DEBUG_CONFIGURATION;$/;"	t	typeref:struct:XAUDIO2_DEBUG_CONFIGURATION
XAUDIO2_DEBUG_ENGINE	ruby/audio/xaudio2.hpp	29;"	d
XAUDIO2_DEFAULT_CHANNELS	ruby/audio/xaudio2.hpp	26;"	d
XAUDIO2_DEFAULT_FREQ_RATIO	ruby/audio/xaudio2.hpp	28;"	d
XAUDIO2_DEFAULT_PROCESSOR	ruby/audio/xaudio2.hpp	/^  XAUDIO2_DEFAULT_PROCESSOR = XAUDIO2_ANY_PROCESSOR,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
XAUDIO2_DEFAULT_SAMPLERATE	ruby/audio/xaudio2.hpp	27;"	d
XAUDIO2_DEVICE_DETAILS	ruby/audio/xaudio2.hpp	/^typedef struct XAUDIO2_DEVICE_DETAILS {$/;"	s
XAUDIO2_DEVICE_DETAILS	ruby/audio/xaudio2.hpp	/^} XAUDIO2_DEVICE_DETAILS;$/;"	t	typeref:struct:XAUDIO2_DEVICE_DETAILS
XAUDIO2_DEVICE_ROLE	ruby/audio/xaudio2.hpp	/^typedef enum XAUDIO2_DEVICE_ROLE {$/;"	g
XAUDIO2_DEVICE_ROLE	ruby/audio/xaudio2.hpp	/^} XAUDIO2_DEVICE_ROLE;$/;"	t	typeref:enum:XAUDIO2_DEVICE_ROLE
XAUDIO2_EFFECT_CHAIN	ruby/audio/xaudio2.hpp	/^typedef struct XAUDIO2_EFFECT_CHAIN {$/;"	s
XAUDIO2_EFFECT_CHAIN	ruby/audio/xaudio2.hpp	/^} XAUDIO2_EFFECT_CHAIN;$/;"	t	typeref:struct:XAUDIO2_EFFECT_CHAIN
XAUDIO2_EFFECT_DESCRIPTOR	ruby/audio/xaudio2.hpp	/^typedef struct XAUDIO2_EFFECT_DESCRIPTOR {$/;"	s
XAUDIO2_EFFECT_DESCRIPTOR	ruby/audio/xaudio2.hpp	/^} XAUDIO2_EFFECT_DESCRIPTOR;$/;"	t	typeref:struct:XAUDIO2_EFFECT_DESCRIPTOR
XAUDIO2_FILTER_PARAMETERS	ruby/audio/xaudio2.hpp	/^typedef struct XAUDIO2_FILTER_PARAMETERS {$/;"	s
XAUDIO2_FILTER_PARAMETERS	ruby/audio/xaudio2.hpp	/^} XAUDIO2_FILTER_PARAMETERS;$/;"	t	typeref:struct:XAUDIO2_FILTER_PARAMETERS
XAUDIO2_FILTER_TYPE	ruby/audio/xaudio2.hpp	/^typedef enum XAUDIO2_FILTER_TYPE {$/;"	g
XAUDIO2_FILTER_TYPE	ruby/audio/xaudio2.hpp	/^} XAUDIO2_FILTER_TYPE;$/;"	t	typeref:enum:XAUDIO2_FILTER_TYPE
XAUDIO2_PERFORMANCE_DATA	ruby/audio/xaudio2.hpp	/^typedef struct XAUDIO2_PERFORMANCE_DATA {$/;"	s
XAUDIO2_PERFORMANCE_DATA	ruby/audio/xaudio2.hpp	/^} XAUDIO2_PERFORMANCE_DATA;$/;"	t	typeref:struct:XAUDIO2_PERFORMANCE_DATA
XAUDIO2_PROCESSOR	ruby/audio/xaudio2.hpp	/^} XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER, XAUDIO2_PROCESSOR;$/;"	t	typeref:enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
XAUDIO2_VOICE_DETAILS	ruby/audio/xaudio2.hpp	/^typedef struct XAUDIO2_VOICE_DETAILS {$/;"	s
XAUDIO2_VOICE_DETAILS	ruby/audio/xaudio2.hpp	/^} XAUDIO2_VOICE_DETAILS;$/;"	t	typeref:struct:XAUDIO2_VOICE_DETAILS
XAUDIO2_VOICE_NOSRC	ruby/audio/xaudio2.hpp	30;"	d
XAUDIO2_VOICE_SENDS	ruby/audio/xaudio2.hpp	/^typedef struct XAUDIO2_VOICE_SENDS {$/;"	s
XAUDIO2_VOICE_SENDS	ruby/audio/xaudio2.hpp	/^} XAUDIO2_VOICE_SENDS;$/;"	t	typeref:struct:XAUDIO2_VOICE_SENDS
XAUDIO2_VOICE_STATE	ruby/audio/xaudio2.hpp	/^typedef struct XAUDIO2_VOICE_STATE {$/;"	s
XAUDIO2_VOICE_STATE	ruby/audio/xaudio2.hpp	/^} XAUDIO2_VOICE_STATE;$/;"	t	typeref:struct:XAUDIO2_VOICE_STATE
XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER	ruby/audio/xaudio2.hpp	/^typedef enum XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER {$/;"	g
XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER	ruby/audio/xaudio2.hpp	/^} XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER, XAUDIO2_PROCESSOR;$/;"	t	typeref:enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
XAudio2Create	ruby/audio/xaudio2.hpp	/^__inline HRESULT XAudio2Create(IXAudio2** ppXAudio2, UINT32 Flags X2DEFAULT(0),$/;"	f
XChaCha20	nall/cipher/chacha20.hpp	/^  XChaCha20(uint256_t key, uint192_t nonce, uint64_t counter = 0):$/;"	f	struct:nall::Cipher::XChaCha20
XChaCha20	nall/cipher/chacha20.hpp	/^struct XChaCha20 : ChaCha20 {$/;"	s	namespace:nall::Cipher
XChaCha20	nall/random.hpp	/^  XChaCha20() { seed(); }$/;"	f	struct:nall::CSPRNG::XChaCha20
XChaCha20	nall/random.hpp	/^struct XChaCha20 : RNG<XChaCha20> {$/;"	s	namespace:nall::CSPRNG
XDisplay	nall/xorg/xorg.hpp	/^  XDisplay() { _display = XOpenDisplay(nullptr); }$/;"	f	struct:XDisplay
XDisplay	nall/xorg/xorg.hpp	/^struct XDisplay {$/;"	s
XF	higan/processor/wdc65816/wdc65816.cpp	20;"	d	file:
XF	higan/processor/wdc65816/wdc65816.cpp	79;"	d	file:
XF	higan/processor/z80/registers.cpp	47;"	d	file:
XINPUT_GAMEPAD_GUIDE	ruby/input/joypad/xinput.cpp	19;"	d	file:
XInputGetStateEx	ruby/input/joypad/xinput.cpp	/^  pXInputGetStateEx XInputGetStateEx = nullptr;$/;"	m	struct:InputJoypadXInput	file:
XInputSetState	ruby/input/joypad/xinput.cpp	/^  pXInputSetState XInputSetState = nullptr;$/;"	m	struct:InputJoypadXInput	file:
XK_LATIN1	hiro/qt/header.hpp	10;"	d
XK_LATIN1	hiro/qt/header.hpp	14;"	d
XK_MISCELLANY	hiro/qt/header.hpp	13;"	d
XK_MISCELLANY	hiro/qt/header.hpp	9;"	d
XML	nall/string/markup/xml.hpp	/^namespace nall { namespace XML {$/;"	n	namespace:nall
Xorg	nall/intrinsics.hpp	/^  enum class DisplayServer : uint { Windows, Quartz, Xorg, Unknown };$/;"	m	class:nall::DisplayServer
Y	higan/md/controller/fighting-pad/fighting-pad.hpp	/^    Up, Down, Left, Right, A, B, C, X, Y, Z, Mode, Start,$/;"	m	struct:FightingPad	typeref:enum:FightingPad::
Y	higan/processor/huc6280/huc6280.cpp	35;"	d	file:
Y	higan/processor/huc6280/huc6280.cpp	8;"	d	file:
Y	higan/processor/mos6502/mos6502.cpp	32;"	d	file:
Y	higan/processor/mos6502/mos6502.cpp	8;"	d	file:
Y	higan/processor/spc700/spc700.cpp	10;"	d	file:
Y	higan/processor/spc700/spc700.cpp	47;"	d	file:
Y	higan/processor/wdc65816/wdc65816.cpp	68;"	d	file:
Y	higan/processor/wdc65816/wdc65816.cpp	9;"	d	file:
Y	higan/sfc/controller/gamepad/gamepad.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:Gamepad	typeref:enum:Gamepad::
Y	higan/sfc/controller/justifier/justifier.hpp	/^    X, Y, Trigger, Start,$/;"	m	struct:Justifier	typeref:enum:Justifier::
Y	higan/sfc/controller/mouse/mouse.hpp	/^    X, Y, Left, Right,$/;"	m	struct:Mouse	typeref:enum:Mouse::
Y	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    Up, Down, Left, Right, B, A, Y, X, L, R, Select, Start,$/;"	m	struct:SuperMultitap	typeref:enum:SuperMultitap::
Y	higan/sfc/controller/super-scope/super-scope.hpp	/^    X, Y, Trigger, Cursor, Turbo, Pause,$/;"	m	struct:SuperScope	typeref:enum:SuperScope::
YA	higan/processor/spc700/spc700.cpp	44;"	d	file:
YA	higan/processor/spc700/spc700.cpp	7;"	d	file:
YF	higan/processor/z80/registers.cpp	49;"	d	file:
YM2612	higan/md/ym2612/ym2612.hpp	/^struct YM2612 : Thread {$/;"	s
Yes	hiro/core/core.hpp	/^  enum class Response : uint { Ok, Cancel, Yes, No };$/;"	m	class:hiro::MessageWindow::Response
YesNo	hiro/core/core.hpp	/^  enum class Buttons : uint { Ok, OkCancel, YesNo, YesNoCancel };$/;"	m	class:hiro::MessageWindow::Buttons
Z	higan/md/controller/fighting-pad/fighting-pad.hpp	/^    Up, Down, Left, Right, A, B, C, X, Y, Z, Mode, Start,$/;"	m	struct:FightingPad	typeref:enum:FightingPad::
Z	higan/processor/huc6280/huc6280.cpp	15;"	d	file:
Z	higan/processor/huc6280/huc6280.cpp	42;"	d	file:
Z	higan/processor/mos6502/mos6502.cpp	16;"	d	file:
Z	higan/processor/mos6502/mos6502.cpp	40;"	d	file:
Z	higan/processor/wdc65816/wdc65816.cpp	10;"	d	file:
Z	higan/processor/wdc65816/wdc65816.cpp	69;"	d	file:
Z80	higan/processor/z80/z80.hpp	/^struct Z80 {$/;"	s	namespace:Processor
ZF	higan/processor/lr35902/registers.cpp	20;"	d	file:
ZF	higan/processor/spc700/spc700.cpp	15;"	d	file:
ZF	higan/processor/spc700/spc700.cpp	52;"	d	file:
ZF	higan/processor/wdc65816/wdc65816.cpp	17;"	d	file:
ZF	higan/processor/wdc65816/wdc65816.cpp	76;"	d	file:
ZF	higan/processor/z80/registers.cpp	50;"	d	file:
ZIP	nall/decode/zip.hpp	/^struct ZIP {$/;"	s	namespace:nall::Decode
ZIP	nall/encode/zip.hpp	/^  ZIP(const string& filename) {$/;"	f	struct:nall::Encode::ZIP
ZIP	nall/encode/zip.hpp	/^struct ZIP {$/;"	s	namespace:nall::Encode
_BSD_SOURCE	libco/sjlj.c	10;"	d	file:
_BSD_SOURCE	libco/ucontext.c	17;"	d	file:
_H	higan/processor/z80/disassembler.cpp	1055;"	d	file:
_H	higan/processor/z80/disassembler.cpp	67;"	d	file:
_H	higan/processor/z80/registers.cpp	16;"	d	file:
_HL	higan/processor/z80/disassembler.cpp	1057;"	d	file:
_HL	higan/processor/z80/disassembler.cpp	69;"	d	file:
_HL	higan/processor/z80/registers.cpp	15;"	d	file:
_L	higan/processor/z80/disassembler.cpp	1056;"	d	file:
_L	higan/processor/z80/disassembler.cpp	68;"	d	file:
_L	higan/processor/z80/registers.cpp	17;"	d	file:
_WIN32_IE	nall/windows/guard.hpp	11;"	d
_WIN32_IE	nall/windows/guard.hpp	20;"	d
_WIN32_WINNT	libco/fiber.c	6;"	d	file:
_WIN32_WINNT	nall/windows/guard.hpp	10;"	d
_WIN32_WINNT	nall/windows/guard.hpp	19;"	d
_XOPEN_SOURCE	libco/sjlj.c	11;"	d	file:
_XOPEN_SOURCE	libco/ucontext.c	18;"	d	file:
__MSVCRT_VERSION__	nall/windows/guard.hpp	12;"	d
__MSVCRT_VERSION__	nall/windows/guard.hpp	21;"	d
_acquired	nall/posix/shared-memory.hpp	/^  bool _acquired = false;$/;"	m	struct:nall::shared_memory
_adsr0	higan/sfc/dsp/dsp.hpp	/^    int _adsr0 = 0;$/;"	m	struct:State
_append	hiro/core/shared.hpp	/^  auto _append() {}$/;"	f	struct:Group
_append	hiro/core/shared.hpp	/^  template<typename T, typename... P> auto _append(T* object, P&&... p) {$/;"	f	struct:Group
_architecture	icarus/heuristics/heuristics.hpp	/^  string _architecture;$/;"	m	struct:Heuristics::Memory
_asio	ruby/audio/asio.cpp	/^  IASIO* _asio = nullptr;$/;"	m	struct:AudioASIO	file:
_battery	icarus/heuristics/heuristics.hpp	/^  boolean _battery;$/;"	m	struct:Heuristics::Memory
_bindings	nall/database/odbc.hpp	/^    vector<Binding> _bindings;$/;"	m	struct:nall::Database::ODBC::Query
_bitmap	ruby/video/gdi.cpp	/^  HBITMAP _bitmap = nullptr;$/;"	m	struct:VideoGDI	file:
_body	nall/http/message.hpp	/^  string _body;$/;"	m	struct:nall::HTTP::Message
_brrByte	higan/sfc/dsp/dsp.hpp	/^    int _brrByte = 0;$/;"	m	struct:State
_brrHeader	higan/sfc/dsp/dsp.hpp	/^    int _brrHeader = 0;$/;"	m	struct:State
_brrNextAddress	higan/sfc/dsp/dsp.hpp	/^    int _brrNextAddress = 0;$/;"	m	struct:State
_buffer	ruby/audio/alsa.cpp	/^  uint32_t* _buffer = nullptr;$/;"	m	struct:AudioALSA	file:
_buffer	ruby/audio/directsound.cpp	/^  uint32_t* _buffer = nullptr;$/;"	m	struct:AudioDirectSound	file:
_buffer	ruby/audio/openal.cpp	/^  uint32_t* _buffer = nullptr;$/;"	m	struct:AudioOpenAL	file:
_buffer	ruby/audio/pulseaudio-simple.cpp	/^  uint32_t* _buffer = nullptr;$/;"	m	struct:AudioPulseAudioSimple	file:
_buffer	ruby/audio/pulseaudio.cpp	/^  uint32_t* _buffer = nullptr;$/;"	m	struct:AudioPulseAudio	file:
_buffer	ruby/video/gdi.cpp	/^  uint32_t* _buffer = nullptr;$/;"	m	struct:VideoGDI	file:
_buffer	ruby/video/xvideo.cpp	/^  uint32_t* _buffer = nullptr;$/;"	m	struct:VideoXVideo	file:
_bufferHeight	ruby/video/xvideo.cpp	/^  uint _bufferHeight = 0;$/;"	m	struct:VideoXVideo	file:
_bufferLength	ruby/audio/openal.cpp	/^  uint _bufferLength = 0;$/;"	m	struct:AudioOpenAL	file:
_bufferSize	ruby/audio/alsa.cpp	/^  snd_pcm_uframes_t _bufferSize;$/;"	m	struct:AudioALSA	file:
_bufferSize	ruby/audio/openal.cpp	/^  uint _bufferSize = 0;$/;"	m	struct:AudioOpenAL	file:
_bufferSize	ruby/audio/oss.cpp	/^  int _bufferSize = 1;$/;"	m	struct:AudioOSS	file:
_bufferWidth	ruby/video/xvideo.cpp	/^  uint _bufferWidth = 0;$/;"	m	struct:VideoXVideo	file:
_c	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  string _c;$/;"	v
_capabilities	ruby/video/direct3d.cpp	/^  D3DCAPS9 _capabilities = {};$/;"	m	struct:VideoDirect3D	file:
_capacity	nall/queue.hpp	/^  uint _capacity = 0;$/;"	m	struct:nall::queue
_capacity	nall/serializer.hpp	/^  uint _capacity = 0;$/;"	m	namespace:nall
_capacity	nall/string.hpp	/^  uint _capacity;$/;"	m	struct:nall::string
_channel	ruby/audio/asio.cpp	/^  ASIOBufferInfo _channel[8];$/;"	m	struct:AudioASIO	file:
_children	nall/string/markup/node.hpp	/^  vector<SharedNode> _children;$/;"	m	struct:nall::Markup::ManagedNode
_clipper	ruby/video/directdraw.cpp	/^  LPDIRECTDRAWCLIPPER _clipper = nullptr;$/;"	m	struct:VideoDirectDraw	file:
_clock	higan/emulator/thread.hpp	/^  uintmax _clock = 0;$/;"	m	struct:Emulator::Thread
_clocksExecuted	higan/gb/system/system.hpp	/^  uint _clocksExecuted = 0;$/;"	m	struct:System
_colormap	ruby/video/glx.cpp	/^  Colormap _colormap = 0;$/;"	m	struct:VideoGLX	file:
_colormap	ruby/video/glx2.cpp	/^  Colormap _colormap = 0;$/;"	m	struct:VideoGLX2	file:
_colormap	ruby/video/xvideo.cpp	/^  Colormap _colormap = 0;$/;"	m	struct:VideoXVideo	file:
_comp	higan/processor/arm7tdmi/disassembler.cpp	11;"	d	file:
_comp	higan/processor/arm7tdmi/disassembler.cpp	412;"	d	file:
_conditions	higan/processor/arm7tdmi/disassembler.cpp	/^static const string _conditions[] = {$/;"	v	file:
_connection	nall/database/odbc.hpp	/^  SQLHANDLE _connection = nullptr;$/;"	m	struct:nall::Database::ODBC
_content	icarus/heuristics/heuristics.hpp	/^  string _content;$/;"	m	struct:Heuristics::Memory
_context	ruby/audio/openal.cpp	/^  ALCcontext* _context = nullptr;$/;"	m	struct:AudioOpenAL	file:
_context	ruby/audio/pulseaudio.cpp	/^  pa_context* _context = nullptr;$/;"	m	struct:AudioPulseAudio	file:
_data	higan/ws/eeprom/eeprom.hpp	/^  uint16 _data[1024];$/;"	v
_data	nall/array-view.hpp	/^  const T* _data;$/;"	m	struct:nall::array_view
_data	nall/decode/bmp.hpp	/^  uint32_t* _data = nullptr;$/;"	m	struct:nall::Decode::BMP
_data	nall/file-map.hpp	/^  uint8_t* _data = nullptr;$/;"	m	namespace:nall
_data	nall/http/response.hpp	/^  vector<uint8_t> _data;$/;"	m	struct:nall::HTTP::Response
_data	nall/image.hpp	/^  uint8_t* _data   = nullptr;$/;"	m	struct:nall::image
_data	nall/posix/shared-memory.hpp	/^  uint8_t* _data = nullptr;$/;"	m	struct:nall::shared_memory
_data	nall/queue.hpp	/^  T* _data = nullptr;$/;"	m	struct:nall::queue
_data	nall/serializer.hpp	/^  uint8_t* _data = nullptr;$/;"	m	namespace:nall
_data	nall/string.hpp	/^      char* _data;$/;"	m	struct:nall::string::__anon33::__anon34
_data	nall/string.hpp	/^    char* _data;$/;"	m	union:nall::string::__anon36
_data	nall/string.hpp	/^  char* _data;$/;"	m	struct:nall::string
_data	nall/string.hpp	/^  const char* _data;$/;"	m	struct:nall::string_view
_data	nall/string/cast.hpp	/^  char _data[1 + sizeof(uint128_t) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[1 + sizeof(uint64_t) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[1 + sizeof(unsigned char) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[1 + sizeof(unsigned int) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[1 + sizeof(unsigned long long) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[1 + sizeof(unsigned long) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[1 + sizeof(unsigned short) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[2 + sizeof(int128_t) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[2 + sizeof(int64_t) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[2 + sizeof(signed char) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[2 + sizeof(signed int) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[2 + sizeof(signed long long) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[2 + sizeof(signed long) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[2 + sizeof(signed short) * 3];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[256];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  char _data[2];$/;"	m	struct:nall::stringify
_data	nall/string/cast.hpp	/^  const char* _data;$/;"	m	struct:nall::stringify
_data	nall/string/pascal.hpp	/^  char* _data = nullptr;$/;"	m	struct:nall::string_pascal
_data	nall/vfs/memory/file.hpp	/^  uint8_t* _data = nullptr;$/;"	m	struct:nall::vfs::memory::file
_database	nall/database/sqlite3.hpp	/^  sqlite3* _database = nullptr;$/;"	m	struct:nall::Database::SQLite3
_dc	ruby/video/gdi.cpp	/^  HDC _dc = nullptr;$/;"	m	struct:VideoGDI	file:
_debug	nall/database/sqlite3.hpp	/^  bool _debug = false;$/;"	m	struct:nall::Database::SQLite3
_depth	nall/image.hpp	/^    uint _depth;$/;"	m	struct:nall::image::channel
_depth	nall/image.hpp	/^  uint _depth  = 32;$/;"	m	struct:nall::image
_depth	ruby/video/xshm.cpp	/^  int _depth = 0;$/;"	m	struct:VideoXShm	file:
_descriptor	nall/posix/shared-memory.hpp	/^  signed _descriptor = -1;$/;"	m	struct:nall::shared_memory
_device	ruby/video/direct3d.cpp	/^  LPDIRECT3DDEVICE9 _device = nullptr;$/;"	m	struct:VideoDirect3D	file:
_dir	higan/sfc/dsp/dsp.hpp	/^    int _dir = 0;$/;"	m	struct:State
_dirAddress	higan/sfc/dsp/dsp.hpp	/^    int _dirAddress = 0;$/;"	m	struct:State
_display	nall/xorg/xorg.hpp	/^  XlibDisplay* _display;$/;"	m	struct:XDisplay
_display	ruby/video/glx.cpp	/^  Display* _display = nullptr;$/;"	m	struct:VideoGLX	file:
_display	ruby/video/glx2.cpp	/^  Display* _display = nullptr;$/;"	m	struct:VideoGLX2	file:
_display	ruby/video/wgl.cpp	/^  HDC _display = nullptr;$/;"	m	struct:VideoWGL	file:
_display	ruby/video/xshm.cpp	/^  Display* _display = nullptr;$/;"	m	struct:VideoXShm	file:
_display	ruby/video/xvideo.cpp	/^  Display* _display = nullptr;$/;"	m	struct:VideoXVideo	file:
_doubleBuffer	ruby/video/glx.cpp	/^  bool _doubleBuffer = false;$/;"	m	struct:VideoGLX	file:
_echoDisabled	higan/sfc/dsp/dsp.hpp	/^    int _echoDisabled = 0;$/;"	m	struct:State
_echoIn	higan/sfc/dsp/dsp.hpp	/^    int _echoIn [2] = {};$/;"	m	struct:State
_echoOut	higan/sfc/dsp/dsp.hpp	/^    int _echoOut[2] = {};$/;"	m	struct:State
_echoPointer	higan/sfc/dsp/dsp.hpp	/^    int _echoPointer = 0;$/;"	m	struct:State
_endian	nall/image.hpp	/^  bool _endian =  0;  \/\/0 = lsb, 1 = msb$/;"	m	struct:nall::image
_entropy	higan/emulator/random.hpp	/^  Entropy _entropy = Entropy::High;$/;"	m	struct:Emulator::Random
_environment	nall/database/odbc.hpp	/^  SQLHANDLE _environment = nullptr;$/;"	m	struct:nall::Database::ODBC
_envxOut	higan/sfc/dsp/dsp.hpp	/^    int _envxOut = 0;$/;"	m	struct:Voice
_eon	higan/sfc/dsp/dsp.hpp	/^    int _eon = 0;$/;"	m	struct:State
_esa	higan/sfc/dsp/dsp.hpp	/^    int _esa = 0;$/;"	m	struct:State
_event	higan/emulator/scheduler.hpp	/^  Event _event = Event::Step;$/;"	m	struct:Emulator::Scheduler
_exclusiveContext	ruby/video/direct3d.cpp	/^  uintptr _exclusiveContext = 0;$/;"	m	struct:VideoDirect3D	file:
_fd	nall/file-map.hpp	/^  int _fd = -1;$/;"	m	namespace:nall
_fd	ruby/audio/oss.cpp	/^  int _fd = -1;$/;"	m	struct:AudioOSS	file:
_file	nall/file-map.hpp	/^  HANDLE _file = INVALID_HANDLE_VALUE;$/;"	m	namespace:nall
_file	nall/http/response.hpp	/^  string _file;$/;"	m	struct:nall::HTTP::Response
_first	ruby/audio/pulseaudio.cpp	/^  bool _first = true;$/;"	m	struct:AudioPulseAudio	file:
_format	ruby/audio/openal.cpp	/^  ALenum _format = AL_FORMAT_STEREO16;$/;"	m	struct:AudioOpenAL	file:
_format	ruby/audio/oss.cpp	/^  int _format = AFMT_S16_LE;$/;"	m	struct:AudioOSS	file:
_formatID	ruby/video/xvideo.cpp	/^  int _formatID = 0;$/;"	m	struct:VideoXVideo	file:
_formatIDs	ruby/video/xvideo.cpp	/^  vector<int> _formatIDs;$/;"	m	struct:VideoXVideo	file:
_formatName	ruby/video/xvideo.cpp	/^  string _formatName;$/;"	m	struct:VideoXVideo	file:
_formatNames	ruby/video/xvideo.cpp	/^  vector<string> _formatNames;$/;"	m	struct:VideoXVideo	file:
_fp	nall/vfs/fs/file.hpp	/^  file_buffer _fp;$/;"	m	struct:nall::vfs::fs::file
_frequency	higan/emulator/thread.hpp	/^  uintmax _frequency = 0;$/;"	m	struct:Emulator::Thread
_frequency	icarus/heuristics/heuristics.hpp	/^  natural _frequency;$/;"	m	struct:Heuristics::Oscillator
_gc	ruby/video/xvideo.cpp	/^  GC _gc = 0;$/;"	m	struct:VideoXVideo	file:
_glBuffer	ruby/video/glx2.cpp	/^  uint32_t* _glBuffer = nullptr;$/;"	m	struct:VideoGLX2	file:
_glFormat	ruby/video/glx2.cpp	/^  uint _glFormat = GL_UNSIGNED_INT_8_8_8_8_REV;$/;"	m	struct:VideoGLX2	file:
_glHeight	ruby/video/glx2.cpp	/^  uint _glHeight = 0;$/;"	m	struct:VideoGLX2	file:
_glTexture	ruby/video/glx2.cpp	/^  GLuint _glTexture = 0;$/;"	m	struct:VideoGLX2	file:
_glWidth	ruby/video/glx2.cpp	/^  uint _glWidth = 0;$/;"	m	struct:VideoGLX2	file:
_glWindow	ruby/video/wgl.cpp	/^  HINSTANCE _glWindow = nullptr;$/;"	m	struct:VideoWGL	file:
_glXContext	ruby/video/glx.cpp	/^  GLXContext _glXContext = nullptr;$/;"	m	struct:VideoGLX	file:
_glXContext	ruby/video/glx2.cpp	/^  GLXContext _glXContext = nullptr;$/;"	m	struct:VideoGLX2	file:
_glXWindow	ruby/video/glx.cpp	/^  GLXWindow _glXWindow = 0;$/;"	m	struct:VideoGLX	file:
_glXWindow	ruby/video/glx2.cpp	/^  GLXWindow _glXWindow = 0;$/;"	m	struct:VideoGLX2	file:
_granted	higan/processor/z80/z80.hpp	/^    bool _granted;$/;"	m	struct:Processor::Z80::Bus
_handle	higan/emulator/thread.hpp	/^  cothread_t _handle = nullptr;$/;"	m	struct:Emulator::Thread
_head	nall/http/message.hpp	/^  string _head;$/;"	m	struct:nall::HTTP::Message
_height	nall/decode/bmp.hpp	/^  uint _height = 0;$/;"	m	struct:nall::Decode::BMP
_height	nall/image.hpp	/^  uint _height = 0;$/;"	m	struct:nall::image
_height	ruby/video/directdraw.cpp	/^  uint _height = 0;$/;"	m	struct:VideoDirectDraw	file:
_height	ruby/video/gdi.cpp	/^  uint _height = 0;$/;"	m	struct:VideoGDI	file:
_height	ruby/video/glx2.cpp	/^  uint _height = 256;$/;"	m	struct:VideoGLX2	file:
_height	ruby/video/xvideo.cpp	/^  uint _height = 0;$/;"	m	struct:VideoXVideo	file:
_host	higan/emulator/scheduler.hpp	/^  cothread_t _host = nullptr;    \/\/program thread (used to exit scheduler)$/;"	m	struct:Emulator::Scheduler
_id	nall/hid.hpp	/^  uint64_t _id = 0;$/;"	m	struct:nall::HID::Device
_identifier	icarus/heuristics/heuristics.hpp	/^  string _identifier;$/;"	m	struct:Heuristics::Memory
_image	ruby/video/xshm.cpp	/^  XImage* _image = nullptr;$/;"	m	struct:VideoXShm	file:
_image	ruby/video/xvideo.cpp	/^  XvImage* _image = nullptr;$/;"	m	struct:VideoXVideo	file:
_increment	higan/emulator/random.hpp	/^  uint64 _increment;$/;"	m	struct:Emulator::Random
_info	ruby/video/gdi.cpp	/^  BITMAPINFO _info = {};$/;"	m	struct:VideoGDI	file:
_input	nall/database/odbc.hpp	/^    unsigned _input = 0;$/;"	m	struct:nall::Database::ODBC::Query
_input	nall/database/sqlite3.hpp	/^    unsigned _input = 0;$/;"	m	struct:nall::Database::SQLite3::Query
_inputBuffer	ruby/video/xshm.cpp	/^  uint32_t* _inputBuffer = nullptr;$/;"	m	struct:VideoXShm	file:
_inputHeight	ruby/video/direct3d.cpp	/^  uint _inputHeight;$/;"	m	struct:VideoDirect3D	file:
_inputHeight	ruby/video/xshm.cpp	/^  uint _inputHeight = 0;$/;"	m	struct:VideoXShm	file:
_inputWidth	ruby/video/direct3d.cpp	/^  uint _inputWidth;$/;"	m	struct:VideoDirect3D	file:
_inputWidth	ruby/video/xshm.cpp	/^  uint _inputWidth = 0;$/;"	m	struct:VideoXShm	file:
_instance	ruby/video/direct3d.cpp	/^  LPDIRECT3D9 _instance = nullptr;$/;"	m	struct:VideoDirect3D	file:
_interface	ruby/audio/alsa.cpp	/^  snd_pcm_t* _interface = nullptr;$/;"	m	struct:AudioALSA	file:
_interface	ruby/audio/ao.cpp	/^  ao_device* _interface = nullptr;$/;"	m	struct:AudioAO	file:
_interface	ruby/audio/directsound.cpp	/^  LPDIRECTSOUND _interface = nullptr;$/;"	m	struct:AudioDirectSound	file:
_interface	ruby/audio/pulseaudio-simple.cpp	/^  pa_simple* _interface = nullptr;$/;"	m	struct:AudioPulseAudioSimple	file:
_interface	ruby/video/directdraw.cpp	/^  LPDIRECTDRAW7 _interface = nullptr;$/;"	m	struct:VideoDirectDraw	file:
_ip	nall/http/request.hpp	/^  string _ip;$/;"	m	struct:nall::HTTP::Request
_ipv6	nall/http/request.hpp	/^  bool _ipv6 = false;$/;"	m	struct:nall::HTTP::Request
_isDirect	ruby/video/glx.cpp	/^  bool _isDirect = false;$/;"	m	struct:VideoGLX	file:
_isDirect	ruby/video/glx2.cpp	/^  bool _isDirect = false;$/;"	m	struct:VideoGLX2	file:
_isDoubleBuffered	ruby/video/glx2.cpp	/^  bool _isDoubleBuffered = false;$/;"	m	struct:VideoGLX2	file:
_koff	higan/sfc/dsp/dsp.hpp	/^    int _koff = 0;$/;"	m	struct:State
_left	nall/vector.hpp	/^  uint _left = 0;      \/\/number of allocated elements free on the left of pool$/;"	m	struct:nall::vector_base
_loaded	higan/gb/system/system.hpp	/^  bool _loaded = false;$/;"	m	struct:System
_loaded	higan/gba/system/system.hpp	/^  bool _loaded = false;$/;"	m	struct:System
_loaded	higan/ws/system/system.hpp	/^  bool _loaded = false;$/;"	m	struct:System
_locale	nall/locale.hpp	/^    Locale& _locale;$/;"	m	struct:nall::Locale::Namespace
_looped	higan/sfc/dsp/dsp.hpp	/^    int _looped = 0;$/;"	m	struct:State
_lost	ruby/video/direct3d.cpp	/^  bool _lost = true;$/;"	m	struct:VideoDirect3D	file:
_mainLoop	ruby/audio/pulseaudio.cpp	/^  pa_mainloop* _mainLoop = nullptr;$/;"	m	struct:AudioPulseAudio	file:
_mainOut	higan/sfc/dsp/dsp.hpp	/^    int _mainOut[2] = {};$/;"	m	struct:State
_manufacturer	icarus/heuristics/heuristics.hpp	/^  string _manufacturer;$/;"	m	struct:Heuristics::Memory
_map	nall/file-map.hpp	/^  HANDLE _map  = INVALID_HANDLE_VALUE;$/;"	m	namespace:nall
_mask	nall/image.hpp	/^    uint64_t _mask;$/;"	m	struct:nall::image::channel
_master	higan/emulator/scheduler.hpp	/^  cothread_t _master = nullptr;  \/\/primary thread (used to synchronize components)$/;"	m	struct:Emulator::Scheduler
_math	higan/processor/arm7tdmi/disassembler.cpp	12;"	d	file:
_metadata	nall/string/markup/node.hpp	/^  uintptr _metadata = 0;$/;"	m	struct:nall::Markup::ManagedNode
_mode	higan/emulator/scheduler.hpp	/^  Mode _mode = Mode::Run;$/;"	m	struct:Emulator::Scheduler
_mode	nall/posix/shared-memory.hpp	/^  enum class mode : unsigned { server, client, inactive } _mode = mode::inactive;$/;"	m	struct:nall::shared_memory	typeref:class:nall::shared_memory::mode
_mode	nall/serializer.hpp	/^  Mode _mode = Size;$/;"	m	namespace:nall
_model	higan/gb/system/system.hpp	/^  Model _model = Model::GameBoy;$/;"	m	struct:System
_model	higan/ws/system/system.hpp	/^  Model _model = Model::WonderSwan;$/;"	m	struct:System
_monitorHeight	ruby/video/direct3d.cpp	/^  uint _monitorHeight;$/;"	m	struct:VideoDirect3D	file:
_monitorWidth	ruby/video/direct3d.cpp	/^  uint _monitorWidth;$/;"	m	struct:VideoDirect3D	file:
_move	higan/processor/arm7tdmi/disassembler.cpp	10;"	d	file:
_move	higan/processor/arm7tdmi/disassembler.cpp	411;"	d	file:
_name	nall/hid.hpp	/^  string _name;$/;"	m	struct:nall::HID::Device
_name	nall/hid.hpp	/^  string _name;$/;"	m	struct:nall::HID::Group
_name	nall/hid.hpp	/^  string _name;$/;"	m	struct:nall::HID::Input
_name	nall/posix/service.hpp	/^  string _name;$/;"	m	struct:nall::service
_name	nall/posix/shared-memory.hpp	/^  string _name;$/;"	m	struct:nall::shared_memory
_name	nall/string/markup/node.hpp	/^  string _name;$/;"	m	struct:nall::Markup::ManagedNode
_namespace	nall/locale.hpp	/^    string _namespace;$/;"	m	struct:nall::Locale::Namespace
_non	higan/sfc/dsp/dsp.hpp	/^    int _non = 0;$/;"	m	struct:State
_offset	nall/vfs/memory/file.hpp	/^  uintmax _offset = 0;$/;"	m	struct:nall::vfs::memory::file
_offset	ruby/audio/alsa.cpp	/^  uint _offset = 0;$/;"	m	struct:AudioALSA	file:
_offset	ruby/audio/directsound.cpp	/^  uint _offset = 0;$/;"	m	struct:AudioDirectSound	file:
_offset	ruby/audio/pulseaudio-simple.cpp	/^  uint _offset = 0;$/;"	m	struct:AudioPulseAudioSimple	file:
_offset	ruby/audio/pulseaudio.cpp	/^  uint _offset = 0;$/;"	m	struct:AudioPulseAudio	file:
_open	nall/file-map.hpp	/^  bool _open = false;$/;"	m	namespace:nall
_openAL	ruby/audio/openal.cpp	/^  ALCdevice* _openAL = nullptr;$/;"	m	struct:AudioOpenAL	file:
_output	higan/sfc/dsp/dsp.hpp	/^    int _output = 0;$/;"	m	struct:State
_output	nall/database/odbc.hpp	/^    unsigned _output = 0;$/;"	m	struct:nall::Database::ODBC::Statement
_output	nall/database/sqlite3.hpp	/^    unsigned _output = 0;$/;"	m	struct:nall::Database::SQLite3::Statement
_outputBuffer	ruby/video/xshm.cpp	/^  uint32_t* _outputBuffer = nullptr;$/;"	m	struct:VideoXShm	file:
_outputHeight	ruby/video/xshm.cpp	/^  uint _outputHeight = 0;$/;"	m	struct:VideoXShm	file:
_outputWidth	ruby/video/xshm.cpp	/^  uint _outputWidth = 0;$/;"	m	struct:VideoXShm	file:
_path	nall/http/request.hpp	/^  string _path;$/;"	m	struct:nall::HTTP::Request
_pc	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  uint32 _pc;$/;"	v
_period	ruby/audio/directsound.cpp	/^  uint _period = 0;$/;"	m	struct:AudioDirectSound	file:
_period	ruby/audio/pulseaudio.cpp	/^  size_t _period = 0;$/;"	m	struct:AudioPulseAudio	file:
_periodSize	ruby/audio/alsa.cpp	/^  snd_pcm_uframes_t _periodSize;$/;"	m	struct:AudioALSA	file:
_pitch	higan/sfc/dsp/dsp.hpp	/^    int _pitch = 0;$/;"	m	struct:State
_pmon	higan/sfc/dsp/dsp.hpp	/^    int _pmon = 0;$/;"	m	struct:State
_pool	nall/adaptive-array.hpp	/^  } _pool;$/;"	m	struct:nall::adaptive_array	typeref:union:nall::adaptive_array::U
_pool	nall/vector.hpp	/^  T* _pool = nullptr;  \/\/pointer to first initialized element in pool$/;"	m	struct:nall::vector_base
_port	ruby/video/xvideo.cpp	/^  int _port = -1;$/;"	m	struct:VideoXVideo	file:
_presentation	ruby/video/direct3d.cpp	/^  D3DPRESENT_PARAMETERS _presentation = {};$/;"	m	struct:VideoDirect3D	file:
_primary	ruby/audio/directsound.cpp	/^  LPDIRECTSOUNDBUFFER _primary = nullptr;$/;"	m	struct:AudioDirectSound	file:
_queue	ruby/audio/asio.cpp	/^  Queue _queue;$/;"	m	struct:AudioASIO	file:
_queueLength	ruby/audio/openal.cpp	/^  uint _queueLength = 0;$/;"	m	struct:AudioOpenAL	file:
_r	higan/processor/arm7tdmi/disassembler.cpp	/^static const string _r[] = {$/;"	v	file:
_raster	ruby/video/directdraw.cpp	/^  LPDIRECTDRAWSURFACE7 _raster = nullptr;$/;"	m	struct:VideoDirectDraw	file:
_read	nall/queue.hpp	/^  uint _read = 0;$/;"	m	struct:nall::queue
_ready	ruby/audio/alsa.cpp	/^  bool _ready = false;$/;"	m	struct:AudioALSA	file:
_ready	ruby/audio/ao.cpp	/^  bool _ready = false;$/;"	m	struct:AudioAO	file:
_ready	ruby/audio/asio.cpp	/^  bool _ready = false;$/;"	m	struct:AudioASIO	file:
_ready	ruby/audio/directsound.cpp	/^  bool _ready = false;$/;"	m	struct:AudioDirectSound	file:
_ready	ruby/audio/openal.cpp	/^  bool _ready = false;$/;"	m	struct:AudioOpenAL	file:
_ready	ruby/audio/pulseaudio-simple.cpp	/^  bool _ready = false;$/;"	m	struct:AudioPulseAudioSimple	file:
_ready	ruby/audio/pulseaudio.cpp	/^  bool _ready = false;$/;"	m	struct:AudioPulseAudio	file:
_ready	ruby/video/cgl.cpp	/^  bool _ready = false;$/;"	m	struct:VideoCGL	file:
_ready	ruby/video/direct3d.cpp	/^  bool _ready = false;$/;"	m	struct:VideoDirect3D	file:
_ready	ruby/video/directdraw.cpp	/^  bool _ready = false;$/;"	m	struct:VideoDirectDraw	file:
_ready	ruby/video/gdi.cpp	/^  bool _ready = false;$/;"	m	struct:VideoGDI	file:
_ready	ruby/video/glx.cpp	/^  bool _ready = false;$/;"	m	struct:VideoGLX	file:
_ready	ruby/video/glx2.cpp	/^  bool _ready = false;$/;"	m	struct:VideoGLX2	file:
_ready	ruby/video/wgl.cpp	/^  bool _ready = false;$/;"	m	struct:VideoWGL	file:
_ready	ruby/video/xshm.cpp	/^  bool _ready = false;$/;"	m	struct:VideoXShm	file:
_ready	ruby/video/xvideo.cpp	/^  bool _ready = false;$/;"	m	struct:VideoXVideo	file:
_refs	nall/string.hpp	/^      uint* _refs;$/;"	m	struct:nall::string::__anon33::__anon34
_refs	nall/string.hpp	/^  mutable uint* _refs;$/;"	m	struct:nall::string
_request	nall/http/response.hpp	/^  const Request* _request = nullptr;$/;"	m	struct:nall::HTTP::Response
_requestType	nall/http/request.hpp	/^  RequestType _requestType = RequestType::None;$/;"	m	struct:nall::HTTP::Request
_requested	higan/processor/z80/z80.hpp	/^    bool _requested;$/;"	m	struct:Processor::Z80::Bus
_response	nall/database/sqlite3.hpp	/^    signed _response = SQLITE_OK;$/;"	m	struct:nall::Database::SQLite3::Statement
_responseType	nall/http/response.hpp	/^  uint _responseType = 0;$/;"	m	struct:nall::HTTP::Response
_result	nall/database/odbc.hpp	/^    SQLRETURN _result = SQL_SUCCESS;$/;"	m	struct:nall::Database::ODBC::Query
_result	nall/database/odbc.hpp	/^  SQLRETURN _result = SQL_SUCCESS;$/;"	m	struct:nall::Database::ODBC
_resume	higan/emulator/scheduler.hpp	/^  cothread_t _resume = nullptr;  \/\/resume thread (used to enter scheduler)$/;"	m	struct:Emulator::Scheduler
_right	nall/vector.hpp	/^  uint _right = 0;     \/\/number of allocated elements free on the right of pool$/;"	m	struct:nall::vector_base
_ringDistance	ruby/audio/directsound.cpp	/^  int _ringDistance = 0;$/;"	m	struct:AudioDirectSound	file:
_ringRead	ruby/audio/directsound.cpp	/^  uint _ringRead = 0;$/;"	m	struct:AudioDirectSound	file:
_ringWrite	ruby/audio/directsound.cpp	/^  uint _ringWrite = 0;$/;"	m	struct:AudioDirectSound	file:
_rings	ruby/audio/directsound.cpp	/^  uint _rings = 0;$/;"	m	struct:AudioDirectSound	file:
_rumble	nall/hid.hpp	/^  bool _rumble = false;$/;"	m	namespace:nall
_s	higan/processor/arm7tdmi/disassembler.cpp	410;"	d	file:
_s	higan/processor/arm7tdmi/disassembler.cpp	9;"	d	file:
_sampleFormat	ruby/audio/asio.cpp	/^  long _sampleFormat;$/;"	m	struct:AudioASIO	file:
_sampleSize	ruby/audio/asio.cpp	/^  long _sampleSize;$/;"	m	struct:AudioASIO	file:
_save	higan/processor/arm7tdmi/disassembler.cpp	413;"	d	file:
_scalar	higan/emulator/thread.hpp	/^  uintmax _scalar = 0;$/;"	m	struct:Emulator::Thread
_screen	ruby/video/directdraw.cpp	/^  LPDIRECTDRAWSURFACE7 _screen = nullptr;$/;"	m	struct:VideoDirectDraw	file:
_screen	ruby/video/glx.cpp	/^  int _screen = 0;$/;"	m	struct:VideoGLX	file:
_screen	ruby/video/glx2.cpp	/^  int _screen = 0;$/;"	m	struct:VideoGLX2	file:
_screen	ruby/video/xshm.cpp	/^  int _screen = 0;$/;"	m	struct:VideoXShm	file:
_secondary	ruby/audio/directsound.cpp	/^  LPDIRECTSOUNDBUFFER _secondary = nullptr;$/;"	m	struct:AudioDirectSound	file:
_semaphore	nall/posix/shared-memory.hpp	/^  sem_t* _semaphore = nullptr;$/;"	m	struct:nall::shared_memory
_serializeSize	higan/fc/system/system.hpp	/^  uint _serializeSize = 0;$/;"	m	struct:System
_serializeSize	higan/gb/system/system.hpp	/^  uint _serializeSize = 0;$/;"	m	struct:System
_serializeSize	higan/gba/system/system.hpp	/^  uint _serializeSize = 0;$/;"	m	struct:System
_serializeSize	higan/ws/system/system.hpp	/^  uint _serializeSize = 0;$/;"	m	struct:System
_shift	nall/image.hpp	/^    uint _shift;$/;"	m	struct:nall::image::channel
_shmInfo	ruby/video/xshm.cpp	/^  XShmSegmentInfo _shmInfo;$/;"	m	struct:VideoXShm	file:
_shmInfo	ruby/video/xvideo.cpp	/^  XShmSegmentInfo _shmInfo;$/;"	m	struct:VideoXVideo	file:
_size	higan/ws/eeprom/eeprom.hpp	/^  uint _size = 0;  \/\/in words$/;"	v
_size	icarus/heuristics/heuristics.hpp	/^  natural _size;$/;"	m	struct:Heuristics::Memory
_size	nall/adaptive-array.hpp	/^  uint _size = 0;$/;"	m	struct:nall::adaptive_array
_size	nall/array-view.hpp	/^  int _size;$/;"	m	struct:nall::array_view
_size	nall/file-map.hpp	/^  uint64_t _size = 0;$/;"	m	namespace:nall
_size	nall/posix/shared-memory.hpp	/^  unsigned _size = 0;$/;"	m	struct:nall::shared_memory
_size	nall/queue.hpp	/^  int _size = 0;$/;"	m	struct:nall::queue
_size	nall/serializer.hpp	/^  uint _size = 0;$/;"	m	namespace:nall
_size	nall/string.hpp	/^  mutable int _size;$/;"	m	struct:nall::string_view
_size	nall/string.hpp	/^  uint _size;$/;"	m	struct:nall::string
_size	nall/vector.hpp	/^  uint _size = 0;      \/\/number of initialized elements in pool$/;"	m	struct:nall::vector_base
_size	nall/vfs/memory/file.hpp	/^  uintmax _size = 0;$/;"	m	struct:nall::vfs::memory::file
_source	ruby/audio/openal.cpp	/^  ALuint _source = 0;$/;"	m	struct:AudioOpenAL	file:
_specification	ruby/audio/pulseaudio.cpp	/^  pa_sample_spec _specification;$/;"	m	struct:AudioPulseAudio	file:
_srcn	higan/sfc/dsp/dsp.hpp	/^    int _srcn = 0;$/;"	m	struct:State
_state	higan/emulator/random.hpp	/^  uint64 _state;$/;"	m	struct:Emulator::Random
_statement	nall/database/odbc.hpp	/^    SQLHANDLE _statement = nullptr;$/;"	m	struct:nall::Database::ODBC::Statement
_statement	nall/database/sqlite3.hpp	/^    sqlite3_stmt* _statement = nullptr;$/;"	m	struct:nall::Database::SQLite3::Statement
_stepped	nall/database/odbc.hpp	/^    bool _stepped = false;$/;"	m	struct:nall::Database::ODBC::Query
_stepped	nall/database/sqlite3.hpp	/^    bool _stepped = false;$/;"	m	struct:nall::Database::SQLite3::Query
_stop	nall/posix/service.hpp	/^  bool _stop = false;$/;"	m	struct:nall::service
_stream	ruby/audio/pulseaudio.cpp	/^  pa_stream* _stream = nullptr;$/;"	m	struct:AudioPulseAudio	file:
_string	nall/string.hpp	/^  string* _string;$/;"	m	struct:nall::string_view
_surface	ruby/video/direct3d.cpp	/^  LPDIRECT3DSURFACE9 _surface = nullptr;$/;"	m	struct:VideoDirect3D	file:
_surfaceHeight	ruby/video/directdraw.cpp	/^  uint _surfaceHeight = 0;$/;"	m	struct:VideoDirectDraw	file:
_surfaceWidth	ruby/video/directdraw.cpp	/^  uint _surfaceWidth = 0;$/;"	m	struct:VideoDirectDraw	file:
_text	nall/http/response.hpp	/^  string _text;$/;"	m	struct:nall::HTTP::Response
_text	nall/string.hpp	/^      char _text[SSO];$/;"	m	struct:nall::string::__anon33::__anon35
_text	nall/string.hpp	/^    char _text[SSO];$/;"	m	union:nall::string::__anon36
_text	nall/string/cast.hpp	/^  const string& _text;$/;"	m	struct:nall::stringify
_text	nall/string/cast.hpp	/^  const string_pascal& _text;$/;"	m	struct:nall::stringify
_text	nall/string/cast.hpp	/^  vector<char> _text;$/;"	m	struct:nall::stringify
_texture	ruby/video/direct3d.cpp	/^  LPDIRECT3DTEXTURE9 _texture = nullptr;$/;"	m	struct:VideoDirect3D	file:
_textureHeight	ruby/video/direct3d.cpp	/^  uint _textureHeight;$/;"	m	struct:VideoDirect3D	file:
_texturePool	ruby/video/direct3d.cpp	/^  uint32_t _texturePool;$/;"	m	struct:VideoDirect3D	file:
_textureUsage	ruby/video/direct3d.cpp	/^  uint32_t _textureUsage;$/;"	m	struct:VideoDirect3D	file:
_textureWidth	ruby/video/direct3d.cpp	/^  uint _textureWidth;$/;"	m	struct:VideoDirect3D	file:
_threads	higan/emulator/scheduler.hpp	/^  vector<Thread*> _threads;$/;"	m	struct:Emulator::Scheduler
_type	icarus/heuristics/heuristics.hpp	/^  string _type;$/;"	m	struct:Heuristics::Memory
_type	icarus/heuristics/heuristics.hpp	/^  string _type;$/;"	m	struct:Heuristics::Slot
_utable	ruby/video/xvideo.cpp	/^  uint8_t* _utable = nullptr;$/;"	m	struct:VideoXVideo	file:
_valid	nall/maybe.hpp	/^  bool _valid = false;$/;"	m	struct:nall::maybe
_value	nall/hid.hpp	/^  int16_t _value = 0;$/;"	m	struct:nall::HID::Input
_value	nall/maybe.hpp	/^  T* _value;$/;"	m	struct:nall::maybe
_value	nall/maybe.hpp	/^  } _value;$/;"	m	struct:nall::maybe	typeref:union:nall::maybe::U
_value	nall/string/cast.hpp	/^  bool _value;$/;"	m	struct:nall::stringify
_value	nall/string/markup/node.hpp	/^  string _value;$/;"	m	struct:nall::Markup::ManagedNode
_values	nall/database/odbc.hpp	/^    vector<any> _values;  \/\/some ODBC drivers (eg MS-SQL) do not allow the same column to be read more than once$/;"	m	struct:nall::Database::ODBC::Statement
_versionMajor	ruby/video/glx.cpp	/^  int _versionMajor = 0;$/;"	m	struct:VideoGLX	file:
_versionMinor	ruby/video/glx.cpp	/^  int _versionMinor = 0;$/;"	m	struct:VideoGLX	file:
_vertexBuffer	ruby/video/direct3d.cpp	/^  LPDIRECT3DVERTEXBUFFER9 _vertexBuffer = nullptr;$/;"	m	struct:VideoDirect3D	file:
_vertexPool	ruby/video/direct3d.cpp	/^  uint32_t _vertexPool;$/;"	m	struct:VideoDirect3D	file:
_vertexUsage	ruby/video/direct3d.cpp	/^  uint32_t _vertexUsage;$/;"	m	struct:VideoDirect3D	file:
_view	nall/string/cast.hpp	/^  const array_view<uint8_t>& _view;$/;"	m	struct:nall::stringify
_view	nall/string/cast.hpp	/^  const string_view& _view;$/;"	m	struct:nall::stringify
_visual	ruby/video/xshm.cpp	/^  Visual* _visual = nullptr;$/;"	m	struct:VideoXShm	file:
_volatile	icarus/heuristics/heuristics.hpp	/^  boolean _volatile;$/;"	m	struct:Heuristics::Memory
_vtable	ruby/video/xvideo.cpp	/^  uint8_t* _vtable = nullptr;$/;"	m	struct:VideoXVideo	file:
_wglContext	ruby/video/wgl.cpp	/^  HGLRC _wglContext = nullptr;$/;"	m	struct:VideoWGL	file:
_width	hiro/windows/widget/table-view-column.hpp	/^  signed _width = 128;  \/\/computed width (via TableView::resizeColumns)$/;"	m	struct:hiro::pTableViewColumn
_width	nall/decode/bmp.hpp	/^  uint _width = 0;$/;"	m	struct:nall::Decode::BMP
_width	nall/image.hpp	/^  uint _width  = 0;$/;"	m	struct:nall::image
_width	ruby/video/directdraw.cpp	/^  uint _width = 0;$/;"	m	struct:VideoDirectDraw	file:
_width	ruby/video/gdi.cpp	/^  uint _width = 0;$/;"	m	struct:VideoGDI	file:
_width	ruby/video/glx2.cpp	/^  uint _width = 256;$/;"	m	struct:VideoGLX2	file:
_width	ruby/video/xvideo.cpp	/^  uint _width = 0;$/;"	m	struct:VideoXVideo	file:
_window	ruby/video/glx.cpp	/^  Window _window = 0;$/;"	m	struct:VideoGLX	file:
_window	ruby/video/glx2.cpp	/^  Window _window = 0;$/;"	m	struct:VideoGLX2	file:
_window	ruby/video/xshm.cpp	/^  Window _window = 0;$/;"	m	struct:VideoXShm	file:
_window	ruby/video/xvideo.cpp	/^  Window _window = 0;$/;"	m	struct:VideoXVideo	file:
_windowHeight	ruby/video/direct3d.cpp	/^  uint _windowHeight;$/;"	m	struct:VideoDirect3D	file:
_windowWidth	ruby/video/direct3d.cpp	/^  uint _windowWidth;$/;"	m	struct:VideoDirect3D	file:
_write	nall/queue.hpp	/^  uint _write = 0;$/;"	m	struct:nall::queue
_ytable	ruby/video/xvideo.cpp	/^  uint8_t* _ytable = nullptr;$/;"	m	struct:VideoXVideo	file:
a	higan/fc/controller/gamepad/gamepad.hpp	/^  bool a = 0;$/;"	v
a	higan/processor/hg51b/hg51b.hpp	/^    uint24 a;        \/\/accumulator$/;"	m	struct:Processor::HG51B::Registers
a	higan/processor/huc6280/huc6280.hpp	/^    uint8  a;$/;"	m	struct:Processor::HuC6280::Registers
a	higan/processor/mos6502/mos6502.hpp	/^    uint8  a;$/;"	m	struct:Processor::MOS6502::Registers
a	higan/processor/upd96050/upd96050.hpp	/^    Flag a;$/;"	m	struct:Processor::uPD96050::Flags
a	higan/processor/upd96050/upd96050.hpp	/^    int16 a;             \/\/accumulator$/;"	m	struct:Processor::uPD96050::Registers
a	higan/processor/wdc65816/wdc65816.hpp	/^    uint16 a;$/;"	m	struct:Processor::WDC65816::Registers
a	higan/sfc/controller/gamepad/gamepad.hpp	/^  boolean a, x, l, r;$/;"	v
a	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    boolean a, x, l, r;$/;"	m	struct:Gamepad
a	higan/ws/system/system.hpp	/^    bool b, a, start;$/;"	m	struct:System::Keypad
a0	higan/fc/cartridge/board/konami-vrc2.cpp	/^      uint a0;$/;"	m	struct:KonamiVRC2::Settings::Pinout	file:
a0	higan/fc/cartridge/board/konami-vrc4.cpp	/^      uint a0;$/;"	m	struct:KonamiVRC4::Settings::Pinout	file:
a0	nall/dsp/iir/biquad.hpp	/^  double a0, a1, a2, b1, b2;  \/\/coefficients$/;"	m	struct:nall::DSP::IIR::Biquad
a0	nall/dsp/iir/one-pole.hpp	/^  double a0, b1;  \/\/coefficients$/;"	m	struct:nall::DSP::IIR::OnePole
a1	higan/fc/cartridge/board/konami-vrc2.cpp	/^      uint a1;$/;"	m	struct:KonamiVRC2::Settings::Pinout	file:
a1	higan/fc/cartridge/board/konami-vrc4.cpp	/^      uint a1;$/;"	m	struct:KonamiVRC4::Settings::Pinout	file:
a1	nall/dsp/iir/biquad.hpp	/^  double a0, a1, a2, b1, b2;  \/\/coefficients$/;"	m	struct:nall::DSP::IIR::Biquad
a2	nall/dsp/iir/biquad.hpp	/^  double a0, a1, a2, b1, b2;  \/\/coefficients$/;"	m	struct:nall::DSP::IIR::Biquad
a8	higan/processor/wdc65816/disassembler.cpp	147;"	d	file:
a8	higan/processor/wdc65816/disassembler.cpp	425;"	d	file:
aa	higan/processor/wdc65816/wdc65816.cpp	33;"	d	file:
aa	higan/processor/wdc65816/wdc65816.cpp	92;"	d	file:
abort	icarus/ui/ui.hpp	/^  bool abort;$/;"	m	struct:ImportDialog
aborted	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 aborted;$/;"	m	struct:BSMemory::Block::Status
aboutWindow	higan/target-bsnes/presentation/presentation.cpp	/^AboutWindow aboutWindow;$/;"	v
aboutWindow	higan/target-higan/presentation/presentation.cpp	/^unique_pointer<AboutWindow> aboutWindow;$/;"	v
above	higan/sfc/ppu/object.hpp	/^    } above, below;$/;"	m	struct:Object::Output	typeref:struct:Object::Output::Pixel
above	higan/sfc/ppu/screen.hpp	/^    } above, below;$/;"	m	struct:Screen::Math	typeref:struct:Screen::Math::Screen
above	higan/sfc/ppu/window.hpp	/^    } above, below;$/;"	m	struct:Window::Output	typeref:struct:Window::Output::Pixel
aboveEnable	higan/sfc/ppu/object.hpp	/^    bool aboveEnable;$/;"	m	struct:Object::IO
aboveEnable	higan/sfc/ppu/window.hpp	/^      bool aboveEnable;$/;"	m	struct:Window::IO::Layer
aboveMask	higan/sfc/ppu/window.hpp	/^      uint2 aboveMask;$/;"	m	struct:Window::IO::Color
above_stack	libco/ppc.c	/^enum { above_stack = 2048 };$/;"	e	enum:__anon30	file:
absbit	ruby/input/joypad/udev.cpp	/^    uint8_t absbit[(ABS_MAX + 7) \/ 8] = {0};$/;"	m	struct:InputJoypadUdev::Joypad	file:
absolute	nall/vfs/vfs.hpp	/^  enum class index : uint { absolute, relative };$/;"	m	class:nall::vfs::file::index
absoluteHeight	ruby/video/opengl/opengl.hpp	/^  uint absoluteHeight = 0;$/;"	m	struct:OpenGLProgram
absoluteWidth	ruby/video/opengl/opengl.hpp	/^  uint absoluteWidth = 0;$/;"	m	struct:OpenGLProgram
abstract	hiro/cocoa/widget/widget.hpp	/^  bool abstract = false;$/;"	m	struct:hiro::pWidget
abstract	hiro/windows/widget/widget.hpp	/^  bool abstract = false;$/;"	m	struct:hiro::pWidget
abt	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    } abt;$/;"	m	struct:Processor	typeref:struct:Processor::ABT
accelerometer	higan/gb/cartridge/cartridge.hpp	/^  bool accelerometer = false;$/;"	m	struct:Cartridge
accelerometer	higan/gb/cartridge/mbc7/mbc7.hpp	/^    } accelerometer;$/;"	m	struct:MBC7::IO	typeref:struct:MBC7::IO::Accelerometer
accessed	nall/beat/archive/node.hpp	/^    string accessed;$/;"	m	struct:nall::Beat::Archive::Node::Timestamp
accumulator	higan/fc/cartridge/chip/vrc6.cpp	/^    uint8 accumulator;$/;"	m	struct:VRC6::Sawtooth	file:
acm	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool acm;$/;"	m	struct:SA1::MMIO
acquired	ruby/input/mouse/xlib.cpp	/^    bool acquired = false;$/;"	m	struct:InputMouseXlib::Mouse	file:
action	hiro/core/shared.hpp	/^  auto action(unsigned position) const { return self().action(position); }$/;"	f	struct:Menu
action	hiro/core/shared.hpp	/^  auto action(unsigned position) const { return self().action(position); }$/;"	f	struct:PopupMenu
action	hiro/extension/browser-dialog.hpp	/^    string action;$/;"	m	struct:BrowserDialog::State
actionCount	hiro/core/shared.hpp	/^  auto actionCount() const { return self().actionCount(); }$/;"	f	struct:Menu
actionCount	hiro/core/shared.hpp	/^  auto actionCount() const { return self().actionCount(); }$/;"	f	struct:PopupMenu
actionIcons	hiro/gtk/settings.hpp	/^    bool actionIcons = true;$/;"	m	struct:hiro::Settings::Theme
actions	hiro/core/core.hpp	/^    vector<sAction> actions;$/;"	m	struct:hiro::mMenu::State
actions	hiro/core/core.hpp	/^    vector<sAction> actions;$/;"	m	struct:hiro::mPopupMenu::State
actions	hiro/core/shared.hpp	/^  auto actions() const { return self().actions(); }$/;"	f	struct:Menu
actions	hiro/core/shared.hpp	/^  auto actions() const { return self().actions(); }$/;"	f	struct:PopupMenu
active	higan/emulator/thread.hpp	/^  inline auto active() const { return co_active() == _handle; }$/;"	f	struct:Emulator::Thread
active	higan/gba/apu/apu.hpp	/^    int8 active;$/;"	m	struct:APU::FIFO
active	higan/gba/cpu/cpu.hpp	/^    boolean active;$/;"	m	struct:DMA
active	higan/gba/ppu/ppu.hpp	/^      uint1 active[6];$/;"	m	struct:PPU::Window::IO
active	higan/sfc/controller/justifier/justifier.hpp	/^  bool active;$/;"	v
active	higan/sfc/ppu/object.hpp	/^    bool active;$/;"	m	struct:Object::State
active	hiro/core/core.hpp	/^    bool active = false;$/;"	m	struct:hiro::Hotkey::State
active	hiro/core/shared.hpp	/^  auto active() const { return self().active(); }$/;"	f	struct:TableViewColumn
active	hiro/core/widget/table-view-column.hpp	/^    bool active = false;$/;"	m	struct:mTableViewColumn::State
activeColumn	hiro/core/widget/table-view.hpp	/^    uint activeColumn = 0;$/;"	m	struct:mTableView::State
activeDevice	ruby/audio/asio.cpp	/^  Device activeDevice;$/;"	m	struct:AudioASIO	file:
activeMapping	higan/target-bsnes/settings/settings.hpp	/^  maybe<InputMapping&> activeMapping;$/;"	m	struct:HotkeySettings
activeMapping	higan/target-bsnes/settings/settings.hpp	/^  maybe<InputMapping&> activeMapping;$/;"	m	struct:InputSettings
activeMapping	higan/target-higan/settings/settings.hpp	/^  InputMapping* activeMapping = nullptr;$/;"	m	struct:HotkeySettings
activeMapping	higan/target-higan/settings/settings.hpp	/^  InputMapping* activeMapping = nullptr;$/;"	m	struct:InputSettings
adaptive_array	nall/adaptive-array.hpp	/^struct adaptive_array {$/;"	s	namespace:nall
add	nall/image.hpp	/^    add,$/;"	m	class:nall::image::blend
addr	higan/emulator/cheat.hpp	/^    uint addr;$/;"	m	struct:Emulator::Cheat::Code
addr	higan/gba/cpu/cpu.hpp	/^    uint32 addr;       \/\/read location of slot buffer$/;"	m	struct:__anon6
addr	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^    uint24 addr;  \/\/$43x2-$43x4 -- DMA transfer address$/;"	m	struct:SDD1::DMA
addrLatch	higan/fc/apu/apu.hpp	/^    uint8 addrLatch;$/;"	m	struct:APU::DMC
address	higan/fc/ppu/ppu.hpp	/^      NaturalBitField<uint, 0,14> address;$/;"	m	union:PPU::IO::Union
address	higan/gba/cartridge/memory.hpp	/^  uint address;$/;"	m	struct:EEPROM
address	higan/md/cartridge/cartridge.hpp	/^      uint24 address;$/;"	m	struct:Cartridge::GameGenie::Code
address	higan/md/vdp/vdp.hpp	/^    uint11 address;$/;"	m	struct:VDP::Object
address	higan/md/vdp/vdp.hpp	/^    uint16 address;$/;"	m	struct:VDP::IO
address	higan/md/ym2612/ym2612.hpp	/^    uint9 address = 0;$/;"	m	struct:YM2612::IO
address	higan/ms/vdp/vdp.hpp	/^    uint14 address;$/;"	m	struct:VDP::IO
address	higan/pce/vce/vce.hpp	/^    uint9 address;$/;"	m	struct:VCE::CRAM
address	higan/pce/vdc/vdc.hpp	/^    uint5  address;$/;"	m	struct:VDC::IO
address	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      uint32 address;$/;"	m	struct:Pipeline::Instruction
address	higan/processor/hg51b/hg51b.hpp	/^      uint24 address;$/;"	m	struct:Processor::HG51B::IO::Bus
address	higan/processor/hg51b/hg51b.hpp	/^      uint24 address[2];  \/\/cache address is in bytes; so 24-bit$/;"	m	struct:Processor::HG51B::IO::Cache
address	higan/processor/v30mz/v30mz.hpp	/^    uint16 address;$/;"	m	struct:Processor::ModRM
address	higan/sfc/coprocessor/obc1/obc1.hpp	/^    uint16 address;$/;"	m	struct:OBC1::__anon11
address	higan/ws/eeprom/eeprom.hpp	/^    uint16 address;$/;"	m	struct:Registers
address	hiro/core/core.hpp	/^    uint address = 0;$/;"	m	struct:hiro::mHexEdit::State
address	hiro/core/shared.hpp	/^  auto address() const { return self().address(); }$/;"	f	struct:HexEdit
addressHi	higan/fc/ppu/ppu.hpp	/^      NaturalBitField<uint, 8,14> addressHi;$/;"	m	union:PPU::IO::Union
addressIncrement	higan/pce/vdc/vdc.hpp	/^    uint16 addressIncrement;$/;"	m	struct:VDC::VRAM
addressLength	higan/gb/cartridge/mbc7/mbc7.hpp	/^      uint32 addressLength;$/;"	m	struct:MBC7::EEPROM::InputShiftRegister
addressLo	higan/fc/ppu/ppu.hpp	/^      NaturalBitField<uint, 0, 7> addressLo;$/;"	m	union:PPU::IO::Union
addressRead	higan/pce/vdc/vdc.hpp	/^    uint16 addressRead;$/;"	m	struct:VDC::VRAM
addressWrite	higan/pce/vdc/vdc.hpp	/^    uint16 addressWrite;$/;"	m	struct:VDC::VRAM
addressbits	higan/gba/cartridge/memory.hpp	/^  uint addressbits;$/;"	m	struct:EEPROM
addrin4	nall/http/server.hpp	/^  struct sockaddr_in addrin4 = {0};$/;"	m	struct:nall::HTTP::Server	typeref:struct:nall::HTTP::Server::sockaddr_in
addrin6	nall/http/server.hpp	/^  struct sockaddr_in6 addrin6 = {0};$/;"	m	struct:nall::HTTP::Server	typeref:struct:nall::HTTP::Server::sockaddr_in6
af	higan/processor/lr35902/lr35902.hpp	/^    Pair af;$/;"	m	struct:Processor::LR35902::Registers
af	higan/processor/z80/z80.hpp	/^    Pair af, af_;$/;"	m	struct:Processor::Z80::Registers
af_	higan/processor/z80/z80.hpp	/^    Pair af, af_;$/;"	m	struct:Processor::Z80::Registers
affine	higan/gba/ppu/ppu.hpp	/^    uint1  affine;$/;"	m	struct:PPU::Object
affineParam	higan/gba/ppu/ppu.hpp	/^    uint5  affineParam;$/;"	m	struct:PPU::Object
affineSize	higan/gba/ppu/ppu.hpp	/^    uint1  affineSize;$/;"	m	struct:PPU::Object
affineWrap	higan/gba/ppu/ppu.hpp	/^      uint1 affineWrap;  \/\/BG2, BG3 only$/;"	m	struct:PPU::Background::IO
alarm	higan/ws/cartridge/cartridge.hpp	/^    uint8 alarm;$/;"	m	struct:Cartridge::RTC
alarmHour	higan/ws/cartridge/cartridge.hpp	/^    uint8 alarmHour;$/;"	m	struct:Cartridge::RTC
alarmMinute	higan/ws/cartridge/cartridge.hpp	/^    uint8 alarmMinute;$/;"	m	struct:Cartridge::RTC
algorithm	higan/md/ym2612/ym2612.hpp	/^    uint3 algorithm = 0;$/;"	m	struct:Channel
alignas	libco/settings.h	26;"	d
alignment	hiro/core/core.hpp	/^    Alignment alignment;$/;"	m	struct:hiro::mLabel::State
alignment	hiro/core/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:Label
alignment	hiro/core/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:TableView
alignment	hiro/core/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:TableViewCell
alignment	hiro/core/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:TableViewColumn
alignment	hiro/core/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:TableViewItem
alignment	hiro/core/widget/table-view-cell.hpp	/^    Alignment alignment;$/;"	m	struct:mTableViewCell::State
alignment	hiro/core/widget/table-view-column.hpp	/^    Alignment alignment;$/;"	m	struct:mTableViewColumn::State
alignment	hiro/core/widget/table-view-item.hpp	/^    Alignment alignment;$/;"	m	struct:mTableViewItem::State
alignment	hiro/core/widget/table-view.hpp	/^    Alignment alignment;$/;"	m	struct:mTableView::State
alignment	hiro/extension/horizontal-layout.hpp	/^    maybe<float> alignment;$/;"	m	struct:mHorizontalLayout::State
alignment	hiro/extension/horizontal-layout.hpp	/^    maybe<float> alignment;$/;"	m	struct:mHorizontalLayoutCell::State
alignment	hiro/extension/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:HorizontalLayout
alignment	hiro/extension/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:HorizontalLayoutCell
alignment	hiro/extension/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:ListView
alignment	hiro/extension/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:ListViewItem
alignment	hiro/extension/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:TableLayout
alignment	hiro/extension/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:TableLayoutCell
alignment	hiro/extension/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:TableLayoutColumn
alignment	hiro/extension/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:TableLayoutRow
alignment	hiro/extension/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:VerticalLayout
alignment	hiro/extension/shared.hpp	/^  auto alignment() const { return self().alignment(); }$/;"	f	struct:VerticalLayoutCell
alignment	hiro/extension/table-layout.hpp	/^    Alignment alignment;$/;"	m	struct:mTableLayout::State
alignment	hiro/extension/table-layout.hpp	/^    Alignment alignment;$/;"	m	struct:mTableLayoutCell::State
alignment	hiro/extension/table-layout.hpp	/^    Alignment alignment;$/;"	m	struct:mTableLayoutColumn::State
alignment	hiro/extension/table-layout.hpp	/^    Alignment alignment;$/;"	m	struct:mTableLayoutRow::State
alignment	hiro/extension/vertical-layout.hpp	/^    maybe<float> alignment;$/;"	m	struct:mVerticalLayout::State
alignment	hiro/extension/vertical-layout.hpp	/^    maybe<float> alignment;$/;"	m	struct:mVerticalLayoutCell::State
allowHTML	nall/string/transform/dml.hpp	/^    bool allowHTML = true;$/;"	m	struct:nall::__anon37::DML::Settings
alpha	hiro/core/core.hpp	/^    uint8_t alpha;$/;"	m	struct:hiro::Color::State
alpha	nall/image.hpp	/^  alwaysinline auto alpha() const { return _alpha; }$/;"	f	struct:nall::image
alt	higan/processor/gsu/registers.hpp	/^    NaturalBitField<uint16_t,  9, 8> alt;  \/\/instruction mode (composite flag)$/;"	m	union:SFR::__anon27
alt1	higan/processor/gsu/registers.hpp	/^    BooleanBitField<uint16_t,  8> alt1;    \/\/alt1 instruction mode$/;"	m	union:SFR::__anon27
alt2	higan/processor/gsu/registers.hpp	/^    BooleanBitField<uint16_t,  9> alt2;    \/\/alt2 instruction mode$/;"	m	union:SFR::__anon27
alternate	higan/md/ym2612/ym2612.hpp	/^        uint1 alternate = 0;$/;"	m	struct:Channel::Operator::SSG
alu	higan/processor/spc700/spc700.cpp	23;"	d	file:
alu	higan/processor/spc700/spc700.cpp	60;"	d	file:
alu	higan/processor/wdc65816/wdc65816.cpp	34;"	d	file:
alu	higan/processor/wdc65816/wdc65816.cpp	93;"	d	file:
alu	higan/sfc/cpu/cpu.hpp	/^  } alu;$/;"	m	struct:CPU	typeref:struct:CPU::ALU
alwaysinline	nall/platform.hpp	107;"	d
amd64	nall/intrinsics.hpp	/^  enum class Architecture : uint { x86, amd64, ARM, PPC32, PPC64, Unknown };$/;"	m	class:nall::Architecture
amplitude	higan/gba/apu/apu.hpp	/^      uint2 amplitude;$/;"	m	struct:APU::Registers::SoundBias
any	nall/any.hpp	/^  any(any&& source) { operator=(move(source)); }$/;"	f	struct:nall::any
any	nall/any.hpp	/^  any(const any& source) { operator=(source); }$/;"	f	struct:nall::any
any	nall/any.hpp	/^  template<typename T> any(const T& value) { operator=(value); }$/;"	f	struct:nall::any
any	nall/any.hpp	/^struct any {$/;"	s	namespace:nall
append	hiro/core/shared.hpp	/^  auto append(sAction action) { return self().append(action), *this; }$/;"	f	struct:Menu
append	hiro/core/shared.hpp	/^  auto append(sAction action) { return self().append(action), *this; }$/;"	f	struct:PopupMenu
append	hiro/core/shared.hpp	/^  auto append(sComboButtonItem item) { return self().append(item), *this; }$/;"	f	struct:ComboButton
append	hiro/core/shared.hpp	/^  auto append(sComboEditItem item) { return self().append(item), *this; }$/;"	f	struct:ComboEdit
append	hiro/core/shared.hpp	/^  auto append(sIconViewItem item) { return self().append(item), *this; }$/;"	f	struct:IconView
append	hiro/core/shared.hpp	/^  auto append(sMenu menu) { return self().append(menu), *this; }$/;"	f	struct:MenuBar
append	hiro/core/shared.hpp	/^  auto append(sMenuBar menuBar) { return self().append(menuBar), *this; }$/;"	f	struct:Window
append	hiro/core/shared.hpp	/^  auto append(sSizable sizable) { return self().append(sizable), *this; }$/;"	f	struct:Frame
append	hiro/core/shared.hpp	/^  auto append(sSizable sizable) { return self().append(sizable), *this; }$/;"	f	struct:TabFrameItem
append	hiro/core/shared.hpp	/^  auto append(sSizable sizable) { return self().append(sizable), *this; }$/;"	f	struct:Window
append	hiro/core/shared.hpp	/^  auto append(sStatusBar statusBar) { return self().append(statusBar), *this; }$/;"	f	struct:Window
append	hiro/core/shared.hpp	/^  auto append(sTabFrameItem item) { return self().append(item), *this; }$/;"	f	struct:TabFrame
append	hiro/core/shared.hpp	/^  auto append(sTableViewCell cell) { return self().append(cell), *this; }$/;"	f	struct:TableViewItem
append	hiro/core/shared.hpp	/^  auto append(sTableViewColumn column) { return self().append(column), *this; }$/;"	f	struct:TableView
append	hiro/core/shared.hpp	/^  auto append(sTableViewItem item) { return self().append(item), *this; }$/;"	f	struct:TableView
append	hiro/core/shared.hpp	/^  auto append(sTreeViewItem item) { return self().append(item), *this; }$/;"	f	struct:TreeView
append	hiro/core/shared.hpp	/^  auto append(sTreeViewItem item) { return self().append(item), *this; }$/;"	f	struct:TreeViewItem
append	hiro/extension/shared.hpp	/^  auto append(sListViewItem item) { return self().append(item), *this; }$/;"	f	struct:ListView
append	hiro/extension/shared.hpp	/^  auto append(sSizable sizable, Geometry geometry) { return self().append(sizable, geometry), *this; }$/;"	f	struct:FixedLayout
append	hiro/extension/shared.hpp	/^  auto append(sSizable sizable, Size size) { return self().append(sizable, size), *this; }$/;"	f	struct:TableLayout
append	hiro/extension/shared.hpp	/^  auto append(sSizable sizable, Size size, float spacing = 5) { return self().append(sizable, size, spacing), *this; }$/;"	f	struct:HorizontalLayout
append	hiro/extension/shared.hpp	/^  auto append(sSizable sizable, Size size, float spacing = 5) { return self().append(sizable, size, spacing), *this; }$/;"	f	struct:VerticalLayout
applicationTimer	hiro/cocoa/application.cpp	/^NSTimer* applicationTimer = nullptr;$/;"	v
apu	higan/fc/apu/apu.cpp	/^APU apu;$/;"	m	namespace:Famicom	file:
apu	higan/gb/apu/apu.cpp	/^APU apu;$/;"	m	namespace:GameBoy	file:
apu	higan/gba/apu/apu.cpp	/^APU apu;$/;"	m	namespace:GameBoyAdvance	file:
apu	higan/md/apu/apu.cpp	/^APU apu;$/;"	m	namespace:MegaDrive	file:
apu	higan/ws/apu/apu.cpp	/^APU apu;$/;"	m	namespace:WonderSwan	file:
apu0	higan/sfc/smp/smp.hpp	/^    uint8 apu0;$/;"	m	struct:SMP::IO
apu1	higan/sfc/smp/smp.hpp	/^    uint8 apu1;$/;"	m	struct:SMP::IO
apu2	higan/sfc/smp/smp.hpp	/^    uint8 apu2;$/;"	m	struct:SMP::IO
apu3	higan/sfc/smp/smp.hpp	/^    uint8 apu3;$/;"	m	struct:SMP::IO
apuFrequency	higan/sfc/system/system.hpp	/^    double apuFrequency = 32040.0 * 768.0;$/;"	m	struct:System::Information
apuLine	higan/fc/cpu/cpu.hpp	/^    bool apuLine = 0;$/;"	m	struct:CPU::IO
apuPort	higan/fc/cartridge/board/sunsoft-5b.cpp	/^  uint4 apuPort;$/;"	m	struct:Sunsoft5B	file:
apuram	higan/sfc/dsp/dsp.hpp	/^  uint8 apuram[64 * 1024];$/;"	m	struct:DSP
architecture	genius/genius.hpp	/^  string architecture;$/;"	m	struct:Memory
architecture	higan/emulator/game.hpp	/^    string architecture;$/;"	m	struct:Emulator::Game::Memory
architecture	icarus/heuristics/heuristics.hpp	/^  auto& architecture(string architecture) { _architecture = architecture; return *this; }$/;"	f	struct:Heuristics::Memory
arguments	higan/processor/arm7tdmi/instruction.cpp	105;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	107;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	123;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	125;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	140;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	142;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	157;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	159;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	174;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	176;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	185;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	187;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	202;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	204;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	219;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	221;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	240;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	242;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	260;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	262;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	284;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	286;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	293;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	295;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	305;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	307;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	315;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	317;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	329;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	331;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	345;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	347;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	354;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	356;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	362;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	71;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	81;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	83;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	89;"	d	file:
arguments	higan/processor/arm7tdmi/instruction.cpp	91;"	d	file:
arguments	nall/arguments.hpp	/^  vector<string> arguments;$/;"	m	struct:nall::Arguments
armDisassemble	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  function<auto (uint32 opcode) -> string> armDisassemble[4096];$/;"	v
armInstruction	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  function<auto (uint32 opcode) -> void> armInstruction[4096];$/;"	v
armdsp	higan/sfc/coprocessor/armdsp/armdsp.cpp	/^ArmDSP armdsp;$/;"	m	namespace:SuperFamicom	file:
armtocpu	higan/sfc/coprocessor/armdsp/registers.hpp	/^  Buffer armtocpu;$/;"	m	struct:Bridge
array	nall/array.hpp	/^  array(const initializer_list<T>& source) {$/;"	f	struct:nall::array
array	nall/array.hpp	/^template<typename T, uint Size> struct array<T[Size]> {$/;"	s	namespace:nall
array_span	nall/array-span.hpp	/^  inline array_span() {$/;"	f	struct:nall::array_span
array_span	nall/array-span.hpp	/^  inline array_span(nullptr_t) {$/;"	f	struct:nall::array_span
array_span	nall/array-span.hpp	/^  inline array_span(void* data, uint64_t size) {$/;"	f	struct:nall::array_span
array_span	nall/array-span.hpp	/^template<typename T> struct array_span : array_view<T> {$/;"	s	namespace:nall
array_view	nall/array-view.hpp	/^  inline array_view() {$/;"	f	struct:nall::array_view
array_view	nall/array-view.hpp	/^  inline array_view(const void* data, uint64_t size) {$/;"	f	struct:nall::array_view
array_view	nall/array-view.hpp	/^  inline array_view(nullptr_t) {$/;"	f	struct:nall::array_view
array_view	nall/array-view.hpp	/^template<typename T> struct array_view {$/;"	s	namespace:nall
aspectCorrection	higan/emulator/interface.hpp	/^    double aspectCorrection = 0;$/;"	m	struct:Emulator::Interface
aspectCorrection	higan/target-bsnes/settings/settings.hpp	/^    bool aspectCorrection = true;$/;"	m	struct:Settings::Video
assignment	higan/target-bsnes/input/input.hpp	/^  string assignment = "None";$/;"	m	struct:InputMapping
assignment	higan/target-higan/input/input.hpp	/^  string assignment = "None";$/;"	m	struct:InputMapping
associatedChannel	ruby/audio/asio.hpp	/^  long associatedChannel;$/;"	m	struct:ASIOClockSource
associatedGroup	ruby/audio/asio.hpp	/^  long associatedGroup;$/;"	m	struct:ASIOClockSource
atime	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 atime;  \/\/astronomical time (24-hour mode)$/;"	m	struct:EpsonRTC
attachments	nall/smtp.hpp	/^    vector<Attachment> attachments;$/;"	m	struct:nall::SMTP::Information
attack	higan/md/ym2612/ym2612.hpp	/^        uint1 attack = 0;$/;"	m	struct:Channel::Operator::SSG
attackRate	higan/md/ym2612/ym2612.hpp	/^        uint5  attackRate = 0;$/;"	m	struct:Channel::Operator::Envelope
attr	higan/fc/ppu/ppu.hpp	/^    uint8 attr = 0xff;$/;"	m	struct:PPU::OAM
attr	higan/gb/ppu/ppu.hpp	/^    uint attr = 0;$/;"	m	struct:PPU::Background
attr	higan/gb/ppu/ppu.hpp	/^    uint attr = 0;$/;"	m	struct:PPU::Sprite
attribute	higan/fc/ppu/ppu.hpp	/^    uint16 attribute;$/;"	m	struct:PPU::Latches
attributeAddress	higan/md/vdp/vdp.hpp	/^      uint15 attributeAddress;$/;"	m	struct:VDP::Sprite::IO
audio	higan/audio/audio.cpp	/^Audio audio;$/;"	m	namespace:Emulator	file:
audio	higan/target-bsnes/bsnes.cpp	/^Audio audio;$/;"	v
audio	higan/target-bsnes/settings/settings.hpp	/^  } audio;$/;"	m	struct:Settings	typeref:struct:Settings::Audio
audio	higan/target-higan/higan.cpp	/^unique_pointer<Audio> audio;$/;"	v
audioBusy	higan/sfc/coprocessor/msu1/msu1.hpp	/^    boolean audioBusy;$/;"	m	struct:IO
audioClient	ruby/audio/wasapi.cpp	/^  IAudioClient* audioClient = nullptr;$/;"	m	struct:AudioWASAPI	file:
audioDevice	ruby/audio/wasapi.cpp	/^  IMMDevice* audioDevice = nullptr;$/;"	m	struct:AudioWASAPI	file:
audioError	higan/sfc/coprocessor/msu1/msu1.hpp	/^    boolean audioError;$/;"	m	struct:IO
audioFile	higan/sfc/coprocessor/msu1/msu1.hpp	/^  vfs::shared::file audioFile;$/;"	m	struct:MSU1
audioLoopOffset	higan/sfc/coprocessor/msu1/msu1.hpp	/^    uint32 audioLoopOffset;$/;"	m	struct:IO
audioPlay	higan/sfc/coprocessor/msu1/msu1.hpp	/^    boolean audioPlay;$/;"	m	struct:IO
audioPlayOffset	higan/sfc/coprocessor/msu1/msu1.hpp	/^    uint32 audioPlayOffset;$/;"	m	struct:IO
audioRepeat	higan/sfc/coprocessor/msu1/msu1.hpp	/^    boolean audioRepeat;$/;"	m	struct:IO
audioResumeOffset	higan/sfc/coprocessor/msu1/msu1.hpp	/^    uint32 audioResumeOffset;$/;"	m	struct:IO
audioResumeTrack	higan/sfc/coprocessor/msu1/msu1.hpp	/^    uint32 audioResumeTrack;$/;"	m	struct:IO
audioSettings	higan/target-bsnes/settings/settings.cpp	/^AudioSettings audioSettings;$/;"	v
audioTrack	higan/sfc/coprocessor/msu1/msu1.hpp	/^    uint16 audioTrack;$/;"	m	struct:IO
audioVolume	higan/sfc/coprocessor/msu1/msu1.hpp	/^    uint8 audioVolume;$/;"	m	struct:IO
autoJoypadActive	higan/sfc/cpu/cpu.hpp	/^    bool autoJoypadActive = false;$/;"	m	struct:CPU::Status
autoJoypadCounter	higan/sfc/cpu/cpu.hpp	/^    uint autoJoypadCounter = 0;$/;"	m	struct:CPU::Status
autoJoypadLatch	higan/sfc/cpu/cpu.hpp	/^    bool autoJoypadLatch = false;$/;"	m	struct:CPU::Status
autoJoypadPoll	higan/sfc/cpu/cpu.hpp	/^    boolean autoJoypadPoll;$/;"	m	struct:CPU::IO
autoLoadStateOnLoad	higan/target-bsnes/settings/settings.hpp	/^    bool autoLoadStateOnLoad = false;$/;"	m	struct:Settings::Emulator
autoSaveMemory	higan/target-bsnes/settings/settings.hpp	/^    } autoSaveMemory;$/;"	m	struct:Settings::Emulator	typeref:struct:Settings::Emulator::AutoSaveMemory
autoSaveStateOnUnload	higan/target-bsnes/settings/settings.hpp	/^    bool autoSaveStateOnUnload = false;$/;"	m	struct:Settings::Emulator
autoSaveTime	higan/target-bsnes/program/program.hpp	/^  uint64 autoSaveTime;$/;"	m	struct:Program
autoSaveTime	higan/target-higan/program/program.hpp	/^  uint64 autoSaveTime = 0;  \/\/for automatically saving RAM periodically$/;"	m	struct:Program
aux4	higan/sfc/smp/smp.hpp	/^    uint8 aux4;$/;"	m	struct:SMP::IO
aux5	higan/sfc/smp/smp.hpp	/^    uint8 aux5;$/;"	m	struct:SMP::IO
ax	higan/processor/v30mz/v30mz.hpp	/^    union { uint16_t ax; struct { uint8_t order_lsb2(al, ah); }; };$/;"	m	union:Processor::Registers::__anon18
axes	ruby/input/joypad/udev.cpp	/^    set<JoypadInput> axes;$/;"	m	struct:InputJoypadUdev::Joypad	file:
b	higan/fc/controller/gamepad/gamepad.hpp	/^  bool b = 0;$/;"	v
b	higan/processor/gsu/registers.hpp	/^    BooleanBitField<uint16_t, 12> b;       \/\/with flag$/;"	m	union:SFR::__anon27
b	higan/processor/huc6280/huc6280.hpp	/^    bool b;  \/\/break$/;"	m	struct:Processor::HuC6280::Flags
b	higan/processor/spc700/spc700.hpp	/^    bool b;  \/\/break$/;"	m	struct:Processor::SPC700::Flags
b	higan/processor/upd96050/upd96050.hpp	/^    Flag b;$/;"	m	struct:Processor::uPD96050::Flags
b	higan/processor/upd96050/upd96050.hpp	/^    int16 b;             \/\/accumulator$/;"	m	struct:Processor::uPD96050::Registers
b	higan/processor/v30mz/v30mz.hpp	/^        BooleanBitField<uint16_t,  8> b;  \/\/break$/;"	m	union:Processor::Registers::Flags::__anon26
b	higan/processor/wdc65816/wdc65816.hpp	/^    uint8 b;$/;"	m	struct:Processor::WDC65816::Registers
b	higan/sfc/controller/gamepad/gamepad.hpp	/^  boolean b, y, select, start;$/;"	v
b	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    boolean b, y, select, start;$/;"	m	struct:Gamepad
b	higan/ws/system/system.hpp	/^    bool b, a, start;$/;"	m	struct:System::Keypad
b1	nall/dsp/iir/biquad.hpp	/^  double a0, a1, a2, b1, b2;  \/\/coefficients$/;"	m	struct:nall::DSP::IIR::Biquad
b1	nall/dsp/iir/one-pole.hpp	/^  double a0, b1;  \/\/coefficients$/;"	m	struct:nall::DSP::IIR::OnePole
b2	nall/dsp/iir/biquad.hpp	/^  double a0, a1, a2, b1, b2;  \/\/coefficients$/;"	m	struct:nall::DSP::IIR::Biquad
back	higan/sfc/ppu/screen.hpp	/^    } bg1, bg2, bg3, bg4, obj, back;$/;"	m	struct:Screen::IO	typeref:struct:Screen::IO::Layer
backColor	higan/ws/ppu/ppu.hpp	/^    uint8 backColor;$/;"	m	struct:PPU::Latches
backColor	higan/ws/ppu/ppu.hpp	/^    uint8 backColor;$/;"	m	struct:PPU::Registers
backdropColor	higan/ms/vdp/vdp.hpp	/^    uint4 backdropColor;$/;"	m	struct:VDP::IO
background	higan/gb/ppu/ppu.hpp	/^  Background background;$/;"	m	struct:PPU
background	higan/ms/vdp/vdp.hpp	/^  } background;$/;"	m	struct:VDP	typeref:struct:VDP::Background
background	higan/pce/vdc/vdc.hpp	/^  } background;$/;"	m	struct:VDC	typeref:struct:VDC::Background
backgroundBrush	hiro/windows/widget/hex-edit.hpp	/^  HBRUSH backgroundBrush = nullptr;$/;"	m	struct:hiro::pHexEdit
backgroundBrush	hiro/windows/widget/line-edit.hpp	/^  HBRUSH backgroundBrush = nullptr;$/;"	m	struct:hiro::pLineEdit
backgroundBrush	hiro/windows/widget/text-edit.hpp	/^  HBRUSH backgroundBrush = nullptr;$/;"	m	struct:hiro::pTextEdit
backgroundColor	higan/md/vdp/vdp.hpp	/^    uint6 backgroundColor;$/;"	m	struct:VDP::IO
backgroundColor	hiro/core/core.hpp	/^    Color backgroundColor;$/;"	m	struct:hiro::mComboEdit::State
backgroundColor	hiro/core/core.hpp	/^    Color backgroundColor;$/;"	m	struct:hiro::mConsole::State
backgroundColor	hiro/core/core.hpp	/^    Color backgroundColor;$/;"	m	struct:hiro::mHexEdit::State
backgroundColor	hiro/core/core.hpp	/^    Color backgroundColor;$/;"	m	struct:hiro::mIconView::State
backgroundColor	hiro/core/core.hpp	/^    Color backgroundColor;$/;"	m	struct:hiro::mLabel::State
backgroundColor	hiro/core/core.hpp	/^    Color backgroundColor;$/;"	m	struct:hiro::mLineEdit::State
backgroundColor	hiro/core/core.hpp	/^    Color backgroundColor;$/;"	m	struct:hiro::mTextEdit::State
backgroundColor	hiro/core/core.hpp	/^    Color backgroundColor;$/;"	m	struct:hiro::mTreeView::State
backgroundColor	hiro/core/core.hpp	/^    Color backgroundColor;$/;"	m	struct:hiro::mTreeViewItem::State
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:ComboEdit
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:Console
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:HexEdit
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:IconView
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:Label
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:LineEdit
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:TableView
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:TableViewCell
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:TableViewColumn
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:TableViewItem
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:TextEdit
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:TreeView
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:TreeViewItem
backgroundColor	hiro/core/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:Window
backgroundColor	hiro/core/widget/table-view-cell.hpp	/^    Color backgroundColor;$/;"	m	struct:mTableViewCell::State
backgroundColor	hiro/core/widget/table-view-column.hpp	/^    Color backgroundColor;$/;"	m	struct:mTableViewColumn::State
backgroundColor	hiro/core/widget/table-view-item.hpp	/^    Color backgroundColor;$/;"	m	struct:mTableViewItem::State
backgroundColor	hiro/core/widget/table-view.hpp	/^    Color backgroundColor;$/;"	m	struct:mTableView::State
backgroundColor	hiro/core/window.hpp	/^    Color backgroundColor;$/;"	m	struct:mWindow::State
backgroundColor	hiro/extension/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:ListView
backgroundColor	hiro/extension/shared.hpp	/^  auto backgroundColor() const { return self().backgroundColor(); }$/;"	f	struct:ListViewItem
balance	higan/audio/audio.hpp	/^  double balance = 0.0;$/;"	m	struct:Emulator::Audio
balance	higan/target-bsnes/settings/settings.hpp	/^    uint balance = 50;$/;"	m	struct:Settings::Audio
bank	higan/gb/cartridge/huc1/huc1.hpp	/^      uint8 bank = 0x01;$/;"	m	struct:HuC1::IO::ROM
bank	higan/gb/cartridge/huc1/huc1.hpp	/^      uint8 bank;$/;"	m	struct:HuC1::IO::RAM
bank	higan/gb/cartridge/huc3/huc3.hpp	/^      uint8 bank = 0x01;$/;"	m	struct:HuC3::IO::ROM
bank	higan/gb/cartridge/huc3/huc3.hpp	/^      uint8 bank;$/;"	m	struct:HuC3::IO::RAM
bank	higan/gb/cartridge/mbc1/mbc1.hpp	/^      uint8 bank = 0x01;$/;"	m	struct:MBC1::IO::ROM
bank	higan/gb/cartridge/mbc1/mbc1.hpp	/^      uint8 bank;$/;"	m	struct:MBC1::IO::RAM
bank	higan/gb/cartridge/mbc1m/mbc1m.hpp	/^      uint6 bank = 0x01;$/;"	m	struct:MBC1M::IO::ROM
bank	higan/gb/cartridge/mbc2/mbc2.hpp	/^      uint8 bank = 0x01;$/;"	m	struct:MBC2::IO::ROM
bank	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint8 bank = 0x01;$/;"	m	struct:MBC3::IO::ROM
bank	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint8 bank;$/;"	m	struct:MBC3::IO::RAM
bank	higan/gb/cartridge/mbc5/mbc5.hpp	/^      uint4 bank;$/;"	m	struct:MBC5::IO::RAM
bank	higan/gb/cartridge/mbc5/mbc5.hpp	/^      uint9 bank = 0x01;$/;"	m	struct:MBC5::IO::ROM
bank	higan/gb/cartridge/mbc6/mbc6.hpp	/^      uint8 bank[2];$/;"	m	struct:MBC6::IO::RAM
bank	higan/gb/cartridge/mbc6/mbc6.hpp	/^      uint8 bank[2];$/;"	m	struct:MBC6::IO::ROM
bank	higan/gb/cartridge/mbc7/mbc7.hpp	/^      uint8 bank = 0x01;$/;"	m	struct:MBC7::IO::ROM
bank	higan/gb/cartridge/mmm01/mmm01.hpp	/^      uint8 bank = 0x01;$/;"	m	struct:MMM01::IO::ROM
bank	higan/gb/cartridge/mmm01/mmm01.hpp	/^      uint8 bank;$/;"	m	struct:MMM01::IO::RAM
bank	higan/gb/cartridge/tama/tama.hpp	/^      uint5 bank;$/;"	m	struct:TAMA::IO::ROM
bank	higan/gba/apu/apu.hpp	/^    uint1 bank;$/;"	m	struct:APU::Wave
bank	higan/gba/cartridge/memory.hpp	/^  bool bank;$/;"	m	struct:FLASH
bank	higan/md/apu/apu.hpp	/^    uint9 bank;$/;"	m	struct:APU::IO
bankSelect	higan/fc/cartridge/chip/mmc3.cpp	/^  uint3 bankSelect;$/;"	m	struct:MMC3	file:
bankSelect	higan/fc/cartridge/chip/mmc6.cpp	/^  uint3 bankSelect;$/;"	m	struct:MMC6	file:
bankselect	higan/gba/cartridge/memory.hpp	/^  bool bankselect;$/;"	m	struct:FLASH
base	higan/gb/cartridge/mmm01/mmm01.hpp	/^      uint6 base;$/;"	m	struct:MMM01::IO::ROM
base	higan/gba/apu/apu.hpp	/^    uint12 base;$/;"	m	struct:APU::Sequencer
base	higan/processor/hg51b/hg51b.hpp	/^      uint24 base;        \/\/base address is also in bytes$/;"	m	struct:Processor::HG51B::IO::Cache
baseSize	higan/sfc/ppu/object.hpp	/^    uint3  baseSize;$/;"	m	struct:Object::IO
base_from_member	nall/utility.hpp	/^  base_from_member(T value) : value(value) {}$/;"	f	struct:nall::base_from_member
base_from_member	nall/utility.hpp	/^template<typename T> struct base_from_member {$/;"	s	namespace:nall
base_iterator	nall/set.hpp	/^    base_iterator(const set& source, uint position) : source(source), position(position) {$/;"	f	struct:nall::set::base_iterator
base_iterator	nall/set.hpp	/^  struct base_iterator {$/;"	s	struct:nall::set
baseptr	higan/sfc/coprocessor/obc1/obc1.hpp	/^    uint16 baseptr;$/;"	m	struct:OBC1::__anon11
batchable	hiro/core/core.hpp	/^    bool batchable = false;$/;"	m	struct:hiro::mIconView::State
batchable	hiro/core/shared.hpp	/^  auto batchable() const { return self().batchable(); }$/;"	f	struct:IconView
batchable	hiro/core/shared.hpp	/^  auto batchable() const { return self().batchable(); }$/;"	f	struct:TableView
batchable	hiro/core/widget/table-view.hpp	/^    bool batchable = false;$/;"	m	struct:mTableView::State
batchable	hiro/extension/shared.hpp	/^  auto batchable() const { return self().batchable(); }$/;"	f	struct:ListView
batched	hiro/core/shared.hpp	/^  auto batched() const { return self().batched(); }$/;"	f	struct:IconView
batched	hiro/core/shared.hpp	/^  auto batched() const { return self().batched(); }$/;"	f	struct:TableView
batched	hiro/extension/shared.hpp	/^  auto batched() const { return self().batched(); }$/;"	f	struct:ListView
batteryfailure	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 batteryfailure;$/;"	m	struct:EpsonRTC
bbf	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool bbf;$/;"	m	struct:SA1::MMIO
bc	higan/processor/lr35902/lr35902.hpp	/^    Pair bc;$/;"	m	struct:Processor::LR35902::Registers
bc	higan/processor/z80/z80.hpp	/^    Pair bc, bc_;$/;"	m	struct:Processor::Z80::Registers
bc_	higan/processor/z80/z80.hpp	/^    Pair bc, bc_;$/;"	m	struct:Processor::Z80::Registers
bcc	nall/smtp.hpp	/^    vector<Contact> bcc;$/;"	m	struct:nall::SMTP::Information
begin	nall/adaptive-array.hpp	/^  auto begin() const { return &_pool.t[0]; }$/;"	f	struct:nall::adaptive_array
begin	nall/adaptive-array.hpp	/^  auto begin() { return &_pool.t[0]; }$/;"	f	struct:nall::adaptive_array
begin	nall/arguments.hpp	/^  auto begin() const { return arguments.begin(); }$/;"	f	struct:nall::Arguments
begin	nall/arguments.hpp	/^  auto begin() { return arguments.begin(); }$/;"	f	struct:nall::Arguments
begin	nall/beat/archive/container.hpp	/^  auto begin() const { return nodes.begin(); }$/;"	f	struct:nall::Beat::Archive::Container
begin	nall/beat/archive/container.hpp	/^  auto begin() { return nodes.begin(); }$/;"	f	struct:nall::Beat::Archive::Container
begin	nall/http/message.hpp	/^  auto begin() const { return variables.begin(); }$/;"	f	struct:nall::HTTP::Variables
begin	nall/http/message.hpp	/^  auto begin() { return variables.begin(); }$/;"	f	struct:nall::HTTP::Variables
begin	nall/iterator.hpp	/^  auto begin() const { return rbegin(self); }$/;"	f	struct:nall::reverse_wrapper
begin	nall/iterator.hpp	/^  auto begin() { return rbegin(self); }$/;"	f	struct:nall::reverse_wrapper
begin	nall/string.hpp	/^  inline auto begin() const { return &_data[0]; }$/;"	f	struct:nall::string_view
below	higan/sfc/ppu/object.hpp	/^    } above, below;$/;"	m	struct:Object::Output	typeref:struct:Object::Output::Pixel
below	higan/sfc/ppu/screen.hpp	/^    } above, below;$/;"	m	struct:Screen::Math	typeref:struct:Screen::Math::Screen
below	higan/sfc/ppu/window.hpp	/^    } above, below;$/;"	m	struct:Window::Output	typeref:struct:Window::Output::Pixel
belowEnable	higan/sfc/ppu/object.hpp	/^    bool belowEnable;$/;"	m	struct:Object::IO
belowEnable	higan/sfc/ppu/window.hpp	/^      bool belowEnable;$/;"	m	struct:Window::IO::Layer
belowMask	higan/sfc/ppu/window.hpp	/^      uint2 belowMask;$/;"	m	struct:Window::IO::Color
bg	higan/gb/ppu/ppu.hpp	/^  Pixel bg;$/;"	m	struct:PPU
bg0	higan/gba/ppu/ppu.hpp	/^  } bg0, bg1, bg2, bg3;$/;"	m	struct:PPU	typeref:struct:PPU::Background
bg0	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  BG  bg0, bg1, bg2, bg3, bg4, bg5, bg6, bg7;$/;"	m	struct:Decompressor
bg1	higan/gba/ppu/ppu.hpp	/^  } bg0, bg1, bg2, bg3;$/;"	m	struct:PPU	typeref:struct:PPU::Background
bg1	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  BG  bg0, bg1, bg2, bg3, bg4, bg5, bg6, bg7;$/;"	m	struct:Decompressor
bg1	higan/sfc/ppu/ppu.hpp	/^  Background bg1;$/;"	m	struct:PPU
bg1	higan/sfc/ppu/screen.hpp	/^    } bg1, bg2, bg3, bg4, obj, back;$/;"	m	struct:Screen::IO	typeref:struct:Screen::IO::Layer
bg1	higan/sfc/ppu/window.hpp	/^    } bg1, bg2, bg3, bg4, obj;$/;"	m	struct:Window::IO	typeref:struct:Window::IO::Layer
bg2	higan/gba/ppu/ppu.hpp	/^  } bg0, bg1, bg2, bg3;$/;"	m	struct:PPU	typeref:struct:PPU::Background
bg2	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  BG  bg0, bg1, bg2, bg3, bg4, bg5, bg6, bg7;$/;"	m	struct:Decompressor
bg2	higan/sfc/ppu/ppu.hpp	/^  Background bg2;$/;"	m	struct:PPU
bg2	higan/sfc/ppu/screen.hpp	/^    } bg1, bg2, bg3, bg4, obj, back;$/;"	m	struct:Screen::IO	typeref:struct:Screen::IO::Layer
bg2	higan/sfc/ppu/window.hpp	/^    } bg1, bg2, bg3, bg4, obj;$/;"	m	struct:Window::IO	typeref:struct:Window::IO::Layer
bg3	higan/gba/ppu/ppu.hpp	/^  } bg0, bg1, bg2, bg3;$/;"	m	struct:PPU	typeref:struct:PPU::Background
bg3	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  BG  bg0, bg1, bg2, bg3, bg4, bg5, bg6, bg7;$/;"	m	struct:Decompressor
bg3	higan/sfc/ppu/ppu.hpp	/^  Background bg3;$/;"	m	struct:PPU
bg3	higan/sfc/ppu/screen.hpp	/^    } bg1, bg2, bg3, bg4, obj, back;$/;"	m	struct:Screen::IO	typeref:struct:Screen::IO::Layer
bg3	higan/sfc/ppu/window.hpp	/^    } bg1, bg2, bg3, bg4, obj;$/;"	m	struct:Window::IO	typeref:struct:Window::IO::Layer
bg4	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  BG  bg0, bg1, bg2, bg3, bg4, bg5, bg6, bg7;$/;"	m	struct:Decompressor
bg4	higan/sfc/ppu/ppu.hpp	/^  Background bg4;$/;"	m	struct:PPU
bg4	higan/sfc/ppu/screen.hpp	/^    } bg1, bg2, bg3, bg4, obj, back;$/;"	m	struct:Screen::IO	typeref:struct:Screen::IO::Layer
bg4	higan/sfc/ppu/window.hpp	/^    } bg1, bg2, bg3, bg4, obj;$/;"	m	struct:Window::IO	typeref:struct:Window::IO::Layer
bg5	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  BG  bg0, bg1, bg2, bg3, bg4, bg5, bg6, bg7;$/;"	m	struct:Decompressor
bg6	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  BG  bg0, bg1, bg2, bg3, bg4, bg5, bg6, bg7;$/;"	m	struct:Decompressor
bg7	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  BG  bg0, bg1, bg2, bg3, bg4, bg5, bg6, bg7;$/;"	m	struct:Decompressor
bgAddress	higan/fc/ppu/ppu.hpp	/^    uint bgAddress = 0;$/;"	m	struct:PPU::IO
bgEdgeEnable	higan/fc/ppu/ppu.hpp	/^    bool bgEdgeEnable = 0;$/;"	m	struct:PPU::IO
bgEnable	higan/fc/ppu/ppu.hpp	/^    bool bgEnable = 0;$/;"	m	struct:PPU::IO
bgEnable	higan/gb/ppu/ppu.hpp	/^    bool bgEnable = 0;$/;"	m	struct:PPU::Status
bgMode	higan/sfc/ppu/ppu.hpp	/^    uint8 bgMode;$/;"	m	struct:PPU::IO
bgPriority	higan/sfc/ppu/ppu.hpp	/^    bool bgPriority;$/;"	m	struct:PPU::IO
bgTiledataSelect	higan/gb/ppu/ppu.hpp	/^    bool bgTiledataSelect = 0;$/;"	m	struct:PPU::Status
bgTilemapSelect	higan/gb/ppu/ppu.hpp	/^    bool bgTilemapSelect = 0;$/;"	m	struct:PPU::Status
bgofsPPU1	higan/sfc/ppu/ppu.hpp	/^    uint8 bgofsPPU1;$/;"	m	struct:PPU::Latches
bgofsPPU2	higan/sfc/ppu/ppu.hpp	/^    uint3 bgofsPPU2;$/;"	m	struct:PPU::Latches
bgp	higan/gb/ppu/ppu.hpp	/^  uint8 bgp[4];$/;"	m	struct:PPU
bgpd	higan/gb/ppu/ppu.hpp	/^  uint8 bgpd[64];$/;"	m	struct:PPU
bgpi	higan/gb/ppu/ppu.hpp	/^    uint6 bgpi;$/;"	m	struct:PPU::Status
bgpiIncrement	higan/gb/ppu/ppu.hpp	/^    bool bgpiIncrement = 0;$/;"	m	struct:PPU::Status
bias	higan/gba/apu/apu.hpp	/^    } bias;$/;"	m	struct:APU::Registers	typeref:struct:APU::Registers::SoundBias
bimap	nall/map.hpp	/^template<typename T, typename U> struct bimap {$/;"	s	namespace:nall
binary	higan/GNUmakefile	/^binary := application$/;"	m
bind	higan/processor/arm7tdmi/instruction.cpp	364;"	d	file:
bind	higan/processor/arm7tdmi/instruction.cpp	369;"	d	file:
bind	higan/processor/arm7tdmi/instruction.cpp	536;"	d	file:
bind	higan/processor/arm7tdmi/instruction.cpp	61;"	d	file:
bind	higan/processor/hg51b/instruction.cpp	2;"	d	file:
bind	higan/processor/hg51b/instruction.cpp	633;"	d	file:
bind	higan/processor/m68k/instruction.cpp	1263;"	d	file:
bind	higan/processor/m68k/instruction.cpp	7;"	d	file:
bind	higan/sfc/interface/configuration.cpp	25;"	d	file:
bind	higan/sfc/interface/configuration.cpp	4;"	d	file:
bind	higan/target-bsnes/settings/settings.cpp	111;"	d	file:
bind	higan/target-bsnes/settings/settings.cpp	38;"	d	file:
bind	nall/database/odbc.hpp	/^    auto& bind(const string& value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(const vector<uint8_t>& value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(double value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(int32_t value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(int64_t value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(nullptr_t) { return bind(_input++, nullptr); }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(uint32_t value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(uint64_t value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(unsigned column, const string& value) { return _bindings.append({column, any{(string)value}}), *this; }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(unsigned column, const vector<uint8_t>& value) { return _bindings.append({column, any{(vector<uint8_t>)value}}), *this; }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(unsigned column, double value) { return _bindings.append({column, any{(double)value}}), *this; }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(unsigned column, int32_t value) { return _bindings.append({column, any{(int32_t)value}}), *this; }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(unsigned column, int64_t value) { return _bindings.append({column, any{(int64_t)value}}), *this; }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(unsigned column, nullptr_t) { return _bindings.append({column, any{(nullptr_t)nullptr}}), *this; }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(unsigned column, uint32_t value) { return _bindings.append({column, any{(uint32_t)value}}), *this; }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/odbc.hpp	/^    auto& bind(unsigned column, uint64_t value) { return _bindings.append({column, any{(uint64_t)value}}), *this; }$/;"	f	struct:nall::Database::ODBC::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(const string& value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(const vector<uint8_t>& value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(double value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(int32_t value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(int64_t value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(nullptr_t) { return bind(_input++, nullptr); }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(uint32_t value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(uint64_t value) { return bind(_input++, value); }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(unsigned column, const string& value) { sqlite3_bind_text(_statement, 1 + column, value.data(), value.size(), SQLITE_TRANSIENT); return *this; }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(unsigned column, const vector<uint8_t>& value) { sqlite3_bind_blob(_statement, 1 + column, value.data(), value.size(), SQLITE_TRANSIENT); return *this; }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(unsigned column, double value) { sqlite3_bind_double(_statement, 1 + column, value); return *this; }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(unsigned column, int32_t value) { sqlite3_bind_int(_statement, 1 + column, value); return *this; }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(unsigned column, int64_t value) { sqlite3_bind_int64(_statement, 1 + column, value); return *this; }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(unsigned column, nullptr_t) { sqlite3_bind_null(_statement, 1 + column); return *this; }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(unsigned column, uint32_t value) { sqlite3_bind_int(_statement, 1 + column, value); return *this; }$/;"	f	struct:nall::Database::SQLite3::Query
bind	nall/database/sqlite3.hpp	/^    auto& bind(unsigned column, uint64_t value) { sqlite3_bind_int64(_statement, 1 + column, value); return *this; }$/;"	f	struct:nall::Database::SQLite3::Query
bind	ruby/video/opengl/bind.hpp	48;"	d
bind	ruby/video/opengl/bind.hpp	98;"	d
bios	higan/gba/system/bios.cpp	/^BIOS bios;$/;"	v
biquad	higan/audio/audio.hpp	/^  DSP::IIR::Biquad biquad;    \/\/second-order$/;"	m	struct:Emulator::Filter
bit	nall/bit.hpp	/^namespace bit {$/;"	n	namespace:nall
bitCount	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    uint bitCount;$/;"	m	struct:Decompressor::IM
bitCounter	higan/fc/apu/apu.hpp	/^    uint3 bitCounter;$/;"	m	struct:APU::DMC
bitData	higan/sfc/coprocessor/icd/icd.hpp	/^  uint8 bitData, bitOffset;$/;"	m	struct:ICD
bitDepth	nall/decode/png.hpp	/^    uint bitDepth;$/;"	m	struct:nall::Decode::PNG::Info
bitNumber	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    uint8 bitNumber;$/;"	m	struct:Decompressor::CM
bitOffset	higan/sfc/coprocessor/icd/icd.hpp	/^  uint8 bitData, bitOffset;$/;"	m	struct:ICD
bitbuf	nall/decode/inflate.hpp	/^  int bitbuf;$/;"	m	struct:nall::Decode::puff::state
bitcnt	nall/decode/inflate.hpp	/^  int bitcnt;$/;"	m	struct:nall::Decode::puff::state
bitmap	hiro/cocoa/widget/canvas.hpp	/^  NSBitmapImageRep* bitmap = nullptr;$/;"	m	struct:hiro::pCanvas
bitpend	higan/processor/gsu/registers.hpp	/^  uint8 bitpend;$/;"	m	struct:PixelCache
bitplanesInfo	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    uint8 bitplanesInfo;$/;"	m	struct:Decompressor::CM
bitplanesInfo	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    uint8 bitplanesInfo;$/;"	m	struct:Decompressor::OL
bitpos	nall/decode/png.hpp	/^  uint bitpos = 0;$/;"	m	struct:nall::Decode::PNG
bits	higan/gba/cartridge/memory.hpp	/^  uint bits;$/;"	m	struct:EEPROM
bits	higan/md/cartridge/cartridge.hpp	/^    uint bits = 0;$/;"	m	struct:Cartridge::Memory
bits	higan/processor/v30mz/algorithms.cpp	9;"	d	file:
bits	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  uint bits;            \/\/bits remaining in input$/;"	m	struct:Decompressor	file:
bits	nall/bit-vector.hpp	/^  uint bits = 0;$/;"	m	struct:nall::bitvector
bitvector	nall/bit-vector.hpp	/^  bitvector(bitvector&& source) { operator=(move(source)); }$/;"	f	struct:nall::bitvector
bitvector	nall/bit-vector.hpp	/^  bitvector(const bitvector& source) { operator=(source); }$/;"	f	struct:nall::bitvector
bitvector	nall/bit-vector.hpp	/^  bitvector(uint size) { resize(size); }$/;"	f	struct:nall::bitvector
bitvector	nall/bit-vector.hpp	/^struct bitvector {$/;"	s	namespace:nall
blend	nall/image.hpp	/^  enum class blend : uint {$/;"	c	struct:nall::image
blendAbove	higan/gba/ppu/ppu.hpp	/^      uint1 blendAbove[6];$/;"	m	struct:PPU::Screen::IO
blendBelow	higan/gba/ppu/ppu.hpp	/^      uint1 blendBelow[6];$/;"	m	struct:PPU::Screen::IO
blendEVA	higan/gba/ppu/ppu.hpp	/^      uint5 blendEVA;$/;"	m	struct:PPU::Screen::IO
blendEVB	higan/gba/ppu/ppu.hpp	/^      uint5 blendEVB;$/;"	m	struct:PPU::Screen::IO
blendEVY	higan/gba/ppu/ppu.hpp	/^      uint5 blendEVY;$/;"	m	struct:PPU::Screen::IO
blendMode	higan/gba/ppu/ppu.hpp	/^      uint2 blendMode;$/;"	m	struct:PPU::Screen::IO
blendMode	higan/sfc/ppu/screen.hpp	/^    bool blendMode;$/;"	m	struct:Screen::IO
blendMode	higan/sfc/ppu/screen.hpp	/^    bool blendMode;$/;"	m	struct:Screen::Math
block	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  } block;$/;"	m	struct:BSMemory	typeref:struct:BSMemory::Blocks
block	nall/cipher/chacha20.hpp	/^  uint32_t block[16];$/;"	m	struct:nall::Cipher::ChaCha20
blocking	higan/target-bsnes/settings/settings.hpp	/^    bool blocking = false;$/;"	m	struct:Settings::Video
blocking	higan/target-bsnes/settings/settings.hpp	/^    bool blocking = true;$/;"	m	struct:Settings::Audio
blocking	ruby/audio/audio.hpp	/^  bool blocking = false;$/;"	m	struct:AudioDriver
blocking	ruby/video/video.hpp	/^  bool blocking = false;$/;"	m	struct:VideoDriver
blocks	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  } blocks[64];  \/\/8mbit = 16; 16mbit = 32; 32mbit = 64$/;"	m	struct:BSMemory	typeref:struct:BSMemory::Block
blue	hiro/core/core.hpp	/^    uint8_t blue;$/;"	m	struct:hiro::Color::State
blue	nall/image.hpp	/^  alwaysinline auto blue() const { return _blue; }$/;"	f	struct:nall::image
blur	higan/target-bsnes/settings/settings.hpp	/^    bool blur = false;$/;"	m	struct:Settings::Video
blur	ruby/video/glx2.cpp	/^  bool blur = false;$/;"	m	struct:VideoGLX2	file:
blurEmulation	higan/sfc/interface/configuration.hpp	/^    bool blurEmulation = true;$/;"	m	struct:Configuration::Video
board	genius/genius.hpp	/^  string board;$/;"	m	struct:Game
board	higan/emulator/game.hpp	/^  string board;$/;"	m	struct:Emulator::Game
board	higan/fc/cartridge/cartridge.hpp	/^  Board* board = nullptr;$/;"	m	struct:Cartridge
board	higan/fc/cartridge/chip/chip.hpp	/^  Board& board;$/;"	m	struct:Chip
board	higan/sfc/cartridge/cartridge.hpp	/^  Markup::Node board;$/;"	m	struct:Cartridge
board	higan/sfc/coprocessor/event/event.hpp	/^  enum class Board : uint { Unknown, CampusChallenge92, PowerFest94 } board;$/;"	m	struct:Event	typeref:class:Event::Board
body	nall/smtp.hpp	/^    string body;$/;"	m	struct:nall::SMTP::Information
bodySizeLimit	nall/http/role.hpp	/^    int bodySizeLimit   = 8192 * 1024;  \/\/client, server$/;"	m	struct:nall::HTTP::Role::Settings
bold	hiro/core/font.hpp	/^    char bold = false;     \/\/1+$/;"	m	struct:Font::State
bool	higan/audio/audio.hpp	/^  auto pending() const -> bool;$/;"	m	struct:Emulator::Stream
bool	higan/fc/apu/apu.hpp	/^    auto checkPeriod() -> bool;$/;"	m	struct:APU::Pulse
bool	higan/fc/apu/apu.hpp	/^    auto checkPeriod() -> bool;$/;"	m	struct:APU::Sweep
bool	higan/fc/cartridge/cartridge.hpp	/^  auto load() -> bool;$/;"	m	struct:Cartridge
bool	higan/fc/fc.hpp	/^    static inline auto NTSCJ() -> bool;$/;"	m	struct:Famicom::Region
bool	higan/fc/fc.hpp	/^    static inline auto NTSCU() -> bool;$/;"	m	struct:Famicom::Region
bool	higan/fc/fc.hpp	/^    static inline auto PAL() -> bool;$/;"	m	struct:Famicom::Region
bool	higan/fc/ppu/ppu.hpp	/^  auto enable() const -> bool;$/;"	m	struct:PPU
bool	higan/fc/system/system.hpp	/^  auto load(Emulator::Interface*) -> bool;$/;"	m	struct:System
bool	higan/fc/system/system.hpp	/^  auto unserialize(serializer&) -> bool;$/;"	m	struct:System
bool	higan/gb/apu/apu.hpp	/^    auto dacEnable() const -> bool;$/;"	m	struct:APU::Noise
bool	higan/gb/apu/apu.hpp	/^    auto dacEnable() const -> bool;$/;"	m	struct:APU::Square1
bool	higan/gb/apu/apu.hpp	/^    auto dacEnable() const -> bool;$/;"	m	struct:APU::Square2
bool	higan/gb/cartridge/cartridge.hpp	/^  auto load() -> bool;$/;"	m	struct:Cartridge
bool	higan/gb/cpu/cpu.hpp	/^  auto stop() -> bool;$/;"	m	struct:CPU
bool	higan/gb/gb.hpp	/^    inline static auto GameBoy() -> bool;$/;"	m	struct:GameBoy::Model
bool	higan/gb/gb.hpp	/^    inline static auto GameBoyColor() -> bool;$/;"	m	struct:GameBoy::Model
bool	higan/gb/gb.hpp	/^    inline static auto SuperGameBoy() -> bool;$/;"	m	struct:GameBoy::Model
bool	higan/gb/ppu/ppu.hpp	/^  auto coincidence() -> bool;$/;"	m	struct:PPU
bool	higan/gb/system/system.hpp	/^  auto load(Emulator::Interface*, Model, maybe<uint> = nothing) -> bool;$/;"	m	struct:System
bool	higan/gb/system/system.hpp	/^  auto unserialize(serializer&) -> bool;$/;"	m	struct:System
bool	higan/gba/cartridge/cartridge.hpp	/^  auto load() -> bool;$/;"	m	struct:Cartridge
bool	higan/gba/cartridge/memory.hpp	/^  auto read() -> bool;$/;"	m	struct:EEPROM
bool	higan/gba/cartridge/memory.hpp	/^  auto read(uint addr) -> bool;$/;"	m	struct:EEPROM
bool	higan/gba/cpu/cpu.hpp	/^    inline auto run() -> bool;$/;"	m	struct:DMA
bool	higan/gba/ppu/ppu.hpp	/^  inline auto blank() -> bool;$/;"	m	struct:PPU
bool	higan/gba/system/system.hpp	/^  auto load(Emulator::Interface*) -> bool;$/;"	m	struct:System
bool	higan/gba/system/system.hpp	/^  auto unserialize(serializer&) -> bool;$/;"	m	struct:System
bool	higan/md/cartridge/cartridge.hpp	/^  auto load() -> bool;$/;"	m	struct:Cartridge
bool	higan/md/cartridge/cartridge.hpp	/^  auto loadRAM(Memory& ram, Markup::Node memory) -> bool;$/;"	m	struct:Cartridge
bool	higan/md/cartridge/cartridge.hpp	/^  auto loadROM(Memory& rom, Markup::Node memory) -> bool;$/;"	m	struct:Cartridge
bool	higan/md/cartridge/cartridge.hpp	/^  auto saveRAM(Memory& ram, Markup::Node memory) -> bool;$/;"	m	struct:Cartridge
bool	higan/md/cpu/cpu.hpp	/^  auto load(Markup::Node) -> bool;$/;"	m	struct:CPU
bool	higan/md/md.hpp	/^    inline static auto NTSCJ() -> bool;$/;"	m	struct:Region
bool	higan/md/md.hpp	/^    inline static auto NTSCU() -> bool;$/;"	m	struct:Region
bool	higan/md/md.hpp	/^    inline static auto PAL() -> bool;$/;"	m	struct:Region
bool	higan/md/system/system.hpp	/^  auto load(Emulator::Interface*, maybe<Region> = nothing) -> bool;$/;"	m	struct:System
bool	higan/md/system/system.hpp	/^  auto unserialize(serializer&) -> bool;$/;"	m	struct:System
bool	higan/md/vdp/vdp.hpp	/^    auto isWindowed(uint x, uint y) -> bool;$/;"	m	struct:VDP::Background
bool	higan/ms/cartridge/cartridge.hpp	/^  auto load() -> bool;$/;"	m	struct:Cartridge
bool	higan/ms/cartridge/cartridge.hpp	/^  auto write(uint16 addr, uint8 data) -> bool;$/;"	m	struct:Cartridge
bool	higan/ms/ms.hpp	/^    inline static auto GameGear() -> bool;$/;"	m	struct:MasterSystem::Model
bool	higan/ms/ms.hpp	/^    inline static auto MasterSystem() -> bool;$/;"	m	struct:MasterSystem::Model
bool	higan/ms/ms.hpp	/^    inline static auto NTSC() -> bool;$/;"	m	struct:MasterSystem::Region
bool	higan/ms/ms.hpp	/^    inline static auto PAL() -> bool;$/;"	m	struct:MasterSystem::Region
bool	higan/ms/system/system.hpp	/^  auto load(Emulator::Interface* interface, Model model) -> bool;$/;"	m	struct:System
bool	higan/ms/system/system.hpp	/^  auto unserialize(serializer&) -> bool;$/;"	m	struct:System
bool	higan/ms/vdp/vdp.hpp	/^  auto vblank() -> bool;$/;"	m	struct:VDP
bool	higan/pce/cartridge/cartridge.hpp	/^  auto load() -> bool;$/;"	m	struct:Cartridge
bool	higan/pce/cpu/cpu.hpp	/^    auto pending() const -> bool;$/;"	m	struct:CPU::IRQ
bool	higan/pce/pce.hpp	/^    inline static auto PCEngine() -> bool;$/;"	m	struct:PCEngine::Model
bool	higan/pce/pce.hpp	/^    inline static auto SuperGrafx() -> bool;$/;"	m	struct:PCEngine::Model
bool	higan/pce/system/system.hpp	/^  auto load(Emulator::Interface*, Model) -> bool;$/;"	m	struct:System
bool	higan/pce/system/system.hpp	/^  auto unserialize(serializer&) -> bool;$/;"	m	struct:System
bool	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto TST(uint4) -> bool;$/;"	m	namespace:Processor
bool	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  inline auto exception() const -> bool;$/;"	m	namespace:Processor
bool	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  inline auto privileged() const -> bool;$/;"	m	namespace:Processor
bool	higan/processor/hg51b/hg51b.hpp	/^  auto busy() const -> bool;$/;"	m	struct:Processor::HG51B
bool	higan/processor/hg51b/hg51b.hpp	/^  auto cache() -> bool;$/;"	m	struct:Processor::HG51B
bool	higan/processor/hg51b/hg51b.hpp	/^  auto running() const -> bool;$/;"	m	struct:Processor::HG51B
bool	higan/processor/hg51b/hg51b.hpp	/^  virtual auto isRAM(uint24 address) -> bool = 0;$/;"	m	struct:Processor::HG51B
bool	higan/processor/hg51b/hg51b.hpp	/^  virtual auto isROM(uint24 address) -> bool = 0;$/;"	m	struct:Processor::HG51B
bool	higan/processor/lr35902/lr35902.hpp	/^  virtual auto stop() -> bool = 0;$/;"	m	struct:Processor::LR35902
bool	higan/processor/spc700/spc700.hpp	/^  virtual auto synchronizing() const -> bool = 0;$/;"	m	struct:Processor::SPC700
bool	higan/processor/v30mz/v30mz.hpp	/^  auto parity(uint8) const -> bool;$/;"	m	namespace:Processor
bool	higan/processor/wdc65816/wdc65816.hpp	/^  virtual auto interruptPending() const -> bool = 0;$/;"	m	struct:Processor::WDC65816
bool	higan/processor/wdc65816/wdc65816.hpp	/^  virtual auto synchronizing() const -> bool = 0;$/;"	m	struct:Processor::WDC65816
bool	higan/processor/z80/z80.hpp	/^  auto irq(bool maskable, uint16 vector = 0x0000, uint8 extbus = 0xff) -> bool;$/;"	m	struct:Processor::Z80
bool	higan/processor/z80/z80.hpp	/^  auto parity(uint8) const -> bool;$/;"	m	struct:Processor::Z80
bool	higan/processor/z80/z80.hpp	/^  virtual auto synchronizing() const -> bool = 0;$/;"	m	struct:Processor::Z80
bool	higan/sfc/cartridge/cartridge.hpp	/^  auto load() -> bool;$/;"	m	struct:Cartridge
bool	higan/sfc/cartridge/cartridge.hpp	/^  auto loadBSMemory() -> bool;$/;"	m	struct:Cartridge
bool	higan/sfc/cartridge/cartridge.hpp	/^  auto loadGameBoy() -> bool;$/;"	m	struct:Cartridge
bool	higan/sfc/cartridge/cartridge.hpp	/^  auto loadSufamiTurboA() -> bool;$/;"	m	struct:Cartridge
bool	higan/sfc/cartridge/cartridge.hpp	/^  auto loadSufamiTurboB() -> bool;$/;"	m	struct:Cartridge
bool	higan/sfc/controller/controller.hpp	/^  auto iobit() -> bool;$/;"	m	struct:Controller
bool	higan/sfc/coprocessor/icd/icd.hpp	/^  auto load() -> bool;$/;"	m	struct:ICD
bool	higan/sfc/coprocessor/sa1/sa1.hpp	/^    alwaysinline auto conflict() const -> bool;$/;"	m	struct:SA1::BWRAM
bool	higan/sfc/coprocessor/sa1/sa1.hpp	/^    alwaysinline auto conflict() const -> bool;$/;"	m	struct:SA1::IRAM
bool	higan/sfc/coprocessor/sa1/sa1.hpp	/^    alwaysinline auto conflict() const -> bool;$/;"	m	struct:SA1::ROM
bool	higan/sfc/coprocessor/sa1/sa1.hpp	/^  alwaysinline auto conflictBWRAM() const -> bool;$/;"	m	struct:SA1
bool	higan/sfc/coprocessor/sa1/sa1.hpp	/^  alwaysinline auto conflictIRAM() const -> bool;$/;"	m	struct:SA1
bool	higan/sfc/coprocessor/sa1/sa1.hpp	/^  alwaysinline auto conflictROM() const -> bool;$/;"	m	struct:SA1
bool	higan/sfc/cpu/cpu.hpp	/^    inline auto hdmaActive() -> bool;$/;"	m	struct:CPU::Channel
bool	higan/sfc/cpu/cpu.hpp	/^    inline auto hdmaFinished() -> bool;$/;"	m	struct:CPU::Channel
bool	higan/sfc/cpu/cpu.hpp	/^    inline auto validA(uint24 address) -> bool;$/;"	m	struct:CPU::Channel
bool	higan/sfc/cpu/cpu.hpp	/^  alwaysinline auto irqTest() -> bool;$/;"	m	struct:CPU
bool	higan/sfc/cpu/cpu.hpp	/^  alwaysinline auto nmiTest() -> bool;$/;"	m	struct:CPU
bool	higan/sfc/cpu/cpu.hpp	/^  auto load() -> bool;$/;"	m	struct:CPU
bool	higan/sfc/cpu/cpu.hpp	/^  auto rdnmi() -> bool;$/;"	m	struct:CPU
bool	higan/sfc/cpu/cpu.hpp	/^  auto timeup() -> bool;$/;"	m	struct:CPU
bool	higan/sfc/cpu/cpu.hpp	/^  inline auto dmaEnable() -> bool;$/;"	m	struct:CPU
bool	higan/sfc/cpu/cpu.hpp	/^  inline auto hdmaActive() -> bool;$/;"	m	struct:CPU
bool	higan/sfc/cpu/cpu.hpp	/^  inline auto hdmaEnable() -> bool;$/;"	m	struct:CPU
bool	higan/sfc/dsp/dsp.hpp	/^  auto load() -> bool;$/;"	m	struct:DSP
bool	higan/sfc/dsp/dsp.hpp	/^  auto mute() const -> bool;$/;"	m	struct:DSP
bool	higan/sfc/expansion/21fx/21fx.hpp	/^  auto quit() -> bool;$/;"	m	struct:S21FX
bool	higan/sfc/expansion/21fx/21fx.hpp	/^  auto readable() -> bool;$/;"	m	struct:S21FX
bool	higan/sfc/expansion/21fx/21fx.hpp	/^  auto writable() -> bool;$/;"	m	struct:S21FX
bool	higan/sfc/interface/configuration.hpp	/^  auto write(string) -> bool;$/;"	m	struct:Configuration
bool	higan/sfc/interface/configuration.hpp	/^  auto write(string, string) -> bool;$/;"	m	struct:Configuration
bool	higan/sfc/ppu-fast/ppu.hpp	/^  alwaysinline auto hires() const -> bool;$/;"	m	struct:PPU
bool	higan/sfc/ppu-fast/ppu.hpp	/^  alwaysinline auto interlace() const -> bool;$/;"	m	struct:PPU
bool	higan/sfc/ppu-fast/ppu.hpp	/^  alwaysinline auto overscan() const -> bool;$/;"	m	struct:PPU
bool	higan/sfc/ppu-fast/ppu.hpp	/^  auto load() -> bool;$/;"	m	struct:PPU
bool	higan/sfc/ppu/background.hpp	/^  alwaysinline auto hires() const -> bool;$/;"	m	struct:Background
bool	higan/sfc/ppu/counter/counter.hpp	/^  alwaysinline auto field() const -> bool;$/;"	m	struct:PPUcounter
bool	higan/sfc/ppu/counter/counter.hpp	/^  alwaysinline auto field(uint offset) const -> bool;$/;"	m	struct:PPUcounter
bool	higan/sfc/ppu/counter/counter.hpp	/^  alwaysinline auto interlace() const -> bool;$/;"	m	struct:PPUcounter
bool	higan/sfc/ppu/object.hpp	/^  auto onScanline(PPU::OAM::Object&) -> bool;$/;"	m	struct:Object
bool	higan/sfc/ppu/ppu.hpp	/^  auto load() -> bool;$/;"	m	struct:PPU
bool	higan/sfc/ppu/window.hpp	/^  auto test(bool oneEnable, bool one, bool twoEnable, bool two, uint mask) -> bool;$/;"	m	struct:Window
bool	higan/sfc/sfc.hpp	/^    static inline auto NTSC() -> bool;$/;"	m	struct:SuperFamicom::Region
bool	higan/sfc/sfc.hpp	/^    static inline auto PAL() -> bool;$/;"	m	struct:SuperFamicom::Region
bool	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  auto load() -> bool;$/;"	m	struct:BSMemory
bool	higan/sfc/smp/smp.hpp	/^  auto load() -> bool;$/;"	m	struct:SMP
bool	higan/sfc/system/system.hpp	/^  auto load(Emulator::Interface*) -> bool;$/;"	m	struct:System
bool	higan/sfc/system/system.hpp	/^  auto unserialize(serializer&) -> bool;$/;"	m	struct:System
bool	higan/target-bsnes/input/input.hpp	/^  auto bind(shared_pointer<HID::Device> device, uint group, uint input, int16 oldValue, int16 newValue) -> bool;$/;"	m	struct:InputMapping
bool	higan/target-bsnes/program/program.hpp	/^  auto appliedPatch() const -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto applyPatchBPS(vector<uint8_t>& data, string location) -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto applyPatchIPS(vector<uint8_t>& data, string location) -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto captureScreenshot() -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto focused() -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto hasState(string filename) -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto inactive() -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto loadBSMemory(string location) -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto loadGameBoy(string location) -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto loadState(string filename) -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto loadSufamiTurboA(string location) -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto loadSufamiTurboB(string location) -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto loadSuperFamicom(string location) -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto removeState(string filename) -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto renameState(string from, string to) -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto saveRedoState() -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto saveState(string filename) -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto saveUndoState() -> bool;$/;"	m	struct:Program
bool	higan/target-bsnes/program/program.hpp	/^  auto verified() const -> bool;$/;"	m	struct:Program
bool	higan/target-higan/input/input.hpp	/^  auto bind(shared_pointer<HID::Device> device, uint group, uint input, int16 oldValue, int16 newValue) -> bool;$/;"	m	struct:InputMapping
bool	higan/target-higan/program/program.hpp	/^  auto focused() -> bool;$/;"	m	struct:Program
bool	higan/target-higan/program/program.hpp	/^  auto loadState(uint slot, bool managed = false) -> bool;$/;"	m	struct:Program
bool	higan/target-higan/program/program.hpp	/^  auto saveState(uint slot, bool managed = false) -> bool;$/;"	m	struct:Program
bool	higan/target-higan/tools/tools.hpp	/^  auto addCode(const string& code, const string& description, bool enabled = false) -> bool;$/;"	m	struct:CheatEditor
bool	higan/video/video.hpp	/^  auto removeSprite(shared_pointer<Sprite> sprite) -> bool;$/;"	m	struct:Emulator::Video
bool	higan/ws/cartridge/cartridge.hpp	/^  auto load() -> bool;$/;"	m	struct:Cartridge
bool	higan/ws/ppu/ppu.hpp	/^  auto renderTransparent(bool palette, uint4 color) -> bool;$/;"	m	struct:PPU
bool	higan/ws/system/system.hpp	/^  auto load(Emulator::Interface*, Model) -> bool;$/;"	m	struct:System
bool	higan/ws/system/system.hpp	/^  auto unserialize(serializer&) -> bool;$/;"	m	struct:System
bool	higan/ws/ws.hpp	/^    inline static auto PocketChallengeV2() -> bool;  \/\/(ASWAN)$/;"	m	struct:WonderSwan::Model
bool	higan/ws/ws.hpp	/^    inline static auto SwanCrystal() -> bool;        \/\/SCT-001 (SPHINX2)$/;"	m	struct:WonderSwan::Model
bool	higan/ws/ws.hpp	/^    inline static auto WonderSwan() -> bool;         \/\/SW-001 (ASWAN)$/;"	m	struct:WonderSwan::Model
bool	higan/ws/ws.hpp	/^    inline static auto WonderSwanColor() -> bool;    \/\/WSC-001 (SPHINX)$/;"	m	struct:WonderSwan::Model
bool	hiro/cocoa/application.hpp	/^  static auto modal() -> bool;$/;"	m	struct:hiro::pApplication
bool	hiro/cocoa/application.hpp	/^  static auto pendingEvents() -> bool;$/;"	m	struct:hiro::pApplication
bool	hiro/cocoa/keyboard.hpp	/^  static auto pressed(uint code) -> bool;$/;"	m	struct:hiro::pKeyboard
bool	hiro/cocoa/mouse.hpp	/^  static auto pressed(Mouse::Button button) -> bool;$/;"	m	struct:hiro::pMouse
bool	hiro/cocoa/object.hpp	/^  virtual auto focused() const -> bool;$/;"	m	struct:hiro::pObject
bool	hiro/cocoa/widget/widget.hpp	/^  auto focused() const -> bool;$/;"	m	struct:hiro::pWidget
bool	hiro/core/application.hpp	/^  static auto modal() -> bool;$/;"	m	struct:Application
bool	hiro/core/application.hpp	/^  static auto pendingEvents() -> bool;$/;"	m	struct:Application
bool	hiro/core/application.hpp	/^  static auto screenSaver() -> bool;$/;"	m	struct:Application
bool	hiro/core/application.hpp	/^  static auto toolTips() -> bool;$/;"	m	struct:Application
bool	hiro/core/core.hpp	/^  auto batchable() const -> bool;$/;"	m	struct:hiro::mIconView
bool	hiro/core/core.hpp	/^  auto bordered() const -> bool;$/;"	m	struct:hiro::mButton
bool	hiro/core/core.hpp	/^  auto bordered() const -> bool;$/;"	m	struct:hiro::mCheckButton
bool	hiro/core/core.hpp	/^  auto bordered() const -> bool;$/;"	m	struct:hiro::mRadioButton
bool	hiro/core/core.hpp	/^  auto checkable() const -> bool;$/;"	m	struct:hiro::mTreeViewItem
bool	hiro/core/core.hpp	/^  auto checked() const -> bool;$/;"	m	struct:hiro::mCheckButton
bool	hiro/core/core.hpp	/^  auto checked() const -> bool;$/;"	m	struct:hiro::mCheckLabel
bool	hiro/core/core.hpp	/^  auto checked() const -> bool;$/;"	m	struct:hiro::mMenuCheckItem
bool	hiro/core/core.hpp	/^  auto checked() const -> bool;$/;"	m	struct:hiro::mMenuRadioItem
bool	hiro/core/core.hpp	/^  auto checked() const -> bool;$/;"	m	struct:hiro::mRadioButton
bool	hiro/core/core.hpp	/^  auto checked() const -> bool;$/;"	m	struct:hiro::mRadioLabel
bool	hiro/core/core.hpp	/^  auto checked() const -> bool;$/;"	m	struct:hiro::mTreeViewItem
bool	hiro/core/core.hpp	/^  auto droppable() const -> bool;$/;"	m	struct:hiro::mCanvas
bool	hiro/core/core.hpp	/^  auto droppable() const -> bool;$/;"	m	struct:hiro::mViewport
bool	hiro/core/core.hpp	/^  auto editable() const -> bool;$/;"	m	struct:hiro::mComboEdit
bool	hiro/core/core.hpp	/^  auto editable() const -> bool;$/;"	m	struct:hiro::mLineEdit
bool	hiro/core/core.hpp	/^  auto editable() const -> bool;$/;"	m	struct:hiro::mTextEdit
bool	hiro/core/core.hpp	/^  auto operator!=(const Alignment& source) const -> bool;$/;"	m	struct:hiro::Alignment
bool	hiro/core/core.hpp	/^  auto operator!=(const Color& source) const -> bool;$/;"	m	struct:hiro::Color
bool	hiro/core/core.hpp	/^  auto operator!=(const Cursor& source) const -> bool;$/;"	m	struct:hiro::Cursor
bool	hiro/core/core.hpp	/^  auto operator!=(const Geometry& source) const -> bool;$/;"	m	struct:hiro::Geometry
bool	hiro/core/core.hpp	/^  auto operator!=(const Gradient& source) const -> bool;$/;"	m	struct:hiro::Gradient
bool	hiro/core/core.hpp	/^  auto operator!=(const Hotkey& source) const -> bool;$/;"	m	struct:hiro::Hotkey
bool	hiro/core/core.hpp	/^  auto operator!=(const Position& source) const -> bool;$/;"	m	struct:hiro::Position
bool	hiro/core/core.hpp	/^  auto operator!=(const Size& source) const -> bool;$/;"	m	struct:hiro::Size
bool	hiro/core/core.hpp	/^  auto operator< (const Property& source) const -> bool;$/;"	m	struct:hiro::Property
bool	hiro/core/core.hpp	/^  auto operator==(const Alignment& source) const -> bool;$/;"	m	struct:hiro::Alignment
bool	hiro/core/core.hpp	/^  auto operator==(const Color& source) const -> bool;$/;"	m	struct:hiro::Color
bool	hiro/core/core.hpp	/^  auto operator==(const Cursor& source) const -> bool;$/;"	m	struct:hiro::Cursor
bool	hiro/core/core.hpp	/^  auto operator==(const Geometry& source) const -> bool;$/;"	m	struct:hiro::Geometry
bool	hiro/core/core.hpp	/^  auto operator==(const Gradient& source) const -> bool;$/;"	m	struct:hiro::Gradient
bool	hiro/core/core.hpp	/^  auto operator==(const Hotkey& source) const -> bool;$/;"	m	struct:hiro::Hotkey
bool	hiro/core/core.hpp	/^  auto operator==(const Position& source) const -> bool;$/;"	m	struct:hiro::Position
bool	hiro/core/core.hpp	/^  auto operator==(const Property& source) const -> bool;$/;"	m	struct:hiro::Property
bool	hiro/core/core.hpp	/^  auto operator==(const Size& source) const -> bool;$/;"	m	struct:hiro::Size
bool	hiro/core/core.hpp	/^  auto selected() const -> bool;$/;"	m	struct:hiro::mComboButtonItem
bool	hiro/core/core.hpp	/^  auto selected() const -> bool;$/;"	m	struct:hiro::mIconViewItem
bool	hiro/core/core.hpp	/^  auto selected() const -> bool;$/;"	m	struct:hiro::mTreeViewItem
bool	hiro/core/core.hpp	/^  auto wordWrap() const -> bool;$/;"	m	struct:hiro::mTextEdit
bool	hiro/core/core.hpp	/^  static auto pressed(Button) -> bool;$/;"	m	struct:hiro::Mouse
bool	hiro/core/core.hpp	/^  static auto pressed(const string& key) -> bool;$/;"	m	struct:hiro::Keyboard
bool	hiro/core/core.hpp	/^  static auto released(Button) -> bool;$/;"	m	struct:hiro::Mouse
bool	hiro/core/core.hpp	/^  static auto released(const string& key) -> bool;$/;"	m	struct:hiro::Keyboard
bool	hiro/core/font.hpp	/^  auto bold() const -> bool;$/;"	m	struct:Font
bool	hiro/core/font.hpp	/^  auto italic() const -> bool;$/;"	m	struct:Font
bool	hiro/core/font.hpp	/^  auto operator!=(const Font& source) const -> bool;$/;"	m	struct:Font
bool	hiro/core/font.hpp	/^  auto operator==(const Font& source) const -> bool;$/;"	m	struct:Font
bool	hiro/core/object.hpp	/^  auto abstract() const -> bool;$/;"	m	struct:mObject
bool	hiro/core/object.hpp	/^  auto enabled(bool recursive = false) const -> bool;$/;"	m	struct:mObject
bool	hiro/core/object.hpp	/^  auto visible(bool recursive = false) const -> bool;$/;"	m	struct:mObject
bool	hiro/core/object.hpp	/^  virtual auto focused() const -> bool;$/;"	m	struct:mObject
bool	hiro/core/widget/source-edit.hpp	/^  auto editable() const -> bool;$/;"	m	struct:mSourceEdit
bool	hiro/core/widget/source-edit.hpp	/^  auto wordWrap() const -> bool;$/;"	m	struct:mSourceEdit
bool	hiro/core/widget/tab-frame-item.hpp	/^  auto closable() const -> bool;$/;"	m	struct:mTabFrameItem
bool	hiro/core/widget/tab-frame-item.hpp	/^  auto movable() const -> bool;$/;"	m	struct:mTabFrameItem
bool	hiro/core/widget/tab-frame-item.hpp	/^  auto selected() const -> bool;$/;"	m	struct:mTabFrameItem
bool	hiro/core/widget/table-view-cell.hpp	/^  auto checkable() const -> bool;$/;"	m	struct:mTableViewCell
bool	hiro/core/widget/table-view-cell.hpp	/^  auto checked() const -> bool;$/;"	m	struct:mTableViewCell
bool	hiro/core/widget/table-view-column.hpp	/^  auto active() const -> bool;$/;"	m	struct:mTableViewColumn
bool	hiro/core/widget/table-view-column.hpp	/^  auto editable() const -> bool;$/;"	m	struct:mTableViewColumn
bool	hiro/core/widget/table-view-column.hpp	/^  auto expandable() const -> bool;$/;"	m	struct:mTableViewColumn
bool	hiro/core/widget/table-view-column.hpp	/^  auto resizable() const -> bool;$/;"	m	struct:mTableViewColumn
bool	hiro/core/widget/table-view-item.hpp	/^  auto selected() const -> bool;$/;"	m	struct:mTableViewItem
bool	hiro/core/widget/table-view.hpp	/^  auto batchable() const -> bool;$/;"	m	struct:mTableView
bool	hiro/core/widget/table-view.hpp	/^  auto bordered() const -> bool;$/;"	m	struct:mTableView
bool	hiro/core/widget/table-view.hpp	/^  auto headered() const -> bool;$/;"	m	struct:mTableView
bool	hiro/core/widget/table-view.hpp	/^  auto sortable() const -> bool;$/;"	m	struct:mTableView
bool	hiro/core/window.hpp	/^  auto dismissable() const -> bool;$/;"	m	struct:mWindow
bool	hiro/core/window.hpp	/^  auto droppable() const -> bool;$/;"	m	struct:mWindow
bool	hiro/core/window.hpp	/^  auto fullScreen() const -> bool;$/;"	m	struct:mWindow
bool	hiro/core/window.hpp	/^  auto maximized() const -> bool;$/;"	m	struct:mWindow
bool	hiro/core/window.hpp	/^  auto minimized() const -> bool;$/;"	m	struct:mWindow
bool	hiro/core/window.hpp	/^  auto modal() const -> bool;$/;"	m	struct:mWindow
bool	hiro/core/window.hpp	/^  auto resizable() const -> bool;$/;"	m	struct:mWindow
bool	hiro/extension/browser-dialog.cpp	/^  auto isFolder(const string& name) -> bool;$/;"	m	struct:BrowserDialogWindow	file:
bool	hiro/extension/browser-dialog.cpp	/^  auto isMatch(const string& name) -> bool;$/;"	m	struct:BrowserDialogWindow	file:
bool	hiro/extension/list-view.hpp	/^  auto checkable() const -> bool;$/;"	m	struct:mListViewItem
bool	hiro/extension/list-view.hpp	/^  auto checked() const -> bool;$/;"	m	struct:mListViewItem
bool	hiro/gtk/action/menu-radio-item.hpp	/^  auto groupLocked() const -> bool;$/;"	m	struct:hiro::pMenuRadioItem
bool	hiro/gtk/application.hpp	/^  static auto modal() -> bool;$/;"	m	struct:hiro::pApplication
bool	hiro/gtk/application.hpp	/^  static auto pendingEvents() -> bool;$/;"	m	struct:hiro::pApplication
bool	hiro/gtk/keyboard.hpp	/^  static auto _pressed(const char* state, uint16_t code) -> bool;$/;"	m	struct:hiro::pKeyboard
bool	hiro/gtk/keyboard.hpp	/^  static auto pressed(unsigned code) -> bool;$/;"	m	struct:hiro::pKeyboard
bool	hiro/gtk/mouse.hpp	/^  static auto pressed(Mouse::Button button) -> bool;$/;"	m	struct:hiro::pMouse
bool	hiro/gtk/object.hpp	/^  virtual auto focused() const -> bool;$/;"	m	struct:hiro::pObject
bool	hiro/gtk/widget/console.hpp	/^  auto _keyPress(uint scancode, uint mask) -> bool;$/;"	m	struct:hiro::pConsole
bool	hiro/gtk/widget/hex-edit.hpp	/^  auto keyPress(unsigned scancode, unsigned mask) -> bool;$/;"	m	struct:hiro::pHexEdit
bool	hiro/gtk/widget/radio-button.hpp	/^  auto groupLocked() const -> bool;$/;"	m	struct:hiro::pRadioButton
bool	hiro/gtk/widget/radio-label.hpp	/^  auto groupLocked() const -> bool;$/;"	m	struct:hiro::pRadioLabel
bool	hiro/gtk/window.hpp	/^  auto _setIcon(const string& basename) -> bool;$/;"	m	struct:hiro::pWindow
bool	hiro/qt/application.hpp	/^  static auto modal() -> bool;$/;"	m	struct:hiro::pApplication
bool	hiro/qt/application.hpp	/^  static auto pendingEvents() -> bool;$/;"	m	struct:hiro::pApplication
bool	hiro/qt/keyboard.hpp	/^  static auto _pressed(const char* state, uint16_t code) -> bool;$/;"	m	struct:hiro::pKeyboard
bool	hiro/qt/keyboard.hpp	/^  static auto pressed(unsigned code) -> bool;$/;"	m	struct:hiro::pKeyboard
bool	hiro/qt/mouse.hpp	/^  static auto pressed(Mouse::Button button) -> bool;$/;"	m	struct:hiro::pMouse
bool	hiro/qt/object.hpp	/^  virtual auto focused() const -> bool;$/;"	m	struct:hiro::pObject
bool	hiro/qt/qt.hpp	/^  auto event(QEvent*) -> bool;$/;"	m	struct:hiro::QtHexEditScrollBar
bool	hiro/windows/application.cpp	/^static auto Application_keyboardProc(HWND, UINT, WPARAM, LPARAM) -> bool;$/;"	m	namespace:hiro	file:
bool	hiro/windows/application.hpp	/^  static auto modal() -> bool;$/;"	m	struct:hiro::pApplication
bool	hiro/windows/application.hpp	/^  static auto pendingEvents() -> bool;$/;"	m	struct:hiro::pApplication
bool	hiro/windows/keyboard.hpp	/^  static auto pressed(unsigned code) -> bool;$/;"	m	struct:hiro::pKeyboard
bool	hiro/windows/mouse.hpp	/^  static auto pressed(Mouse::Button button) -> bool;$/;"	m	struct:hiro::pMouse
bool	hiro/windows/object.hpp	/^  virtual auto focused() const -> bool;$/;"	m	struct:hiro::pObject
bool	hiro/windows/widget/hex-edit.hpp	/^  auto keyPress(unsigned key) -> bool;$/;"	m	struct:hiro::pHexEdit
bool	hiro/windows/window.hpp	/^  auto _modalityDisabled() -> bool;$/;"	m	struct:hiro::pWindow
bool	icarus/heuristics/super-famicom.cpp	/^  auto nonVolatile() const -> bool;$/;"	m	struct:Heuristics::SuperFamicom	file:
bool	icarus/ui/ui.hpp	/^  auto gamePakType(const string& type) -> bool;$/;"	m	struct:ScanDialog
bool	icarus/ui/ui.hpp	/^  auto gameRomType(const string& type) -> bool;$/;"	m	struct:ScanDialog
bool	nall/arguments.hpp	/^  auto find(string_view name) const -> bool;$/;"	m	struct:nall::Arguments
bool	nall/arguments.hpp	/^  auto find(string_view name, bool& argument) const -> bool;$/;"	m	struct:nall::Arguments
bool	nall/arguments.hpp	/^  auto find(string_view name, string& argument) const -> bool;$/;"	m	struct:nall::Arguments
bool	nall/arguments.hpp	/^  auto take(string_view name) -> bool;$/;"	m	struct:nall::Arguments
bool	nall/arguments.hpp	/^  auto take(string_view name, bool& argument) -> bool;$/;"	m	struct:nall::Arguments
bool	nall/arguments.hpp	/^  auto take(string_view name, string& argument) -> bool;$/;"	m	struct:nall::Arguments
bool	nall/beat/archive/container.hpp	/^  auto decompressLZSA() -> bool;$/;"	m	struct:nall::Beat::Archive::Container
bool	nall/beat/archive/container.hpp	/^  auto decryptXChaCha20(uint256_t privateKey) -> bool;$/;"	m	struct:nall::Beat::Archive::Container
bool	nall/beat/archive/container.hpp	/^  auto remove(string name) -> bool;$/;"	m	struct:nall::Beat::Archive::Container
bool	nall/beat/archive/container.hpp	/^  auto validate() -> bool;$/;"	m	struct:nall::Beat::Archive::Container
bool	nall/beat/archive/container.hpp	/^  auto verifyEd25519(uint256_t publicKey) -> bool;$/;"	m	struct:nall::Beat::Archive::Container
bool	nall/beat/archive/node.hpp	/^  auto compressLZSA() -> bool;$/;"	m	struct:nall::Beat::Archive::Node
bool	nall/beat/archive/node.hpp	/^  auto decompress() -> bool;$/;"	m	struct:nall::Beat::Archive::Node
bool	nall/beat/archive/node.hpp	/^  auto unserialize(array_view<uint8_t> container, Markup::Node metadata) -> bool;$/;"	m	struct:nall::Beat::Archive::Node
bool	nall/decode/gzip.hpp	/^  inline auto decompress(const string& filename) -> bool;$/;"	m	struct:nall::Decode::GZIP
bool	nall/decode/gzip.hpp	/^  inline auto decompress(const uint8_t* data, uint size) -> bool;$/;"	m	struct:nall::Decode::GZIP
bool	nall/decode/png.hpp	/^  inline auto deinterlace(const uint8_t*& inputData, uint pass) -> bool;$/;"	m	struct:nall::Decode::PNG
bool	nall/decode/png.hpp	/^  inline auto filter(uint8_t* outputData, const uint8_t* inputData, uint width, uint height) -> bool;$/;"	m	struct:nall::Decode::PNG
bool	nall/decode/png.hpp	/^  inline auto load(const string& filename) -> bool;$/;"	m	struct:nall::Decode::PNG
bool	nall/decode/png.hpp	/^  inline auto load(const uint8_t* sourceData, uint sourceSize) -> bool;$/;"	m	struct:nall::Decode::PNG
bool	nall/directory.hpp	/^  static auto create(const string& pathname, uint permissions = 0755) -> bool;  \/\/recursive$/;"	m	struct:nall::directory
bool	nall/directory.hpp	/^  static auto exists(const string& pathname) -> bool;$/;"	m	struct:nall::directory
bool	nall/directory.hpp	/^  static auto remove(const string& pathname) -> bool;  \/\/recursive$/;"	m	struct:nall::directory
bool	nall/dl.hpp	/^  auto open(const string&, const string& = "") -> bool;$/;"	m	struct:nall::library
bool	nall/dl.hpp	/^  auto openAbsolute(const string&) -> bool;$/;"	m	struct:nall::library
bool	nall/dsp/resampler/cubic.hpp	/^  inline auto pending() const -> bool;$/;"	m	struct:nall::DSP::Resampler::Cubic
bool	nall/emulation/21fx.hpp	/^  auto open(Arguments& arguments) -> bool;$/;"	m	struct:FX
bool	nall/emulation/21fx.hpp	/^  auto readable() -> bool;$/;"	m	struct:FX
bool	nall/emulation/21fx.hpp	/^  auto writable() -> bool;$/;"	m	struct:FX
bool	nall/http/client.hpp	/^  inline auto open(const string& hostname, uint port = 80) -> bool;$/;"	m	struct:nall::HTTP::Client
bool	nall/http/client.hpp	/^  inline auto upload(const Request& request) -> bool;$/;"	m	struct:nall::HTTP::Client
bool	nall/http/message.hpp	/^  virtual auto body(const function<bool (const uint8_t* data, uint size)>& callback) const -> bool = 0;$/;"	m	struct:nall::HTTP::Message
bool	nall/http/message.hpp	/^  virtual auto head(const function<bool (const uint8_t* data, uint size)>& callback) const -> bool = 0;$/;"	m	struct:nall::HTTP::Message
bool	nall/http/message.hpp	/^  virtual auto setBody() -> bool = 0;$/;"	m	struct:nall::HTTP::Message
bool	nall/http/message.hpp	/^  virtual auto setHead() -> bool = 0;$/;"	m	struct:nall::HTTP::Message
bool	nall/http/response.hpp	/^  inline auto hasBody() const -> bool;$/;"	m	struct:nall::HTTP::Response
bool	nall/http/role.hpp	/^  inline auto configure(const string& parameters) -> bool;$/;"	m	struct:nall::HTTP::Role
bool	nall/http/role.hpp	/^  inline auto download(int fd, Message& message) -> bool;$/;"	m	struct:nall::HTTP::Role
bool	nall/http/role.hpp	/^  inline auto upload(int fd, const Message& message) -> bool;$/;"	m	struct:nall::HTTP::Role
bool	nall/http/server.hpp	/^  auto ipv4_scan() -> bool;$/;"	m	struct:nall::HTTP::Server
bool	nall/http/server.hpp	/^  auto ipv6_scan() -> bool;$/;"	m	struct:nall::HTTP::Server
bool	nall/http/server.hpp	/^  inline auto open(uint port = 8080, const string& serviceName = "", const string& command = "") -> bool;$/;"	m	struct:nall::HTTP::Server
bool	nall/image.hpp	/^  inline auto crop(uint x, uint y, uint width, uint height) -> bool;$/;"	m	struct:nall::image
bool	nall/image.hpp	/^  inline auto load(const string& filename) -> bool;$/;"	m	struct:nall::image
bool	nall/image.hpp	/^  inline auto loadBMP(const string& filename) -> bool;$/;"	m	struct:nall::image
bool	nall/image.hpp	/^  inline auto loadBMP(const uint8_t* data, uint size) -> bool;$/;"	m	struct:nall::image
bool	nall/image.hpp	/^  inline auto loadPNG(const string& filename) -> bool;$/;"	m	struct:nall::image
bool	nall/image.hpp	/^  inline auto loadPNG(const uint8_t* data, uint size) -> bool;$/;"	m	struct:nall::image
bool	nall/image.hpp	/^  inline auto operator!=(const image& source) const -> bool;$/;"	m	struct:nall::image
bool	nall/image.hpp	/^  inline auto operator==(const image& source) const -> bool;$/;"	m	struct:nall::image
bool	nall/posix/service.hpp	/^  inline auto command(const string& name, const string& command) -> bool;$/;"	m	struct:nall::service
bool	nall/posix/service.hpp	/^  inline auto stop() const -> bool;$/;"	m	struct:nall::service
bool	nall/smtp.hpp	/^  inline auto attachment(string filename, string name = "") -> bool;$/;"	m	struct:nall::SMTP
bool	nall/smtp.hpp	/^  inline auto send() -> bool;$/;"	m	struct:nall::SMTP
bool	nall/smtp.hpp	/^  inline auto send(int sock, const string& text) -> bool;$/;"	m	struct:nall::SMTP
bool	nall/string.hpp	/^  inline auto beginsWith(string_view source) const -> bool;$/;"	m	struct:nall::string
bool	nall/string.hpp	/^  inline auto endsWith(string_view source) const -> bool;$/;"	m	struct:nall::string
bool	nall/string.hpp	/^  inline auto equals(string_view source) const -> bool;$/;"	m	struct:nall::string
bool	nall/string.hpp	/^  inline auto ibeginsWith(string_view source) const -> bool;$/;"	m	struct:nall::string
bool	nall/string.hpp	/^  inline auto iendsWith(string_view source) const -> bool;$/;"	m	struct:nall::string
bool	nall/string.hpp	/^  inline auto iequals(string_view source) const -> bool;$/;"	m	struct:nall::string
bool	nall/string.hpp	/^  inline auto imatch(string_view source) const -> bool;$/;"	m	struct:nall::string
bool	nall/string.hpp	/^  inline auto match(string_view source) const -> bool;$/;"	m	struct:nall::string
bool	nall/string.hpp	/^inline auto tokenize(const char* s, const char* p) -> bool;$/;"	m	namespace:nall
bool	nall/string.hpp	/^inline auto tokenize(vector<string>& list, const char* s, const char* p) -> bool;$/;"	m	namespace:nall
bool	nall/string/markup/node.hpp	/^  inline auto _evaluate(string query) const -> bool;$/;"	m	struct:nall::Markup::ManagedNode
bool	nall/string/transform/cml.hpp	/^  auto parseDocument(const string& filedata, const string& pathname, uint depth) -> bool;$/;"	m	struct:nall::__anon38::CML
bool	nall/string/transform/dml.hpp	/^  auto parseBlock(string& block, const string& pathname, uint depth) -> bool;$/;"	m	struct:nall::__anon37::DML
bool	nall/string/transform/dml.hpp	/^  auto parseDocument(const string& filedata, const string& pathname, uint depth) -> bool;$/;"	m	struct:nall::__anon37::DML
bool	nall/vector.hpp	/^  auto operator!=(const type& source) const -> bool;$/;"	m	struct:nall::vector_base
bool	nall/vector.hpp	/^  auto operator==(const type& source) const -> bool;$/;"	m	struct:nall::vector_base
bool	nall/vector.hpp	/^  auto reallocateLeft(uint size) -> bool;$/;"	m	struct:nall::vector_base
bool	nall/vector.hpp	/^  auto reallocateRight(uint size) -> bool;$/;"	m	struct:nall::vector_base
bool	nall/vector.hpp	/^  auto reserveLeft(uint capacity) -> bool;$/;"	m	struct:nall::vector_base
bool	nall/vector.hpp	/^  auto reserveRight(uint capacity) -> bool;$/;"	m	struct:nall::vector_base
bool	nall/vector.hpp	/^  auto resizeLeft(uint size, const T& value = T()) -> bool;$/;"	m	struct:nall::vector_base
bool	nall/vector.hpp	/^  auto resizeRight(uint size, const T& value = T()) -> bool;$/;"	m	struct:nall::vector_base
bool	nall/windows/detour.hpp	/^  static auto insert(const string& moduleName, const string& functionName, void*& source, void* target) -> bool;$/;"	m	struct:nall::detour
bool	nall/windows/detour.hpp	/^  static auto remove(const string& moduleName, const string& functionName, void*& source) -> bool;$/;"	m	struct:nall::detour
bool	ruby/audio/audio.hpp	/^  auto create(string driver = "") -> bool;$/;"	m	struct:Audio
bool	ruby/audio/audio.hpp	/^  auto setBlocking(bool blocking) -> bool;$/;"	m	struct:Audio
bool	ruby/audio/audio.hpp	/^  auto setChannels(uint channels) -> bool;$/;"	m	struct:Audio
bool	ruby/audio/audio.hpp	/^  auto setContext(uintptr context) -> bool;$/;"	m	struct:Audio
bool	ruby/audio/audio.hpp	/^  auto setDevice(string device) -> bool;$/;"	m	struct:Audio
bool	ruby/audio/audio.hpp	/^  auto setDynamic(bool dynamic) -> bool;$/;"	m	struct:Audio
bool	ruby/audio/audio.hpp	/^  auto setExclusive(bool exclusive) -> bool;$/;"	m	struct:Audio
bool	ruby/audio/audio.hpp	/^  auto setFrequency(uint frequency) -> bool;$/;"	m	struct:Audio
bool	ruby/audio/audio.hpp	/^  auto setLatency(uint latency) -> bool;$/;"	m	struct:Audio
bool	ruby/input/input.hpp	/^  auto acquire() -> bool;$/;"	m	struct:Input
bool	ruby/input/input.hpp	/^  auto acquired() -> bool;$/;"	m	struct:Input
bool	ruby/input/input.hpp	/^  auto create(string driver = "") -> bool;$/;"	m	struct:Input
bool	ruby/input/input.hpp	/^  auto release() -> bool;$/;"	m	struct:Input
bool	ruby/input/input.hpp	/^  auto rumble(uint64_t id, bool enable) -> bool;$/;"	m	struct:Input
bool	ruby/input/input.hpp	/^  auto setContext(uintptr context) -> bool;$/;"	m	struct:Input
bool	ruby/video/opengl/opengl.hpp	/^  auto initialize(const string& shader) -> bool;$/;"	m	struct:OpenGL
bool	ruby/video/opengl/opengl.hpp	/^  auto lock(uint32_t*& data, uint& pitch) -> bool;$/;"	m	struct:OpenGL
bool	ruby/video/video.hpp	/^  auto acquire(uint32_t*& data, uint& pitch, uint width, uint height) -> bool;$/;"	m	struct:Video
bool	ruby/video/video.hpp	/^  auto configure(uint width, uint height, double inputFrequency, double outputFrequency) -> bool;$/;"	m	struct:Video
bool	ruby/video/video.hpp	/^  auto create(string driver = "") -> bool;$/;"	m	struct:Video
bool	ruby/video/video.hpp	/^  auto setBlocking(bool blocking) -> bool;$/;"	m	struct:Video
bool	ruby/video/video.hpp	/^  auto setContext(uintptr context) -> bool;$/;"	m	struct:Video
bool	ruby/video/video.hpp	/^  auto setExclusive(bool exclusive) -> bool;$/;"	m	struct:Video
bool	ruby/video/video.hpp	/^  auto setFlush(bool flush) -> bool;$/;"	m	struct:Video
bool	ruby/video/video.hpp	/^  auto setFormat(string format) -> bool;$/;"	m	struct:Video
bool	ruby/video/video.hpp	/^  auto setShader(string shader) -> bool;$/;"	m	struct:Video
boolean	nall/windows/guard.hpp	28;"	d
boolean	nall/windows/guard.hpp	4;"	d
bootROM	higan/gb/system/system.hpp	/^  } bootROM;$/;"	m	struct:System	typeref:struct:System::BootROM
booted	higan/gba/cpu/cpu.hpp	/^    boolean booted;  \/\/set to true by the GBA BIOS$/;"	m	struct:Context
booted	higan/sfc/expansion/21fx/21fx.hpp	/^  bool booted = false;$/;"	m	struct:S21FX
bootromEnable	higan/gb/cartridge/cartridge.hpp	/^  bool bootromEnable = true;$/;"	m	struct:Cartridge
bordered	hiro/core/core.hpp	/^    bool bordered = true;$/;"	m	struct:hiro::mButton::State
bordered	hiro/core/core.hpp	/^    bool bordered = true;$/;"	m	struct:hiro::mCheckButton::State
bordered	hiro/core/core.hpp	/^    bool bordered = true;$/;"	m	struct:hiro::mRadioButton::State
bordered	hiro/core/shared.hpp	/^  auto bordered() const { return self().bordered(); }$/;"	f	struct:Button
bordered	hiro/core/shared.hpp	/^  auto bordered() const { return self().bordered(); }$/;"	f	struct:CheckButton
bordered	hiro/core/shared.hpp	/^  auto bordered() const { return self().bordered(); }$/;"	f	struct:RadioButton
bordered	hiro/core/shared.hpp	/^  auto bordered() const { return self().bordered(); }$/;"	f	struct:TableView
bordered	hiro/core/widget/table-view.hpp	/^    bool bordered = false;$/;"	m	struct:mTableView::State
bp	higan/processor/v30mz/v30mz.hpp	/^    uint16_t bp;$/;"	m	struct:Processor::Registers
bpp	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  uint bpp;             \/\/bits per pixel (1bpp = 1; 2bpp = 2; 4bpp = 4)$/;"	m	struct:Decompressor	file:
bram	higan/pce/cpu/cpu.hpp	/^  uint8 bram[0x800];  \/\/PC Engine CD-ROM Backup RAM = 2KB$/;"	m	struct:CPU
bramr	higan/processor/gsu/registers.hpp	/^  bool bramr;       \/\/back-up RAM register$/;"	m	struct:Registers
brf	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 brf[16];$/;"	m	struct:SA1::MMIO
bridge	higan/sfc/coprocessor/armdsp/registers.hpp	/^} bridge;$/;"	v	typeref:struct:Bridge
brrAddress	higan/sfc/dsp/dsp.hpp	/^    int brrAddress = 0;      \/\/address of current BRR block$/;"	m	struct:Voice
brrOffset	higan/sfc/dsp/dsp.hpp	/^    int brrOffset = 1;       \/\/current decoding offset in BRR block$/;"	m	struct:Voice
bsMemory	higan/target-bsnes/program/program.hpp	/^  } bsMemory;$/;"	m	struct:Program	typeref:struct:Program::BSMemory
bsMemory	higan/target-bsnes/settings/settings.hpp	/^      string bsMemory;$/;"	m	struct:Settings::Path::Recent
bsmemory	higan/sfc/slot/bsmemory/bsmemory.cpp	/^BSMemory bsmemory;$/;"	m	namespace:SuperFamicom	file:
buffer	higan/fc/ppu/ppu.hpp	/^  uint32 buffer[256 * 262];$/;"	m	struct:PPU
buffer	higan/gba/ppu/ppu.hpp	/^    Pixel buffer[240];$/;"	m	struct:PPU::Objects
buffer	higan/md/vdp/vdp.hpp	/^  uint32 buffer[1280 * 512];$/;"	m	struct:VDP
buffer	higan/ms/vdp/vdp.hpp	/^  uint32 buffer[256 * 264];$/;"	m	struct:VDP
buffer	higan/pce/vce/vce.hpp	/^  uint32 buffer[1365 * 263];$/;"	m	struct:VCE
buffer	higan/processor/gsu/registers.hpp	/^  uint8 buffer[512];$/;"	m	struct:Cache
buffer	higan/sfc/dsp/dsp.hpp	/^    int buffer[12 * 3] = {};  \/\/12 decoded samples (mirrored for wrapping)$/;"	m	struct:Voice
buffer	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    uint8 buffer[2][256];$/;"	m	struct:BSMemory::Page
buffer	higan/video/video.hpp	/^  uint32* buffer = nullptr;$/;"	m	struct:Emulator::Video
buffer	nall/file-buffer.hpp	/^  array<uint8_t[4096]> buffer;$/;"	v
buffer	nall/mac/poly1305.hpp	/^  uint8_t buffer[16];$/;"	m	struct:nall::MAC::Poly1305
buffer	nall/smtp.hpp	/^      vector<uint8_t> buffer;$/;"	m	struct:nall::SMTP::Information::Attachment
buffer	nall/windows/utf8.hpp	/^    char* buffer = nullptr;$/;"	m	struct:nall::utf8_t
buffer	nall/windows/utf8.hpp	/^    wchar_t* buffer = nullptr;$/;"	m	struct:nall::utf16_t
buffer	ruby/audio/oss.cpp	/^  queue<int16_t> buffer;$/;"	m	struct:AudioOSS	file:
buffer	ruby/video/opengl/opengl.hpp	/^  uint32_t* buffer = nullptr;$/;"	m	struct:OpenGLSurface
bufferDirty	nall/file-buffer.hpp	/^  bool bufferDirty = false;$/;"	v
bufferOffset	higan/sfc/dsp/dsp.hpp	/^    int bufferOffset = 0;    \/\/place in buffer where next samples will be decoded$/;"	m	struct:Voice
bufferOffset	nall/file-buffer.hpp	/^  int bufferOffset = -1;$/;"	v
bufferSize	ruby/audio/wasapi.cpp	/^  uint32_t bufferSize = 0;  \/\/in frames$/;"	m	struct:AudioWASAPI	file:
buffers	ruby/audio/asio.hpp	/^  void* buffers[2];$/;"	m	struct:ASIOBufferInfo
buffers	ruby/audio/xaudio2.cpp	/^  queue<uint32_t> buffers[Buffers];$/;"	m	struct:AudioXAudio2	file:
build	genius/GNUmakefile	/^build := stable$/;"	m
build	higan/GNUmakefile	/^build := debug$/;"	m
build	icarus/GNUmakefile	/^build := performance$/;"	m
bus	higan/fc/memory/memory.cpp	/^Bus bus;$/;"	m	namespace:Famicom	file:
bus	higan/gb/memory/memory.cpp	/^Bus bus;$/;"	m	namespace:GameBoy	file:
bus	higan/gba/memory/memory.cpp	/^Bus bus;$/;"	m	namespace:GameBoyAdvance	file:
bus	higan/processor/hg51b/hg51b.hpp	/^    } bus;$/;"	m	struct:Processor::HG51B::IO	typeref:struct:Processor::HG51B::IO::Bus
bus	higan/processor/z80/z80.hpp	/^  Bus* bus = nullptr;$/;"	m	struct:Processor::Z80
bus	higan/sfc/memory/memory.cpp	/^Bus bus;$/;"	m	namespace:SuperFamicom	file:
bus	higan/ws/memory/memory.cpp	/^Bus bus;$/;"	m	namespace:WonderSwan	file:
busData	higan/fc/ppu/ppu.hpp	/^    uint8 busData;$/;"	m	struct:PPU::IO
busy	higan/gb/cartridge/mbc7/mbc7.hpp	/^    uint busy;         \/\/busy cycles in milliseconds remaining for programming (write) operations to complete$/;"	m	struct:MBC7::EEPROM
buttonEnable	higan/ws/cpu/cpu.hpp	/^    uint1 buttonEnable;$/;"	m	struct:CPU::Registers
buttons	hiro/core/core.hpp	/^    MessageWindow::Buttons buttons = MessageWindow::Buttons::Ok;$/;"	m	struct:hiro::MessageWindow::State
buttons	hiro/extension/message-dialog.hpp	/^    vector<string> buttons;$/;"	m	struct:MessageDialog::State
buttons	ruby/input/joypad/udev.cpp	/^    set<JoypadInput> buttons;$/;"	m	struct:InputJoypadUdev::Joypad	file:
buttons	ruby/input/mouse/rawinput.cpp	/^    bool buttons[5] = {0};$/;"	m	struct:InputMouseRawInput::Mouse	file:
bwp	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 bwp;$/;"	m	struct:SA1::MMIO
bwram	higan/sfc/coprocessor/sa1/sa1.hpp	/^  } bwram;$/;"	m	struct:SA1	typeref:struct:SA1::BWRAM
bx	higan/processor/v30mz/v30mz.hpp	/^    union { uint16_t bx; struct { uint8_t order_lsb2(bl, bh); }; };$/;"	m	union:Processor::Registers::__anon24
byte	higan/processor/lr35902/lr35902.hpp	/^      struct Byte { uint8 order_msb2(hi, lo); } byte;$/;"	m	union:Processor::LR35902::Registers::Pair	typeref:struct:Processor::LR35902::Registers::Pair::Byte
byte	higan/processor/spc700/spc700.hpp	/^      struct Byte { uint8 order_lsb2(l, h); } byte;$/;"	m	union:Processor::SPC700::Registers::Pair	typeref:struct:Processor::SPC700::Registers::Pair::Byte
byte	higan/processor/z80/z80.hpp	/^      struct Byte { uint8 order_msb2(hi, lo); } byte;$/;"	m	union:Processor::Z80::Registers::Pair	typeref:struct:Processor::Z80::Registers::Pair::Byte
bytesPerPixel	nall/decode/png.hpp	/^    uint bytesPerPixel;$/;"	m	struct:nall::Decode::PNG::Info
c	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    boolean c;  \/\/carry$/;"	m	namespace:Processor
c	higan/processor/hg51b/hg51b.hpp	/^    boolean c;  \/\/carry$/;"	m	struct:Processor::HG51B::Registers
c	higan/processor/huc6280/huc6280.hpp	/^    bool c;  \/\/carry$/;"	m	struct:Processor::HuC6280::Flags
c	higan/processor/mos6502/mos6502.hpp	/^    bool c;  \/\/carry$/;"	m	struct:Processor::MOS6502::Flags
c	higan/processor/spc700/spc700.hpp	/^    bool c;  \/\/carry$/;"	m	struct:Processor::SPC700::Flags
c	higan/processor/upd96050/upd96050.hpp	/^    boolean c;    \/\/carry$/;"	m	struct:Processor::uPD96050::Flag
c	higan/processor/v30mz/v30mz.hpp	/^        BooleanBitField<uint16_t,  0> c;  \/\/carry$/;"	m	union:Processor::Registers::Flags::__anon26
c	higan/processor/wdc65816/wdc65816.hpp	/^    bool c;  \/\/carry$/;"	m	struct:Processor::WDC65816::Flags
cache	higan/processor/gsu/registers.hpp	/^} cache;$/;"	v	typeref:struct:Cache
cache	higan/processor/hg51b/hg51b.hpp	/^    } cache;$/;"	m	struct:Processor::HG51B::IO	typeref:struct:Processor::HG51B::IO::Cache
calendar	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 calendar;$/;"	m	struct:EpsonRTC
callback	nall/function.hpp	/^  container* callback = nullptr;$/;"	m	struct:nall::R
callback	nall/http/server.hpp	/^  function<Response (Request&)> callback;$/;"	m	struct:nall::HTTP::Server
callback	nall/thread.hpp	/^    function<auto (uintptr) -> void> callback;$/;"	m	struct:nall::thread::context
carry	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  boolean carry;$/;"	v
cartridge	higan/fc/cartridge/cartridge.cpp	/^Cartridge cartridge;$/;"	m	namespace:Famicom	file:
cartridge	higan/gb/cartridge/cartridge.cpp	/^Cartridge cartridge;$/;"	m	namespace:GameBoy	file:
cartridge	higan/gba/cartridge/cartridge.cpp	/^Cartridge cartridge;$/;"	m	namespace:GameBoyAdvance	file:
cartridge	higan/md/cartridge/cartridge.cpp	/^Cartridge cartridge;$/;"	m	namespace:MegaDrive	file:
cartridge	higan/ms/cartridge/cartridge.cpp	/^Cartridge cartridge;$/;"	m	namespace:MasterSystem	file:
cartridge	higan/pce/cartridge/cartridge.cpp	/^Cartridge cartridge;$/;"	m	namespace:PCEngine	file:
cartridge	higan/sfc/cartridge/cartridge.cpp	/^Cartridge cartridge;$/;"	m	namespace:SuperFamicom	file:
cartridge	higan/ws/cartridge/cartridge.cpp	/^Cartridge cartridge;$/;"	m	namespace:WonderSwan	file:
cartridgeSample	higan/fc/apu/apu.hpp	/^  int16 cartridgeSample;$/;"	m	struct:APU
cascade	higan/gba/cpu/cpu.hpp	/^    uint1 cascade;$/;"	m	struct:Timer
case12	higan/processor/gsu/disassembler.cpp	19;"	d	file:
case12	higan/processor/gsu/disassembler.cpp	263;"	d	file:
case15	higan/processor/gsu/disassembler.cpp	22;"	d	file:
case15	higan/processor/gsu/disassembler.cpp	264;"	d	file:
case16	higan/processor/gsu/disassembler.cpp	25;"	d	file:
case16	higan/processor/gsu/disassembler.cpp	265;"	d	file:
case4	higan/processor/gsu/disassembler.cpp	15;"	d	file:
case4	higan/processor/gsu/disassembler.cpp	261;"	d	file:
case6	higan/processor/gsu/disassembler.cpp	17;"	d	file:
case6	higan/processor/gsu/disassembler.cpp	262;"	d	file:
castable	nall/utility.hpp	/^template<typename To, typename With> struct castable {$/;"	s	namespace:nall
cb	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint cb;$/;"	m	struct:SA1::MMIO
cbm	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 cbm;$/;"	m	struct:SA1::MMIO
cbmode	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool cbmode;$/;"	m	struct:SA1::MMIO
cbr	higan/processor/gsu/registers.hpp	/^  uint16 cbr;       \/\/cache base register$/;"	m	struct:Registers
cc	nall/smtp.hpp	/^    vector<Contact> cc;$/;"	m	struct:nall::SMTP::Information
cden	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool cden;$/;"	m	struct:SA1::MMIO
cdsel	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool cdsel;$/;"	m	struct:SA1::MMIO
cell	hiro/core/shared.hpp	/^  auto cell(unsigned position) const { return self().cell(position); }$/;"	f	struct:TableViewItem
cell	hiro/extension/shared.hpp	/^  auto cell(sSizable sizable) const { return self().cell(sizable); }$/;"	f	struct:FixedLayout
cell	hiro/extension/shared.hpp	/^  auto cell(sSizable sizable) const { return self().cell(sizable); }$/;"	f	struct:HorizontalLayout
cell	hiro/extension/shared.hpp	/^  auto cell(sSizable sizable) const { return self().cell(sizable); }$/;"	f	struct:TableLayout
cell	hiro/extension/shared.hpp	/^  auto cell(sSizable sizable) const { return self().cell(sizable); }$/;"	f	struct:VerticalLayout
cell	hiro/extension/shared.hpp	/^  auto cell(uint position) const { return self().cell(position); }$/;"	f	struct:FixedLayout
cell	hiro/extension/shared.hpp	/^  auto cell(uint position) const { return self().cell(position); }$/;"	f	struct:HorizontalLayout
cell	hiro/extension/shared.hpp	/^  auto cell(uint position) const { return self().cell(position); }$/;"	f	struct:TableLayout
cell	hiro/extension/shared.hpp	/^  auto cell(uint position) const { return self().cell(position); }$/;"	f	struct:VerticalLayout
cell	hiro/extension/shared.hpp	/^  auto cell(uint x, uint y) const { return self().cell(x, y); }$/;"	f	struct:TableLayout
cellCount	hiro/core/shared.hpp	/^  auto cellCount() const { return self().cellCount(); }$/;"	f	struct:TableViewItem
cellCount	hiro/extension/shared.hpp	/^  auto cellCount() const { return self().cellCount(); }$/;"	f	struct:FixedLayout
cellCount	hiro/extension/shared.hpp	/^  auto cellCount() const { return self().cellCount(); }$/;"	f	struct:HorizontalLayout
cellCount	hiro/extension/shared.hpp	/^  auto cellCount() const { return self().cellCount(); }$/;"	f	struct:TableLayout
cellCount	hiro/extension/shared.hpp	/^  auto cellCount() const { return self().cellCount(); }$/;"	f	struct:VerticalLayout
cells	hiro/core/shared.hpp	/^  auto cells() const { return self().cells(); }$/;"	f	struct:TableViewItem
cells	hiro/core/widget/table-view-item.hpp	/^    vector<sTableViewCell> cells;$/;"	m	struct:mTableViewItem::State
cells	hiro/extension/fixed-layout.hpp	/^    vector<FixedLayoutCell> cells;$/;"	m	struct:mFixedLayout::State
cells	hiro/extension/horizontal-layout.hpp	/^    vector<HorizontalLayoutCell> cells;$/;"	m	struct:mHorizontalLayout::State
cells	hiro/extension/table-layout.hpp	/^    vector<TableLayoutCell> cells;$/;"	m	struct:mTableLayout::State
cells	hiro/extension/vertical-layout.hpp	/^    vector<VerticalLayoutCell> cells;$/;"	m	struct:mVerticalLayout::State
center	higan/gb/apu/apu.hpp	/^    int16 center;$/;"	m	struct:APU::Sequencer
cfgr	higan/processor/gsu/registers.hpp	/^  CFGR cfgr;        \/\/config register$/;"	m	struct:Registers
cgMode	higan/pce/vdc/vdc.hpp	/^    bool   cgMode = 0;$/;"	m	struct:VDC::IO
cgb	higan/gb/system/system.hpp	/^    uint8 cgb[2048];$/;"	m	struct:System::BootROM
cgram	higan/fc/ppu/ppu.hpp	/^  uint8 cgram[32];$/;"	m	struct:PPU
cgram	higan/sfc/ppu/ppu.hpp	/^    uint8 cgram;$/;"	m	struct:PPU::Latches
cgram	higan/sfc/ppu/screen.hpp	/^  uint15 cgram[256];$/;"	m	struct:Screen
cgramAddress	higan/sfc/ppu/ppu.hpp	/^    uint8 cgramAddress;$/;"	m	struct:PPU::IO
cgramAddress	higan/sfc/ppu/ppu.hpp	/^    uint8 cgramAddress;$/;"	m	struct:PPU::Latches
cgramAddressLatch	higan/sfc/ppu/ppu.hpp	/^    uint1 cgramAddressLatch;$/;"	m	struct:PPU::IO
chained	higan/sfc/controller/justifier/justifier.hpp	/^  const bool chained;  \/\/true if the second justifier is attached to the first$/;"	v
change	ruby/input/input.hpp	/^  function<void (shared_pointer<nall::HID::Device> device, uint group, uint input, int16_t oldValue, int16_t newValue)> change;$/;"	m	struct:Input
channel	higan/md/ym2612/ym2612.hpp	/^      Channel& channel;$/;"	m	struct:Channel::Operator
channel	higan/pce/psg/psg.hpp	/^    uint3 channel;$/;"	m	struct:PSG::IO
channel	higan/pce/psg/psg.hpp	/^  } channel[6];$/;"	m	struct:PSG	typeref:struct:PSG::Channel
channel	nall/image.hpp	/^    channel(uint64_t mask, uint depth, uint shift) : _mask(mask), _depth(depth), _shift(shift) {$/;"	f	struct:nall::image::channel
channel	nall/image.hpp	/^  struct channel {$/;"	s	struct:nall::image
channel	ruby/audio/asio.hpp	/^  long channel;$/;"	m	struct:ASIOChannelInfo
channel1	higan/ws/apu/apu.hpp	/^  } channel1;$/;"	m	struct:APU	typeref:struct:APU::Channel1
channel2	higan/ws/apu/apu.hpp	/^  } channel2;$/;"	m	struct:APU	typeref:struct:APU::Channel2
channel3	higan/ws/apu/apu.hpp	/^  } channel3;$/;"	m	struct:APU	typeref:struct:APU::Channel3
channel4	higan/ws/apu/apu.hpp	/^  } channel4;$/;"	m	struct:APU	typeref:struct:APU::Channel4
channel5	higan/ws/apu/apu.hpp	/^  } channel5;$/;"	m	struct:APU	typeref:struct:APU::Channel5
channelGroup	ruby/audio/asio.hpp	/^  long channelGroup;$/;"	m	struct:ASIOChannelInfo
channelNum	ruby/audio/asio.hpp	/^  long channelNum;$/;"	m	struct:ASIOBufferInfo
channels	higan/audio/audio.hpp	/^  uint channels = 0;$/;"	m	struct:Emulator::Audio
channels	higan/audio/audio.hpp	/^  vector<Channel> channels;$/;"	m	struct:Emulator::Stream
channels	higan/md/ym2612/ym2612.hpp	/^  } channels[6];$/;"	v	typeref:struct:Channel
channels	higan/sfc/cpu/cpu.hpp	/^  } channels[8];$/;"	m	struct:CPU	typeref:struct:CPU::Channel
channels	ruby/audio/audio.hpp	/^  uint channels = 2;$/;"	m	struct:AudioDriver
channels	ruby/audio/xaudio2.cpp	/^    uint channels = 0;$/;"	m	struct:AudioXAudio2::Device	file:
character	higan/gba/ppu/ppu.hpp	/^      uint10 character;$/;"	m	struct:PPU::Background::Latch
character	higan/gba/ppu/ppu.hpp	/^    uint10 character;$/;"	m	struct:PPU::Object
character	higan/sfc/ppu/object.hpp	/^    uint8 character;$/;"	m	struct:OAM::Object
characterBase	higan/gba/ppu/ppu.hpp	/^      uint2 characterBase;$/;"	m	struct:PPU::Background::IO
chdend	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool chdend;$/;"	m	struct:SA1::MMIO
chdma_irqcl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool chdma_irqcl;$/;"	m	struct:SA1::MMIO
chdma_irqen	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool chdma_irqen;$/;"	m	struct:SA1::MMIO
chdma_irqfl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool chdma_irqfl;$/;"	m	struct:SA1::MMIO
cheat	higan/fc/system/system.cpp	/^Cheat cheat;$/;"	m	namespace:Famicom	file:
cheat	higan/gb/system/system.cpp	/^Cheat cheat;$/;"	m	namespace:GameBoy	file:
cheat	higan/md/system/system.cpp	/^Cheat cheat;$/;"	m	namespace:MegaDrive	file:
cheat	higan/ms/system/system.cpp	/^Cheat cheat;$/;"	m	namespace:MasterSystem	file:
cheat	higan/pce/system/system.cpp	/^Cheat cheat;$/;"	m	namespace:PCEngine	file:
cheat	higan/sfc/system/system.cpp	/^Cheat cheat;$/;"	m	namespace:SuperFamicom	file:
cheat	higan/ws/system/system.cpp	/^Cheat cheat;$/;"	m	namespace:WonderSwan	file:
cheatDatabase	higan/target-bsnes/tools/tools.cpp	/^CheatDatabase cheatDatabase;$/;"	v
cheatDatabase	higan/target-higan/tools/tools.cpp	/^unique_pointer<CheatDatabase> cheatDatabase;$/;"	v
cheatEditor	higan/target-bsnes/tools/tools.cpp	/^CheatEditor cheatEditor;$/;"	v
cheatWindow	higan/target-bsnes/tools/tools.cpp	/^CheatWindow cheatWindow;$/;"	v
cheats	higan/target-bsnes/settings/settings.hpp	/^    string cheats;$/;"	m	struct:Settings::Path
cheats	higan/target-bsnes/settings/settings.hpp	/^    } cheats;$/;"	m	struct:Settings::Emulator	typeref:struct:Settings::Emulator::Cheats
cheats	higan/target-bsnes/tools/tools.hpp	/^  vector<Cheat> cheats;$/;"	m	struct:CheatEditor
cheats	higan/target-higan/tools/tools.hpp	/^  Cheat cheats[Slots];$/;"	m	struct:CheatEditor
checkable	hiro/core/core.hpp	/^    bool checkable = false;$/;"	m	struct:hiro::mTreeViewItem::State
checkable	hiro/core/shared.hpp	/^  auto checkable() const { return self().checkable(); }$/;"	f	struct:TableViewCell
checkable	hiro/core/shared.hpp	/^  auto checkable() const { return self().checkable(); }$/;"	f	struct:TreeViewItem
checkable	hiro/core/widget/table-view-cell.hpp	/^    bool checkable = false;$/;"	m	struct:mTableViewCell::State
checkable	hiro/extension/shared.hpp	/^  auto checkable() const { return self().checkable(); }$/;"	f	struct:ListViewItem
checked	hiro/core/core.hpp	/^    bool checked = false;$/;"	m	struct:hiro::mCheckButton::State
checked	hiro/core/core.hpp	/^    bool checked = false;$/;"	m	struct:hiro::mCheckLabel::State
checked	hiro/core/core.hpp	/^    bool checked = false;$/;"	m	struct:hiro::mMenuCheckItem::State
checked	hiro/core/core.hpp	/^    bool checked = false;$/;"	m	struct:hiro::mMenuRadioItem::State
checked	hiro/core/core.hpp	/^    bool checked = false;$/;"	m	struct:hiro::mRadioButton::State
checked	hiro/core/core.hpp	/^    bool checked = false;$/;"	m	struct:hiro::mRadioLabel::State
checked	hiro/core/core.hpp	/^    bool checked = false;$/;"	m	struct:hiro::mTreeViewItem::State
checked	hiro/core/shared.hpp	/^  auto checked() const { return self().checked(); }$/;"	f	struct:CheckButton
checked	hiro/core/shared.hpp	/^  auto checked() const { return self().checked(); }$/;"	f	struct:CheckLabel
checked	hiro/core/shared.hpp	/^  auto checked() const { return self().checked(); }$/;"	f	struct:MenuCheckItem
checked	hiro/core/shared.hpp	/^  auto checked() const { return self().checked(); }$/;"	f	struct:MenuRadioItem
checked	hiro/core/shared.hpp	/^  auto checked() const { return self().checked(); }$/;"	f	struct:RadioButton
checked	hiro/core/shared.hpp	/^  auto checked() const { return self().checked(); }$/;"	f	struct:RadioLabel
checked	hiro/core/shared.hpp	/^  auto checked() const { return self().checked(); }$/;"	f	struct:TableViewCell
checked	hiro/core/shared.hpp	/^  auto checked() const { return self().checked(); }$/;"	f	struct:TreeViewItem
checked	hiro/core/widget/table-view-cell.hpp	/^    bool checked = false;$/;"	m	struct:mTableViewCell::State
checked	hiro/extension/shared.hpp	/^  auto checked() const { return self().checked(); }$/;"	f	struct:ListViewItem
checksum	nall/encode/zip.hpp	/^    uint32_t checksum;$/;"	m	struct:nall::Encode::ZIP::entry_t
checksum	nall/hash/crc16.hpp	/^  uint16_t checksum = 0;$/;"	m	struct:nall::Hash::CRC16
checksum	nall/hash/crc32.hpp	/^  uint32_t checksum = 0;$/;"	m	struct:nall::Hash::CRC32
checksum	nall/hash/crc64.hpp	/^  uint64_t checksum = 0;$/;"	m	struct:nall::Hash::CRC64
child	hiro/gtk/widget/tab-frame.hpp	/^    GtkWidget* child = nullptr;$/;"	m	struct:hiro::pTabFrame::Tab
chip	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  } chip;$/;"	m	struct:BSMemory	typeref:struct:BSMemory::Chip
chipselect	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint2 chipselect;$/;"	m	struct:EpsonRTC
chrAbus	higan/fc/cartridge/chip/mmc3.cpp	/^  uint16 chrAbus;$/;"	m	struct:MMC3	file:
chrAbus	higan/fc/cartridge/chip/mmc6.cpp	/^  uint16 chrAbus;$/;"	m	struct:MMC6	file:
chrAccess	higan/fc/cartridge/chip/mmc5.cpp	/^  uint16 chrAccess[4];$/;"	m	struct:MMC5	file:
chrActive	higan/fc/cartridge/chip/mmc5.cpp	/^  bool chrActive;$/;"	m	struct:MMC5	file:
chrBGBank	higan/fc/cartridge/chip/mmc5.cpp	/^  uint10 chrBGBank[4];      \/\/$5128-512b$/;"	m	struct:MMC5	file:
chrBank	higan/fc/cartridge/board/bandai-fcg.cpp	/^  uint8 chrBank[8];$/;"	m	struct:BandaiFCG	file:
chrBank	higan/fc/cartridge/board/nes-cnrom.cpp	/^  uint2 chrBank;$/;"	m	struct:NES_CNROM	file:
chrBank	higan/fc/cartridge/board/nes-fxrom.cpp	/^  uint5 chrBank[2][2];$/;"	v
chrBank	higan/fc/cartridge/board/nes-gxrom.cpp	/^  uint2 chrBank;$/;"	m	struct:NES_GxROM	file:
chrBank	higan/fc/cartridge/board/nes-pxrom.cpp	/^  uint5 chrBank[2][2];$/;"	v
chrBank	higan/fc/cartridge/board/sunsoft-5b.cpp	/^  uint8 chrBank[8];$/;"	m	struct:Sunsoft5B	file:
chrBank	higan/fc/cartridge/chip/mmc1.cpp	/^  uint5 chrBank[2];$/;"	m	struct:MMC1	file:
chrBank	higan/fc/cartridge/chip/mmc3.cpp	/^  uint8 chrBank[6];$/;"	m	struct:MMC3	file:
chrBank	higan/fc/cartridge/chip/mmc6.cpp	/^  uint8 chrBank[6];$/;"	m	struct:MMC6	file:
chrBank	higan/fc/cartridge/chip/vrc2.cpp	/^  uint8 chrBank[8];$/;"	m	struct:VRC2	file:
chrBank	higan/fc/cartridge/chip/vrc4.cpp	/^  uint8 chrBank[8];$/;"	m	struct:VRC4	file:
chrBank	higan/fc/cartridge/chip/vrc6.cpp	/^  uint8 chrBank[8];$/;"	m	struct:VRC6	file:
chrBank	higan/fc/cartridge/chip/vrc7.cpp	/^  uint8 chrBank[8];$/;"	m	struct:VRC7	file:
chrBankHi	higan/fc/cartridge/chip/mmc5.cpp	/^  uint2 chrBankHi;          \/\/$5130$/;"	m	struct:MMC5	file:
chrBankHi	higan/fc/cartridge/chip/vrc1.cpp	/^  bool chrBankHi[2];$/;"	m	struct:VRC1	file:
chrBankLo	higan/fc/cartridge/chip/vrc1.cpp	/^  uint4 chrBankLo[2];$/;"	m	struct:VRC1	file:
chrMode	higan/fc/cartridge/chip/mmc1.cpp	/^  bool chrMode;$/;"	m	struct:MMC1	file:
chrMode	higan/fc/cartridge/chip/mmc3.cpp	/^  bool chrMode;$/;"	m	struct:MMC3	file:
chrMode	higan/fc/cartridge/chip/mmc5.cpp	/^  uint2 chrMode;  \/\/$5101$/;"	m	struct:MMC5	file:
chrMode	higan/fc/cartridge/chip/mmc6.cpp	/^  bool chrMode;$/;"	m	struct:MMC6	file:
chrSpriteBank	higan/fc/cartridge/chip/mmc5.cpp	/^  uint10 chrSpriteBank[8];  \/\/$5120-5127$/;"	m	struct:MMC5	file:
chrono	nall/chrono.hpp	/^namespace nall { namespace chrono { namespace {$/;"	n	namespace:nall
chrram	higan/fc/cartridge/board/board.hpp	/^  Memory chrram;$/;"	m	struct:Board
chrrom	higan/fc/cartridge/board/board.hpp	/^  Memory chrrom;$/;"	m	struct:Board
chunkSize	nall/http/role.hpp	/^    int chunkSize       =   32 * 1024;  \/\/client, server$/;"	m	struct:nall::HTTP::Role::Settings
ciram	higan/fc/ppu/ppu.hpp	/^  uint8 ciram[2048];$/;"	m	struct:PPU
civ	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 civ;$/;"	m	struct:SA1::MMIO
ciwp	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 ciwp;$/;"	m	struct:SA1::MMIO
classID	ruby/audio/asio.cpp	/^    string classID;$/;"	m	struct:AudioASIO::Device	file:
client	nall/posix/shared-memory.hpp	/^  enum class mode : unsigned { server, client, inactive } _mode = mode::inactive;$/;"	m	class:nall::shared_memory::mode
clock	higan/emulator/thread.hpp	/^  inline auto clock() const { printf("get clock line %d.\\n", __LINE__); return _clock; }$/;"	f	struct:Emulator::Thread
clock	higan/gb/cartridge/mbc7/mbc7.hpp	/^    boolean clock;     \/\/CLK$/;"	m	struct:MBC7::EEPROM
clock	higan/gb/cpu/cpu.hpp	/^    uint22 clock;$/;"	m	struct:CPU::Status
clock	higan/gba/apu/apu.hpp	/^  uint clock;$/;"	m	struct:APU
clock	higan/gba/cpu/cpu.hpp	/^    natural clock;$/;"	m	struct:Context
clock	higan/md/psg/psg.hpp	/^    uint1  clock;$/;"	m	struct:PSG::Noise
clock	higan/md/ym2612/ym2612.hpp	/^    uint32 clock = 0;$/;"	m	struct:YM2612::Envelope
clock	higan/md/ym2612/ym2612.hpp	/^    uint32 clock = 0;$/;"	m	struct:YM2612::LFO
clock	higan/ms/psg/psg.hpp	/^    uint1   clock;$/;"	m	struct:PSG::Noise
clock	higan/pce/cpu/cpu.hpp	/^    uint  clock = 0;$/;"	m	struct:CPU::Timer
clock	higan/pce/vce/vce.hpp	/^    uint clock = 4;$/;"	m	struct:VCE::IO
clock	higan/ws/apu/apu.hpp	/^      uint clock;$/;"	m	struct:APU::Channel5::State
clock	higan/ws/apu/apu.hpp	/^      uint clock;$/;"	m	struct:APU::DMA::State
clockCount	higan/sfc/cpu/cpu.hpp	/^    uint clockCount = 0;$/;"	m	struct:CPU::Status
clockCounter	higan/sfc/smp/smp.hpp	/^    uint clockCounter = 0;$/;"	m	struct:SMP::IO
clocks	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint21 clocks;$/;"	m	struct:EpsonRTC
closable	hiro/core/shared.hpp	/^  auto closable() const { return self().closable(); }$/;"	f	struct:TabFrameItem
closable	hiro/core/widget/tab-frame-item.hpp	/^    bool closable = false;$/;"	m	struct:mTabFrameItem::State
close	hiro/gtk/widget/tab-frame.hpp	/^    GtkWidget* close = nullptr;$/;"	m	struct:hiro::pTabFrame::Tab
clr	higan/pce/controller/gamepad/gamepad.hpp	/^  bool clr;$/;"	v
clsr	higan/processor/gsu/registers.hpp	/^  bool clsr;        \/\/clock select register$/;"	m	struct:Registers
cm	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  CM  cm;$/;"	m	struct:Decompressor
cmeg	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 cmeg;$/;"	m	struct:SA1::MMIO
cmode	nall/decode/zip.hpp	/^    uint cmode;  \/\/0 = uncompressed, 8 = deflate$/;"	m	struct:nall::Decode::ZIP::File
cnv	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 cnv;$/;"	m	struct:SA1::MMIO
co_active	libco/amd64.c	/^cothread_t co_active() {$/;"	f
co_active	libco/arm.c	/^cothread_t co_active() {$/;"	f
co_active	libco/fiber.c	/^cothread_t co_active() {$/;"	f
co_active	libco/ppc.c	/^cothread_t co_active() {$/;"	f
co_active	libco/sjlj.c	/^cothread_t co_active() {$/;"	f
co_active	libco/ucontext.c	/^cothread_t co_active() {$/;"	f
co_active	libco/x86.c	/^cothread_t co_active() {$/;"	f
co_active_	libco/fiber.c	/^static thread_local cothread_t co_active_ = 0;$/;"	v	file:
co_active_buffer	libco/amd64.c	/^static thread_local long long co_active_buffer[64];$/;"	v	file:
co_active_buffer	libco/arm.c	/^static thread_local unsigned long co_active_buffer[64];$/;"	v	file:
co_active_buffer	libco/x86.c	/^static thread_local long co_active_buffer[64];$/;"	v	file:
co_active_handle	libco/amd64.c	/^static thread_local cothread_t co_active_handle = 0;$/;"	v	file:
co_active_handle	libco/arm.c	/^static thread_local cothread_t co_active_handle = 0;$/;"	v	file:
co_active_handle	libco/ppc.c	/^static thread_local cothread_t co_active_handle = 0;$/;"	v	file:
co_active_handle	libco/x86.c	/^static thread_local cothread_t co_active_handle = 0;$/;"	v	file:
co_create	libco/amd64.c	/^cothread_t co_create(unsigned int size, void (*entrypoint)(void)) {$/;"	f
co_create	libco/arm.c	/^cothread_t co_create(unsigned int size, void (*entrypoint)(void)) {$/;"	f
co_create	libco/fiber.c	/^cothread_t co_create(unsigned int heapsize, void (*coentry)(void)) {$/;"	f
co_create	libco/ppc.c	/^cothread_t co_create(unsigned int size, void (*entry_)(void)) {$/;"	f
co_create	libco/sjlj.c	/^cothread_t co_create(unsigned int size, void (*coentry)(void)) {$/;"	f
co_create	libco/ucontext.c	/^cothread_t co_create(unsigned int heapsize, void (*coentry)(void)) {$/;"	f
co_create	libco/x86.c	/^cothread_t co_create(unsigned int size, void (*entrypoint)(void)) {$/;"	f
co_create_	libco/ppc.c	/^static uint32_t* co_create_(unsigned size, uintptr_t entry) {$/;"	f	file:
co_delete	libco/amd64.c	/^void co_delete(cothread_t handle) {$/;"	f
co_delete	libco/arm.c	/^void co_delete(cothread_t handle) {$/;"	f
co_delete	libco/fiber.c	/^void co_delete(cothread_t cothread) {$/;"	f
co_delete	libco/ppc.c	/^void co_delete(cothread_t t) {$/;"	f
co_delete	libco/sjlj.c	/^void co_delete(cothread_t cothread) {$/;"	f
co_delete	libco/ucontext.c	/^void co_delete(cothread_t cothread) {$/;"	f
co_delete	libco/x86.c	/^void co_delete(cothread_t handle) {$/;"	f
co_init	libco/amd64.c	/^  static void co_init() {$/;"	f	file:
co_init	libco/arm.c	/^static void co_init() {$/;"	f	file:
co_init	libco/x86.c	/^  static void co_init() {$/;"	f	file:
co_init_	libco/ppc.c	/^static void co_init_(void) {$/;"	f	file:
co_primary	libco/sjlj.c	/^static thread_local cothread_struct co_primary;$/;"	v	file:
co_primary	libco/ucontext.c	/^static thread_local ucontext_t co_primary;$/;"	v	file:
co_running	libco/sjlj.c	/^static thread_local cothread_struct* co_running = 0;$/;"	v	file:
co_running	libco/ucontext.c	/^static thread_local ucontext_t* co_running = 0;$/;"	v	file:
co_swap	libco/amd64.c	/^static void (*co_swap)(cothread_t, cothread_t) = 0;$/;"	v	file:
co_swap	libco/arm.c	/^static void (*co_swap)(cothread_t, cothread_t) = 0;$/;"	v	file:
co_swap	libco/x86.c	/^static void (fastcall *co_swap)(cothread_t, cothread_t) = 0;$/;"	v	file:
co_swap_function	libco/amd64.c	/^  static const unsigned char co_swap_function[4096] = {$/;"	v	file:
co_swap_function	libco/arm.c	/^static const unsigned long co_swap_function[1024] = {$/;"	v	file:
co_swap_function	libco/x86.c	/^static const unsigned char co_swap_function[4096] = {$/;"	v	file:
co_switch	libco/amd64.c	/^void co_switch(cothread_t handle) {$/;"	f
co_switch	libco/arm.c	/^void co_switch(cothread_t handle) {$/;"	f
co_switch	libco/fiber.c	/^void co_switch(cothread_t cothread) {$/;"	f
co_switch	libco/ppc.c	/^void co_switch(cothread_t t) {$/;"	f
co_switch	libco/sjlj.c	/^void co_switch(cothread_t cothread) {$/;"	f
co_switch	libco/ucontext.c	/^void co_switch(cothread_t cothread) {$/;"	f
co_switch	libco/x86.c	/^void co_switch(cothread_t handle) {$/;"	f
co_thunk	libco/fiber.c	/^static void __stdcall co_thunk(void* coentry) {$/;"	f	file:
cocoa	hiro/core/application.hpp	/^    } cocoa;$/;"	m	struct:Application::State	typeref:struct:Application::State::Cocoa
cocoaAction	hiro/cocoa/action/action.hpp	/^  NSMenuItem* cocoaAction = nullptr;$/;"	m	struct:hiro::pAction
cocoaButton	hiro/cocoa/widget/button.hpp	/^  CocoaButton* cocoaButton = nullptr;$/;"	m	struct:hiro::pButton
cocoaCanvas	hiro/cocoa/widget/canvas.hpp	/^  CocoaCanvas* cocoaCanvas = nullptr;$/;"	m	struct:hiro::pCanvas
cocoaCheckButton	hiro/cocoa/widget/check-button.hpp	/^  CocoaCheckButton* cocoaCheckButton = nullptr;$/;"	m	struct:hiro::pCheckButton
cocoaCheckLabel	hiro/cocoa/widget/check-label.hpp	/^  CocoaCheckLabel* cocoaCheckLabel = nullptr;$/;"	m	struct:hiro::pCheckLabel
cocoaComboButton	hiro/cocoa/widget/combo-button.hpp	/^  CocoaComboButton* cocoaComboButton = nullptr;$/;"	m	struct:hiro::pComboButton
cocoaConsole	hiro/cocoa/widget/console.hpp	/^  CocoaConsole* cocoaConsole = nullptr;$/;"	m	struct:hiro::pConsole
cocoaDelegate	hiro/cocoa/application.cpp	/^CocoaDelegate* cocoaDelegate = nullptr;$/;"	v
cocoaFrame	hiro/cocoa/widget/frame.hpp	/^  CocoaFrame* cocoaFrame = nullptr;$/;"	m	struct:hiro::pFrame
cocoaHexEdit	hiro/cocoa/widget/hex-edit.hpp	/^  CocoaHexEdit* cocoaHexEdit = nullptr;$/;"	m	struct:hiro::pHexEdit
cocoaHorizontalScrollBar	hiro/cocoa/widget/horizontal-scroll-bar.hpp	/^  CocoaHorizontalScrollBar* cocoaHorizontalScrollBar = nullptr;$/;"	m	struct:hiro::pHorizontalScrollBar
cocoaHorizontalSlider	hiro/cocoa/widget/horizontal-slider.hpp	/^  CocoaHorizontalSlider* cocoaHorizontalSlider = nullptr;$/;"	m	struct:hiro::pHorizontalSlider
cocoaLabel	hiro/cocoa/widget/label.hpp	/^  CocoaLabel* cocoaLabel = nullptr;$/;"	m	struct:hiro::pLabel
cocoaLineEdit	hiro/cocoa/widget/line-edit.hpp	/^  CocoaLineEdit* cocoaLineEdit = nullptr;$/;"	m	struct:hiro::pLineEdit
cocoaMenu	hiro/cocoa/action/menu.hpp	/^  CocoaMenu* cocoaMenu = nullptr;$/;"	m	struct:hiro::pMenu
cocoaMenuCheckItem	hiro/cocoa/action/menu-check-item.hpp	/^  CocoaMenuCheckItem* cocoaMenuCheckItem = nullptr;$/;"	m	struct:hiro::pMenuCheckItem
cocoaMenuItem	hiro/cocoa/action/menu-item.hpp	/^  CocoaMenuItem* cocoaMenuItem = nullptr;$/;"	m	struct:hiro::pMenuItem
cocoaMenuRadioItem	hiro/cocoa/action/menu-radio-item.hpp	/^  CocoaMenuRadioItem* cocoaMenuRadioItem = nullptr;$/;"	m	struct:hiro::pMenuRadioItem
cocoaProgressBar	hiro/cocoa/widget/progress-bar.hpp	/^  CocoaProgressBar* cocoaProgressBar = nullptr;$/;"	m	struct:hiro::pProgressBar
cocoaRadioButton	hiro/cocoa/widget/radio-button.hpp	/^  CocoaRadioButton* cocoaRadioButton = nullptr;$/;"	m	struct:hiro::pRadioButton
cocoaRadioLabel	hiro/cocoa/widget/radio-label.hpp	/^  CocoaRadioLabel* cocoaRadioLabel = nullptr;$/;"	m	struct:hiro::pRadioLabel
cocoaSeparator	hiro/cocoa/action/menu-separator.hpp	/^  NSMenuItem* cocoaSeparator = nullptr;$/;"	m	struct:hiro::pMenuSeparator
cocoaTabFrame	hiro/cocoa/widget/tab-frame.hpp	/^  CocoaTabFrame* cocoaTabFrame = nullptr;$/;"	m	struct:hiro::pTabFrame
cocoaTabFrameItem	hiro/cocoa/widget/tab-frame-item.hpp	/^  CocoaTabFrameItem* cocoaTabFrameItem = nullptr;$/;"	m	struct:hiro::pTabFrameItem
cocoaTableView	hiro/cocoa/widget/table-view.hpp	/^  CocoaTableView* cocoaTableView = nullptr;$/;"	m	struct:hiro::pTableView
cocoaTextEdit	hiro/cocoa/widget/text-edit.hpp	/^  CocoaTextEdit* cocoaTextEdit = nullptr;$/;"	m	struct:hiro::pTextEdit
cocoaTimer	hiro/cocoa/timer.hpp	/^  CocoaTimer* cocoaTimer = nullptr;$/;"	m	struct:hiro::pTimer
cocoaVerticalScrollBar	hiro/cocoa/widget/vertical-scroll-bar.hpp	/^  CocoaVerticalScrollBar* cocoaVerticalScrollBar = nullptr;$/;"	m	struct:hiro::pVerticalScrollBar
cocoaVerticalSlider	hiro/cocoa/widget/vertical-slider.hpp	/^  CocoaVerticalSlider* cocoaVerticalSlider = nullptr;$/;"	m	struct:hiro::pVerticalSlider
cocoaView	hiro/cocoa/widget/widget.hpp	/^  NSView* cocoaView = nullptr;$/;"	m	struct:hiro::pWidget
cocoaViewport	hiro/cocoa/widget/viewport.hpp	/^  CocoaViewport* cocoaViewport = nullptr;$/;"	m	struct:hiro::pViewport
cocoaWindow	hiro/cocoa/window.hpp	/^  CocoaWindow* cocoaWindow = nullptr;$/;"	m	struct:hiro::pWindow
code	higan/ms/vdp/vdp.hpp	/^    uint2 code;$/;"	m	struct:VDP::IO
code	higan/target-bsnes/tools/tools.hpp	/^  string code;$/;"	m	struct:Cheat
code	higan/target-higan/tools/tools.hpp	/^    string code;$/;"	m	struct:CheatEditor::Cheat
code	nall/run.hpp	/^  int code = EXIT_FAILURE;$/;"	m	struct:nall::execute_result_t
code	ruby/input/joypad/udev.cpp	/^    int code = 0;$/;"	m	struct:InputJoypadUdev::JoypadInput	file:
code	ruby/input/keyboard/rawinput.cpp	/^    uint16_t code;$/;"	m	struct:InputKeyboardRawInput::Key	file:
codeNumber	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^      uint8 codeNumber;$/;"	m	struct:Decompressor::PEM::State
codeNumber	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    const uint8 codeNumber;$/;"	m	struct:Decompressor::BG
codes	higan/emulator/cheat.hpp	/^  vector<Code> codes;$/;"	m	struct:Emulator::Cheat
codes	higan/md/cartridge/cartridge.hpp	/^    } codes[5];$/;"	m	struct:Cartridge::GameGenie	typeref:struct:Cartridge::GameGenie::Code
codes	higan/target-higan/tools/tools.hpp	/^  vector<string> codes;$/;"	m	struct:CheatDatabase
coentry	libco/sjlj.c	/^  void (*coentry)(void);$/;"	m	struct:__anon28	file:
col	higan/sfc/ppu/window.hpp	/^    } col;$/;"	m	struct:Window::IO	typeref:struct:Window::IO::Color
color	higan/gb/ppu/ppu.hpp	/^    uint16 color;$/;"	m	struct:PPU::Pixel
color	higan/gba/ppu/ppu.hpp	/^    uint15 color;$/;"	m	struct:PPU::Pixel
color	higan/md/vdp/vdp.hpp	/^    uint6 color;$/;"	m	struct:VDP::Pixel
color	higan/ms/vdp/vdp.hpp	/^      uint4 color;$/;"	m	struct:VDP::Background::Output
color	higan/ms/vdp/vdp.hpp	/^      uint4 color;$/;"	m	struct:VDP::Sprite::Output
color	higan/pce/vdc/vdc.hpp	/^    uint4 color;$/;"	m	struct:VDC::Background
color	higan/pce/vdc/vdc.hpp	/^    uint4 color;$/;"	m	struct:VDC::Sprite
color	higan/sfc/ppu/screen.hpp	/^      uint15 color;$/;"	m	struct:Screen::Math::Screen
color	higan/ws/ppu/ppu.hpp	/^      uint3 color[4];$/;"	m	struct:PPU::Registers::Palette
color	higan/ws/ppu/ppu.hpp	/^    uint12 color;$/;"	m	struct:PPU::Pixel
color	higan/ws/system/system.hpp	/^    uint1 color;$/;"	m	struct:System::Registers
color	hiro/core/core.hpp	/^    Color color;$/;"	m	struct:hiro::mCanvas::State
color	hiro/core/shared.hpp	/^  auto color() const { return self().color(); }$/;"	f	struct:Canvas
color	nall/terminal.hpp	/^namespace color {$/;"	n	namespace:nall::terminal
colorBleed	higan/video/video.hpp	/^    bool colorBleed = false;$/;"	m	struct:Emulator::Video::Effects
colorBlue	higan/sfc/ppu/screen.hpp	/^    uint5 colorBlue;$/;"	m	struct:Screen::IO
colorEmulation	higan/sfc/interface/configuration.hpp	/^    bool colorEmulation = true;$/;"	m	struct:Configuration::Video
colorEnable	higan/sfc/ppu/screen.hpp	/^      bool colorEnable;$/;"	m	struct:Screen::IO::Layer
colorEnable	higan/sfc/ppu/screen.hpp	/^      bool colorEnable;$/;"	m	struct:Screen::Math::Screen
colorEnable	higan/sfc/ppu/window.hpp	/^      bool colorEnable;$/;"	m	struct:Window::Output::Pixel
colorGreen	higan/sfc/ppu/screen.hpp	/^    uint5 colorGreen;$/;"	m	struct:Screen::IO
colorHalve	higan/sfc/ppu/screen.hpp	/^    bool colorHalve;$/;"	m	struct:Screen::IO
colorHalve	higan/sfc/ppu/screen.hpp	/^    bool colorHalve;$/;"	m	struct:Screen::Math
colorMode	higan/gba/ppu/ppu.hpp	/^      uint1 colorMode;$/;"	m	struct:PPU::Background::IO
colorMode	higan/sfc/ppu/screen.hpp	/^    bool colorMode;$/;"	m	struct:Screen::IO
colorRed	higan/sfc/ppu/screen.hpp	/^    uint5 colorRed;$/;"	m	struct:Screen::IO
colorTableAddress	higan/ms/vdp/vdp.hpp	/^    uint8 colorTableAddress;$/;"	m	struct:VDP::IO
colorType	nall/decode/png.hpp	/^    uint colorType;$/;"	m	struct:nall::Decode::PNG::Info
colorburst	higan/ms/system/system.hpp	/^    double colorburst = Emulator::Constants::Colorburst::NTSC;$/;"	m	struct:System::Information
colorburst	higan/pce/system/system.hpp	/^    double colorburst = 0.0;$/;"	m	struct:System::Information
colormap	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  uint64 colormap;      \/\/most recently used list$/;"	m	struct:Decompressor	file:
colors	higan/emulator/interface.hpp	/^    uint colors = 0;$/;"	m	struct:Emulator::Interface
colors	higan/gba/ppu/ppu.hpp	/^    uint1  colors;  \/\/0 = 16, 1 = 256$/;"	m	struct:PPU::Object
colors	higan/video/video.hpp	/^  uint colors = 0;$/;"	m	struct:Emulator::Video
colors	hiro/core/core.hpp	/^    vector<Color> colors;$/;"	m	struct:hiro::Gradient::State
colr	higan/processor/gsu/registers.hpp	/^  uint8 colr;       \/\/color register$/;"	m	struct:Registers
column	hiro/core/shared.hpp	/^  auto column(uint position) const { return self().column(position); }$/;"	f	struct:TableView
column	hiro/extension/shared.hpp	/^  auto column(uint position) const { return self().column(position); }$/;"	f	struct:TableLayout
column	nall/database/odbc.hpp	/^      unsigned column;$/;"	m	struct:nall::Database::ODBC::Query::Binding
columnCount	hiro/core/shared.hpp	/^  auto columnCount() const { return self().columnCount(); }$/;"	f	struct:TableView
columnCount	hiro/extension/shared.hpp	/^  auto columnCount() const { return self().columnCount(); }$/;"	f	struct:TableLayout
columns	hiro/core/core.hpp	/^    uint columns = 16;$/;"	m	struct:hiro::mHexEdit::State
columns	hiro/core/shared.hpp	/^  auto columns() const { return self().columns(); }$/;"	f	struct:HexEdit
columns	hiro/core/shared.hpp	/^  auto columns() const { return self().columns(); }$/;"	f	struct:TableView
columns	hiro/core/widget/table-view.hpp	/^    vector<sTableViewColumn> columns;$/;"	m	struct:mTableView::State
columns	hiro/extension/table-layout.hpp	/^    vector<TableLayoutColumn> columns;$/;"	m	struct:mTableLayout::State
command	higan/md/vdp/vdp.hpp	/^    uint6  command;$/;"	m	struct:VDP::IO
command	higan/ws/cartridge/cartridge.hpp	/^    uint8 command;$/;"	m	struct:Cartridge::RTC
commandPending	higan/md/vdp/vdp.hpp	/^    uint1  commandPending;$/;"	m	struct:VDP::IO
comp	higan/emulator/cheat.hpp	/^    maybe<uint> comp;$/;"	m	struct:Emulator::Cheat::Code
compatible	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  } compatible;$/;"	m	struct:BSMemory	typeref:struct:BSMemory::Compatible
compile	nall/GNUmakefile	/^compile = \\$/;"	m
compiler	nall/GNUmakefile	/^    compiler := clang++$/;"	m
compiler	nall/GNUmakefile	/^    compiler := g++$/;"	m
compiler	nall/GNUmakefile	/^    compiler := g++49$/;"	m
compiler.c	nall/GNUmakefile	/^compiler.c      = $(compiler) -x c -std=c11$/;"	m
compiler.cpp	nall/GNUmakefile	/^    compiler.cpp = $(compiler) -x c++ -std=gnu++14$/;"	m
compiler.cpp	nall/GNUmakefile	/^compiler.cpp    = $(compiler) -x c++ -std=c++14$/;"	m
compiler.objc	nall/GNUmakefile	/^compiler.objc   = $(compiler) -x objective-c -std=c11$/;"	m
compiler.objcpp	nall/GNUmakefile	/^compiler.objcpp = $(compiler) -x objective-c++ -std=c++14$/;"	m
components	genius/genius.hpp	/^  vector<Component> components;$/;"	m	struct:Game
compression	nall/beat/archive/container.hpp	/^  } compression;$/;"	m	struct:nall::Beat::Archive::Container	typeref:struct:nall::Beat::Archive::Container::Compression
compression	nall/beat/archive/node.hpp	/^  } compression;$/;"	m	struct:nall::Beat::Archive::Node	typeref:struct:nall::Beat::Archive::Node::Compression
compressionMethod	nall/decode/png.hpp	/^    uint compressionMethod;$/;"	m	struct:nall::Decode::PNG::Info
condition	higan/gba/cpu/cpu.hpp	/^    uint1 condition;$/;"	m	struct:Keypad
configuration	higan/sfc/interface/configuration.cpp	/^Configuration configuration;$/;"	v
connectionLimit	nall/http/role.hpp	/^    int connectionLimit =    1 * 1024;  \/\/server$/;"	m	struct:nall::HTTP::Role::Settings
console	hiro/cocoa/widget/console.hpp	/^  Console& console;$/;"	m	struct:hiro::pConsole
console	hiro/qt/platform.hpp	/^  Console& console;$/;"	m	struct:hiro::pConsole
const_iterator	nall/set.hpp	/^    const_iterator(const set& source, uint position) : base_iterator(source, position) {}$/;"	f	struct:nall::set::const_iterator
const_iterator	nall/set.hpp	/^  struct const_iterator : base_iterator {$/;"	s	struct:nall::set
constructor	hiro/cocoa/widget/console.cpp	/^void pConsole::constructor() {$/;"	f	class:hiro::pConsole
constructor	hiro/cocoa/widget/hex-edit.cpp	/^void pHexEdit::constructor() {$/;"	f	class:hiro::pHexEdit
container	hiro/gtk/widget/hex-edit.hpp	/^  GtkWidget* container = nullptr;$/;"	m	struct:hiro::pHexEdit
container	hiro/gtk/widget/tab-frame.hpp	/^    GtkWidget* container = nullptr;$/;"	m	struct:hiro::pTabFrame::Tab
container	nall/any.hpp	/^  placeholder* container = nullptr;$/;"	m	struct:nall::any
container	nall/function.hpp	/^    virtual auto copy() const -> container* = 0;$/;"	m	struct:nall::R::container
container	nall/function.hpp	/^  struct container {$/;"	s	struct:nall::R
content	genius/genius.hpp	/^  string content;$/;"	m	struct:Memory
content	higan/emulator/game.hpp	/^    string content;$/;"	m	struct:Emulator::Game::Memory
content	icarus/heuristics/heuristics.hpp	/^  auto& content(string content) { _content = content; return *this; }$/;"	f	struct:Heuristics::Memory
context	higan/gba/cpu/cpu.hpp	/^  } context;$/;"	v	typeref:struct:Context
context	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  } context[5][15];     \/\/not all 75 contexts exists; this simplifies the code$/;"	m	struct:Decompressor	typeref:struct:Decompressor::Context	file:
context	libco/sjlj.c	/^  sigjmp_buf context;$/;"	m	struct:__anon28	file:
context	nall/thread.hpp	/^  struct context {$/;"	s	struct:nall::thread
context	ruby/audio/audio.hpp	/^  uintptr context = 0;$/;"	m	struct:AudioDriver
context	ruby/input/input.hpp	/^  uintptr context = 0;$/;"	m	struct:InputDriver
context	ruby/input/joypad/directinput.cpp	/^  LPDIRECTINPUT8 context = nullptr;$/;"	m	struct:InputJoypadDirectInput	file:
context	ruby/input/joypad/udev.cpp	/^  udev* context = nullptr;$/;"	m	struct:InputJoypadUdev	file:
context	ruby/video/video.hpp	/^  uintptr context = 0;$/;"	m	struct:VideoDriver
contextBitsInfo	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    uint8 contextBitsInfo;$/;"	m	struct:Decompressor::CM
contextInfo	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    } contextInfo[32];$/;"	m	struct:Decompressor::PEM	typeref:struct:Decompressor::PEM::ContextInfo
control	higan/md/controller/controller.hpp	/^  uint8 control;$/;"	m	struct:ControllerPort
controlData	higan/ms/vdp/vdp.hpp	/^    uint16 controlData;$/;"	m	struct:VDP::IO
controlLatch	higan/ms/vdp/vdp.hpp	/^    bool controlLatch = 0;$/;"	m	struct:VDP::IO
controllerPort	higan/pce/controller/controller.cpp	/^ControllerPort controllerPort;$/;"	m	namespace:PCEngine	file:
controllerPort1	higan/fc/controller/controller.cpp	/^ControllerPort controllerPort1;$/;"	m	namespace:Famicom	file:
controllerPort1	higan/md/controller/controller.cpp	/^ControllerPort controllerPort1;$/;"	m	namespace:MegaDrive	file:
controllerPort1	higan/ms/controller/controller.cpp	/^ControllerPort controllerPort1;$/;"	m	namespace:MasterSystem	file:
controllerPort1	higan/sfc/controller/controller.cpp	/^ControllerPort controllerPort1;$/;"	m	namespace:SuperFamicom	file:
controllerPort2	higan/fc/controller/controller.cpp	/^ControllerPort controllerPort2;$/;"	m	namespace:Famicom	file:
controllerPort2	higan/md/controller/controller.cpp	/^ControllerPort controllerPort2;$/;"	m	namespace:MegaDrive	file:
controllerPort2	higan/ms/controller/controller.cpp	/^ControllerPort controllerPort2;$/;"	m	namespace:MasterSystem	file:
controllerPort2	higan/sfc/controller/controller.cpp	/^ControllerPort controllerPort2;$/;"	m	namespace:SuperFamicom	file:
cookie	nall/http/request.hpp	/^  Variables cookie;$/;"	m	struct:nall::HTTP::Request
coprocessors	higan/sfc/cpu/cpu.hpp	/^  vector<Thread*> coprocessors;$/;"	m	struct:CPU
coprocessors	higan/sfc/interface/configuration.hpp	/^    } coprocessors;$/;"	m	struct:Configuration::Hacks	typeref:struct:Configuration::Hacks::Coprocessors
coprocessors	higan/target-bsnes/settings/settings.hpp	/^      } coprocessors;$/;"	m	struct:Settings::Emulator::Hack	typeref:struct:Settings::Emulator::Hack::Coprocessors
copy	nall/string/markup/xml.hpp	/^  inline void copy(string& target, const char* source, uint length) {$/;"	f	struct:nall::XML::ManagedNode
cores	higan/GNUmakefile	/^  cores := fc sfc ms md pce gb gba ws$/;"	m
cores	higan/GNUmakefile	/^  cores := sfc gb gba$/;"	m
cothread_struct	libco/sjlj.c	/^} cothread_struct;$/;"	t	typeref:struct:__anon28	file:
cothread_t	libco/libco.h	/^typedef void* cothread_t;$/;"	t
count	higan/gb/cartridge/mbc7/mbc7.hpp	/^      uint32 count;$/;"	m	struct:MBC7::EEPROM::ShiftRegister
count	higan/sfc/ppu-fast/line.cpp	/^uint PPU::Line::count = 0;$/;"	m	class:PPU::Line	file:
count	nall/decode/inflate.hpp	/^  short* count;$/;"	m	struct:nall::Decode::puff::huffman
count	nall/hashset.hpp	/^  uint count = 0;   \/\/number of objects inside of the pool$/;"	m	struct:nall::hashset
count	ruby/audio/asio.cpp	/^    std::atomic<uint16_t> count;$/;"	m	struct:AudioASIO::Queue	file:
count	ruby/audio/wasapi.cpp	/^    uint16_t count;$/;"	m	struct:AudioWASAPI::Queue	file:
counter	higan/fc/apu/apu.hpp	/^    uint2 counter;$/;"	m	struct:APU::FrameCounter
counter	higan/fc/apu/apu.hpp	/^    uint8 counter;$/;"	m	struct:APU::Sweep
counter	higan/fc/cartridge/board/sunsoft-5b.cpp	/^    uint16 counter;  \/\/12-bit countdown + 4-bit phase$/;"	m	struct:Sunsoft5B::Pulse	file:
counter	higan/fc/controller/gamepad/gamepad.hpp	/^  uint counter = 0;$/;"	v
counter	higan/gb/apu/apu.hpp	/^    bool counter;$/;"	m	struct:APU::Noise
counter	higan/gb/apu/apu.hpp	/^    bool counter;$/;"	m	struct:APU::Square1
counter	higan/gb/apu/apu.hpp	/^    bool counter;$/;"	m	struct:APU::Square2
counter	higan/gb/apu/apu.hpp	/^    bool counter;$/;"	m	struct:APU::Wave
counter	higan/gba/apu/apu.hpp	/^    uint1 counter;$/;"	m	struct:APU::Noise
counter	higan/gba/apu/apu.hpp	/^    uint1 counter;$/;"	m	struct:APU::Square
counter	higan/gba/apu/apu.hpp	/^    uint1 counter;$/;"	m	struct:APU::Wave
counter	higan/md/controller/fighting-pad/fighting-pad.hpp	/^  uint3 counter;$/;"	v
counter	higan/md/psg/psg.hpp	/^    uint10 counter;$/;"	m	struct:PSG::Noise
counter	higan/md/psg/psg.hpp	/^    uint10 counter;$/;"	m	struct:PSG::Tone
counter	higan/md/ym2612/ym2612.hpp	/^    uint10 counter = 0;$/;"	m	struct:YM2612::TimerA
counter	higan/md/ym2612/ym2612.hpp	/^    uint8 counter = 0;$/;"	m	struct:YM2612::TimerB
counter	higan/ms/psg/psg.hpp	/^    uint10  counter;$/;"	m	struct:PSG::Noise
counter	higan/ms/psg/psg.hpp	/^    uint10 counter;$/;"	m	struct:PSG::Tone
counter	higan/sfc/controller/gamepad/gamepad.hpp	/^  uint counter;$/;"	v
counter	higan/sfc/controller/justifier/justifier.hpp	/^  uint counter;$/;"	v
counter	higan/sfc/controller/mouse/mouse.hpp	/^  uint counter;$/;"	v
counter	higan/sfc/controller/super-scope/super-scope.hpp	/^  uint counter;$/;"	v
counter	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 counter;$/;"	m	struct:SA1::Status
counter	higan/sfc/cpu/cpu.hpp	/^  } counter;$/;"	m	struct:CPU	typeref:struct:CPU::Counter
counter	higan/sfc/dsp/dsp.hpp	/^    int counter = 0;$/;"	m	struct:State
counter	higan/sfc/memory/memory.hpp	/^  uint24 counter[256];$/;"	m	struct:Bus
counter	nall/random.hpp	/^  uint counter = 0;$/;"	m	struct:nall::CSPRNG::XChaCha20
counter1	higan/sfc/controller/super-multitap/super-multitap.hpp	/^  uint counter1;$/;"	v
counter2	higan/sfc/controller/super-multitap/super-multitap.hpp	/^  uint counter2;$/;"	v
counterLatch	higan/md/vdp/vdp.hpp	/^    uint1 counterLatch;$/;"	m	struct:VDP::IO
counters	higan/sfc/ppu/ppu.hpp	/^    uint1 counters;$/;"	m	struct:PPU::Latches
cpsr	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    PSR cpsr;$/;"	m	struct:Processor
cpu	higan/fc/cpu/cpu.cpp	/^CPU cpu;$/;"	m	namespace:Famicom	file:
cpu	higan/gb/cpu/cpu.cpp	/^CPU cpu;$/;"	m	namespace:GameBoy	file:
cpu	higan/gba/cpu/cpu.cpp	/^CPU cpu;$/;"	m	namespace:GameBoyAdvance	file:
cpu	higan/md/cpu/cpu.cpp	/^CPU cpu;$/;"	m	namespace:MegaDrive	file:
cpu	higan/ms/cpu/cpu.cpp	/^CPU cpu;$/;"	m	namespace:MasterSystem	file:
cpu	higan/pce/cpu/cpu.cpp	/^CPU cpu;$/;"	m	namespace:PCEngine	file:
cpu	higan/sfc/cpu/cpu.cpp	/^CPU cpu;$/;"	m	namespace:SuperFamicom	file:
cpu	higan/sfc/cpu/cpu.hpp	/^    uint cpu = 0;$/;"	m	struct:CPU::Counter
cpu	higan/sfc/interface/configuration.hpp	/^    } cpu;$/;"	m	struct:Configuration::System	typeref:struct:Configuration::System::CPU
cpu	higan/ws/cpu/cpu.cpp	/^CPU cpu;$/;"	m	namespace:WonderSwan	file:
cpu0	higan/sfc/smp/smp.hpp	/^    uint8 cpu0;$/;"	m	struct:SMP::IO
cpu1	higan/sfc/smp/smp.hpp	/^    uint8 cpu1;$/;"	m	struct:SMP::IO
cpu2	higan/sfc/smp/smp.hpp	/^    uint8 cpu2;$/;"	m	struct:SMP::IO
cpu3	higan/sfc/smp/smp.hpp	/^    uint8 cpu3;$/;"	m	struct:SMP::IO
cpuCycleCounter	higan/fc/cartridge/chip/mmc5.cpp	/^  uint cpuCycleCounter;$/;"	m	struct:MMC5	file:
cpuFrequency	higan/sfc/system/system.hpp	/^    double cpuFrequency = Emulator::Constants::Colorburst::NTSC * 6.0;$/;"	m	struct:System::Information
cpu_irq	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool cpu_irq;$/;"	m	struct:SA1::MMIO
cpu_irqcl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool cpu_irqcl;$/;"	m	struct:SA1::MMIO
cpu_irqen	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool cpu_irqen;$/;"	m	struct:SA1::MMIO
cpu_irqfl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool cpu_irqfl;$/;"	m	struct:SA1::MMIO
cpu_ivsw	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool cpu_ivsw;$/;"	m	struct:SA1::MMIO
cpu_nvsw	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool cpu_nvsw;$/;"	m	struct:SA1::MMIO
cpuram	higan/sfc/coprocessor/superfx/superfx.hpp	/^  CPURAM cpuram;$/;"	m	struct:SuperFX
cpurom	higan/sfc/coprocessor/superfx/superfx.hpp	/^  CPUROM cpurom;$/;"	m	struct:SuperFX
cputoarm	higan/sfc/coprocessor/armdsp/registers.hpp	/^  Buffer cputoarm;$/;"	m	struct:Bridge
cram	higan/md/vdp/vdp.hpp	/^  } cram;$/;"	m	struct:VDP	typeref:struct:VDP::CRAM
cram	higan/ms/vdp/vdp.hpp	/^  uint8 cram[0x40];  \/\/MS = 0x20, GG = 0x40$/;"	m	struct:VDP
cram	higan/pce/vce/vce.hpp	/^  } cram;$/;"	m	struct:VCE	typeref:struct:VCE::CRAM
crash	libco/amd64.c	/^static void crash() {$/;"	f	file:
crash	libco/x86.c	/^static void crash() {$/;"	f	file:
crashed	higan/target-bsnes/settings/settings.hpp	/^    bool crashed = false;$/;"	m	struct:Settings::General
crc32	nall/decode/zip.hpp	/^    uint crc32;$/;"	m	struct:nall::Decode::ZIP::File
crc64	nall/random.hpp	/^  static const uint64_t crc64 = 0xc96c'5795'd787'0f42;$/;"	m	struct:nall::PRNG::LFSR
create	genius/genius.hpp	/^  bool create = true;$/;"	m	struct:GameWindow
create	genius/genius.hpp	/^  bool create = true;$/;"	m	struct:MemoryWindow
create	genius/genius.hpp	/^  bool create = true;$/;"	m	struct:OscillatorWindow
create	nall/inode.hpp	/^  enum class time : uint { create, modify, access };$/;"	m	class:nall::inode::time
created	nall/beat/archive/node.hpp	/^    string created;$/;"	m	struct:nall::Beat::Archive::Node::Timestamp
creating	libco/sjlj.c	/^static thread_local cothread_struct* creating;$/;"	v	file:
crv	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 crv;$/;"	m	struct:SA1::MMIO
cs	higan/processor/huc6280/huc6280.hpp	/^    uint8  cs;  \/\/code speed (3 = fast, 12 = slow)$/;"	m	struct:Processor::HuC6280::Registers
cs	higan/processor/v30mz/v30mz.hpp	/^    uint16_t cs;$/;"	m	struct:Processor::Registers
csize	nall/decode/zip.hpp	/^    uint csize;$/;"	m	struct:nall::Decode::ZIP::File
currentBitplane	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    uint8 currentBitplane;$/;"	m	struct:Decompressor::CM
currentSelection	hiro/gtk/widget/icon-view.hpp	/^  vector<unsigned> currentSelection;$/;"	m	struct:hiro::pIconView
currentSelection	hiro/gtk/widget/table-view.hpp	/^  vector<uint> currentSelection;$/;"	m	struct:hiro::pTableView
cursor	higan/sfc/controller/super-scope/super-scope.hpp	/^  bool cursor;$/;"	v
cursor	hiro/core/core.hpp	/^    Cursor cursor;$/;"	m	struct:hiro::mTextEdit::State
cursor	hiro/core/shared.hpp	/^  auto cursor() const { return self().cursor(); }$/;"	f	struct:SourceEdit
cursor	hiro/core/shared.hpp	/^  auto cursor() const { return self().cursor(); }$/;"	f	struct:TextEdit
cursor	hiro/core/widget/source-edit.hpp	/^    Cursor cursor;$/;"	m	struct:mSourceEdit::State
cutoffFrequency	nall/dsp/iir/biquad.hpp	/^  double cutoffFrequency;$/;"	m	struct:nall::DSP::IIR::Biquad
cutoffFrequency	nall/dsp/iir/one-pole.hpp	/^  double cutoffFrequency;$/;"	m	struct:nall::DSP::IIR::OnePole
cwen	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool cwen;$/;"	m	struct:SA1::MMIO
cx	higan/processor/v30mz/v30mz.hpp	/^    union { uint16_t cx; struct { uint8_t order_lsb2(cl, ch); }; };$/;"	m	union:Processor::Registers::__anon20
cy	higan/processor/gsu/registers.hpp	/^    BooleanBitField<uint16_t,  2> cy;      \/\/carry flag$/;"	m	union:SFR::__anon27
cycle	higan/fc/cartridge/chip/vrc6.cpp	/^    uint4 cycle;$/;"	m	struct:VRC6::Pulse	file:
cycle	higan/gb/apu/apu.hpp	/^  uint12 cycle;  \/\/low 12-bits of clock counter$/;"	m	struct:APU
d	higan/processor/huc6280/huc6280.hpp	/^    bool d;  \/\/decimal mode$/;"	m	struct:Processor::HuC6280::Flags
d	higan/processor/mos6502/mos6502.hpp	/^    bool d;  \/\/decimal mode$/;"	m	struct:Processor::MOS6502::Flags
d	higan/processor/v30mz/v30mz.hpp	/^        BooleanBitField<uint16_t, 10> d;  \/\/direction$/;"	m	union:Processor::Registers::Flags::__anon26
d	higan/processor/wdc65816/wdc65816.hpp	/^    bool d;  \/\/decimal mode$/;"	m	struct:Processor::WDC65816::Flags
d	higan/processor/wdc65816/wdc65816.hpp	/^    uint16 d;$/;"	m	struct:Processor::WDC65816::Registers
dac	higan/fc/cartridge/board/sunsoft-5b.cpp	/^  int16 dac[16];$/;"	m	struct:Sunsoft5B	file:
dac	higan/md/ym2612/ym2612.hpp	/^  } dac;$/;"	m	struct:YM2612	typeref:struct:YM2612::DAC
dacEnable	higan/gb/apu/apu.hpp	/^    bool dacEnable;$/;"	m	struct:APU::Wave
dacLatch	higan/fc/apu/apu.hpp	/^    uint8 dacLatch;$/;"	m	struct:APU::DMC
dacenable	higan/gba/apu/apu.hpp	/^    uint1 dacenable;$/;"	m	struct:APU::Wave
data	higan/emulator/cheat.hpp	/^    uint data;$/;"	m	struct:Emulator::Cheat::Code
data	higan/fc/cartridge/board/board.hpp	/^    uint8_t* data = nullptr;$/;"	m	struct:Board::Memory
data	higan/gb/cartridge/cartridge.hpp	/^    uint8* data = nullptr;$/;"	m	struct:Cartridge::Memory
data	higan/gb/cartridge/mbc7/mbc7.hpp	/^    uint8 data[512];   \/\/uint8 was chosen solely for easier serialization and saving$/;"	m	struct:MBC7::EEPROM
data	higan/gb/memory/memory.hpp	/^  uint8* data = nullptr;$/;"	m	struct:Memory
data	higan/gb/ppu/ppu.hpp	/^    uint data = 0;$/;"	m	struct:PPU::Background
data	higan/gb/ppu/ppu.hpp	/^    uint data = 0;$/;"	m	struct:PPU::Sprite
data	higan/gba/cartridge/memory.hpp	/^  uint8* data;$/;"	m	struct:EEPROM
data	higan/gba/cartridge/memory.hpp	/^  uint8* data;$/;"	m	struct:FLASH
data	higan/gba/cartridge/memory.hpp	/^  uint8* data;$/;"	m	struct:MROM
data	higan/gba/cartridge/memory.hpp	/^  uint8* data;$/;"	m	struct:SRAM
data	higan/gba/cpu/cpu.hpp	/^    uint16 data[4];$/;"	m	struct:Serial
data	higan/gba/cpu/cpu.hpp	/^    uint32 data;$/;"	m	struct:DMA
data	higan/gba/system/system.hpp	/^  uint8* data = nullptr;$/;"	m	struct:BIOS
data	higan/md/cartridge/cartridge.hpp	/^      uint16 data;$/;"	m	struct:Cartridge::GameGenie::Code
data	higan/md/cartridge/cartridge.hpp	/^    uint16* data = nullptr;$/;"	m	struct:Cartridge::Memory
data	higan/ms/cartridge/cartridge.hpp	/^    uint8* data = nullptr;$/;"	m	struct:Cartridge::Memory
data	higan/pce/cartridge/cartridge.hpp	/^    uint8* data = nullptr;$/;"	m	struct:Cartridge::Memory
data	higan/pce/vce/vce.hpp	/^    uint9 data[0x200];$/;"	m	struct:VCE::CRAM
data	higan/pce/vdc/vdc.hpp	/^    uint16 data[0x100];$/;"	m	struct:VDC::SATB
data	higan/pce/vdc/vdc.hpp	/^    uint16 data[0x8000];$/;"	m	struct:VDC::VRAM
data	higan/pce/vdc/vdc.hpp	/^  uint9 data;$/;"	m	struct:VDC
data	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    uint32 data;$/;"	m	struct:Processor::GPR
data	higan/processor/gsu/registers.hpp	/^    uint16_t data = 0;$/;"	m	union:SFR::__anon27
data	higan/processor/gsu/registers.hpp	/^  uint16 data = 0;$/;"	m	struct:Register
data	higan/processor/gsu/registers.hpp	/^  uint8 data[8];$/;"	m	struct:PixelCache
data	higan/processor/v30mz/v30mz.hpp	/^        uint16_t data = 0;$/;"	m	union:Processor::Registers::Flags::__anon26
data	higan/sfc/coprocessor/armdsp/registers.hpp	/^    uint8 data;$/;"	m	struct:Bridge::Buffer
data	higan/sfc/coprocessor/icd/icd.hpp	/^    uint8 data[16];$/;"	m	struct:ICD::Packet
data	higan/sfc/memory/protectable.hpp	/^    uint8* data = nullptr;$/;"	m	struct:ProtectableMemory::__anon8
data	higan/sfc/memory/readable.hpp	/^    uint8* data = nullptr;$/;"	m	struct:ReadableMemory::__anon9
data	higan/sfc/memory/writable.hpp	/^    uint8* data = nullptr;$/;"	m	struct:WritableMemory::__anon10
data	higan/sfc/ppu/object.hpp	/^    uint32 data;$/;"	m	struct:Object::Tile
data	higan/sfc/ppu/ppu.hpp	/^    uint16 data[64 * 1024];$/;"	m	struct:PPU::VRAM
data	higan/target-bsnes/program/program.hpp	/^    const uint32* data = nullptr;$/;"	m	struct:Program::Screenshot
data	higan/target-bsnes/program/program.hpp	/^    vector<uint8_t> data;$/;"	m	struct:Program::SuperFamicom
data	higan/ws/apu/apu.hpp	/^      int8 data;$/;"	m	struct:APU::Channel5::State
data	higan/ws/cartridge/cartridge.hpp	/^    uint8* data = nullptr;$/;"	m	struct:Cartridge::Memory
data	hiro/core/shared.hpp	/^  auto data() { return self().data(); }$/;"	f	struct:Canvas
data	icarus/heuristics/bs-memory.cpp	/^  vector<uint8_t>& data;$/;"	m	struct:Heuristics::BSMemory	file:
data	icarus/heuristics/famicom.cpp	/^  vector<uint8_t>& data;$/;"	m	struct:Heuristics::Famicom	file:
data	icarus/heuristics/game-boy-advance.cpp	/^  vector<uint8_t>& data;$/;"	m	struct:Heuristics::GameBoyAdvance	file:
data	icarus/heuristics/game-boy.cpp	/^  vector<uint8_t>& data;$/;"	m	struct:Heuristics::GameBoy	file:
data	icarus/heuristics/game-gear.cpp	/^  vector<uint8_t>& data;$/;"	m	struct:Heuristics::GameGear	file:
data	icarus/heuristics/master-system.cpp	/^  vector<uint8_t>& data;$/;"	m	struct:Heuristics::MasterSystem	file:
data	icarus/heuristics/mega-drive.cpp	/^  vector<uint8_t>& data;$/;"	m	struct:Heuristics::MegaDrive	file:
data	icarus/heuristics/pc-engine.cpp	/^  vector<uint8_t>& data;$/;"	m	struct:Heuristics::PCEngine	file:
data	icarus/heuristics/sufami-turbo.cpp	/^  vector<uint8_t>& data;$/;"	m	struct:Heuristics::SufamiTurbo	file:
data	icarus/heuristics/super-famicom.cpp	/^  vector<uint8_t>& data;$/;"	m	struct:Heuristics::SuperFamicom	file:
data	icarus/heuristics/supergrafx.cpp	/^  vector<uint8_t>& data;$/;"	m	struct:Heuristics::SuperGrafx	file:
data	icarus/heuristics/wonderswan.cpp	/^  vector<uint8_t>& data;$/;"	m	struct:Heuristics::WonderSwan	file:
data	nall/decode/gzip.hpp	/^  uint8_t* data = nullptr;$/;"	m	struct:nall::Decode::GZIP
data	nall/decode/png.hpp	/^  uint8_t* data = nullptr;$/;"	m	struct:nall::Decode::PNG
data	nall/decode/zip.hpp	/^    const uint8_t* data;$/;"	m	struct:nall::Decode::ZIP::File
data	nall/image.hpp	/^  alwaysinline auto data() const { return _data; }$/;"	f	struct:nall::image
data	nall/image.hpp	/^  alwaysinline auto data() { return _data; }$/;"	f	struct:nall::image
data	nall/primitives.hpp	/^  bool data;$/;"	m	struct:nall::Boolean
data	nall/primitives.hpp	/^  type data;$/;"	m	struct:nall::Integer
data	nall/primitives.hpp	/^  type data;$/;"	m	struct:nall::Natural
data	nall/primitives.hpp	/^  type data;$/;"	m	struct:nall::Real
data	nall/varint.hpp	/^  uint64_t data;$/;"	m	struct:nall::VariadicNatural
data8	higan/gba/cpu/cpu.hpp	/^    uint8 data8;$/;"	m	struct:Serial
dataBusy	higan/sfc/coprocessor/msu1/msu1.hpp	/^    boolean dataBusy;$/;"	m	struct:IO
dataFile	higan/sfc/coprocessor/msu1/msu1.hpp	/^  vfs::shared::file dataFile;$/;"	m	struct:MSU1
dataIncrement	higan/md/vdp/vdp.hpp	/^    uint8 dataIncrement;$/;"	m	struct:VDP::IO
dataLength	higan/gb/cartridge/mbc7/mbc7.hpp	/^      uint32 dataLength;$/;"	m	struct:MBC7::EEPROM::InputShiftRegister
dataRAM	higan/processor/hg51b/hg51b.hpp	/^  uint8  dataRAM[3072];$/;"	m	struct:Processor::HG51B
dataRAM	higan/processor/upd96050/upd96050.hpp	/^  uint16 dataRAM[2048];$/;"	m	struct:Processor::uPD96050
dataROM	higan/processor/hg51b/hg51b.hpp	/^  uint24 dataROM[1024];$/;"	m	struct:Processor::HG51B
dataROM	higan/processor/upd96050/upd96050.hpp	/^  uint16 dataROM[2048];$/;"	m	struct:Processor::uPD96050
dataROM	higan/sfc/coprocessor/armdsp/armdsp.hpp	/^  uint8 dataROM[32 * 1024];$/;"	m	struct:ArmDSP
dataRead	higan/pce/vdc/vdc.hpp	/^    uint16 dataRead;$/;"	m	struct:VDC::VRAM
dataReadOffset	higan/sfc/coprocessor/msu1/msu1.hpp	/^    uint32 dataReadOffset;$/;"	m	struct:IO
dataSeekOffset	higan/sfc/coprocessor/msu1/msu1.hpp	/^    uint32 dataSeekOffset;$/;"	m	struct:IO
dataWrite	higan/pce/vdc/vdc.hpp	/^    uint16 dataWrite;$/;"	m	struct:VDC::VRAM
date	higan/target-bsnes/program/program.hpp	/^    uint64_t date;$/;"	m	struct:Program::State
day	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint9 day;$/;"	m	struct:MBC3::IO::RTC
day	higan/gb/cartridge/tama/tama.hpp	/^    uint8 day;       \/\/1 - 31$/;"	m	struct:TAMA::RTC
day	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  uint day;$/;"	m	struct:SharpRTC
dayCarry	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint1 dayCarry;$/;"	m	struct:MBC3::IO::RTC
dayhi	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint2 dayhi;$/;"	m	struct:EpsonRTC
daylo	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint4 daylo;$/;"	m	struct:EpsonRTC
dayram	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 dayram;$/;"	m	struct:EpsonRTC
daysInMonth	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  static const uint daysInMonth[12];$/;"	m	struct:SharpRTC
daysInMonth	higan/sfc/coprocessor/sharprtc/time.cpp	/^const uint SharpRTC::daysInMonth[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};$/;"	m	class:SharpRTC	file:
db	higan/processor/wdc65816/wdc65816.cpp	32;"	d	file:
db	higan/processor/wdc65816/wdc65816.cpp	91;"	d	file:
db	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint db;$/;"	m	struct:SA1::MMIO
dbmode	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool dbmode;$/;"	m	struct:SA1::MMIO
dcuAddress	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint23 dcuAddress;$/;"	m	struct:SPC7110
dcuMode	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint2 dcuMode;$/;"	m	struct:SPC7110
dcuOffset	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint dcuOffset;$/;"	m	struct:SPC7110
dcuPending	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  bool dcuPending;$/;"	m	struct:SPC7110
dcuTile	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 dcuTile[32];$/;"	m	struct:SPC7110
dd	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool dd;$/;"	m	struct:SA1::MMIO
dda	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint32 dda;$/;"	m	struct:SA1::MMIO
de	higan/processor/lr35902/lr35902.hpp	/^    Pair de;$/;"	m	struct:Processor::LR35902::Registers
de	higan/processor/z80/z80.hpp	/^    Pair de, de_;$/;"	m	struct:Processor::Z80::Registers
de_	higan/processor/z80/z80.hpp	/^    Pair de, de_;$/;"	m	struct:Processor::Z80::Registers
decayCounter	higan/fc/apu/apu.hpp	/^    uint8 decayCounter;$/;"	m	struct:APU::Envelope
decayRate	higan/md/ym2612/ym2612.hpp	/^        uint5  decayRate = 0;$/;"	m	struct:Channel::Operator::Envelope
decayVolume	higan/fc/apu/apu.hpp	/^    uint4 decayVolume;$/;"	m	struct:APU::Envelope
decimal	nall/macos/guard.hpp	12;"	d
decimal	nall/macos/guard.hpp	5;"	d
decode	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    Instruction decode;$/;"	m	struct:Pipeline
decompressor	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  Decompressor decompressor;$/;"	m	struct:SDD1
decompressor	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  Decompressor* decompressor;$/;"	m	struct:SPC7110
decrement	higan/fc/apu/apu.hpp	/^    bool decrement;$/;"	m	struct:APU::Sweep
defaultWindowProc	hiro/windows/widget/widget.hpp	/^  WindowProc defaultWindowProc = nullptr;$/;"	m	struct:hiro::pWidget
defocus	higan/target-bsnes/settings/settings.hpp	/^    string defocus = "Pause";$/;"	m	struct:Settings::Input
delayedSync	higan/sfc/interface/configuration.hpp	/^      bool delayedSync = false;$/;"	m	struct:Configuration::Hacks::Coprocessors
delayedSync	higan/target-bsnes/settings/settings.hpp	/^        bool delayedSync = true;$/;"	m	struct:Settings::Emulator::Hack::Coprocessors
delegate	hiro/core/object.hpp	/^  pObject* delegate = nullptr;  \/\/ 8$/;"	m	struct:mObject
delete	nall/GNUmakefile	/^    delete  = $(info Deleting $1 ...) @del \/q $(subst \/,\\,$1)$/;"	m
delete	nall/GNUmakefile	/^    delete  = $(info Deleting $1 ...) @rm -f $1$/;"	m
deleter	nall/shared-pointer.hpp	/^  function<void (void*)> deleter;$/;"	m	struct:nall::shared_pointer_manager
deleter	nall/unique-pointer.hpp	/^  function<auto (T*) -> void> deleter;$/;"	m	struct:nall::unique_pointer
delta	higan/md/ym2612/ym2612.hpp	/^        uint20 delta = 0;$/;"	m	struct:Channel::Operator::Phase
denominator	ruby/input/mouse/xlib.cpp	/^    int denominator = 0;$/;"	m	struct:InputMouseXlib::Mouse	file:
deprecated	ruby/ruby.cpp	5;"	d	file:
depth	higan/md/cartridge/cartridge.hpp	/^  const uint depth = 0;$/;"	m	struct:Cartridge
depth	higan/ws/system/system.hpp	/^    uint1 depth;$/;"	m	struct:System::Registers
depth	nall/image.hpp	/^    alwaysinline auto depth() const { return _depth; }$/;"	f	struct:nall::image::channel
depth	nall/image.hpp	/^  alwaysinline auto depth() const { return _depth; }$/;"	f	struct:nall::image
description	higan/target-higan/tools/tools.hpp	/^    string description;$/;"	m	struct:CheatEditor::Cheat
destructor	hiro/cocoa/widget/console.cpp	/^void pConsole::destructor() {$/;"	f	class:hiro::pConsole
destructor	hiro/cocoa/widget/hex-edit.cpp	/^void pHexEdit::destructor() {$/;"	f	class:hiro::pHexEdit
detour	nall/windows/detour.hpp	/^struct detour {$/;"	s	namespace:nall
detune	higan/md/ym2612/ym2612.hpp	/^      uint3 detune = 0;$/;"	m	struct:Channel::Operator
detunes	higan/md/ym2612/constants.cpp	/^const uint8_t YM2612::detunes[3][8] = {$/;"	m	class:YM2612	file:
detunes	higan/md/ym2612/ym2612.hpp	/^  static const uint8_t detunes[3][8];$/;"	v
device	higan/fc/controller/controller.hpp	/^  Controller* device = nullptr;$/;"	m	struct:ControllerPort
device	higan/md/controller/controller.hpp	/^  Controller* device = nullptr;$/;"	m	struct:ControllerPort
device	higan/ms/controller/controller.hpp	/^  Controller* device = nullptr;$/;"	m	struct:ControllerPort
device	higan/pce/controller/controller.hpp	/^  Controller* device = nullptr;$/;"	m	struct:ControllerPort
device	higan/sfc/controller/controller.hpp	/^  Controller* device = nullptr;$/;"	m	struct:ControllerPort
device	higan/sfc/controller/justifier/justifier.hpp	/^  const uint device;$/;"	v
device	higan/sfc/expansion/expansion.hpp	/^  Expansion* device = nullptr;$/;"	m	struct:ExpansionPort
device	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    uint16 device;$/;"	m	struct:BSMemory::Chip
device	higan/target-bsnes/input/input.hpp	/^    shared_pointer<HID::Device> device;$/;"	m	struct:InputMapping::Mapping
device	higan/target-bsnes/settings/settings.hpp	/^    string device;$/;"	m	struct:Settings::Audio
device	higan/target-higan/input/input.hpp	/^    shared_pointer<HID::Device> device;$/;"	m	struct:InputMapping::Mapping
device	nall/emulation/21fx.hpp	/^  serial device;$/;"	m	struct:FX
device	ruby/audio/audio.hpp	/^  string device = "Default";$/;"	m	struct:AudioDriver
device	ruby/input/joypad/directinput.cpp	/^    LPDIRECTINPUTDEVICE8 device = nullptr;$/;"	m	struct:InputJoypadDirectInput::Joypad	file:
device	ruby/input/joypad/directinput.cpp	/^  LPDIRECTINPUTDEVICE8 device = nullptr;$/;"	m	struct:InputJoypadDirectInput	file:
device	ruby/input/joypad/udev.cpp	/^    dev_t device = 0;$/;"	m	struct:InputJoypadUdev::Joypad	file:
deviceID	higan/target-bsnes/input/input.hpp	/^  uint deviceID = 0;$/;"	m	struct:InputMapping
deviceName	ruby/input/joypad/udev.cpp	/^    string deviceName;$/;"	m	struct:InputJoypadUdev::Joypad	file:
deviceNode	ruby/input/joypad/udev.cpp	/^    string deviceNode;$/;"	m	struct:InputJoypadUdev::Joypad	file:
devicePeriod	ruby/audio/wasapi.cpp	/^  REFERENCE_TIME devicePeriod = 0;$/;"	m	struct:AudioWASAPI	file:
devices	higan/target-bsnes/input/input.hpp	/^  vector<InputDevice> devices;$/;"	m	struct:InputPort
devices	higan/target-bsnes/input/input.hpp	/^  vector<shared_pointer<HID::Device>> devices;$/;"	m	struct:InputManager
devices	higan/target-higan/input/input.hpp	/^  vector<InputDevice> devices;$/;"	m	struct:InputPort
devices	higan/target-higan/input/input.hpp	/^  vector<shared_pointer<HID::Device>> devices;$/;"	m	struct:InputManager
devices	ruby/audio/asio.cpp	/^  vector<Device> devices;$/;"	m	struct:AudioASIO	file:
devices	ruby/audio/wasapi.cpp	/^  vector<Device> devices;$/;"	m	struct:AudioWASAPI	file:
devices	ruby/audio/xaudio2.cpp	/^  vector<Device> devices;$/;"	m	struct:AudioXAudio2	file:
devices	ruby/input/joypad/udev.cpp	/^  udev_list_entry* devices = nullptr;$/;"	m	struct:InputJoypadUdev	file:
devices	ruby/input/shared/rawinput.cpp	/^  vector<Device> devices;$/;"	m	struct:RawInput	file:
di	higan/processor/v30mz/v30mz.hpp	/^    uint16_t di;$/;"	m	struct:Processor::Registers
dictionaries	nall/locale.hpp	/^  vector<Dictionary> dictionaries;$/;"	m	struct:nall::Locale
dip	higan/sfc/coprocessor/dip/dip.cpp	/^DIP dip;$/;"	m	namespace:SuperFamicom	file:
direct	higan/pce/psg/psg.hpp	/^      uint1  direct;$/;"	m	struct:PSG::Channel::IO
directColor	higan/sfc/ppu/screen.hpp	/^    bool directColor;$/;"	m	struct:Screen::IO
directInputContext	ruby/input/windows.cpp	/^  LPDIRECTINPUT8 directInputContext = nullptr;$/;"	m	struct:InputWindows	file:
direction	higan/gba/apu/apu.hpp	/^    uint1 direction;$/;"	m	struct:APU::Envelope
direction	higan/gba/apu/apu.hpp	/^    uint1 direction;$/;"	m	struct:APU::Sweep
direction	higan/sfc/cpu/cpu.hpp	/^    uint1 direction = 1;$/;"	m	struct:CPU::Channel
direction	higan/ws/apu/apu.hpp	/^      uint1 direction;$/;"	m	struct:APU::DMA::Registers
directory	nall/directory.hpp	/^struct directory : inode {$/;"	s	namespace:nall
directory	nall/encode/zip.hpp	/^  vector<entry_t> directory;$/;"	m	struct:nall::Encode::ZIP
disable	higan/fc/cartridge/board/sunsoft-5b.cpp	/^    bool disable;$/;"	m	struct:Sunsoft5B::Pulse	file:
disable	higan/gba/cpu/cpu.hpp	/^    uint1 disable;$/;"	m	struct:Memory
disableExternal	higan/pce/cpu/cpu.hpp	/^    bool   disableExternal = 0;$/;"	m	struct:CPU::IRQ
disableTimer	higan/pce/cpu/cpu.hpp	/^    bool   disableTimer = 0;$/;"	m	struct:CPU::IRQ
disableVDC	higan/pce/cpu/cpu.hpp	/^    bool   disableVDC = 0;$/;"	m	struct:CPU::IRQ
dismissable	hiro/core/shared.hpp	/^  auto dismissable() const { return self().dismissable(); }$/;"	f	struct:Window
dismissable	hiro/core/window.hpp	/^    bool dismissable = false;$/;"	m	struct:mWindow::State
display	higan/sfc/ppu/ppu.hpp	/^  } display;$/;"	m	struct:PPU	typeref:struct:PPU::__anon15
display	hiro/gtk/application.hpp	/^    XlibDisplay* display = nullptr;$/;"	m	struct:hiro::pApplication::State
display	hiro/qt/application.hpp	/^    XlibDisplay* display = nullptr;$/;"	m	struct:hiro::pApplication::State
display	ruby/input/keyboard/xlib.cpp	/^  Display* display = nullptr;$/;"	m	struct:InputKeyboardXlib	file:
display	ruby/input/mouse/xlib.cpp	/^  Display* display = nullptr;$/;"	m	struct:InputMouseXlib	file:
displayBrightness	higan/sfc/ppu/ppu.hpp	/^    uint4 displayBrightness;$/;"	m	struct:PPU::IO
displayDisable	higan/sfc/ppu/ppu.hpp	/^    bool displayDisable;$/;"	m	struct:PPU::IO
displayEnable	higan/gb/ppu/ppu.hpp	/^    bool displayEnable = 0;$/;"	m	struct:PPU::Status
displayEnable	higan/md/vdp/vdp.hpp	/^    uint1 displayEnable;$/;"	m	struct:VDP::IO
displayEnable	higan/ms/vdp/vdp.hpp	/^    bool displayEnable = 0;$/;"	m	struct:VDP::IO
displayOutput	higan/pce/vdc/vdc.hpp	/^    uint2  displayOutput;$/;"	m	struct:VDC::IO
displayOverlayEnable	higan/md/vdp/vdp.hpp	/^    uint1 displayOverlayEnable;$/;"	m	struct:VDP::IO
displayWidth	higan/md/vdp/vdp.hpp	/^    uint2 displayWidth;$/;"	m	struct:VDP::IO
displayWidth	higan/md/vdp/vdp.hpp	/^    uint2 displayWidth;$/;"	m	struct:VDP::Latch
dither	higan/processor/gsu/registers.hpp	/^  bool dither;$/;"	m	struct:POR
div	higan/gb/cpu/cpu.hpp	/^    uint16 div;$/;"	m	struct:CPU::Status
divPending	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  bool divPending;$/;"	m	struct:SPC7110
divctr	higan/sfc/cpu/cpu.hpp	/^    uint divctr = 0;$/;"	m	struct:CPU::ALU
divider	higan/fc/apu/apu.hpp	/^    int divider;$/;"	m	struct:APU::FrameCounter
divider	higan/fc/cartridge/chip/vrc6.cpp	/^    uint12 divider;$/;"	m	struct:VRC6::Pulse	file:
divider	higan/fc/cartridge/chip/vrc6.cpp	/^    uint12 divider;$/;"	m	struct:VRC6::Sawtooth	file:
divider	higan/md/ym2612/ym2612.hpp	/^        int    divider = 11;$/;"	m	struct:Channel::Operator::Envelope
divider	higan/md/ym2612/ym2612.hpp	/^    uint32 divider = 0;$/;"	m	struct:YM2612::Envelope
divider	higan/md/ym2612/ym2612.hpp	/^    uint32 divider = 0;$/;"	m	struct:YM2612::LFO
divider	higan/md/ym2612/ym2612.hpp	/^    uint32_t divider;$/;"	m	struct:EnvelopeRate
divider	higan/md/ym2612/ym2612.hpp	/^    uint4 divider = 0;$/;"	m	struct:YM2612::TimerB
divisor	higan/gb/apu/apu.hpp	/^    uint3 divisor;$/;"	m	struct:APU::Noise
divisor	higan/gba/apu/apu.hpp	/^    uint3 divisor;$/;"	m	struct:APU::Noise
dllexport	nall/platform.hpp	66;"	d
dma	higan/gba/cpu/cpu.hpp	/^  } dma[4];$/;"	v	typeref:struct:DMA
dma	higan/md/vdp/vdp.hpp	/^  } dma;$/;"	m	struct:VDP	typeref:struct:VDP::DMA
dma	higan/pce/vdc/vdc.hpp	/^  } dma;$/;"	m	struct:VDC	typeref:struct:VDC::DMA
dma	higan/processor/hg51b/hg51b.hpp	/^    } dma;$/;"	m	struct:Processor::HG51B::IO	typeref:struct:Processor::HG51B::IO::DMA
dma	higan/processor/upd96050/upd96050.hpp	/^    boolean dma;   \/\/data register DMA mode$/;"	m	struct:Processor::uPD96050::Status
dma	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool dma;$/;"	m	struct:SA1::BWRAM
dma	higan/sfc/coprocessor/sa1/sa1.hpp	/^  DMA dma;$/;"	m	struct:SA1
dma	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  } dma[8];$/;"	m	struct:SDD1	typeref:struct:SDD1::DMA
dma	higan/sfc/cpu/cpu.hpp	/^    uint dma = 0;$/;"	m	struct:CPU::Counter
dma	higan/ws/apu/apu.hpp	/^  } dma;$/;"	m	struct:APU	typeref:struct:APU::DMA
dmaActive	higan/gb/ppu/ppu.hpp	/^    bool dmaActive = 0;$/;"	m	struct:PPU::Status
dmaActive	higan/gba/cpu/cpu.hpp	/^    boolean dmaActive;$/;"	m	struct:Context
dmaActive	higan/sfc/cpu/cpu.hpp	/^    bool dmaActive = false;$/;"	m	struct:CPU::Status
dmaBank	higan/gb/ppu/ppu.hpp	/^    uint8 dmaBank;$/;"	m	struct:PPU::Status
dmaBuffer	higan/fc/apu/apu.hpp	/^    uint8 dmaBuffer;$/;"	m	struct:APU::DMC
dmaBufferValid	higan/fc/apu/apu.hpp	/^    bool dmaBufferValid;$/;"	m	struct:APU::DMC
dmaClock	higan/gb/ppu/ppu.hpp	/^    uint dmaClock = 0;$/;"	m	struct:PPU::Status
dmaCompleted	higan/gb/cpu/cpu.hpp	/^    bool dmaCompleted = 1;$/;"	m	struct:CPU::Status
dmaDelayCounter	higan/fc/apu/apu.hpp	/^    uint dmaDelayCounter;$/;"	m	struct:APU::DMC
dmaEnable	higan/sfc/cpu/cpu.hpp	/^    uint1 dmaEnable;$/;"	m	struct:CPU::Channel
dmaEnable	higan/ws/cpu/cpu.hpp	/^    uint1 dmaEnable;$/;"	m	struct:CPU::Registers
dmaLength	higan/gb/cpu/cpu.hpp	/^    uint16 dmaLength;$/;"	m	struct:CPU::Status
dmaLength	higan/ws/cpu/cpu.hpp	/^    uint16 dmaLength;$/;"	m	struct:CPU::Registers
dmaMode	higan/gb/cpu/cpu.hpp	/^    bool dmaMode = 0;$/;"	m	struct:CPU::Status
dmaMode	higan/ws/cpu/cpu.hpp	/^    uint1 dmaMode;  \/\/0 = increment; 1 = decrement$/;"	m	struct:CPU::Registers
dmaPending	higan/sfc/cpu/cpu.hpp	/^    bool dmaPending = false;$/;"	m	struct:CPU::Status
dmaReady	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  bool dmaReady;  \/\/used to initialize decompression module$/;"	m	struct:SDD1
dmaSource	higan/gb/cpu/cpu.hpp	/^    uint16 dmaSource;$/;"	m	struct:CPU::Status
dmaSource	higan/ws/cpu/cpu.hpp	/^    uint20 dmaSource;$/;"	m	struct:CPU::Registers
dmaTarget	higan/gb/cpu/cpu.hpp	/^    uint16 dmaTarget;$/;"	m	struct:CPU::Status
dmaTarget	higan/ws/cpu/cpu.hpp	/^    uint16 dmaTarget;$/;"	m	struct:CPU::Registers
dma_irqcl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool dma_irqcl;$/;"	m	struct:SA1::MMIO
dma_irqen	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool dma_irqen;$/;"	m	struct:SA1::MMIO
dma_irqfl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool dma_irqfl;$/;"	m	struct:SA1::MMIO
dmacb	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 dmacb;$/;"	m	struct:SA1::MMIO
dmaen	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool dmaen;$/;"	m	struct:SA1::MMIO
dmasize	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 dmasize;$/;"	m	struct:SA1::MMIO
dmc	higan/fc/apu/apu.hpp	/^  } dmc;$/;"	m	struct:APU	typeref:struct:APU::DMC
dmcPeriodTableNTSC	higan/fc/apu/apu.cpp	/^const uint16 APU::dmcPeriodTableNTSC[16] = {$/;"	m	class:Famicom::APU	file:
dmcPeriodTableNTSC	higan/fc/apu/apu.hpp	/^  static const uint16 dmcPeriodTableNTSC[16];$/;"	m	struct:APU
dmcPeriodTablePAL	higan/fc/apu/apu.cpp	/^const uint16 APU::dmcPeriodTablePAL[16] = {$/;"	m	class:Famicom::APU	file:
dmcPeriodTablePAL	higan/fc/apu/apu.hpp	/^  static const uint16 dmcPeriodTablePAL[16];$/;"	m	struct:APU
dmcTriangleNoiseDAC	higan/fc/apu/apu.hpp	/^  int16 dmcTriangleNoiseDAC[128][16][16];$/;"	m	struct:APU
dmg	higan/gb/system/system.hpp	/^    uint8 dmg[ 256];$/;"	m	struct:System::BootROM
doActivate	hiro/core/shared.hpp	/^  auto doActivate() const { return self().doActivate(); }$/;"	f	struct:Button
doActivate	hiro/core/shared.hpp	/^  auto doActivate() const { return self().doActivate(); }$/;"	f	struct:ComboEdit
doActivate	hiro/core/shared.hpp	/^  auto doActivate() const { return self().doActivate(); }$/;"	f	struct:IconView
doActivate	hiro/core/shared.hpp	/^  auto doActivate() const { return self().doActivate(); }$/;"	f	struct:LineEdit
doActivate	hiro/core/shared.hpp	/^  auto doActivate() const { return self().doActivate(); }$/;"	f	struct:MenuItem
doActivate	hiro/core/shared.hpp	/^  auto doActivate() const { return self().doActivate(); }$/;"	f	struct:MenuRadioItem
doActivate	hiro/core/shared.hpp	/^  auto doActivate() const { return self().doActivate(); }$/;"	f	struct:RadioButton
doActivate	hiro/core/shared.hpp	/^  auto doActivate() const { return self().doActivate(); }$/;"	f	struct:RadioLabel
doActivate	hiro/core/shared.hpp	/^  auto doActivate() const { return self().doActivate(); }$/;"	f	struct:TableView
doActivate	hiro/core/shared.hpp	/^  auto doActivate() const { return self().doActivate(); }$/;"	f	struct:Timer
doActivate	hiro/core/shared.hpp	/^  auto doActivate() const { return self().doActivate(); }$/;"	f	struct:TreeView
doActivate	hiro/core/shared.hpp	/^  auto doActivate(string command) const { return self().doActivate(command); }$/;"	f	struct:Console
doActivate	hiro/extension/shared.hpp	/^  auto doActivate() const { return self().doActivate(); }$/;"	f	struct:ListView
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:ComboButton
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:ComboEdit
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:HorizontalScrollBar
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:HorizontalSlider
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:IconView
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:LineEdit
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:SourceEdit
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:TabFrame
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:TableView
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:TextEdit
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:TreeView
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:VerticalScrollBar
doChange	hiro/core/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:VerticalSlider
doChange	hiro/extension/shared.hpp	/^  auto doChange() const { return self().doChange(); }$/;"	f	struct:ListView
doClose	hiro/core/shared.hpp	/^  auto doClose() const { return self().doClose(); }$/;"	f	struct:Window
doClose	hiro/core/shared.hpp	/^  auto doClose(sTabFrameItem item) const { return self().doClose(item); }$/;"	f	struct:TabFrame
doContext	hiro/core/shared.hpp	/^  auto doContext() const { return self().doContext(); }$/;"	f	struct:IconView
doContext	hiro/core/shared.hpp	/^  auto doContext() const { return self().doContext(); }$/;"	f	struct:TableView
doContext	hiro/core/shared.hpp	/^  auto doContext() const { return self().doContext(); }$/;"	f	struct:TreeView
doContext	hiro/extension/shared.hpp	/^  auto doContext() const { return self().doContext(); }$/;"	f	struct:ListView
doDrop	hiro/core/shared.hpp	/^  auto doDrop(vector<string> names) const { return self().doDrop(names); }$/;"	f	struct:Viewport
doDrop	hiro/core/shared.hpp	/^  auto doDrop(vector<string> names) const { return self().doDrop(names); }$/;"	f	struct:Window
doDrop	hiro/core/shared.hpp	/^  auto doDrop(vector<string> names) { return self().doDrop(names); }$/;"	f	struct:Canvas
doEdit	hiro/core/shared.hpp	/^  auto doEdit(sTableViewCell cell) const { return self().doEdit(cell); }$/;"	f	struct:TableView
doKeyPress	hiro/core/shared.hpp	/^  auto doKeyPress(signed key) const { return self().doKeyPress(key); }$/;"	f	struct:Window
doKeyRelease	hiro/core/shared.hpp	/^  auto doKeyRelease(signed key) const { return self().doKeyRelease(key); }$/;"	f	struct:Window
doMouseLeave	hiro/core/shared.hpp	/^  auto doMouseLeave() const { return self().doMouseLeave(); }$/;"	f	struct:Canvas
doMouseLeave	hiro/core/shared.hpp	/^  auto doMouseLeave() const { return self().doMouseLeave(); }$/;"	f	struct:Viewport
doMouseMove	hiro/core/shared.hpp	/^  auto doMouseMove(Position position) const { return self().doMouseMove(position); }$/;"	f	struct:Canvas
doMouseMove	hiro/core/shared.hpp	/^  auto doMouseMove(Position position) const { return self().doMouseMove(position); }$/;"	f	struct:Viewport
doMousePress	hiro/core/shared.hpp	/^  auto doMousePress(Mouse::Button button) const { return self().doMousePress(button); }$/;"	f	struct:Canvas
doMousePress	hiro/core/shared.hpp	/^  auto doMousePress(Mouse::Button button) const { return self().doMousePress(button); }$/;"	f	struct:Viewport
doMouseRelease	hiro/core/shared.hpp	/^  auto doMouseRelease(Mouse::Button button) const { return self().doMouseRelease(button); }$/;"	f	struct:Canvas
doMouseRelease	hiro/core/shared.hpp	/^  auto doMouseRelease(Mouse::Button button) const { return self().doMouseRelease(button); }$/;"	f	struct:Viewport
doMove	hiro/core/shared.hpp	/^  auto doMove() const { return self().doMove(); }$/;"	f	struct:SourceEdit
doMove	hiro/core/shared.hpp	/^  auto doMove() const { return self().doMove(); }$/;"	f	struct:TextEdit
doMove	hiro/core/shared.hpp	/^  auto doMove() const { return self().doMove(); }$/;"	f	struct:Window
doMove	hiro/core/shared.hpp	/^  auto doMove(sTabFrameItem from, sTabFrameItem to) const { return self().doMove(from, to); }$/;"	f	struct:TabFrame
doRead	hiro/core/shared.hpp	/^  auto doRead(unsigned offset) const { return self().doRead(offset); }$/;"	f	struct:HexEdit
doSize	hiro/core/shared.hpp	/^  auto doSize() const { return self().doSize(); }$/;"	f	struct:Window
doSort	hiro/core/shared.hpp	/^  auto doSort(sTableViewColumn column) const { return self().doSort(column); }$/;"	f	struct:TableView
doToggle	hiro/core/shared.hpp	/^  auto doToggle() const { return self().doToggle(); }$/;"	f	struct:CheckButton
doToggle	hiro/core/shared.hpp	/^  auto doToggle() const { return self().doToggle(); }$/;"	f	struct:CheckLabel
doToggle	hiro/core/shared.hpp	/^  auto doToggle() const { return self().doToggle(); }$/;"	f	struct:MenuCheckItem
doToggle	hiro/core/shared.hpp	/^  auto doToggle(sTableViewCell cell) const { return self().doToggle(cell); }$/;"	f	struct:TableView
doToggle	hiro/core/shared.hpp	/^  auto doToggle(sTreeViewItem item) const { return self().doToggle(item); }$/;"	f	struct:TreeView
doToggle	hiro/extension/shared.hpp	/^  auto doToggle(ListViewItem item) const { return self().doToggle(item); }$/;"	f	struct:ListView
doWrite	hiro/core/shared.hpp	/^  auto doWrite(unsigned offset, uint8_t data) const { return self().doWrite(offset, data); }$/;"	f	struct:HexEdit
document	higan/emulator/game.hpp	/^  Markup::Node document;$/;"	m	struct:Emulator::Game
document	higan/md/cartridge/cartridge.hpp	/^    Markup::Node document;$/;"	m	struct:Cartridge::Information
document	higan/target-bsnes/program/program.hpp	/^    Markup::Node document;$/;"	m	struct:Program::Game
document	nall/locale.hpp	/^    Markup::Node document;$/;"	m	struct:nall::Locale::Dictionary
down	higan/fc/controller/gamepad/gamepad.hpp	/^  bool down = 0;$/;"	v
down	higan/sfc/controller/gamepad/gamepad.hpp	/^  boolean up, down, left, right;$/;"	v
down	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    boolean up, down, left, right;$/;"	m	struct:Gamepad
dp	higan/processor/upd96050/upd96050.hpp	/^    VariadicNatural dp;  \/\/data pointer$/;"	m	struct:Processor::uPD96050::Registers
dpr	higan/processor/hg51b/hg51b.hpp	/^    uint24 dpr;      \/\/data RAM address pointer$/;"	m	struct:Processor::HG51B::Registers
dprio	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool dprio;$/;"	m	struct:SA1::MMIO
dr	higan/processor/gsu/registers.hpp	/^  auto& dr() { return r[dreg]; }  \/\/destination register (to)$/;"	f	struct:Registers
dr	higan/processor/upd96050/upd96050.hpp	/^    uint16 dr;           \/\/data register$/;"	m	struct:Processor::uPD96050::Registers
dramRefresh	higan/pce/vdc/vdc.hpp	/^    bool   dramRefresh = 0;$/;"	m	struct:VDC::IO
dramRefresh	higan/sfc/cpu/cpu.hpp	/^    uint dramRefresh = 0;  \/\/0 = not refreshed; 1 = refresh active; 2 = refresh inactive$/;"	m	struct:CPU::Status
dramRefreshPosition	higan/sfc/cpu/cpu.hpp	/^    uint dramRefreshPosition = 0;$/;"	m	struct:CPU::Status
drc	higan/processor/upd96050/upd96050.hpp	/^    boolean drc;   \/\/data register size    (0 = 16-bit; 1 = 8-bit)$/;"	m	struct:Processor::uPD96050::Status
dreg	higan/processor/gsu/registers.hpp	/^  uint dreg;$/;"	m	struct:Registers
driver	higan/target-bsnes/settings/settings.hpp	/^    string driver;$/;"	m	struct:Settings::Audio
driver	higan/target-bsnes/settings/settings.hpp	/^    string driver;$/;"	m	struct:Settings::Input
driver	higan/target-bsnes/settings/settings.hpp	/^    string driver;$/;"	m	struct:Settings::Video
driverSettings	higan/target-bsnes/settings/settings.cpp	/^DriverSettings driverSettings;$/;"	v
drom	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  ReadableMemory drom;  \/\/data ROM$/;"	m	struct:SPC7110
droppable	hiro/core/core.hpp	/^    bool droppable = false;$/;"	m	struct:hiro::mCanvas::State
droppable	hiro/core/core.hpp	/^    bool droppable = false;$/;"	m	struct:hiro::mViewport::State
droppable	hiro/core/shared.hpp	/^  auto droppable() const { return self().droppable(); }$/;"	f	struct:Canvas
droppable	hiro/core/shared.hpp	/^  auto droppable() const { return self().droppable(); }$/;"	f	struct:Viewport
droppable	hiro/core/shared.hpp	/^  auto droppable() const { return self().droppable(); }$/;"	f	struct:Window
droppable	hiro/core/window.hpp	/^    bool droppable = false;$/;"	m	struct:mWindow::State
drq	higan/gba/cpu/cpu.hpp	/^    uint1 drq;$/;"	m	struct:DMA
drs	higan/processor/upd96050/upd96050.hpp	/^    boolean drs;   \/\/data register status  (1 = active; 0 = stopped)$/;"	m	struct:Processor::uPD96050::Status
ds	higan/processor/v30mz/v30mz.hpp	/^    uint16_t ds;$/;"	m	struct:Processor::Registers
dsa	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint32 dsa;$/;"	m	struct:SA1::MMIO
dsp	higan/sfc/dsp/dsp.cpp	/^DSP dsp;$/;"	m	namespace:SuperFamicom	file:
dspAddr	higan/sfc/smp/smp.hpp	/^    uint8 dspAddr;$/;"	m	struct:SMP::IO
dspCounter	higan/sfc/smp/smp.hpp	/^    uint dspCounter = 0;$/;"	m	struct:SMP::IO
dspFast	higan/sfc/interface/configuration.hpp	/^    } dspFast;$/;"	m	struct:Configuration::Hacks	typeref:struct:Configuration::Hacks::DSPFast
dtc	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 dtc;$/;"	m	struct:SA1::MMIO
duration	higan/processor/hg51b/hg51b.hpp	/^      uint8 duration;$/;"	m	struct:Processor::HG51B::IO::Suspend
duty	higan/fc/apu/apu.hpp	/^    uint2 duty;$/;"	m	struct:APU::Pulse
duty	higan/fc/cartridge/board/sunsoft-5b.cpp	/^    uint1 duty;$/;"	m	struct:Sunsoft5B::Pulse	file:
duty	higan/fc/cartridge/chip/vrc6.cpp	/^    uint3 duty;$/;"	m	struct:VRC6::Pulse	file:
duty	higan/gb/apu/apu.hpp	/^    uint2 duty;$/;"	m	struct:APU::Square1
duty	higan/gb/apu/apu.hpp	/^    uint2 duty;$/;"	m	struct:APU::Square2
duty	higan/gba/apu/apu.hpp	/^    uint2 duty;$/;"	m	struct:APU::Square
dutyCounter	higan/fc/apu/apu.hpp	/^    uint3 dutyCounter;$/;"	m	struct:APU::Pulse
dutyOutput	higan/gb/apu/apu.hpp	/^    bool dutyOutput;$/;"	m	struct:APU::Square1
dutyOutput	higan/gb/apu/apu.hpp	/^    bool dutyOutput;$/;"	m	struct:APU::Square2
dx	higan/processor/v30mz/v30mz.hpp	/^    union { uint16_t dx; struct { uint8_t order_lsb2(dl, dh); }; };$/;"	m	union:Processor::Registers::__anon22
dx	higan/sfc/controller/mouse/mouse.hpp	/^  bool dx;     \/\/x-direction$/;"	v
dy	higan/sfc/controller/mouse/mouse.hpp	/^  bool dy;     \/\/y-direction$/;"	v
dynamic	higan/target-bsnes/settings/settings.hpp	/^    bool dynamic = false;$/;"	m	struct:Settings::Audio
dynamic	ruby/audio/audio.hpp	/^  bool dynamic = false;$/;"	m	struct:AudioDriver
e	higan/processor/wdc65816/wdc65816.hpp	/^    bool e = false;$/;"	m	struct:Processor::WDC65816::Registers
e	nall/platform.hpp	/^  static const long double e  = 2.71828182845904523536;$/;"	m	namespace:Math
eb	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint eb;$/;"	m	struct:SA1::MMIO
ebmode	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool ebmode;$/;"	m	struct:SA1::MMIO
echoHistory	higan/sfc/dsp/dsp.hpp	/^    int echoHistory[2][8] = {};  \/\/echo history keeps most recent 8 stereo samples$/;"	m	struct:State
echoHistoryOffset	higan/sfc/dsp/dsp.hpp	/^    uint3 echoHistoryOffset;$/;"	m	struct:State
echoLength	higan/sfc/dsp/dsp.hpp	/^    int echoLength = 0;         \/\/number of bytes that echo_offset will stop at$/;"	m	struct:State
echoOffset	higan/sfc/dsp/dsp.hpp	/^    int echoOffset = 0;         \/\/offset from ESA in echo buffer$/;"	m	struct:State
editable	hiro/core/core.hpp	/^    bool editable = true;$/;"	m	struct:hiro::mComboEdit::State
editable	hiro/core/core.hpp	/^    bool editable = true;$/;"	m	struct:hiro::mLineEdit::State
editable	hiro/core/core.hpp	/^    bool editable = true;$/;"	m	struct:hiro::mTextEdit::State
editable	hiro/core/shared.hpp	/^  auto editable() const { return self().editable(); }$/;"	f	struct:ComboEdit
editable	hiro/core/shared.hpp	/^  auto editable() const { return self().editable(); }$/;"	f	struct:LineEdit
editable	hiro/core/shared.hpp	/^  auto editable() const { return self().editable(); }$/;"	f	struct:SourceEdit
editable	hiro/core/shared.hpp	/^  auto editable() const { return self().editable(); }$/;"	f	struct:TableViewColumn
editable	hiro/core/shared.hpp	/^  auto editable() const { return self().editable(); }$/;"	f	struct:TextEdit
editable	hiro/core/widget/source-edit.hpp	/^    bool editable = true;$/;"	m	struct:mSourceEdit::State
editable	hiro/core/widget/table-view-column.hpp	/^    bool editable = false;$/;"	m	struct:mTableViewColumn::State
eeprom	higan/gb/cartridge/mbc7/mbc7.hpp	/^  } eeprom;$/;"	m	struct:MBC7	typeref:struct:MBC7::EEPROM
eeprom	higan/gba/cartridge/memory.hpp	/^} eeprom;$/;"	v	typeref:struct:EEPROM
eeprom	higan/ws/cartridge/cartridge.hpp	/^  EEPROM eeprom;$/;"	m	struct:Cartridge
eeprom	higan/ws/system/system.hpp	/^  EEPROM eeprom;$/;"	m	struct:System
effect	ruby/input/joypad/directinput.cpp	/^    LPDIRECTINPUTEFFECT effect = nullptr;$/;"	m	struct:InputJoypadDirectInput::Joypad	file:
effectID	ruby/input/joypad/udev.cpp	/^    int effectID = -1;$/;"	m	struct:InputJoypadUdev::Joypad	file:
effects	higan/video/video.hpp	/^  } effects;$/;"	m	struct:Emulator::Video	typeref:struct:Emulator::Video::Effects
effects	ruby/input/joypad/directinput.cpp	/^  uint effects = 0;$/;"	m	struct:InputJoypadDirectInput	file:
effects	ruby/input/joypad/udev.cpp	/^    uint effects = 0;$/;"	m	struct:InputJoypadUdev::Joypad	file:
ei	higan/processor/lr35902/lr35902.hpp	/^    uint1 ei;$/;"	m	struct:Processor::LR35902::Registers
ei	higan/processor/upd96050/upd96050.hpp	/^    boolean ei;    \/\/enable interrupts$/;"	m	struct:Processor::uPD96050::Status
ei	higan/processor/z80/z80.hpp	/^    bool ei;    \/\/EI instruction executed$/;"	m	struct:Processor::Z80::Registers
else_t	nall/maybe.hpp	/^struct else_t {};$/;"	s	namespace:nall
emphasis	higan/fc/ppu/ppu.hpp	/^    uint3 emphasis;$/;"	m	struct:PPU::IO
empty	higan/gba/cpu/cpu.hpp	/^    inline auto empty() const { return addr == load; }$/;"	f	struct:__anon6
emulator	higan/target-bsnes/bsnes.cpp	/^unique_pointer<Emulator::Interface> emulator;$/;"	v
emulator	higan/target-bsnes/settings/settings.hpp	/^  } emulator;$/;"	m	struct:Settings	typeref:struct:Settings::Emulator
emulator	higan/target-higan/higan.cpp	/^Emulator::Interface* emulator = nullptr;$/;"	v
emulator	higan/target-higan/input/input.hpp	/^  InputEmulator* emulator = nullptr;  \/\/points to InputEmulator that represents the currently active emulator$/;"	m	struct:InputManager
emulatorSettings	higan/target-bsnes/settings/settings.cpp	/^EmulatorSettings emulatorSettings;$/;"	v
emulators	higan/target-higan/input/input.hpp	/^  vector<InputEmulator> emulators;$/;"	m	struct:InputManager
emulators	higan/target-higan/program/program.hpp	/^  vector<Emulator::Interface*> emulators;$/;"	m	struct:Program
enable	higan/fc/apu/apu.hpp	/^    bool enable;$/;"	m	struct:APU::Sweep
enable	higan/fc/cartridge/chip/vrc6.cpp	/^    bool enable;$/;"	m	struct:VRC6::Pulse	file:
enable	higan/fc/cartridge/chip/vrc6.cpp	/^    bool enable;$/;"	m	struct:VRC6::Sawtooth	file:
enable	higan/gb/apu/apu.hpp	/^    bool enable;$/;"	m	struct:APU::Noise
enable	higan/gb/apu/apu.hpp	/^    bool enable;$/;"	m	struct:APU::Sequencer
enable	higan/gb/apu/apu.hpp	/^    bool enable;$/;"	m	struct:APU::Square1
enable	higan/gb/apu/apu.hpp	/^    bool enable;$/;"	m	struct:APU::Square2
enable	higan/gb/apu/apu.hpp	/^    bool enable;$/;"	m	struct:APU::Wave
enable	higan/gb/cartridge/huc3/huc3.hpp	/^      uint1 enable;$/;"	m	struct:HuC3::IO::RAM
enable	higan/gb/cartridge/mbc1/mbc1.hpp	/^      uint1 enable;$/;"	m	struct:MBC1::IO::RAM
enable	higan/gb/cartridge/mbc2/mbc2.hpp	/^      uint1 enable = 0;$/;"	m	struct:MBC2::IO::RAM
enable	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint1 enable;$/;"	m	struct:MBC3::IO::RAM
enable	higan/gb/cartridge/mbc5/mbc5.hpp	/^      uint1 enable;$/;"	m	struct:MBC5::IO::RAM
enable	higan/gb/cartridge/mbc6/mbc6.hpp	/^      uint1 enable;$/;"	m	struct:MBC6::IO::RAM
enable	higan/gb/cartridge/mbc7/mbc7.hpp	/^      uint1 enable[2];$/;"	m	struct:MBC7::IO::RAM
enable	higan/gb/cartridge/mmm01/mmm01.hpp	/^      uint1 enable;$/;"	m	struct:MMM01::IO::RAM
enable	higan/gba/apu/apu.hpp	/^    uint1 enable;$/;"	m	struct:APU::Noise
enable	higan/gba/apu/apu.hpp	/^    uint1 enable;$/;"	m	struct:APU::Square
enable	higan/gba/apu/apu.hpp	/^    uint1 enable;$/;"	m	struct:APU::Sweep
enable	higan/gba/apu/apu.hpp	/^    uint1 enable;$/;"	m	struct:APU::Wave
enable	higan/gba/cpu/cpu.hpp	/^    uint1 enable;$/;"	m	struct:DMA
enable	higan/gba/cpu/cpu.hpp	/^    uint1 enable;$/;"	m	struct:Keypad
enable	higan/gba/cpu/cpu.hpp	/^    uint1 enable;$/;"	m	struct:Timer
enable	higan/gba/cpu/cpu.hpp	/^    uint16 enable;$/;"	m	struct:IRQ
enable	higan/gba/player/player.hpp	/^    bool enable;$/;"	m	struct:Player::Status
enable	higan/gba/ppu/ppu.hpp	/^      uint1 enable;$/;"	m	struct:PPU::Background::IO
enable	higan/gba/ppu/ppu.hpp	/^      uint1 enable;$/;"	m	struct:PPU::Objects::IO
enable	higan/gba/ppu/ppu.hpp	/^      uint1 enable;$/;"	m	struct:PPU::Window::IO
enable	higan/gba/ppu/ppu.hpp	/^    uint1  enable;$/;"	m	struct:PPU::Pixel
enable	higan/md/cartridge/cartridge.hpp	/^      boolean enable;$/;"	m	struct:Cartridge::GameGenie::Code
enable	higan/md/cartridge/cartridge.hpp	/^    boolean enable;$/;"	m	struct:Cartridge::GameGenie
enable	higan/md/psg/psg.hpp	/^    uint1  enable;$/;"	m	struct:PSG::Noise
enable	higan/md/vdp/vdp.hpp	/^      uint1  enable;$/;"	m	struct:VDP::DMA::IO
enable	higan/md/ym2612/ym2612.hpp	/^        uint1 enable = 0;$/;"	m	struct:Channel::Operator::SSG
enable	higan/md/ym2612/ym2612.hpp	/^    uint1  enable = 0;$/;"	m	struct:YM2612::LFO
enable	higan/md/ym2612/ym2612.hpp	/^    uint1  enable = 0;$/;"	m	struct:YM2612::TimerA
enable	higan/md/ym2612/ym2612.hpp	/^    uint1 enable = 0;$/;"	m	struct:YM2612::DAC
enable	higan/md/ym2612/ym2612.hpp	/^    uint1 enable = 0;$/;"	m	struct:YM2612::TimerB
enable	higan/ms/psg/psg.hpp	/^    uint1   enable;$/;"	m	struct:PSG::Noise
enable	higan/pce/cpu/cpu.hpp	/^    bool  enable = 0;$/;"	m	struct:CPU::Timer
enable	higan/pce/psg/psg.hpp	/^      uint1  enable;$/;"	m	struct:PSG::Channel::IO
enable	higan/pce/vdc/vdc.hpp	/^    bool   enable = 0;$/;"	m	struct:VDC::Background
enable	higan/pce/vdc/vdc.hpp	/^    bool enable = 0;$/;"	m	struct:VDC::Sprite
enable	higan/processor/hg51b/hg51b.hpp	/^      uint1  enable;$/;"	m	struct:Processor::HG51B::IO::Bus
enable	higan/processor/hg51b/hg51b.hpp	/^      uint1  enable;$/;"	m	struct:Processor::HG51B::IO::Cache
enable	higan/processor/hg51b/hg51b.hpp	/^      uint1  enable;$/;"	m	struct:Processor::HG51B::IO::DMA
enable	higan/processor/hg51b/hg51b.hpp	/^      uint1 enable;$/;"	m	struct:Processor::HG51B::IO::Suspend
enable	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint1 enable;  \/\/bit 1$/;"	m	struct:MCC::IRQ
enable	higan/sfc/interface/configuration.hpp	/^      bool enable = false;$/;"	m	struct:Configuration::Hacks::DSPFast
enable	higan/sfc/interface/configuration.hpp	/^      bool enable = false;$/;"	m	struct:Configuration::Hacks::PPUFast
enable	higan/sfc/smp/smp.hpp	/^    boolean enable;$/;"	m	struct:SMP::Timer
enable	higan/target-bsnes/settings/settings.hpp	/^        bool enable = true;$/;"	m	struct:Settings::Emulator::Hack::FastDSP
enable	higan/target-bsnes/settings/settings.hpp	/^        bool enable = true;$/;"	m	struct:Settings::Emulator::Hack::FastPPU
enable	higan/target-bsnes/settings/settings.hpp	/^      bool enable = true;$/;"	m	struct:Settings::Emulator::AutoSaveMemory
enable	higan/target-bsnes/settings/settings.hpp	/^      bool enable = true;$/;"	m	struct:Settings::Emulator::Cheats
enable	higan/target-bsnes/tools/tools.hpp	/^  bool enable;$/;"	m	struct:Cheat
enable	higan/ws/apu/apu.hpp	/^      uint1 enable;$/;"	m	struct:APU::Channel1::Registers
enable	higan/ws/apu/apu.hpp	/^      uint1 enable;$/;"	m	struct:APU::Channel2::Registers
enable	higan/ws/apu/apu.hpp	/^      uint1 enable;$/;"	m	struct:APU::Channel3::Registers
enable	higan/ws/apu/apu.hpp	/^      uint1 enable;$/;"	m	struct:APU::Channel4::Registers
enable	higan/ws/apu/apu.hpp	/^      uint1 enable;$/;"	m	struct:APU::Channel5::Registers
enable	higan/ws/apu/apu.hpp	/^      uint1 enable;$/;"	m	struct:APU::DMA::Registers
enableCollision	higan/pce/vdc/vdc.hpp	/^    bool enableCollision = 0;$/;"	m	struct:VDC::IRQ
enableLineCoincidence	higan/pce/vdc/vdc.hpp	/^    bool enableLineCoincidence = 0;$/;"	m	struct:VDC::IRQ
enableOverflow	higan/pce/vdc/vdc.hpp	/^    bool enableOverflow = 0;$/;"	m	struct:VDC::IRQ
enableTransferSATB	higan/pce/vdc/vdc.hpp	/^    bool enableTransferSATB = 0;$/;"	m	struct:VDC::IRQ
enableTransferVRAM	higan/pce/vdc/vdc.hpp	/^    bool enableTransferVRAM = 0;$/;"	m	struct:VDC::IRQ
enableVDC0	higan/pce/vpc/vpc.hpp	/^    bool  enableVDC0;$/;"	m	struct:VPC::Settings
enableVDC1	higan/pce/vpc/vpc.hpp	/^    bool  enableVDC1;$/;"	m	struct:VPC::Settings
enableVblank	higan/pce/vdc/vdc.hpp	/^    bool enableVblank = 0;$/;"	m	struct:VDC::IRQ
enabled	higan/md/apu/apu.hpp	/^    uint1 enabled;$/;"	m	struct:APU::State
enabled	higan/target-higan/tools/tools.hpp	/^    bool enabled = false;$/;"	m	struct:CheatEditor::Cheat
enabled	hiro/core/object.hpp	/^    char enabled = true;        \/\/ 1+$/;"	m	struct:mObject::State
enabledChannels	higan/fc/apu/apu.hpp	/^  uint8 enabledChannels;$/;"	m	struct:APU
encryption	nall/beat/archive/container.hpp	/^  } encryption;$/;"	m	struct:nall::Beat::Archive::Container	typeref:struct:nall::Beat::Archive::Container::Encryption
end	nall/adaptive-array.hpp	/^  auto end() const { return &_pool.t[_size]; }$/;"	f	struct:nall::adaptive_array
end	nall/adaptive-array.hpp	/^  auto end() { return &_pool.t[_size]; }$/;"	f	struct:nall::adaptive_array
end	nall/arguments.hpp	/^  auto end() const { return arguments.end(); }$/;"	f	struct:nall::Arguments
end	nall/arguments.hpp	/^  auto end() { return arguments.end(); }$/;"	f	struct:nall::Arguments
end	nall/beat/archive/container.hpp	/^  auto end() const { return nodes.end(); }$/;"	f	struct:nall::Beat::Archive::Container
end	nall/beat/archive/container.hpp	/^  auto end() { return nodes.end(); }$/;"	f	struct:nall::Beat::Archive::Container
end	nall/http/message.hpp	/^  auto end() const { return variables.end(); }$/;"	f	struct:nall::HTTP::Variables
end	nall/http/message.hpp	/^  auto end() { return variables.end(); }$/;"	f	struct:nall::HTTP::Variables
end	nall/iterator.hpp	/^  auto end() const { return rend(self); }$/;"	f	struct:nall::reverse_wrapper
end	nall/iterator.hpp	/^  auto end() { return rend(self); }$/;"	f	struct:nall::reverse_wrapper
end	nall/string.hpp	/^  inline auto end() const { return &_data[size()]; }$/;"	f	struct:nall::string_view
endian	nall/image.hpp	/^  alwaysinline auto endian() const { return _endian; }$/;"	f	struct:nall::image
endxBuffer	higan/sfc/dsp/dsp.hpp	/^    int endxBuffer = 0;$/;"	m	struct:State
entry_t	nall/encode/zip.hpp	/^  struct entry_t {$/;"	s	struct:nall::Encode::ZIP
enumerator	ruby/audio/wasapi.cpp	/^  IMMDeviceEnumerator* enumerator = nullptr;$/;"	m	struct:AudioWASAPI	file:
enumerator	ruby/input/joypad/udev.cpp	/^  udev_enumerate* enumerator = nullptr;$/;"	m	struct:InputJoypadUdev	file:
env	nall/decode/inflate.hpp	/^  jmp_buf env;$/;"	m	struct:nall::Decode::puff::state
envelope	higan/fc/apu/apu.hpp	/^    Envelope envelope;$/;"	m	struct:APU::Noise
envelope	higan/fc/apu/apu.hpp	/^    Envelope envelope;$/;"	m	struct:APU::Pulse
envelope	higan/gba/apu/apu.hpp	/^    Envelope envelope;$/;"	m	struct:APU::Noise
envelope	higan/gba/apu/apu.hpp	/^    Envelope envelope;$/;"	m	struct:APU::Square
envelope	higan/md/ym2612/ym2612.hpp	/^      } envelope;$/;"	m	struct:Channel::Operator	typeref:struct:Channel::Operator::Envelope
envelope	higan/md/ym2612/ym2612.hpp	/^  } envelope;$/;"	m	struct:YM2612	typeref:struct:YM2612::Envelope
envelope	higan/sfc/dsp/dsp.hpp	/^    int envelope = 0;        \/\/current envelope level$/;"	m	struct:Voice
envelopeDirection	higan/gb/apu/apu.hpp	/^    bool envelopeDirection;$/;"	m	struct:APU::Noise
envelopeDirection	higan/gb/apu/apu.hpp	/^    bool envelopeDirection;$/;"	m	struct:APU::Square1
envelopeDirection	higan/gb/apu/apu.hpp	/^    bool envelopeDirection;$/;"	m	struct:APU::Square2
envelopeFrequency	higan/gb/apu/apu.hpp	/^    uint3 envelopeFrequency;$/;"	m	struct:APU::Noise
envelopeFrequency	higan/gb/apu/apu.hpp	/^    uint3 envelopeFrequency;$/;"	m	struct:APU::Square1
envelopeFrequency	higan/gb/apu/apu.hpp	/^    uint3 envelopeFrequency;$/;"	m	struct:APU::Square2
envelopeMode	higan/sfc/dsp/dsp.hpp	/^    int envelopeMode = 0;$/;"	m	struct:Voice
envelopePeriod	higan/gb/apu/apu.hpp	/^    uint3 envelopePeriod;$/;"	m	struct:APU::Noise
envelopePeriod	higan/gb/apu/apu.hpp	/^    uint3 envelopePeriod;$/;"	m	struct:APU::Square1
envelopePeriod	higan/gb/apu/apu.hpp	/^    uint3 envelopePeriod;$/;"	m	struct:APU::Square2
envelopeRates	higan/md/ym2612/constants.cpp	/^const YM2612::EnvelopeRate YM2612::envelopeRates[16] = {$/;"	m	class:YM2612	file:
envelopeRates	higan/md/ym2612/ym2612.hpp	/^  static const EnvelopeRate envelopeRates[16];$/;"	v
envelopeVolume	higan/gb/apu/apu.hpp	/^    uint4 envelopeVolume;$/;"	m	struct:APU::Noise
envelopeVolume	higan/gb/apu/apu.hpp	/^    uint4 envelopeVolume;$/;"	m	struct:APU::Square1
envelopeVolume	higan/gb/apu/apu.hpp	/^    uint4 envelopeVolume;$/;"	m	struct:APU::Square2
envxBuffer	higan/sfc/dsp/dsp.hpp	/^    int envxBuffer = 0;$/;"	m	struct:State
epsonrtc	higan/sfc/coprocessor/epsonrtc/epsonrtc.cpp	/^EpsonRTC epsonrtc;$/;"	m	namespace:SuperFamicom	file:
eraseFailed	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 eraseFailed;$/;"	m	struct:BSMemory::Compatible::Status
eraseSuspended	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 eraseSuspended;$/;"	m	struct:BSMemory::Compatible::Status
erased	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    uint32 erased;$/;"	m	struct:BSMemory::Block
erasemode	higan/gba/cartridge/memory.hpp	/^  bool erasemode;$/;"	m	struct:FLASH
erasing	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    uint1  erasing;$/;"	m	struct:BSMemory::Block
error	nall/beat/single/apply.hpp	6;"	d
error	nall/beat/single/apply.hpp	83;"	d
error	nall/run.hpp	/^  string error;$/;"	m	struct:nall::execute_result_t
errorDialog	icarus/ui/ui.hpp	/^ErrorDialog* errorDialog = nullptr;$/;"	v
errorMessage	icarus/core/core.hpp	/^  string errorMessage;$/;"	m	struct:Icarus
errors	icarus/ui/ui.hpp	/^  vector<string> errors;$/;"	m	struct:ImportDialog
es	higan/processor/v30mz/v30mz.hpp	/^    uint16_t es;$/;"	m	struct:Processor::Registers
escape	nall/string/markup/xml.hpp	/^  inline string escape() const {$/;"	f	struct:nall::XML::ManagedNode
evbit	ruby/input/joypad/udev.cpp	/^    uint8_t evbit[(EV_MAX + 7) \/ 8] = {0};$/;"	m	struct:InputJoypadUdev::Joypad	file:
event	higan/sfc/coprocessor/event/event.cpp	/^Event event;$/;"	m	namespace:SuperFamicom	file:
eventHandle	ruby/audio/wasapi.cpp	/^  HANDLE eventHandle = nullptr;$/;"	m	struct:AudioWASAPI	file:
everyOtherSample	higan/sfc/dsp/dsp.hpp	/^    bool everyOtherSample = 1;  \/\/toggles every sample$/;"	m	struct:State
evolution	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  static ModelState evolution[53];$/;"	m	struct:Decompressor	file:
evolution	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^Decompressor::ModelState Decompressor::evolution[53] = {$/;"	m	class:Decompressor	file:
evolutionTable	higan/sfc/coprocessor/sdd1/decompressor.cpp	/^const SDD1::Decompressor::PEM::State SDD1::Decompressor::PEM::evolutionTable[33] = {$/;"	m	class:SDD1::Decompressor::PEM	file:
evolutionTable	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    static const State evolutionTable[33];$/;"	m	struct:Decompressor::PEM
ewram	higan/gba/cpu/cpu.hpp	/^    uint1 ewram = 1;$/;"	m	struct:Memory
ewram	higan/gba/cpu/cpu.hpp	/^  uint8 ewram[256 * 1024];$/;"	v
ewramWait	higan/gba/cpu/cpu.hpp	/^    uint4 ewramWait = 13;$/;"	m	struct:Memory
exEnableHi	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint1 exEnableHi;          \/\/bit 10$/;"	m	struct:MCC::Registers
exEnableLo	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint1 exEnableLo;          \/\/bit  9$/;"	m	struct:MCC::Registers
exMapping	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint1 exMapping;           \/\/bit 11$/;"	m	struct:MCC::Registers
exattr	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 exattr;$/;"	m	struct:MMC5	file:
exbank	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 exbank;$/;"	m	struct:MMC5	file:
exclusive	higan/target-bsnes/settings/settings.hpp	/^    bool exclusive = false;$/;"	m	struct:Settings::Audio
exclusive	higan/target-bsnes/settings/settings.hpp	/^    bool exclusive = false;$/;"	m	struct:Settings::Video
exclusive	ruby/audio/audio.hpp	/^  bool exclusive = false;$/;"	m	struct:AudioDriver
exclusive	ruby/video/video.hpp	/^  bool exclusive = false;$/;"	m	struct:VideoDriver
executable	nall/beat/archive/node.hpp	/^      bool executable = false;$/;"	m	struct:nall::Beat::Archive::Node::Permission::Group
executable	nall/beat/archive/node.hpp	/^      bool executable = false;$/;"	m	struct:nall::Beat::Archive::Node::Permission::Other
executable	nall/beat/archive/node.hpp	/^      bool executable = false;$/;"	m	struct:nall::Beat::Archive::Node::Permission::Owner
execute	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    Instruction execute;$/;"	m	struct:Pipeline
execute_result_t	nall/run.hpp	/^struct execute_result_t {$/;"	s	namespace:nall
expandable	hiro/core/shared.hpp	/^  auto expandable() const { return self().expandable(); }$/;"	f	struct:TableViewColumn
expandable	hiro/core/widget/table-view-column.hpp	/^    bool expandable = false;$/;"	m	struct:mTableViewColumn::State
expansion	higan/target-bsnes/program/program.hpp	/^    vector<uint8_t> expansion;$/;"	m	struct:Program::SuperFamicom
expansionPort	higan/sfc/expansion/expansion.cpp	/^ExpansionPort expansionPort;$/;"	m	namespace:SuperFamicom	file:
exram	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 exram[1024];$/;"	m	struct:MMC5	file:
exramMode	higan/fc/cartridge/chip/mmc5.cpp	/^  uint2 exramMode;         \/\/$5104$/;"	m	struct:MMC5	file:
extbg	higan/sfc/ppu/ppu.hpp	/^    bool extbg;$/;"	m	struct:PPU::IO
extendedHeight	higan/ms/vdp/vdp.hpp	/^    bool extendedHeight = 0;$/;"	m	struct:VDP::IO
extension	higan/emulator/interface.hpp	/^    string extension;$/;"	m	struct:Emulator::Interface::Information
extensionPort	higan/md/controller/controller.cpp	/^ControllerPort extensionPort;$/;"	m	namespace:MegaDrive	file:
externalColorEnable	higan/md/vdp/vdp.hpp	/^    uint1 externalColorEnable;$/;"	m	struct:VDP::IO
externalInterruptEnable	higan/md/vdp/vdp.hpp	/^    uint1 externalInterruptEnable;$/;"	m	struct:VDP::IO
externalSync	higan/ms/vdp/vdp.hpp	/^    bool externalSync = 0;$/;"	m	struct:VDP::IO
externalSync	higan/pce/vdc/vdc.hpp	/^    uint2  externalSync;$/;"	m	struct:VDC::IO
externalVRAM	higan/md/vdp/vdp.hpp	/^    uint1 externalVRAM;$/;"	m	struct:VDP::IO
externalWaitStates	higan/sfc/smp/smp.hpp	/^    uint2 externalWaitStates;$/;"	m	struct:SMP::IO
externallyWritable	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint1 externallyWritable;  \/\/bit 13 (1 = BS Memory Cassette allows writes to flash memory)$/;"	m	struct:MCC::Registers
extraLine	higan/pce/vce/vce.hpp	/^    bool extraLine = 0;$/;"	m	struct:VCE::IO
f	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    boolean f;  \/\/fiq$/;"	m	namespace:Processor
f	higan/processor/v30mz/v30mz.hpp	/^    } f;$/;"	m	struct:Processor::Registers	typeref:struct:Processor::Registers::Flags
factor	nall/arithmetic/barrett.hpp	/^  const pair factor;$/;"	m	struct:nall::BarrettReduction
failed	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 failed;$/;"	m	struct:BSMemory::Block::Status
failed	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 failed;$/;"	m	struct:BSMemory::Global::Status
false_type	nall/function.hpp	/^    template<typename T> static auto exists(...) -> const false_type;$/;"	m	struct:nall::R::is_compatible
family	hiro/core/font.hpp	/^    string family;         \/\/24$/;"	m	struct:Font::State
far	nall/windows/guard.hpp	29;"	d
fastDSP	higan/sfc/system/system.hpp	/^    bool fastDSP = false;$/;"	m	struct:System::Hacks
fastDSP	higan/target-bsnes/settings/settings.hpp	/^      } fastDSP;$/;"	m	struct:Settings::Emulator::Hack	typeref:struct:Settings::Emulator::Hack::FastDSP
fastPPU	higan/sfc/system/system.hpp	/^    bool fastPPU = false;$/;"	m	struct:System::Hacks
fastPPU	higan/target-bsnes/settings/settings.hpp	/^      } fastPPU;$/;"	m	struct:Settings::Emulator::Hack	typeref:struct:Settings::Emulator::Hack::FastPPU
fastSuperFX	higan/target-bsnes/settings/settings.hpp	/^      uint fastSuperFX = 100;$/;"	m	struct:Settings::Emulator::Hack
fastcall	libco/x86.c	13;"	d	file:
fastcall	libco/x86.c	15;"	d	file:
fb	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint fb;$/;"	m	struct:SA1::MMIO
fbmode	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool fbmode;$/;"	m	struct:SA1::MMIO
fd	nall/http/client.hpp	/^  int fd = -1;$/;"	m	struct:nall::HTTP::Client
fd	ruby/input/joypad/udev.cpp	/^    int fd = -1;$/;"	m	struct:InputJoypadUdev::Joypad	file:
fd4	nall/http/server.hpp	/^  int fd4 = -1;$/;"	m	struct:nall::HTTP::Server
fd6	nall/http/server.hpp	/^  int fd6 = -1;$/;"	m	struct:nall::HTTP::Server
feedback	higan/md/ym2612/ym2612.hpp	/^    uint3 feedback = 0;$/;"	m	struct:Channel
fetch	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    Instruction fetch;$/;"	m	struct:Pipeline
ff6c	higan/gb/cpu/cpu.hpp	/^    uint8 ff6c;$/;"	m	struct:CPU::Status
ff72	higan/gb/cpu/cpu.hpp	/^    uint8 ff72;$/;"	m	struct:CPU::Status
ff73	higan/gb/cpu/cpu.hpp	/^    uint8 ff73;$/;"	m	struct:CPU::Status
ff74	higan/gb/cpu/cpu.hpp	/^    uint8 ff74;$/;"	m	struct:CPU::Status
ff75	higan/gb/cpu/cpu.hpp	/^    uint8 ff75;$/;"	m	struct:CPU::Status
ffbit	ruby/input/joypad/udev.cpp	/^    uint8_t ffbit[(FF_MAX + 7) \/ 8] = {0};$/;"	m	struct:InputJoypadUdev::Joypad	file:
field	higan/fc/ppu/ppu.hpp	/^    uint1 field;$/;"	m	struct:PPU::IO
field	higan/md/vdp/vdp.hpp	/^    uint1 field;$/;"	m	struct:VDP::State
field	higan/sfc/ppu/counter/counter.hpp	/^    bool field = 0;$/;"	m	struct:PPUcounter::__anon13
field	higan/sfc/ppu/counter/counter.hpp	/^    bool field[2048] = {};$/;"	m	struct:PPUcounter::__anon14
field	higan/ws/ppu/ppu.hpp	/^    bool field = 0;$/;"	m	struct:PPU::State
fifo	higan/gba/apu/apu.hpp	/^  } fifo[2];$/;"	m	struct:APU	typeref:struct:APU::FIFO
fifthSprite	higan/ms/vdp/vdp.hpp	/^    uint5 fifthSprite;$/;"	m	struct:VDP::IO
file	higan/target-bsnes/program/program.hpp	/^  auto openPakBSMemory(string name, vfs::file::mode mode) -> vfs::shared::file;$/;"	m	class:Program::vfs::shared
file	higan/target-bsnes/program/program.hpp	/^  auto openPakGameBoy(string name, vfs::file::mode mode) -> vfs::shared::file;$/;"	m	class:Program::vfs::shared
file	higan/target-bsnes/program/program.hpp	/^  auto openPakSufamiTurboA(string name, vfs::file::mode mode) -> vfs::shared::file;$/;"	m	class:Program::vfs::shared
file	higan/target-bsnes/program/program.hpp	/^  auto openPakSufamiTurboB(string name, vfs::file::mode mode) -> vfs::shared::file;$/;"	m	class:Program::vfs::shared
file	higan/target-bsnes/program/program.hpp	/^  auto openPakSuperFamicom(string name, vfs::file::mode mode) -> vfs::shared::file;$/;"	m	class:Program::vfs::shared
file	higan/target-bsnes/program/program.hpp	/^  auto openRomBSMemory(string name, vfs::file::mode mode) -> vfs::shared::file;$/;"	m	class:Program::vfs::shared
file	higan/target-bsnes/program/program.hpp	/^  auto openRomGameBoy(string name, vfs::file::mode mode) -> vfs::shared::file;$/;"	m	class:Program::vfs::shared
file	higan/target-bsnes/program/program.hpp	/^  auto openRomSufamiTurboA(string name, vfs::file::mode mode) -> vfs::shared::file;$/;"	m	class:Program::vfs::shared
file	higan/target-bsnes/program/program.hpp	/^  auto openRomSufamiTurboB(string name, vfs::file::mode mode) -> vfs::shared::file;$/;"	m	class:Program::vfs::shared
file	higan/target-bsnes/program/program.hpp	/^  auto openRomSuperFamicom(string name, vfs::file::mode mode) -> vfs::shared::file;$/;"	m	class:Program::vfs::shared
file	nall/decode/zip.hpp	/^  vector<File> file;$/;"	m	struct:nall::Decode::ZIP
file	nall/file.hpp	/^struct file : inode {$/;"	s	namespace:nall
file	nall/vfs/fs/file.hpp	/^  auto operator=(const file&) -> file& = delete;$/;"	m	struct:nall::vfs::fs::file
file	nall/vfs/fs/file.hpp	/^struct file : vfs::file {$/;"	s	namespace:nall::vfs::fs
file	nall/vfs/memory/file.hpp	/^  auto operator=(const file&) -> file& = delete;$/;"	m	struct:nall::vfs::memory::file
file	nall/vfs/memory/file.hpp	/^struct file : vfs::file {$/;"	s	namespace:nall::vfs::memory
file	nall/vfs/vfs.hpp	/^struct file {$/;"	s	namespace:nall::vfs
fileHandle	nall/file-buffer.hpp	/^  FILE* fileHandle = nullptr;$/;"	v
fileMode	nall/file-buffer.hpp	/^  uint fileMode = mode::read;$/;"	v
fileOffset	nall/file-buffer.hpp	/^  uint64_t fileOffset = 0;$/;"	v
fileSize	nall/file-buffer.hpp	/^  uint64_t fileSize = 0;$/;"	v
file_buffer	nall/file-buffer.hpp	/^  file_buffer(const string& filename, uint mode) { open(filename, mode); }$/;"	f
file_buffer	nall/file-buffer.hpp	/^  file_buffer(file_buffer&& source) { operator=(move(source)); }$/;"	f
file_buffer	nall/file-buffer.hpp	/^struct file_buffer {$/;"	s	namespace:nall
file_map	nall/file-map.hpp	/^  file_map(const string& filename, uint mode) { open(filename, mode); }$/;"	f	namespace:nall
file_map	nall/file-map.hpp	/^  file_map(file_map&& source) { operator=(move(source)); }$/;"	f	namespace:nall
file_map	nall/file-map.hpp	/^struct file_map {$/;"	s	namespace:nall
filedata	nall/decode/zip.hpp	/^  const uint8_t* filedata;$/;"	m	struct:nall::Decode::ZIP
filename	nall/decode/gzip.hpp	/^  string filename;$/;"	m	struct:nall::Decode::GZIP
filename	nall/encode/zip.hpp	/^    string filename;$/;"	m	struct:nall::Encode::ZIP::entry_t
filesize	nall/decode/zip.hpp	/^  uint filesize;$/;"	m	struct:nall::Decode::ZIP
fill	higan/md/vdp/vdp.hpp	/^      uint8  fill;$/;"	m	struct:VDP::DMA::IO
fillmodeColor	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 fillmodeColor;     \/\/$5107$/;"	m	struct:MMC5	file:
fillmodeTile	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 fillmodeTile;      \/\/$5106$/;"	m	struct:MMC5	file:
filter	ruby/video/opengl/opengl.hpp	/^  GLuint filter = GL_LINEAR;$/;"	m	struct:OpenGLTexture
filterType	nall/decode/png.hpp	/^    uint filterType;$/;"	m	struct:nall::Decode::PNG::Info
filters	higan/audio/audio.hpp	/^    vector<Filter> filters;$/;"	m	struct:Emulator::Stream::Channel
filters	hiro/core/core.hpp	/^    vector<string> filters;$/;"	m	struct:hiro::BrowserWindow::State
filters	hiro/extension/browser-dialog.cpp	/^  vector<vector<string>> filters;$/;"	m	struct:BrowserDialogWindow	file:
filters	hiro/extension/browser-dialog.hpp	/^    vector<string> filters = {"*"};$/;"	m	struct:BrowserDialog::State
fineX	higan/fc/ppu/ppu.hpp	/^      NaturalBitField<uint,16,18> fineX;$/;"	m	union:PPU::IO::Union
fineY	higan/fc/ppu/ppu.hpp	/^      NaturalBitField<uint,12,14> fineY;$/;"	m	union:PPU::IO::Union
finished	nall/database/odbc.hpp	/^      bool finished = false;$/;"	m	struct:nall::Database::ODBC::Query::Iterator
finished	nall/database/sqlite3.hpp	/^      bool finished = false;$/;"	m	struct:nall::Database::SQLite3::Query::Iterator
fiq	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    } fiq;$/;"	m	struct:Processor	typeref:struct:Processor::FIQ
firmware	higan/target-bsnes/program/program.hpp	/^    vector<uint8_t> firmware;$/;"	m	struct:Program::SuperFamicom
first	higan/pce/vdc/vdc.hpp	/^      bool   first = 0;$/;"	m	struct:VDC::Sprite::Object
firstSprite	higan/sfc/ppu/object.hpp	/^    uint7  firstSprite;$/;"	m	struct:Object::IO
fixedTransfer	higan/sfc/cpu/cpu.hpp	/^    uint1 fixedTransfer = 1;$/;"	m	struct:CPU::Channel
flag	higan/gba/cpu/cpu.hpp	/^    uint1 flag[10];$/;"	m	struct:Keypad
flag	higan/gba/cpu/cpu.hpp	/^    uint16 flag;$/;"	m	struct:IRQ
flag	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint1 flag;    \/\/bit 0$/;"	m	struct:MCC::IRQ
flag	ruby/input/keyboard/rawinput.cpp	/^    uint16_t flag;$/;"	m	struct:InputKeyboardRawInput::Key	file:
flags	higan/processor/upd96050/upd96050.hpp	/^  } flags;$/;"	m	struct:Processor::uPD96050	typeref:struct:Processor::uPD96050::Flags
flags	ruby/audio/asio.hpp	/^  unsigned long flags;$/;"	m	struct:ASIOTimeCode
flags	ruby/audio/asio.hpp	/^  unsigned long flags;$/;"	m	struct:ASIOTimeInfo
flags.c	nall/GNUmakefile	/^flags.c      = -x c -std=c11$/;"	m
flags.cpp	nall/GNUmakefile	/^    flags.cpp = -x c++ -std=gnu++14$/;"	m
flags.cpp	nall/GNUmakefile	/^flags.cpp    = -x c++ -std=c++14$/;"	m
flags.deps	nall/GNUmakefile	/^flags.deps   = -MMD -MP -MF $(@:.o=.d)$/;"	m
flags.objc	nall/GNUmakefile	/^flags.objc   = -x objective-c -std=c11$/;"	m
flags.objcpp	nall/GNUmakefile	/^flags.objcpp = -x objective-c++ -std=c++14$/;"	m
flash	higan/gba/cartridge/memory.hpp	/^} flash;$/;"	v	typeref:struct:FLASH
flip	nall/primitives.hpp	/^  inline auto flip() { return data ^= 1; }$/;"	f	struct:nall::Boolean
flip	nall/primitives.hpp	/^  inline auto flip(bool value) { return data != value ? (data = value, true) : false; }$/;"	f	struct:nall::Boolean
float32	ruby/audio/audio.hpp	/^  enum class Format : uint { none, int16, int32, float32, float64 };$/;"	m	class:AudioDriver::Format
flow	hiro/core/core.hpp	/^    Orientation flow = Orientation::Vertical;$/;"	m	struct:hiro::mIconView::State
flow	hiro/core/shared.hpp	/^  auto flow() const { return self().flow(); }$/;"	f	struct:IconView
flush	higan/target-bsnes/settings/settings.hpp	/^    bool flush = false;$/;"	m	struct:Settings::Video
flush	ruby/video/video.hpp	/^  bool flush = false;$/;"	m	struct:VideoDriver
fm	nall/decode/zip.hpp	/^  file_map fm;$/;"	m	struct:nall::Decode::ZIP
font	hiro/core/application.hpp	/^    Font font;$/;"	m	struct:Application::State
font	hiro/core/object.hpp	/^    Font font;                  \/\/32$/;"	m	struct:mObject::State
forceBlank	higan/gba/ppu/ppu.hpp	/^    uint1 forceBlank;$/;"	m	struct:PPU::IO
foreach	hiro/qt/header.hpp	6;"	d
foregroundColor	hiro/core/core.hpp	/^    Color foregroundColor;$/;"	m	struct:hiro::mComboEdit::State
foregroundColor	hiro/core/core.hpp	/^    Color foregroundColor;$/;"	m	struct:hiro::mConsole::State
foregroundColor	hiro/core/core.hpp	/^    Color foregroundColor;$/;"	m	struct:hiro::mHexEdit::State
foregroundColor	hiro/core/core.hpp	/^    Color foregroundColor;$/;"	m	struct:hiro::mIconView::State
foregroundColor	hiro/core/core.hpp	/^    Color foregroundColor;$/;"	m	struct:hiro::mLabel::State
foregroundColor	hiro/core/core.hpp	/^    Color foregroundColor;$/;"	m	struct:hiro::mLineEdit::State
foregroundColor	hiro/core/core.hpp	/^    Color foregroundColor;$/;"	m	struct:hiro::mTextEdit::State
foregroundColor	hiro/core/core.hpp	/^    Color foregroundColor;$/;"	m	struct:hiro::mTreeView::State
foregroundColor	hiro/core/core.hpp	/^    Color foregroundColor;$/;"	m	struct:hiro::mTreeViewItem::State
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:ComboEdit
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:Console
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:HexEdit
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:IconView
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:Label
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:LineEdit
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:TableView
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:TableViewCell
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:TableViewColumn
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:TableViewItem
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:TextEdit
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:TreeView
foregroundColor	hiro/core/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:TreeViewItem
foregroundColor	hiro/core/widget/table-view-cell.hpp	/^    Color foregroundColor;$/;"	m	struct:mTableViewCell::State
foregroundColor	hiro/core/widget/table-view-column.hpp	/^    Color foregroundColor;$/;"	m	struct:mTableViewColumn::State
foregroundColor	hiro/core/widget/table-view-item.hpp	/^    Color foregroundColor;$/;"	m	struct:mTableViewItem::State
foregroundColor	hiro/core/widget/table-view.hpp	/^    Color foregroundColor;$/;"	m	struct:mTableView::State
foregroundColor	hiro/extension/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:ListView
foregroundColor	hiro/extension/shared.hpp	/^  auto foregroundColor() const { return self().foregroundColor(); }$/;"	f	struct:ListViewItem
formContainer	hiro/gtk/window.hpp	/^  GtkWidget* formContainer = nullptr;$/;"	m	struct:hiro::pWindow
format	higan/target-bsnes/settings/settings.hpp	/^    string format = "Default";$/;"	m	struct:Settings::Video
format	higan/ws/system/system.hpp	/^    uint1 format;$/;"	m	struct:System::Registers
format	nall/smtp.hpp	/^    Format format = Format::Plain;$/;"	m	struct:nall::SMTP::Information
format	ruby/audio/xaudio2.cpp	/^    Format format = Format::none;$/;"	m	struct:AudioXAudio2::Device	file:
format	ruby/video/opengl/opengl.hpp	/^  GLuint format = GL_RGBA8;$/;"	m	struct:OpenGLTexture
format	ruby/video/video.hpp	/^  string format = "RGB24";$/;"	m	struct:VideoDriver
fp	higan/processor/huc6280/instruction.cpp	292;"	d	file:
fp	higan/processor/huc6280/instruction.cpp	2;"	d	file:
fp	higan/processor/mos6502/instruction.cpp	179;"	d	file:
fp	higan/processor/mos6502/instruction.cpp	2;"	d	file:
fp	higan/processor/spc700/instruction.cpp	266;"	d	file:
fp	higan/processor/spc700/instruction.cpp	2;"	d	file:
fp	nall/encode/zip.hpp	/^  file_buffer fp;$/;"	m	struct:nall::Encode::ZIP
fraction	nall/dsp/resampler/cubic.hpp	/^  double fraction;$/;"	m	struct:nall::DSP::Resampler::Cubic
fragment	ruby/video/opengl/opengl.hpp	/^  GLuint fragment = 0;$/;"	m	struct:OpenGLSurface
frame	higan/fc/apu/apu.hpp	/^  FrameCounter frame;$/;"	m	struct:APU
frame	higan/gba/ppu/background.cpp	/^uint1 PPU::Background::IO::frame;$/;"	m	class:PPU::Background::IO	file:
frame	higan/gba/ppu/ppu.hpp	/^      static uint1 frame;$/;"	m	struct:PPU::Background::IO
frameAdvance	higan/target-bsnes/program/program.hpp	/^  bool frameAdvance = false;$/;"	m	struct:Program
frameGeometry	hiro/core/shared.hpp	/^  auto frameGeometry() const { return self().frameGeometry(); }$/;"	f	struct:Window
frameHeight	hiro/gtk/settings.hpp	/^    int frameHeight = 28;$/;"	m	struct:hiro::Settings::Geometry
frameHeight	hiro/qt/settings.hpp	/^    int frameHeight = 28;$/;"	m	struct:hiro::Settings::Geometry
frameInterrupts	higan/ms/vdp/vdp.hpp	/^    bool frameInterrupts = 0;$/;"	m	struct:VDP::IO
frameWidth	hiro/gtk/settings.hpp	/^    int frameWidth = 8;$/;"	m	struct:hiro::Settings::Geometry
frameWidth	hiro/qt/settings.hpp	/^    int frameWidth = 8;$/;"	m	struct:hiro::Settings::Geometry
frameX	hiro/gtk/settings.hpp	/^    int frameX = 4;$/;"	m	struct:hiro::Settings::Geometry
frameX	hiro/qt/settings.hpp	/^    int frameX = 4;$/;"	m	struct:hiro::Settings::Geometry
frameY	hiro/gtk/settings.hpp	/^    int frameY = 24;$/;"	m	struct:hiro::Settings::Geometry
frameY	hiro/qt/settings.hpp	/^    int frameY = 24;$/;"	m	struct:hiro::Settings::Geometry
framebuffer	ruby/video/opengl/opengl.hpp	/^  GLuint framebuffer = 0;$/;"	m	struct:OpenGLSurface
freezehigh	higan/processor/gsu/registers.hpp	/^  bool freezehigh;$/;"	m	struct:POR
frequency	genius/genius.hpp	/^  string frequency;$/;"	m	struct:Oscillator
frequency	higan/audio/audio.hpp	/^  double frequency = 48000.0;$/;"	m	struct:Emulator::Audio
frequency	higan/emulator/game.hpp	/^    natural frequency;$/;"	m	struct:Emulator::Game::Oscillator
frequency	higan/emulator/thread.hpp	/^  inline auto frequency() const { return _frequency; }$/;"	f	struct:Emulator::Thread
frequency	higan/fc/cartridge/board/sunsoft-5b.cpp	/^    uint12 frequency;$/;"	m	struct:Sunsoft5B::Pulse	file:
frequency	higan/fc/cartridge/chip/vrc6.cpp	/^    uint12 frequency;$/;"	m	struct:VRC6::Pulse	file:
frequency	higan/fc/cartridge/chip/vrc6.cpp	/^    uint12 frequency;$/;"	m	struct:VRC6::Sawtooth	file:
frequency	higan/fc/system/system.hpp	/^    double frequency = Emulator::Constants::Colorburst::NTSC * 6.0;$/;"	m	struct:System::Information
frequency	higan/gb/apu/apu.hpp	/^    uint11 frequency;$/;"	m	struct:APU::Square1
frequency	higan/gb/apu/apu.hpp	/^    uint11 frequency;$/;"	m	struct:APU::Square2
frequency	higan/gb/apu/apu.hpp	/^    uint11 frequency;$/;"	m	struct:APU::Wave
frequency	higan/gb/apu/apu.hpp	/^    uint4 frequency;$/;"	m	struct:APU::Noise
frequency	higan/gba/apu/apu.hpp	/^    uint11 frequency;$/;"	m	struct:APU::Square
frequency	higan/gba/apu/apu.hpp	/^    uint11 frequency;$/;"	m	struct:APU::Wave
frequency	higan/gba/apu/apu.hpp	/^    uint3 frequency;$/;"	m	struct:APU::Envelope
frequency	higan/gba/apu/apu.hpp	/^    uint3 frequency;$/;"	m	struct:APU::Sweep
frequency	higan/gba/apu/apu.hpp	/^    uint4 frequency;$/;"	m	struct:APU::Noise
frequency	higan/gba/cpu/cpu.hpp	/^    uint2 frequency;$/;"	m	struct:Timer
frequency	higan/md/system/system.hpp	/^    double frequency = Emulator::Constants::Colorburst::NTSC * 15.0;$/;"	m	struct:System::Information
frequency	higan/target-bsnes/input/input.hpp	/^  uint64 frequency;  \/\/minimum time in milliseconds before poll() can be called again$/;"	m	struct:InputManager
frequency	higan/target-bsnes/settings/settings.hpp	/^      uint frequency = 4;$/;"	m	struct:Settings::Input::Turbo
frequency	higan/target-bsnes/settings/settings.hpp	/^    uint frequency = 48000;$/;"	m	struct:Settings::Audio
frequency	higan/target-bsnes/settings/settings.hpp	/^    uint frequency = 5;$/;"	m	struct:Settings::Input
frequency	higan/target-higan/input/input.hpp	/^  uint64 frequency;  \/\/minimum time in milliseconds before poll() can be called again$/;"	m	struct:InputManager
frequency	icarus/heuristics/heuristics.hpp	/^  auto& frequency(natural frequency) { _frequency = frequency; return *this; }$/;"	f	struct:Heuristics::Oscillator
frequency	ruby/audio/audio.hpp	/^  uint frequency = 48000;$/;"	m	struct:AudioDriver
frequency	ruby/audio/xaudio2.cpp	/^    uint frequency = 0;$/;"	m	struct:AudioXAudio2::Device	file:
frequencyShadow	higan/gb/apu/apu.hpp	/^    int frequencyShadow;$/;"	m	struct:APU::Square1
from	nall/smtp.hpp	/^    Contact from;$/;"	m	struct:nall::SMTP::Information
fs	nall/vfs/fs/file.hpp	/^namespace nall { namespace vfs { namespace fs {$/;"	n	namespace:nall::vfs
full	higan/gba/cpu/cpu.hpp	/^    inline auto full() const { return load - addr == 16; }$/;"	f	struct:__anon6
fullScreen	hiro/core/shared.hpp	/^  auto fullScreen() const { return self().fullScreen(); }$/;"	f	struct:Window
fullScreen	hiro/core/window.hpp	/^    bool fullScreen = false;$/;"	m	struct:mWindow::State
function	nall/function.hpp	/^  explicit function(void* function) { if(function) callback = new global((auto (*)(P...) -> R)function); }$/;"	f	struct:nall::R
function	nall/function.hpp	/^  function() {}$/;"	f	struct:nall::R
function	nall/function.hpp	/^  function(const function& source) { operator=(source); }$/;"	f	struct:nall::R
function	nall/function.hpp	/^  template<typename L, typename = enable_if_t<is_compatible<L>::value>> function(const L& object) { callback = new lambda<L>(object); }$/;"	f	struct:nall::R
functional_property	nall/property.hpp	/^  functional_property($/;"	f	struct:nall::functional_property
functional_property	nall/property.hpp	/^template<typename T, typename R = T> struct functional_property {$/;"	s	namespace:nall
future	ruby/audio/asio.hpp	/^  char future[64];$/;"	m	struct:ASIOTimeCode
fx	higan/gba/ppu/ppu.hpp	/^    int28 fx;$/;"	m	struct:PPU::Background
fy	higan/gba/ppu/ppu.hpp	/^    int28 fy;$/;"	m	struct:PPU::Background
g	higan/processor/gsu/registers.hpp	/^    BooleanBitField<uint16_t,  5> g;       \/\/go flag$/;"	m	union:SFR::__anon27
gain	nall/dsp/iir/biquad.hpp	/^  double gain;                \/\/peak gain$/;"	m	struct:nall::DSP::IIR::Biquad
game	genius/genius.hpp	/^  Game game;$/;"	m	struct:GameWindow
game	higan/sfc/cartridge/cartridge.hpp	/^  Emulator::Game game;$/;"	m	struct:Cartridge
gameBoy	higan/target-bsnes/program/program.hpp	/^  } gameBoy;$/;"	m	struct:Program	typeref:struct:Program::GameBoy
gameBoy	higan/target-bsnes/settings/settings.hpp	/^      string gameBoy;$/;"	m	struct:Settings::Path::Recent
gameBoyColorMode	higan/gba/ppu/ppu.hpp	/^    uint1 gameBoyColorMode;$/;"	m	struct:PPU::IO
gameBoyInterface	higan/sfc/coprocessor/icd/icd.hpp	/^  GameBoy::GameBoyInterface gameBoyInterface;$/;"	m	struct:ICD
gameGenie	higan/md/cartridge/cartridge.hpp	/^  } gameGenie;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::GameGenie
gamePaths	higan/target-higan/program/program.hpp	/^  vector<string> gamePaths;  \/\/for keeping track of loaded folder locations$/;"	m	struct:Program
gameQueue	higan/target-bsnes/program/program.hpp	/^  vector<string> gameQueue;$/;"	m	struct:Program
gameQueue	higan/target-higan/program/program.hpp	/^  vector<string> gameQueue;  \/\/for command-line and drag-and-drop loading$/;"	m	struct:Program
gameType	higan/gba/cpu/cpu.hpp	/^    uint1 gameType;$/;"	m	struct:Wait
gameWindow	genius/genius.cpp	/^unique_pointer<GameWindow> gameWindow;$/;"	v
gamepads	higan/sfc/controller/super-multitap/super-multitap.hpp	/^  } gamepads[4];$/;"	v	typeref:struct:Gamepad
games	genius/genius.hpp	/^  vector<Game> games;$/;"	m	struct:ListWindow
games	higan/target-bsnes/settings/settings.hpp	/^    string games;$/;"	m	struct:Settings::Path
gamma	higan/target-bsnes/settings/settings.hpp	/^    uint gamma = 150;$/;"	m	struct:Settings::Video
gamma	higan/video/video.hpp	/^  double gamma = 1.0;$/;"	m	struct:Emulator::Video
gaussianOffset	higan/sfc/dsp/dsp.hpp	/^    int gaussianOffset = 0;  \/\/relative fractional position in sample (0x1000 = 1.0)$/;"	m	struct:Voice
gcd	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  GCD gcd;$/;"	m	struct:Decompressor
general	higan/target-bsnes/settings/settings.hpp	/^  } general;$/;"	m	struct:Settings	typeref:struct:Settings::General
generalFlag	higan/gba/cpu/cpu.hpp	/^    uint2 generalFlag;$/;"	m	struct:Joybus
geometry	hiro/core/shared.hpp	/^  auto geometry() const { return self().geometry(); }$/;"	f	struct:Window
geometry	hiro/core/sizable.hpp	/^    Geometry geometry;$/;"	m	struct:mSizable::State
geometry	hiro/core/window.hpp	/^    Geometry geometry = {128, 128, 256, 256};$/;"	m	struct:mWindow::State
geometry	hiro/extension/fixed-layout.hpp	/^    Geometry geometry;$/;"	m	struct:mFixedLayoutCell::State
geometry	hiro/extension/shared.hpp	/^  auto geometry() const { return self().geometry(); }$/;"	f	struct:FixedLayoutCell
geometry	hiro/gtk/settings.hpp	/^  } geometry;$/;"	m	struct:hiro::Settings	typeref:struct:hiro::Settings::Geometry
geometry	hiro/qt/settings.hpp	/^  } geometry;$/;"	m	struct:hiro::Settings	typeref:struct:hiro::Settings::Geometry
geometry	hiro/windows/monitor.cpp	/^  Geometry geometry;$/;"	m	struct:hiro::MonitorInfo	file:
geometry	ruby/video/opengl/opengl.hpp	/^  GLuint geometry = 0;$/;"	m	struct:OpenGLSurface
get	hiro/gtk/settings.cpp	11;"	d	file:
get	hiro/gtk/settings.cpp	24;"	d	file:
get	hiro/qt/settings.cpp	11;"	d	file:
get	hiro/qt/settings.cpp	21;"	d	file:
get	nall/http/request.hpp	/^  Variables get;$/;"	m	struct:nall::HTTP::Request
getter	nall/property.hpp	/^  function<R ()> getter;$/;"	m	struct:nall::virtual_property
getter	nall/property.hpp	/^  function<R (const T&)> getter;$/;"	m	struct:nall::functional_property
glActiveTexture	ruby/video/opengl/bind.hpp	/^PFNGLACTIVETEXTUREPROC glActiveTexture = nullptr;$/;"	v
glAttachShader	ruby/video/opengl/bind.hpp	/^PFNGLATTACHSHADERPROC glAttachShader = nullptr;$/;"	v
glBindBuffer	ruby/video/opengl/bind.hpp	/^PFNGLBINDBUFFERPROC glBindBuffer = nullptr;$/;"	v
glBindFragDataLocation	ruby/video/opengl/bind.hpp	/^PFNGLBINDFRAGDATALOCATIONPROC glBindFragDataLocation = nullptr;$/;"	v
glBindFramebuffer	ruby/video/opengl/bind.hpp	/^PFNGLBINDFRAMEBUFFERPROC glBindFramebuffer = nullptr;$/;"	v
glBindVertexArray	ruby/video/opengl/bind.hpp	/^PFNGLBINDVERTEXARRAYPROC glBindVertexArray = nullptr;$/;"	v
glBufferData	ruby/video/opengl/bind.hpp	/^PFNGLBUFFERDATAPROC glBufferData = nullptr;$/;"	v
glCompileShader	ruby/video/opengl/bind.hpp	/^PFNGLCOMPILESHADERPROC glCompileShader = nullptr;$/;"	v
glCreateProgram	ruby/video/opengl/bind.hpp	/^PFNGLCREATEPROGRAMPROC glCreateProgram = nullptr;$/;"	v
glCreateShader	ruby/video/opengl/bind.hpp	/^PFNGLCREATESHADERPROC glCreateShader = nullptr;$/;"	v
glDeleteBuffers	ruby/video/opengl/bind.hpp	/^PFNGLDELETEBUFFERSPROC glDeleteBuffers = nullptr;$/;"	v
glDeleteFramebuffers	ruby/video/opengl/bind.hpp	/^PFNGLDELETEFRAMEBUFFERSPROC glDeleteFramebuffers = nullptr;$/;"	v
glDeleteProgram	ruby/video/opengl/bind.hpp	/^PFNGLDELETEPROGRAMPROC glDeleteProgram = nullptr;$/;"	v
glDeleteShader	ruby/video/opengl/bind.hpp	/^PFNGLDELETESHADERPROC glDeleteShader = nullptr;$/;"	v
glDeleteVertexArrays	ruby/video/opengl/bind.hpp	/^PFNGLDELETEVERTEXARRAYSPROC glDeleteVertexArrays = nullptr;$/;"	v
glDetachShader	ruby/video/opengl/bind.hpp	/^PFNGLDETACHSHADERPROC glDetachShader = nullptr;$/;"	v
glDisableVertexAttribArray	ruby/video/opengl/bind.hpp	/^PFNGLDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray = nullptr;$/;"	v
glEnableVertexAttribArray	ruby/video/opengl/bind.hpp	/^PFNGLENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray = nullptr;$/;"	v
glFramebufferTexture2D	ruby/video/opengl/bind.hpp	/^PFNGLFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D = nullptr;$/;"	v
glGenBuffers	ruby/video/opengl/bind.hpp	/^PFNGLGENBUFFERSPROC glGenBuffers = nullptr;$/;"	v
glGenFramebuffers	ruby/video/opengl/bind.hpp	/^PFNGLGENFRAMEBUFFERSPROC glGenFramebuffers = nullptr;$/;"	v
glGenVertexArrays	ruby/video/opengl/bind.hpp	/^PFNGLGENVERTEXARRAYSPROC glGenVertexArrays = nullptr;$/;"	v
glGetAttribLocation	ruby/video/opengl/bind.hpp	/^PFNGLGETATTRIBLOCATIONPROC glGetAttribLocation = nullptr;$/;"	v
glGetProcAddress	ruby/video/glx2.cpp	10;"	d	file:
glGetProcAddress	ruby/video/glx2.cpp	18;"	d	file:
glGetProcAddress	ruby/video/opengl/opengl.hpp	13;"	d
glGetProcAddress	ruby/video/opengl/opengl.hpp	5;"	d
glGetProgramInfoLog	ruby/video/opengl/bind.hpp	/^PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog = nullptr;$/;"	v
glGetProgramiv	ruby/video/opengl/bind.hpp	/^PFNGLGETPROGRAMIVPROC glGetProgramiv = nullptr;$/;"	v
glGetShaderInfoLog	ruby/video/opengl/bind.hpp	/^PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog = nullptr;$/;"	v
glGetShaderiv	ruby/video/opengl/bind.hpp	/^PFNGLGETSHADERIVPROC glGetShaderiv = nullptr;$/;"	v
glGetUniformLocation	ruby/video/opengl/bind.hpp	/^PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation = nullptr;$/;"	v
glGetUniformiv	ruby/video/opengl/bind.hpp	/^PFNGLGETUNIFORMIVPROC glGetUniformiv = nullptr;$/;"	v
glLinkProgram	ruby/video/opengl/bind.hpp	/^PFNGLLINKPROGRAMPROC glLinkProgram = nullptr;$/;"	v
glShaderSource	ruby/video/opengl/bind.hpp	/^PFNGLSHADERSOURCEPROC glShaderSource = nullptr;$/;"	v
glUniform1f	ruby/video/opengl/bind.hpp	/^PFNGLUNIFORM1FPROC glUniform1f = nullptr;$/;"	v
glUniform1i	ruby/video/opengl/bind.hpp	/^PFNGLUNIFORM1IPROC glUniform1i = nullptr;$/;"	v
glUniform2f	ruby/video/opengl/bind.hpp	/^PFNGLUNIFORM2FPROC glUniform2f = nullptr;$/;"	v
glUniform2fv	ruby/video/opengl/bind.hpp	/^PFNGLUNIFORM2FVPROC glUniform2fv = nullptr;$/;"	v
glUniform4f	ruby/video/opengl/bind.hpp	/^PFNGLUNIFORM4FPROC glUniform4f = nullptr;$/;"	v
glUniform4fv	ruby/video/opengl/bind.hpp	/^PFNGLUNIFORM4FVPROC glUniform4fv = nullptr;$/;"	v
glUniformMatrix4fv	ruby/video/opengl/bind.hpp	/^PFNGLUNIFORMMATRIX4FVPROC glUniformMatrix4fv = nullptr;$/;"	v
glUseProgram	ruby/video/opengl/bind.hpp	/^PFNGLUSEPROGRAMPROC glUseProgram = nullptr;$/;"	v
glValidateProgram	ruby/video/opengl/bind.hpp	/^PFNGLVALIDATEPROGRAMPROC glValidateProgram = nullptr;$/;"	v
glVertexAttribPointer	ruby/video/opengl/bind.hpp	/^PFNGLVERTEXATTRIBPOINTERPROC glVertexAttribPointer = nullptr;$/;"	v
global	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  } global;$/;"	m	struct:BSMemory	typeref:struct:BSMemory::Global
global	nall/function.hpp	/^  struct global : container {$/;"	s	struct:nall::R
gpoData	higan/ws/cartridge/cartridge.hpp	/^    uint8 gpoData;$/;"	m	struct:Cartridge::Registers
gpoEnable	higan/ws/cartridge/cartridge.hpp	/^    uint8 gpoEnable;$/;"	m	struct:Cartridge::Registers
gpr	higan/processor/hg51b/hg51b.hpp	/^    uint24 gpr[16];  \/\/general purpose registers$/;"	m	struct:Processor::HG51B::Registers
gradient	hiro/core/core.hpp	/^    Gradient gradient;$/;"	m	struct:hiro::mCanvas::State
gradient	hiro/core/shared.hpp	/^  auto gradient() const { return self().gradient(); }$/;"	f	struct:Canvas
granularity	ruby/audio/asio.cpp	/^    long granularity;$/;"	m	struct:AudioASIO::Device	file:
grayscale	higan/fc/ppu/ppu.hpp	/^    bool grayscale = 0;$/;"	m	struct:PPU::IO
grayscale	higan/pce/vce/vce.hpp	/^    bool grayscale = 0;$/;"	m	struct:VCE::IO
green	hiro/core/core.hpp	/^    uint8_t green;$/;"	m	struct:hiro::Color::State
green	nall/image.hpp	/^  alwaysinline auto green() const { return _green; }$/;"	f	struct:nall::image
greenSwap	higan/gba/ppu/ppu.hpp	/^    uint1 greenSwap;$/;"	m	struct:PPU::IO
group	higan/target-bsnes/input/input.hpp	/^    uint group = 0;$/;"	m	struct:InputMapping::Mapping
group	higan/target-higan/input/input.hpp	/^    uint group = 0;$/;"	m	struct:InputMapping::Mapping
group	hiro/core/core.hpp	/^    sGroup group;$/;"	m	struct:hiro::mMenuRadioItem::State
group	hiro/core/core.hpp	/^    sGroup group;$/;"	m	struct:hiro::mRadioButton::State
group	hiro/core/core.hpp	/^    sGroup group;$/;"	m	struct:hiro::mRadioLabel::State
group	hiro/core/shared.hpp	/^  auto group() const { return self().group(); }$/;"	f	struct:MenuRadioItem
group	hiro/core/shared.hpp	/^  auto group() const { return self().group(); }$/;"	f	struct:RadioButton
group	hiro/core/shared.hpp	/^  auto group() const { return self().group(); }$/;"	f	struct:RadioLabel
group	nall/beat/archive/node.hpp	/^    } group;$/;"	m	struct:nall::Beat::Archive::Node::Permission	typeref:struct:nall::Beat::Archive::Node::Permission::Group
gtkButton	hiro/gtk/widget/button.hpp	/^  GtkButton* gtkButton = nullptr;$/;"	m	struct:hiro::pButton
gtkCellIcon	hiro/gtk/widget/combo-button.hpp	/^  GtkCellRenderer* gtkCellIcon = nullptr;$/;"	m	struct:hiro::pComboButton
gtkCellIcon	hiro/gtk/widget/combo-edit.hpp	/^  GtkCellRenderer* gtkCellIcon = nullptr;$/;"	m	struct:hiro::pComboEdit
gtkCellIcon	hiro/gtk/widget/table-view-column.hpp	/^  GtkCellRenderer* gtkCellIcon = nullptr;$/;"	m	struct:hiro::pTableViewColumn
gtkCellPixbuf	hiro/gtk/widget/tree-view.hpp	/^  GtkCellRenderer* gtkCellPixbuf = nullptr;$/;"	m	struct:hiro::pTreeView
gtkCellText	hiro/gtk/widget/combo-button.hpp	/^  GtkCellRenderer* gtkCellText = nullptr;$/;"	m	struct:hiro::pComboButton
gtkCellText	hiro/gtk/widget/combo-edit.hpp	/^  GtkCellRenderer* gtkCellText = nullptr;$/;"	m	struct:hiro::pComboEdit
gtkCellText	hiro/gtk/widget/table-view-column.hpp	/^  GtkCellRenderer* gtkCellText = nullptr;$/;"	m	struct:hiro::pTableViewColumn
gtkCellText	hiro/gtk/widget/tree-view.hpp	/^  GtkCellRenderer* gtkCellText = nullptr;$/;"	m	struct:hiro::pTreeView
gtkCellToggle	hiro/gtk/widget/table-view-column.hpp	/^  GtkCellRenderer* gtkCellToggle = nullptr;$/;"	m	struct:hiro::pTableViewColumn
gtkCellToggle	hiro/gtk/widget/tree-view.hpp	/^  GtkCellRenderer* gtkCellToggle = nullptr;$/;"	m	struct:hiro::pTreeView
gtkCheckMenuItem	hiro/gtk/action/menu-radio-item.hpp	/^  GtkCheckMenuItem* gtkCheckMenuItem = nullptr;$/;"	m	struct:hiro::pMenuRadioItem
gtkColumn	hiro/gtk/widget/table-view-column.hpp	/^  GtkTreeViewColumn* gtkColumn = nullptr;$/;"	m	struct:hiro::pTableViewColumn
gtkComboBox	hiro/gtk/widget/combo-button.hpp	/^  GtkComboBox* gtkComboBox = nullptr;$/;"	m	struct:hiro::pComboButton
gtkComboBox	hiro/gtk/widget/combo-edit.hpp	/^  GtkComboBox* gtkComboBox = nullptr;$/;"	m	struct:hiro::pComboEdit
gtkContainer	hiro/gtk/widget/source-edit.hpp	/^  GtkContainer* gtkContainer = nullptr;$/;"	m	struct:hiro::pSourceEdit
gtkHeader	hiro/gtk/widget/table-view-column.hpp	/^  GtkWidget* gtkHeader = nullptr;$/;"	m	struct:hiro::pTableViewColumn
gtkHeaderIcon	hiro/gtk/widget/table-view-column.hpp	/^  GtkWidget* gtkHeaderIcon = nullptr;$/;"	m	struct:hiro::pTableViewColumn
gtkHeaderSort	hiro/gtk/widget/table-view-column.hpp	/^  GtkWidget* gtkHeaderSort = nullptr;$/;"	m	struct:hiro::pTableViewColumn
gtkHeaderText	hiro/gtk/widget/table-view-column.hpp	/^  GtkWidget* gtkHeaderText = nullptr;$/;"	m	struct:hiro::pTableViewColumn
gtkIter	hiro/gtk/widget/combo-button-item.hpp	/^  GtkTreeIter gtkIter;$/;"	m	struct:hiro::pComboButtonItem
gtkIter	hiro/gtk/widget/combo-edit-item.hpp	/^  GtkTreeIter gtkIter;$/;"	m	struct:hiro::pComboEditItem
gtkIter	hiro/gtk/widget/table-view-item.hpp	/^  GtkTreeIter gtkIter;$/;"	m	struct:hiro::pTableViewItem
gtkIter	hiro/gtk/widget/tree-view-item.hpp	/^  GtkTreeIter gtkIter;$/;"	m	struct:hiro::pTreeViewItem
gtkLabel	hiro/gtk/widget/frame.hpp	/^  GtkWidget* gtkLabel = nullptr;$/;"	m	struct:hiro::pFrame
gtkListStore	hiro/gtk/widget/combo-button.hpp	/^  GtkListStore* gtkListStore = nullptr;$/;"	m	struct:hiro::pComboButton
gtkListStore	hiro/gtk/widget/combo-edit.hpp	/^  GtkListStore* gtkListStore = nullptr;$/;"	m	struct:hiro::pComboEdit
gtkListStore	hiro/gtk/widget/table-view.hpp	/^  GtkListStore* gtkListStore = nullptr;$/;"	m	struct:hiro::pTableView
gtkMenu	hiro/gtk/action/menu.hpp	/^  GtkWidget* gtkMenu = nullptr;$/;"	m	struct:hiro::pMenu
gtkMenu	hiro/gtk/popup-menu.hpp	/^  GtkWidget* gtkMenu = nullptr;$/;"	m	struct:hiro::pPopupMenu
gtkMenu	hiro/gtk/window.hpp	/^  GtkWidget* gtkMenu = nullptr;$/;"	m	struct:hiro::pWindow
gtkParent	hiro/gtk/widget/widget.hpp	/^  GtkWidget* gtkParent = nullptr;$/;"	m	struct:hiro::pWidget
gtkRadioButton	hiro/gtk/widget/radio-label.hpp	/^  GtkRadioButton* gtkRadioButton = nullptr;$/;"	m	struct:hiro::pRadioLabel
gtkRadioMenuItem	hiro/gtk/action/menu-radio-item.hpp	/^  GtkRadioMenuItem* gtkRadioMenuItem = nullptr;$/;"	m	struct:hiro::pMenuRadioItem
gtkScrolledWindow	hiro/gtk/widget/source-edit.hpp	/^  GtkScrolledWindow* gtkScrolledWindow = nullptr;$/;"	m	struct:hiro::pSourceEdit
gtkScrolledWindow	hiro/gtk/widget/table-view.hpp	/^  GtkScrolledWindow* gtkScrolledWindow = nullptr;$/;"	m	struct:hiro::pTableView
gtkScrolledWindow	hiro/gtk/widget/tree-view.hpp	/^  GtkScrolledWindow* gtkScrolledWindow = nullptr;$/;"	m	struct:hiro::pTreeView
gtkSourceBuffer	hiro/gtk/widget/source-edit.hpp	/^  GtkSourceBuffer* gtkSourceBuffer = nullptr;$/;"	m	struct:hiro::pSourceEdit
gtkSourceLanguage	hiro/gtk/widget/source-edit.hpp	/^  GtkSourceLanguage* gtkSourceLanguage = nullptr;$/;"	m	struct:hiro::pSourceEdit
gtkSourceLanguageManager	hiro/gtk/widget/source-edit.hpp	/^  GtkSourceLanguageManager* gtkSourceLanguageManager = nullptr;$/;"	m	struct:hiro::pSourceEdit
gtkSourceStyleScheme	hiro/gtk/widget/source-edit.hpp	/^  GtkSourceStyleScheme* gtkSourceStyleScheme = nullptr;$/;"	m	struct:hiro::pSourceEdit
gtkSourceStyleSchemeManager	hiro/gtk/widget/source-edit.hpp	/^  GtkSourceStyleSchemeManager* gtkSourceStyleSchemeManager = nullptr;$/;"	m	struct:hiro::pSourceEdit
gtkSourceView	hiro/gtk/widget/source-edit.hpp	/^  GtkSourceView* gtkSourceView = nullptr;$/;"	m	struct:hiro::pSourceEdit
gtkStatus	hiro/gtk/window.hpp	/^  GtkWidget* gtkStatus = nullptr;$/;"	m	struct:hiro::pWindow
gtkTextBuffer	hiro/gtk/widget/source-edit.hpp	/^  GtkTextBuffer* gtkTextBuffer = nullptr;$/;"	m	struct:hiro::pSourceEdit
gtkTextView	hiro/gtk/widget/source-edit.hpp	/^  GtkTextView* gtkTextView = nullptr;$/;"	m	struct:hiro::pSourceEdit
gtkToggleButton	hiro/gtk/widget/radio-label.hpp	/^  GtkToggleButton* gtkToggleButton = nullptr;$/;"	m	struct:hiro::pRadioLabel
gtkTreeModel	hiro/gtk/widget/combo-button.hpp	/^  GtkTreeModel* gtkTreeModel = nullptr;$/;"	m	struct:hiro::pComboButton
gtkTreeModel	hiro/gtk/widget/combo-edit.hpp	/^  GtkTreeModel* gtkTreeModel = nullptr;$/;"	m	struct:hiro::pComboEdit
gtkTreeModel	hiro/gtk/widget/table-view.hpp	/^  GtkTreeModel* gtkTreeModel = nullptr;$/;"	m	struct:hiro::pTableView
gtkTreeModel	hiro/gtk/widget/tree-view.hpp	/^  GtkTreeModel* gtkTreeModel = nullptr;$/;"	m	struct:hiro::pTreeView
gtkTreeSelection	hiro/gtk/widget/table-view.hpp	/^  GtkTreeSelection* gtkTreeSelection = nullptr;$/;"	m	struct:hiro::pTableView
gtkTreeSelection	hiro/gtk/widget/tree-view.hpp	/^  GtkTreeSelection* gtkTreeSelection = nullptr;$/;"	m	struct:hiro::pTreeView
gtkTreeStore	hiro/gtk/widget/tree-view.hpp	/^  GtkTreeStore* gtkTreeStore = nullptr;$/;"	m	struct:hiro::pTreeView
gtkTreeView	hiro/gtk/widget/table-view.hpp	/^  GtkTreeView* gtkTreeView = nullptr;$/;"	m	struct:hiro::pTableView
gtkTreeView	hiro/gtk/widget/tree-view.hpp	/^  GtkTreeView* gtkTreeView = nullptr;$/;"	m	struct:hiro::pTreeView
gtkTreeViewColumn	hiro/gtk/widget/tree-view.hpp	/^  GtkTreeViewColumn* gtkTreeViewColumn = nullptr;$/;"	m	struct:hiro::pTreeView
gtkWidget	hiro/gtk/widget/widget.hpp	/^  GtkWidget* gtkWidget = nullptr;$/;"	m	struct:hiro::pWidget
gtkWidgetChild	hiro/gtk/widget/table-view.hpp	/^  GtkWidget* gtkWidgetChild = nullptr;$/;"	m	struct:hiro::pTableView
gtkWidgetChild	hiro/gtk/widget/tree-view.hpp	/^  GtkWidget* gtkWidgetChild = nullptr;$/;"	m	struct:hiro::pTreeView
gtkWidgetSourceView	hiro/gtk/widget/source-edit.hpp	/^  GtkWidget* gtkWidgetSourceView = nullptr;$/;"	m	struct:hiro::pSourceEdit
h	higan/processor/spc700/spc700.hpp	/^    bool h;  \/\/half-carry$/;"	m	struct:Processor::SPC700::Flags
h	higan/processor/v30mz/v30mz.hpp	/^        BooleanBitField<uint16_t,  4> h;  \/\/half-carry$/;"	m	union:Processor::Registers::Flags::__anon26
h	nall/hash/sha224.hpp	/^  uint32_t h[8] = {0};$/;"	m	struct:nall::Hash::SHA224
h	nall/hash/sha256.hpp	/^  uint32_t h[8] = {0};$/;"	m	struct:nall::Hash::SHA256
h	nall/hash/sha384.hpp	/^  uint64_t h[8] = {0};$/;"	m	struct:nall::Hash::SHA384
h	nall/hash/sha512.hpp	/^  uint64_t h[8] = {0};$/;"	m	struct:nall::Hash::SHA512
h	nall/mac/poly1305.hpp	/^  uint64_t h[3];$/;"	m	struct:nall::MAC::Poly1305
hack	higan/target-bsnes/settings/settings.hpp	/^    } hack;$/;"	m	struct:Settings::Emulator	typeref:struct:Settings::Emulator::Hack
hacks	higan/sfc/interface/configuration.hpp	/^  } hacks;$/;"	m	struct:Configuration	typeref:struct:Configuration::Hacks
hacks	higan/sfc/system/system.hpp	/^  } hacks;$/;"	m	struct:System	typeref:struct:System::Hacks
halt	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint1 halt = true;$/;"	m	struct:MBC3::IO::RTC
halt	higan/processor/hg51b/hg51b.hpp	/^    uint1 halt = 1;$/;"	m	struct:Processor::HG51B::IO
halt	higan/processor/lr35902/lr35902.hpp	/^    uint1 halt;$/;"	m	struct:Processor::LR35902::Registers
halt	higan/processor/v30mz/v30mz.hpp	/^    bool halt;    \/\/set to true for hlt instruction; blocks execution until next interrupt$/;"	m	struct:Processor::State
halt	higan/processor/z80/z80.hpp	/^    bool halt;  \/\/HALT instruction executed$/;"	m	struct:Processor::Z80::Registers
haltLengthCounter	higan/fc/apu/apu.hpp	/^    bool haltLengthCounter;$/;"	m	struct:APU::Triangle
halted	higan/gba/cpu/cpu.hpp	/^    boolean halted;$/;"	m	struct:Context
handle	higan/emulator/thread.hpp	/^  inline auto handle() const { return _handle; }$/;"	f	struct:Emulator::Thread
handle	hiro/core/shared.hpp	/^  auto handle() const { return self().handle(); }$/;"	f	struct:Viewport
handle	nall/dl.hpp	/^  uintptr handle = 0;$/;"	m	struct:nall::library
handle	nall/thread.hpp	/^  pthread_t handle;$/;"	m	struct:nall::thread
handle	ruby/input/joypad/directinput.cpp	/^  uintptr_t handle = 0;$/;"	m	struct:InputJoypadDirectInput	file:
handle	ruby/input/joypad/sdl.cpp	/^    SDL_Joystick* handle = nullptr;$/;"	m	struct:InputJoypadSDL::Joypad	file:
handle	ruby/input/mouse/rawinput.cpp	/^  uintptr handle = 0;$/;"	m	struct:InputMouseRawInput	file:
handle	ruby/input/mouse/xlib.cpp	/^  uintptr handle = 0;$/;"	m	struct:InputMouseXlib	file:
handle	ruby/input/shared/rawinput.cpp	/^    HANDLE handle = nullptr;$/;"	m	struct:RawInput::Device	file:
has	higan/sfc/cartridge/cartridge.hpp	/^  } has;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Has
hasEEPROM	higan/gba/cartridge/cartridge.hpp	/^  bool hasEEPROM = false;$/;"	m	struct:Cartridge
hasFLASH	higan/gba/cartridge/cartridge.hpp	/^  bool hasFLASH = false;$/;"	m	struct:Cartridge
hasQuit	higan/target-higan/program/program.hpp	/^  bool hasQuit = false;$/;"	m	struct:Program
hasSRAM	higan/gba/cartridge/cartridge.hpp	/^  bool hasSRAM = false;$/;"	m	struct:Cartridge
has_serialize	nall/serializer.hpp	/^struct has_serialize {$/;"	s	namespace:nall
hash	higan/md/cartridge/cartridge.hpp	/^    string hash;$/;"	m	struct:Cartridge::Information
hashset	nall/hashset.hpp	/^  hashset(const hashset& source) { operator=(source); }$/;"	f	struct:nall::hashset
hashset	nall/hashset.hpp	/^  hashset(hashset&& source) { operator=(move(source)); }$/;"	f	struct:nall::hashset
hashset	nall/hashset.hpp	/^  hashset(uint length) : length(bit::round(length)) {}$/;"	f	struct:nall::hashset
hashset	nall/hashset.hpp	/^struct hashset {$/;"	s	namespace:nall
hats	ruby/input/joypad/udev.cpp	/^    set<JoypadInput> hats;$/;"	m	struct:InputJoypadUdev::Joypad	file:
hbitmap	hiro/windows/action/menu-item.hpp	/^  HBITMAP hbitmap = 0;$/;"	m	struct:hiro::pMenuItem
hbitmap	hiro/windows/action/menu.hpp	/^  HBITMAP hbitmap = 0;$/;"	m	struct:hiro::pMenu
hblank	higan/gba/ppu/ppu.hpp	/^      uint1 hblank;   \/\/1 = allow access to OAM during Hblank$/;"	m	struct:PPU::Objects::IO
hblank	higan/gba/ppu/ppu.hpp	/^    uint1 hblank;$/;"	m	struct:PPU::IO
hbrush	hiro/windows/window.hpp	/^  HBRUSH hbrush = nullptr;$/;"	m	struct:hiro::pWindow
hbrushColor	hiro/windows/window.hpp	/^  COLORREF hbrushColor = 0;$/;"	m	struct:hiro::pWindow
hclk	higan/ws/ppu/ppu.hpp	/^    uint hclk = 0;$/;"	m	struct:PPU::State
hclock	higan/pce/vce/vce.hpp	/^    uint hclock = 0;$/;"	m	struct:VCE::Timing
hclock	higan/pce/vdc/vdc.hpp	/^    uint  hclock = 0;$/;"	m	struct:VDC::Timing
hcnt	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 hcnt;$/;"	m	struct:SA1::MMIO
hcounter	higan/fc/cartridge/chip/mmc5.cpp	/^  uint hcounter;$/;"	m	struct:MMC5	file:
hcounter	higan/md/vdp/vdp.hpp	/^    uint16 hcounter;$/;"	m	struct:VDP::State
hcounter	higan/ms/vdp/vdp.hpp	/^    uint hcounter = 0;  \/\/horizontal counter$/;"	m	struct:VDP::IO
hcounter	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 hcounter;$/;"	m	struct:SA1::Status
hcounter	higan/sfc/ppu/counter/counter.hpp	/^    uint hcounter = 0;$/;"	m	struct:PPUcounter::__anon13
hcounter	higan/sfc/ppu/counter/counter.hpp	/^    uint hcounter[2048] = {};$/;"	m	struct:PPUcounter::__anon14
hcounter	higan/sfc/ppu/ppu.hpp	/^    uint1 hcounter;$/;"	m	struct:PPU::Latches
hcounter	higan/sfc/ppu/ppu.hpp	/^    uint16 hcounter;$/;"	m	struct:PPU::IO
hcr	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 hcr;$/;"	m	struct:SA1::MMIO
hdmaAddress	higan/sfc/cpu/cpu.hpp	/^    uint16 hdmaAddress = 0xffff;$/;"	m	struct:CPU::Channel
hdmaCompleted	higan/sfc/cpu/cpu.hpp	/^    uint1 hdmaCompleted;$/;"	m	struct:CPU::Channel
hdmaDoTransfer	higan/sfc/cpu/cpu.hpp	/^    uint1 hdmaDoTransfer;$/;"	m	struct:CPU::Channel
hdmaEnable	higan/sfc/cpu/cpu.hpp	/^    uint1 hdmaEnable;$/;"	m	struct:CPU::Channel
hdmaMode	higan/sfc/cpu/cpu.hpp	/^    bool hdmaMode = 0;  \/\/0 = init, 1 = run$/;"	m	struct:CPU::Status
hdmaPending	higan/sfc/cpu/cpu.hpp	/^    bool hdmaPending = false;$/;"	m	struct:CPU::Status
hdmaPosition	higan/sfc/cpu/cpu.hpp	/^    uint hdmaPosition = 0;$/;"	m	struct:CPU::Status
hdmaSetupPosition	higan/sfc/cpu/cpu.hpp	/^    uint hdmaSetupPosition = 0;$/;"	m	struct:CPU::Status
hdmaSetupTriggered	higan/sfc/cpu/cpu.hpp	/^    bool hdmaSetupTriggered = false;$/;"	m	struct:CPU::Status
hdmaTriggered	higan/sfc/cpu/cpu.hpp	/^    bool hdmaTriggered = false;$/;"	m	struct:CPU::Status
hdot	higan/md/vdp/vdp.hpp	/^    uint16 hdot;$/;"	m	struct:VDP::State
headSizeLimit	nall/http/role.hpp	/^    int headSizeLimit   =   16 * 1024;  \/\/client, server$/;"	m	struct:nall::HTTP::Role::Settings
header	nall/http/message.hpp	/^  Variables header;$/;"	m	struct:nall::HTTP::Message
headerAddress	icarus/heuristics/game-boy.cpp	/^  uint headerAddress = 0;$/;"	m	struct:Heuristics::GameBoy	file:
headerAddress	icarus/heuristics/super-famicom.cpp	/^  uint headerAddress = 0;$/;"	m	struct:Heuristics::SuperFamicom	file:
headered	hiro/core/shared.hpp	/^  auto headered() const { return self().headered(); }$/;"	f	struct:TableView
headered	hiro/core/widget/table-view.hpp	/^    bool headered = false;$/;"	m	struct:mTableView::State
headphoneEnable	higan/ws/apu/apu.hpp	/^    uint1 headphoneEnable;$/;"	m	struct:APU::Registers
height	higan/emulator/interface.hpp	/^    uint height = 0;$/;"	m	struct:Emulator::Interface
height	higan/gba/ppu/ppu.hpp	/^    uint height;$/;"	m	struct:PPU::Object
height	higan/pce/vdc/vdc.hpp	/^      uint   height = 0;$/;"	m	struct:VDC::Sprite::Object
height	higan/pce/vdc/vdc.hpp	/^    uint8  height;$/;"	m	struct:VDC::Background
height	higan/target-bsnes/program/program.hpp	/^    uint height = 0;$/;"	m	struct:Program::Screenshot
height	higan/video/video.hpp	/^  const uint height;$/;"	m	struct:Emulator::Sprite
height	higan/video/video.hpp	/^  uint height = 0;$/;"	m	struct:Emulator::Video
height	hiro/core/core.hpp	/^    float height;$/;"	m	struct:hiro::Geometry::State
height	hiro/core/core.hpp	/^    float height;$/;"	m	struct:hiro::Size::State
height	hiro/windows/widget/canvas.hpp	/^  signed height = 0;$/;"	m	struct:hiro::pCanvas
height	nall/decode/png.hpp	/^    uint height;$/;"	m	struct:nall::Decode::PNG::Info
height	nall/image.hpp	/^  alwaysinline auto height() const { return _height; }$/;"	f	struct:nall::image
height	ruby/video/opengl/opengl.hpp	/^  uint height = 0;$/;"	m	struct:OpenGLTexture
height	ruby/video/video.hpp	/^  uint height = 0;$/;"	m	struct:VideoDriver
hen	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool hen;$/;"	m	struct:SA1::MMIO
hexEdit	hiro/cocoa/widget/hex-edit.hpp	/^  HexEdit& hexEdit;$/;"	m	struct:hiro::pHexEdit
hflip	higan/gba/ppu/ppu.hpp	/^      uint1  hflip;$/;"	m	struct:PPU::Background::Latch
hflip	higan/gba/ppu/ppu.hpp	/^    uint1  hflip;$/;"	m	struct:PPU::Object
hflip	higan/pce/vdc/vdc.hpp	/^      bool   hflip = 0;$/;"	m	struct:VDC::Sprite::Object
hflip	higan/sfc/ppu/object.hpp	/^    uint1  hflip;$/;"	m	struct:Object::Tile
hflip	higan/sfc/ppu/object.hpp	/^    uint1 hflip;$/;"	m	struct:OAM::Object
hflipMode7	higan/sfc/ppu/ppu.hpp	/^    bool hflipMode7;$/;"	m	struct:PPU::IO
hfont	hiro/windows/status-bar.hpp	/^  HFONT hfont = 0;$/;"	m	struct:hiro::pStatusBar
hfont	hiro/windows/widget/widget.hpp	/^  HFONT hfont = nullptr;$/;"	m	struct:hiro::pWidget
hi	higan/processor/wdc65816/wdc65816.cpp	31;"	d	file:
hi	higan/processor/wdc65816/wdc65816.cpp	90;"	d	file:
hi	nall/arithmetic/natural.hpp	/^  Type hi;$/;"	m	struct:nall::Pair
hiddenEnvelope	higan/sfc/dsp/dsp.hpp	/^    int hiddenEnvelope = 0;  \/\/used by GAIN mode 7, very obscure quirk$/;"	m	struct:Voice
highnibble	higan/processor/gsu/registers.hpp	/^  bool highnibble;$/;"	m	struct:POR
himl	hiro/windows/header.hpp	/^    HIMAGELIST himl;$/;"	m	struct:__anon1
hiresMode7	higan/sfc/interface/configuration.hpp	/^      bool hiresMode7 = false;$/;"	m	struct:Configuration::Hacks::PPUFast
hiresMode7	higan/target-bsnes/settings/settings.hpp	/^        bool hiresMode7 = false;$/;"	m	struct:Settings::Emulator::Hack::FastPPU
hiro	hiro/GNUmakefile	/^    hiro := cocoa$/;"	m
hiro	hiro/GNUmakefile	/^    hiro := gtk2$/;"	m
hiro	hiro/GNUmakefile	/^    hiro := windows$/;"	m
hiro	hiro/cocoa/action/action.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/action/action.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/action/menu-check-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/action/menu-check-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/action/menu-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/action/menu-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/action/menu-radio-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/action/menu-radio-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/action/menu-separator.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/action/menu-separator.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/action/menu.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/action/menu.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/application.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/application.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/browser-window.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/browser-window.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/desktop.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/desktop.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/font.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/font.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/group.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/group.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/keyboard.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/keyboard.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/menu-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/menu-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/message-window.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/message-window.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/monitor.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/monitor.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/mouse.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/mouse.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/object.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/object.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/popup-menu.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/popup-menu.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/sizable.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/sizable.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/status-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/status-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/timer.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/timer.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/canvas.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/canvas.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/check-button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/check-button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/check-label.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/check-label.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/combo-button-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/combo-button-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/combo-button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/combo-button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/console.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/console.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/frame.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/frame.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/hex-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/hex-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/horizontal-scroll-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/horizontal-scroll-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/horizontal-slider.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/horizontal-slider.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/label.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/label.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/line-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/line-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/progress-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/progress-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/radio-button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/radio-button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/radio-label.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/radio-label.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/tab-frame-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/tab-frame-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/tab-frame.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/tab-frame.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/table-view-cell.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/table-view-cell.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/table-view-column.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/table-view-column.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/table-view-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/table-view-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/table-view.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/table-view.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/text-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/text-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/vertical-scroll-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/vertical-scroll-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/vertical-slider.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/vertical-slider.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/viewport.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/viewport.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/widget/widget.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/widget/widget.hpp	/^namespace hiro {$/;"	n
hiro	hiro/cocoa/window.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/cocoa/window.hpp	/^namespace hiro {$/;"	n
hiro	hiro/core/core.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/core/core.hpp	/^namespace hiro {$/;"	n
hiro	hiro/extension/extension.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/extension/extension.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/action/action.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/action/action.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/action/menu-check-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/action/menu-check-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/action/menu-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/action/menu-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/action/menu-radio-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/action/menu-radio-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/action/menu-separator.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/action/menu-separator.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/action/menu.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/action/menu.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/application.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/application.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/browser-window.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/browser-window.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/desktop.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/desktop.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/font.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/font.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/group.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/group.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/keyboard.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/keyboard.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/menu-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/menu-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/message-window.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/message-window.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/monitor.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/monitor.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/mouse.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/mouse.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/object.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/object.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/popup-menu.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/popup-menu.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/settings.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/settings.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/sizable.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/sizable.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/status-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/status-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/timer.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/timer.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/utility.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/canvas.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/canvas.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/check-button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/check-button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/check-label.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/check-label.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/combo-button-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/combo-button-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/combo-button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/combo-button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/combo-edit-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/combo-edit-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/combo-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/combo-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/console.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/console.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/frame.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/frame.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/hex-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/hex-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/horizontal-scroll-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/horizontal-scroll-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/horizontal-slider.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/horizontal-slider.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/icon-view-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/icon-view-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/icon-view.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/icon-view.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/label.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/label.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/line-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/line-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/progress-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/progress-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/radio-button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/radio-button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/radio-label.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/radio-label.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/source-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/source-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/tab-frame-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/tab-frame-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/tab-frame.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/tab-frame.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/table-view-cell.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/table-view-cell.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/table-view-column.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/table-view-column.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/table-view-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/table-view-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/table-view.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/table-view.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/text-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/text-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/tree-view-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/tree-view-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/tree-view.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/tree-view.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/vertical-scroll-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/vertical-scroll-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/vertical-slider.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/vertical-slider.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/viewport.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/viewport.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/widget/widget.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/widget/widget.hpp	/^namespace hiro {$/;"	n
hiro	hiro/gtk/window.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/gtk/window.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/action/action.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/action/action.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/action/menu-check-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/action/menu-check-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/action/menu-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/action/menu-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/action/menu-radio-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/action/menu-radio-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/action/menu-separator.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/action/menu-separator.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/action/menu.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/action/menu.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/application.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/application.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/browser-window.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/browser-window.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/desktop.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/desktop.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/font.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/font.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/group.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/group.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/keyboard.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/keyboard.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/menu-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/menu-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/message-window.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/message-window.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/monitor.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/monitor.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/mouse.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/mouse.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/object.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/object.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/platform.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/popup-menu.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/popup-menu.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/qt.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/settings.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/settings.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/sizable.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/sizable.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/status-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/status-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/timer.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/timer.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/utility.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/canvas.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/canvas.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/check-button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/check-button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/check-label.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/check-label.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/combo-button-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/combo-button-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/combo-button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/combo-button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/frame.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/frame.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/hex-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/hex-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/horizontal-scroll-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/horizontal-scroll-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/horizontal-slider.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/horizontal-slider.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/label.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/label.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/line-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/line-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/progress-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/progress-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/radio-button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/radio-button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/radio-label.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/radio-label.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/tab-frame-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/tab-frame-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/tab-frame.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/tab-frame.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/table-view-cell.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/table-view-cell.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/table-view-column.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/table-view-column.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/table-view-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/table-view-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/table-view.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/table-view.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/text-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/text-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/vertical-scroll-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/vertical-scroll-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/vertical-slider.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/vertical-slider.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/viewport.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/viewport.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/widget/widget.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/widget/widget.hpp	/^namespace hiro {$/;"	n
hiro	hiro/qt/window.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/qt/window.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/action/action.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/action/action.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/action/menu-check-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/action/menu-check-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/action/menu-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/action/menu-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/action/menu-radio-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/action/menu-radio-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/action/menu-separator.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/action/menu-separator.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/action/menu.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/action/menu.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/application.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/application.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/browser-window.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/browser-window.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/desktop.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/desktop.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/font.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/font.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/group.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/group.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/keyboard.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/keyboard.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/menu-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/menu-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/message-window.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/message-window.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/monitor.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/monitor.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/mouse.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/mouse.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/object.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/object.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/platform.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/popup-menu.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/popup-menu.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/sizable.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/sizable.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/status-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/status-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/timer.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/timer.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/tool-tip.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/tool-tip.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/utility.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/canvas.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/canvas.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/check-button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/check-button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/check-label.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/check-label.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/combo-button-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/combo-button-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/combo-button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/combo-button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/frame.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/frame.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/hex-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/hex-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/horizontal-scroll-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/horizontal-scroll-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/horizontal-slider.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/horizontal-slider.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/label.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/label.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/line-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/line-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/progress-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/progress-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/radio-button.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/radio-button.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/radio-label.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/radio-label.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/tab-frame-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/tab-frame-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/tab-frame.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/tab-frame.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/table-view-cell.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/table-view-cell.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/table-view-column.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/table-view-column.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/table-view-item.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/table-view-item.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/table-view.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/table-view.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/text-edit.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/text-edit.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/vertical-scroll-bar.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/vertical-scroll-bar.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/vertical-slider.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/vertical-slider.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/viewport.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/viewport.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/widget/widget.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/widget/widget.hpp	/^namespace hiro {$/;"	n
hiro	hiro/windows/window.cpp	/^namespace hiro {$/;"	n	file:
hiro	hiro/windows/window.hpp	/^namespace hiro {$/;"	n
hiro.flags	hiro/GNUmakefile	/^    hiro.flags   = $(flags.cpp) -DHIRO_GTK=2 $(shell pkg-config --cflags gtk+-2.0 gtksourceview-2.0)$/;"	m
hiro.flags	hiro/GNUmakefile	/^    hiro.flags   = $(flags.cpp) -DHIRO_GTK=3 $(shell pkg-config --cflags gtk+-3.0 gtksourceview-3.0)$/;"	m
hiro.flags	hiro/GNUmakefile	/^    hiro.flags   = $(flags.cpp) -DHIRO_QT=4 $(shell pkg-config --cflags QtCore QtGui)$/;"	m
hiro.flags	hiro/GNUmakefile	/^    hiro.flags   = $(flags.cpp) -DHIRO_QT=5 -fPIC $(shell pkg-config --cflags Qt5Core Qt5Gui Qt5Widgets)$/;"	m
hiro.flags	hiro/GNUmakefile	/^    hiro.flags   = $(flags.cpp) -DHIRO_WINDOWS$/;"	m
hiro.flags	hiro/GNUmakefile	/^    hiro.flags   = $(flags.objcpp) -w -DHIRO_COCOA$/;"	m
hiro.objects	hiro/GNUmakefile	/^hiro.objects := \\$/;"	m
hiro.options	hiro/GNUmakefile	/^    hiro.options = $(shell pkg-config --libs gtk+-2.0 gtksourceview-2.0)$/;"	m
hiro.options	hiro/GNUmakefile	/^    hiro.options = $(shell pkg-config --libs gtk+-3.0 gtksourceview-3.0)$/;"	m
hiro.options	hiro/GNUmakefile	/^    hiro.options = -framework Cocoa -framework Carbon -framework Security$/;"	m
hiro.options	hiro/GNUmakefile	/^    hiro.options = -lX11 $(shell pkg-config --libs Qt5Core Qt5Gui Qt5Widgets)$/;"	m
hiro.options	hiro/GNUmakefile	/^    hiro.options = -lX11 $(shell pkg-config --libs QtCore QtGui)$/;"	m
hiro.options	hiro/GNUmakefile	/^    hiro.options = -lX11 $(shell pkg-config --libs gtk+-2.0 gtksourceview-2.0)$/;"	m
hiro.options	hiro/GNUmakefile	/^    hiro.options = -lX11 $(shell pkg-config --libs gtk+-3.0 gtksourceview-3.0)$/;"	m
hiro.options	hiro/GNUmakefile	/^    hiro.options = -lkernel32 -luser32 -lgdi32 -ladvapi32 -lole32 -lcomctl32 -lcomdlg32 -luxtheme -lmsimg32 -lshlwapi$/;"	m
hiro.path	genius/GNUmakefile	/^hiro.path := ..\/hiro$/;"	m
hiro.path	higan/target-bsnes/GNUmakefile	/^hiro.path := ..\/hiro$/;"	m
hiro.path	higan/target-higan/GNUmakefile	/^hiro.path := ..\/hiro$/;"	m
hiro.path	icarus/GNUmakefile	/^hiro.path := ..\/hiro$/;"	m
hiro.resource	genius/GNUmakefile	/^hiro.resource := data\/$(name).rc$/;"	m
hiro.resource	higan/target-bsnes/GNUmakefile	/^hiro.resource := $(ui)\/resource\/bsnes.rc$/;"	m
hiro.resource	higan/target-higan/GNUmakefile	/^hiro.resource := $(ui)\/resource\/higan.rc$/;"	m
hiro.resource	hiro/GNUmakefile	/^  hiro.resource := $(hiro.path)\/windows\/hiro.rc$/;"	m
hiro.resource	icarus/GNUmakefile	/^hiro.resource := data\/$(name).rc$/;"	m
hirqEnable	higan/sfc/cpu/cpu.hpp	/^    boolean hirqEnable;$/;"	m	struct:CPU::IO
history	higan/sfc/ppu/counter/counter.hpp	/^  } history;$/;"	m	struct:PPUcounter	typeref:struct:PPUcounter::__anon14
history	hiro/gtk/widget/console.hpp	/^  vector<string> history;$/;"	m	struct:hiro::pConsole
history	nall/dsp/resampler/cubic.hpp	/^  double history[4];$/;"	m	struct:nall::DSP::Resampler::Cubic
history	ruby/video/opengl/opengl.hpp	/^  vector<OpenGLTexture> history;$/;"	m	struct:OpenGL
historyOffset	hiro/gtk/widget/console.hpp	/^  uint historyOffset = 0;$/;"	m	struct:hiro::pConsole
hitachidsp	higan/sfc/coprocessor/hitachidsp/hitachidsp.cpp	/^HitachiDSP hitachidsp;$/;"	m	namespace:SuperFamicom	file:
hl	higan/processor/lr35902/lr35902.hpp	/^    Pair hl;$/;"	m	struct:Processor::LR35902::Registers
hl	higan/processor/z80/z80.hpp	/^    Pair hl, hl_;$/;"	m	struct:Processor::Z80::Registers
hl	higan/processor/z80/z80.hpp	/^  enum class Prefix : uint { hl, ix, iy } prefix = Prefix::hl;$/;"	m	class:Processor::Z80::Prefix
hl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool hl;$/;"	m	struct:SA1::MMIO
hl_	higan/processor/z80/z80.hpp	/^    Pair hl, hl_;$/;"	m	struct:Processor::Z80::Registers
hlength	higan/pce/vdc/vdc.hpp	/^    uint  hlength = 0;$/;"	m	struct:VDC::Timing
hmenu	hiro/windows/action/menu.hpp	/^  HMENU hmenu = 0;$/;"	m	struct:hiro::pMenu
hmenu	hiro/windows/menu-bar.hpp	/^  HMENU hmenu = 0;$/;"	m	struct:hiro::pMenuBar
hmenu	hiro/windows/popup-menu.hpp	/^  HMENU hmenu = nullptr;$/;"	m	struct:hiro::pPopupMenu
hmosaic	higan/gba/ppu/ppu.hpp	/^    uint hmosaic;$/;"	m	struct:PPU::Background
hoffset	higan/gba/ppu/ppu.hpp	/^      uint9 hoffset;$/;"	m	struct:PPU::Background::IO
hoffset	higan/pce/vdc/vdc.hpp	/^    uint  hoffset = 0;$/;"	m	struct:VDC::Timing
hoffset	higan/pce/vdc/vdc.hpp	/^    uint10 hoffset;$/;"	m	struct:VDC::Background
hoffsetMode7	higan/sfc/ppu/ppu.hpp	/^    uint16 hoffsetMode7;$/;"	m	struct:PPU::IO
hold	higan/md/ym2612/ym2612.hpp	/^        uint1 hold = 0;$/;"	m	struct:Channel::Operator::SSG
hold	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 hold;$/;"	m	struct:EpsonRTC
holder	nall/any.hpp	/^    holder(const T& value) : value(value) {}$/;"	f	struct:nall::any::holder
holder	nall/any.hpp	/^  template<typename T> struct holder : placeholder {$/;"	s	struct:nall::any
holdtick	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 holdtick;$/;"	m	struct:EpsonRTC
horizontal	hiro/core/core.hpp	/^    float horizontal;$/;"	m	struct:hiro::Alignment::State
horizontalAlignment	hiro/core/shared.hpp	/^  auto horizontalAlignment() const { return self().horizontalAlignment(); }$/;"	f	struct:TableViewColumn
horizontalAlignment	hiro/core/widget/table-view-column.hpp	/^    float horizontalAlignment = 0.0;$/;"	m	struct:mTableViewColumn::State
horizontalBlankInterruptEnable	higan/md/vdp/vdp.hpp	/^    uint1 horizontalBlankInterruptEnable;$/;"	m	struct:VDP::IO
horizontalDirection	higan/md/vdp/vdp.hpp	/^      uint1  horizontalDirection;$/;"	m	struct:VDP::Background::IO
horizontalDisplayEnd	higan/pce/vdc/vdc.hpp	/^    uint7 horizontalDisplayEnd;$/;"	m	struct:VDC::Timing
horizontalDisplayLength	higan/pce/vdc/vdc.hpp	/^    uint7 horizontalDisplayLength;$/;"	m	struct:VDC::Timing
horizontalDisplayStart	higan/pce/vdc/vdc.hpp	/^    uint7 horizontalDisplayStart;$/;"	m	struct:VDC::Timing
horizontalFlip	higan/md/vdp/vdp.hpp	/^    uint1  horizontalFlip;$/;"	m	struct:VDP::Object
horizontalInterruptCounter	higan/md/vdp/vdp.hpp	/^    uint8 horizontalInterruptCounter;$/;"	m	struct:VDP::IO
horizontalInterruptCounter	higan/md/vdp/vdp.hpp	/^    uint8 horizontalInterruptCounter;$/;"	m	struct:VDP::Latch
horizontalOffset	higan/md/vdp/vdp.hpp	/^      uint10 horizontalOffset;$/;"	m	struct:VDP::Background::IO
horizontalScroll	higan/md/vdp/vdp.hpp	/^      uint10 horizontalScroll;$/;"	m	struct:VDP::Background::State
horizontalScrollAddress	higan/md/vdp/vdp.hpp	/^      uint15 horizontalScrollAddress;$/;"	m	struct:VDP::Background::IO
horizontalScrollLock	higan/ms/vdp/vdp.hpp	/^    bool horizontalScrollLock = 0;$/;"	m	struct:VDP::IO
horizontalScrollMode	higan/md/vdp/vdp.hpp	/^      uint2  horizontalScrollMode;$/;"	m	struct:VDP::Background::IO
horizontalSync	higan/md/vdp/vdp.hpp	/^    uint1 horizontalSync;$/;"	m	struct:VDP::IO
horizontalSyncWidth	higan/pce/vdc/vdc.hpp	/^    uint5 horizontalSyncWidth;$/;"	m	struct:VDC::Timing
host	nall/string/transform/dml.hpp	/^    string host = "localhost\/";$/;"	m	struct:nall::__anon37::DML::Settings
hotkeySettings	higan/target-bsnes/settings/settings.cpp	/^HotkeySettings hotkeySettings;$/;"	v
hotkeys	higan/target-bsnes/input/input.hpp	/^  vector<InputHotkey> hotkeys;$/;"	m	struct:InputManager
hotkeys	higan/target-higan/input/input.hpp	/^  vector<InputHotkey*> hotkeys;$/;"	m	struct:InputManager
hotkeys	hiro/core/core.hpp	/^    vector<Hotkey> hotkeys;$/;"	m	struct:hiro::Keyboard::State
hour	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint8 hour;$/;"	m	struct:MBC3::IO::RTC
hour	higan/gb/cartridge/tama/tama.hpp	/^    uint8 hour;      \/\/0 - 23$/;"	m	struct:TAMA::RTC
hour	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  uint hour;$/;"	m	struct:SharpRTC
hourMode	higan/gb/cartridge/tama/tama.hpp	/^    uint1 hourMode;  \/\/0 = 12-hour; 1 = 24-hour$/;"	m	struct:TAMA::RTC
hourhi	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint2 hourhi;$/;"	m	struct:EpsonRTC
hourlo	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint4 hourlo;$/;"	m	struct:EpsonRTC
hpulse	higan/pce/vdc/vdc.hpp	/^    bool  hpulse = 0;$/;"	m	struct:VDC::Timing
hram	higan/gb/cpu/cpu.hpp	/^  uint8 hram[128];$/;"	m	struct:CPU
hscroll	higan/ms/vdp/vdp.hpp	/^    uint8 hscroll;$/;"	m	struct:VDP::IO
hscroll	higan/pce/vdc/vdc.hpp	/^    uint10 hscroll;$/;"	m	struct:VDC::Background
hstart	higan/pce/vdc/vdc.hpp	/^    uint  hstart = 0;$/;"	m	struct:VDC::Timing
hstatusfont	hiro/windows/window.hpp	/^  HFONT hstatusfont = nullptr;$/;"	m	struct:hiro::pWindow
ht	higan/processor/gsu/registers.hpp	/^  uint ht;$/;"	m	struct:SCMR
htheme	hiro/windows/tool-tip.hpp	/^  HTHEME htheme = nullptr;$/;"	m	struct:hiro::pToolTip
htime	higan/sfc/cpu/cpu.hpp	/^    uint12 htime = 0x1ff + 1 << 2;$/;"	m	struct:CPU::IO
htimer	hiro/windows/timer.hpp	/^  UINT_PTR htimer = 0;$/;"	m	struct:hiro::pTimer
htimerCounter	higan/ws/ppu/ppu.hpp	/^    uint16 htimerCounter;$/;"	m	struct:PPU::Registers
htimerEnable	higan/ws/ppu/ppu.hpp	/^    uint1 htimerEnable;$/;"	m	struct:PPU::Registers
htimerFrequency	higan/ws/ppu/ppu.hpp	/^    uint16 htimerFrequency;$/;"	m	struct:PPU::Registers
htimerRepeat	higan/ws/ppu/ppu.hpp	/^    uint1 htimerRepeat;$/;"	m	struct:PPU::Registers
huc1	higan/gb/cartridge/huc1/huc1.hpp	/^} huc1;$/;"	v	typeref:struct:HuC1
huc3	higan/gb/cartridge/huc3/huc3.hpp	/^} huc3;$/;"	v	typeref:struct:HuC3
huffman	nall/decode/inflate.hpp	/^struct huffman {$/;"	s	namespace:nall::Decode::puff
hvselb	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool hvselb;$/;"	m	struct:SA1::MMIO
hwnd	hiro/windows/popup-menu.hpp	/^  HWND hwnd = nullptr;$/;"	m	struct:hiro::pPopupMenu
hwnd	hiro/windows/status-bar.hpp	/^  HWND hwnd = 0;$/;"	m	struct:hiro::pStatusBar
hwnd	hiro/windows/tool-tip.hpp	/^  HWND hwnd = nullptr;$/;"	m	struct:hiro::pToolTip
hwnd	hiro/windows/widget/widget.hpp	/^  HWND hwnd = nullptr;$/;"	m	struct:hiro::pWidget
hwnd	hiro/windows/window.hpp	/^  HWND hwnd = nullptr;$/;"	m	struct:hiro::pWindow
hwnd	ruby/input/shared/rawinput.cpp	/^  HWND hwnd = nullptr;$/;"	m	struct:RawInput	file:
i	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    boolean i;  \/\/irq$/;"	m	namespace:Processor
i	higan/processor/hg51b/hg51b.hpp	/^    boolean i;  \/\/interrupt$/;"	m	struct:Processor::HG51B::Registers
i	higan/processor/huc6280/huc6280.hpp	/^    bool i;  \/\/interrupt disable$/;"	m	struct:Processor::HuC6280::Flags
i	higan/processor/mos6502/mos6502.hpp	/^    bool i;  \/\/interrupt disable$/;"	m	struct:Processor::MOS6502::Flags
i	higan/processor/spc700/spc700.hpp	/^    bool i;  \/\/interrupt disable$/;"	m	struct:Processor::SPC700::Flags
i	higan/processor/v30mz/v30mz.hpp	/^        BooleanBitField<uint16_t,  9> i;  \/\/interrupt$/;"	m	union:Processor::Registers::Flags::__anon26
i	higan/processor/wdc65816/wdc65816.hpp	/^    bool i;  \/\/interrupt disable$/;"	m	struct:Processor::WDC65816::Flags
icarus	icarus/icarus.cpp	/^Icarus icarus;$/;"	v
icd	higan/sfc/coprocessor/icd/icd.cpp	/^ICD icd;$/;"	m	namespace:SuperFamicom	file:
icon	hiro/core/core.hpp	/^    image icon;$/;"	m	struct:hiro::mButton::State
icon	hiro/core/core.hpp	/^    image icon;$/;"	m	struct:hiro::mCanvas::State
icon	hiro/core/core.hpp	/^    image icon;$/;"	m	struct:hiro::mCheckButton::State
icon	hiro/core/core.hpp	/^    image icon;$/;"	m	struct:hiro::mComboButtonItem::State
icon	hiro/core/core.hpp	/^    image icon;$/;"	m	struct:hiro::mComboEditItem::State
icon	hiro/core/core.hpp	/^    image icon;$/;"	m	struct:hiro::mIconViewItem::State
icon	hiro/core/core.hpp	/^    image icon;$/;"	m	struct:hiro::mMenu::State
icon	hiro/core/core.hpp	/^    image icon;$/;"	m	struct:hiro::mMenuItem::State
icon	hiro/core/core.hpp	/^    image icon;$/;"	m	struct:hiro::mRadioButton::State
icon	hiro/core/core.hpp	/^    image icon;$/;"	m	struct:hiro::mTreeViewItem::State
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:Button
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:Canvas
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:CheckButton
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:ComboButtonItem
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:ComboEditItem
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:IconViewItem
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:Menu
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:MenuItem
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:RadioButton
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:TabFrameItem
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:TableViewCell
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:TableViewColumn
icon	hiro/core/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:TreeViewItem
icon	hiro/core/widget/tab-frame-item.hpp	/^    image icon;$/;"	m	struct:mTabFrameItem::State
icon	hiro/core/widget/table-view-cell.hpp	/^    image icon;$/;"	m	struct:mTableViewCell::State
icon	hiro/core/widget/table-view-column.hpp	/^    image icon;$/;"	m	struct:mTableViewColumn::State
icon	hiro/extension/message-dialog.hpp	/^    image icon;$/;"	m	struct:MessageDialog::State
icon	hiro/extension/shared.hpp	/^  auto icon() const { return self().icon(); }$/;"	f	struct:ListViewItem
iconAux1	higan/ws/ppu/ppu.hpp	/^    uint1 iconAux1;$/;"	m	struct:PPU::Registers
iconAux2	higan/ws/ppu/ppu.hpp	/^    uint1 iconAux2;$/;"	m	struct:PPU::Registers
iconAux3	higan/ws/ppu/ppu.hpp	/^    uint1 iconAux3;$/;"	m	struct:PPU::Registers
iconHorizontal	higan/ws/ppu/ppu.hpp	/^    uint1 iconHorizontal;$/;"	m	struct:PPU::Registers
iconSleep	higan/ws/ppu/ppu.hpp	/^    uint1 iconSleep;$/;"	m	struct:PPU::Registers
iconVertical	higan/ws/ppu/ppu.hpp	/^    uint1 iconVertical;$/;"	m	struct:PPU::Registers
iconView	hiro/qt/platform.hpp	/^  IconView& iconView;$/;"	m	struct:hiro::pIconView
icons	hiro/windows/widget/table-view.hpp	/^  vector<image> icons;$/;"	m	struct:hiro::pTableView
id	higan/emulator/interface.hpp	/^    uint id = 0;$/;"	m	struct:Emulator::Interface
id	higan/emulator/interface.hpp	/^    uint id;$/;"	m	struct:Emulator::Device
id	higan/emulator/interface.hpp	/^    uint id;$/;"	m	struct:Emulator::Port
id	higan/fc/ppu/ppu.hpp	/^    uint8 id = 64;$/;"	m	struct:PPU::OAM
id	higan/gba/cartridge/memory.hpp	/^  uint16 id;$/;"	m	struct:FLASH
id	higan/gba/cpu/cpu.hpp	/^    uint2 id;$/;"	m	struct:DMA
id	higan/gba/cpu/cpu.hpp	/^    uint2 id;$/;"	m	struct:Timer
id	higan/gba/ppu/ppu.hpp	/^    uint id;  \/\/BG0, BG1, BG2, BG3$/;"	m	struct:PPU::Background
id	higan/gba/ppu/ppu.hpp	/^    uint id;  \/\/IN0, IN1, IN2, OUT$/;"	m	struct:PPU::Window
id	higan/md/vdp/vdp.hpp	/^    enum class ID : uint { PlaneA, Window, PlaneB } id;$/;"	m	struct:VDP::Background	typeref:class:VDP::Background::ID
id	higan/pce/psg/psg.hpp	/^    uint id;$/;"	m	struct:PSG::Channel
id	higan/sfc/memory/memory.hpp	/^  uint id = 0;$/;"	m	struct:Memory
id	higan/sfc/ppu/background.hpp	/^  const uint id;$/;"	v
id	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    uint4  id;$/;"	m	struct:BSMemory::Block
id	higan/target-bsnes/input/input.hpp	/^  uint id;$/;"	m	struct:InputDevice
id	higan/target-bsnes/input/input.hpp	/^  uint id;$/;"	m	struct:InputPort
id	higan/target-higan/input/input.hpp	/^  uint id;$/;"	m	struct:InputDevice
id	higan/target-higan/input/input.hpp	/^  uint id;$/;"	m	struct:InputPort
id	ruby/audio/wasapi.cpp	/^    string id;$/;"	m	struct:AudioWASAPI::Device	file:
id	ruby/audio/xaudio2.cpp	/^    uint id = 0;$/;"	m	struct:AudioXAudio2::Device	file:
id	ruby/input/joypad/sdl.cpp	/^    uint id = 0;$/;"	m	struct:InputJoypadSDL::Joypad	file:
id	ruby/input/joypad/udev.cpp	/^    uint id = 0;$/;"	m	struct:InputJoypadUdev::JoypadInput	file:
id	ruby/input/joypad/xinput.cpp	/^    uint id = 0;$/;"	m	struct:InputJoypadXInput::Joypad	file:
id	ruby/input/keyboard/carbon.cpp	/^    uint8 id;$/;"	m	struct:InputKeyboardCarbon::Key	file:
id	ruby/input/keyboard/quartz.cpp	/^    uint id;$/;"	m	struct:InputKeyboardQuartz::Key	file:
identifier	genius/genius.hpp	/^  string identifier;$/;"	m	struct:Memory
identifier	higan/emulator/game.hpp	/^    string identifier;$/;"	m	struct:Emulator::Game::Memory
identifier	icarus/heuristics/heuristics.hpp	/^  auto& identifier(string identifier) { _identifier = identifier; return *this; }$/;"	f	struct:Heuristics::Memory
idmode	higan/gba/cartridge/memory.hpp	/^  bool idmode;$/;"	m	struct:FLASH
iff1	higan/processor/z80/z80.hpp	/^    bool iff1;  \/\/interrupt flip-flop 1$/;"	m	struct:Processor::Z80::Registers
iff2	higan/processor/z80/z80.hpp	/^    bool iff2;  \/\/interrupt flip-flop 2$/;"	m	struct:Processor::Z80::Registers
ih	higan/processor/gsu/registers.hpp	/^    BooleanBitField<uint16_t, 11> ih;      \/\/immediate higher 8-bit flag$/;"	m	union:SFR::__anon27
il	higan/processor/gsu/registers.hpp	/^    BooleanBitField<uint16_t, 10> il;      \/\/immediate lower 8-bit flag$/;"	m	union:SFR::__anon27
im	higan/processor/z80/z80.hpp	/^    uint2 im;   \/\/interrupt mode (0-2)$/;"	m	struct:Processor::Z80::Registers
im	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  IM  im;$/;"	m	struct:Decompressor
image	hiro/core/core.hpp	/^  auto icon() const -> image;$/;"	m	struct:hiro::mButton
image	hiro/core/core.hpp	/^  auto icon() const -> image;$/;"	m	struct:hiro::mCanvas
image	hiro/core/core.hpp	/^  auto icon() const -> image;$/;"	m	struct:hiro::mCheckButton
image	hiro/core/core.hpp	/^  auto icon() const -> image;$/;"	m	struct:hiro::mComboButtonItem
image	hiro/core/core.hpp	/^  auto icon() const -> image;$/;"	m	struct:hiro::mComboEditItem
image	hiro/core/core.hpp	/^  auto icon() const -> image;$/;"	m	struct:hiro::mIconViewItem
image	hiro/core/core.hpp	/^  auto icon() const -> image;$/;"	m	struct:hiro::mMenu
image	hiro/core/core.hpp	/^  auto icon() const -> image;$/;"	m	struct:hiro::mMenuItem
image	hiro/core/core.hpp	/^  auto icon() const -> image;$/;"	m	struct:hiro::mRadioButton
image	hiro/core/core.hpp	/^  auto icon() const -> image;$/;"	m	struct:hiro::mTreeViewItem
image	hiro/core/widget/tab-frame-item.hpp	/^  auto icon() const -> image;$/;"	m	struct:mTabFrameItem
image	hiro/core/widget/table-view-cell.hpp	/^  auto icon() const -> image;$/;"	m	struct:mTableViewCell
image	hiro/core/widget/table-view-column.hpp	/^  auto icon() const -> image;$/;"	m	struct:mTableViewColumn
image	hiro/extension/list-view.hpp	/^  auto icon() const -> image;$/;"	m	struct:mListViewItem
image	hiro/gtk/widget/tab-frame.hpp	/^    GtkWidget* image = nullptr;$/;"	m	struct:hiro::pTabFrame::Tab
image	nall/image.hpp	/^  inline auto operator=(const image& source) -> image&;$/;"	m	struct:nall::image
image	nall/image.hpp	/^  inline auto operator=(image&& source) -> image&;$/;"	m	struct:nall::image
image	nall/image.hpp	/^struct image {$/;"	s	namespace:nall
image	nall/image/core.hpp	/^image::image() {$/;"	f	class:nall::image
image	nall/image/core.hpp	/^image::image(bool endian, unsigned depth, uint64_t alphaMask, uint64_t redMask, uint64_t greenMask, uint64_t blueMask) {$/;"	f	class:nall::image
image	nall/image/core.hpp	/^image::image(const image& source) {$/;"	f	class:nall::image
image	nall/image/core.hpp	/^image::image(const string& filename) {$/;"	f	class:nall::image
image	nall/image/core.hpp	/^image::image(const vector<uint8_t>& buffer) : image(buffer.data(), buffer.size()) {$/;"	f	class:nall::image
image	nall/image/core.hpp	/^image::image(const void* data_, uint size) {$/;"	f	class:nall::image
image	nall/image/core.hpp	/^image::image(image&& source) {$/;"	f	class:nall::image
image	nall/image/core.hpp	/^template<uint Size> image::image(const uint8_t (&Name)[Size]) : image(Name, Size) {$/;"	f	namespace:nall
imageList	hiro/windows/widget/tab-frame.hpp	/^  HIMAGELIST imageList = nullptr;$/;"	m	struct:hiro::pTabFrame
imageList	hiro/windows/widget/table-view.hpp	/^  HIMAGELIST imageList = 0;$/;"	m	struct:hiro::pTableView
ime	higan/gba/cpu/cpu.hpp	/^    uint1 ime;$/;"	m	struct:IRQ
ime	higan/processor/lr35902/lr35902.hpp	/^    uint1 ime;$/;"	m	struct:Processor::LR35902::Registers
importDialog	icarus/ui/ui.hpp	/^ImportDialog* importDialog = nullptr;$/;"	v
in	nall/decode/inflate.hpp	/^  unsigned char* in;$/;"	m	struct:nall::Decode::puff::state
inFrame	higan/fc/cartridge/chip/mmc5.cpp	/^  bool inFrame;$/;"	m	struct:MMC5	file:
incnt	nall/decode/inflate.hpp	/^  unsigned long incnt;$/;"	m	struct:nall::Decode::puff::state
increment	nall/random.hpp	/^  uint64_t increment = 0;$/;"	m	struct:nall::PRNG::PCG
index	higan/gb/cartridge/tama/tama.hpp	/^    uint5 index;$/;"	m	struct:TAMA::IO
index	higan/gb/cartridge/tama/tama.hpp	/^    uint8 index;$/;"	m	struct:TAMA::RTC
index	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  int index;$/;"	m	struct:SharpRTC
index	higan/sfc/ppu/counter/counter.hpp	/^    uint index = 0;$/;"	m	struct:PPUcounter::__anon14
index	higan/sfc/ppu/object.hpp	/^    uint7 index;$/;"	m	struct:Object::Item
index	higan/ws/cartridge/cartridge.hpp	/^    uint4 index;$/;"	m	struct:Cartridge::RTC
index	hiro/windows/monitor.cpp	/^  uint index = 0;$/;"	m	struct:hiro::MonitorInfo	file:
index	nall/file-buffer.hpp	/^  struct index { enum : uint { absolute, relative }; };$/;"	s	namespace:nall
index	nall/file.hpp	/^  struct index { enum : uint { absolute, relative }; };$/;"	s	namespace:nall
index	nall/vfs/vfs.hpp	/^  enum class index : uint { absolute, relative };$/;"	c	struct:nall::vfs::file
index	ruby/audio/asio.hpp	/^  long index;$/;"	m	struct:ASIOClockSource
index	ruby/audio/xaudio2.cpp	/^  uint index = 0;           \/\/current buffer for writing samples to$/;"	m	struct:AudioXAudio2	file:
indirect	higan/sfc/cpu/cpu.hpp	/^    uint1 indirect = 1;$/;"	m	struct:CPU::Channel
indirectAddress	higan/sfc/cpu/cpu.hpp	/^      uint16 indirectAddress;$/;"	m	union:CPU::Channel::__anon17
indirectBank	higan/sfc/cpu/cpu.hpp	/^    uint8 indirectBank = 0xff;$/;"	m	struct:CPU::Channel
info	nall/decode/png.hpp	/^  } info;$/;"	m	struct:nall::Decode::PNG	typeref:struct:nall::Decode::PNG::Info
info	nall/http/client.hpp	/^  addrinfo* info = nullptr;$/;"	m	struct:nall::HTTP::Client
info	nall/smtp.hpp	/^  } info;$/;"	m	struct:nall::SMTP	typeref:struct:nall::SMTP::Information
info	ruby/input/joypad/udev.cpp	/^    input_absinfo info;$/;"	m	struct:InputJoypadUdev::JoypadInput	file:
information	higan/fc/cartridge/board/board.hpp	/^  } information;$/;"	m	struct:Board	typeref:struct:Board::Information
information	higan/fc/cartridge/cartridge.hpp	/^  } information;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Information
information	higan/fc/system/system.hpp	/^  } information;$/;"	m	struct:System	typeref:struct:System::Information
information	higan/gb/cartridge/cartridge.hpp	/^  } information;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Information
information	higan/gb/system/system.hpp	/^  } information;$/;"	m	struct:System	typeref:struct:System::Information
information	higan/gba/cartridge/cartridge.hpp	/^  } information;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Information
information	higan/gba/system/system.hpp	/^  } information;$/;"	m	struct:System	typeref:struct:System::Information
information	higan/md/cartridge/cartridge.hpp	/^  Information information;$/;"	m	struct:Cartridge
information	higan/md/system/system.hpp	/^  } information;$/;"	m	struct:System	typeref:struct:System::Information
information	higan/ms/cartridge/cartridge.hpp	/^  } information;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Information
information	higan/ms/system/system.hpp	/^  } information;$/;"	m	struct:System	typeref:struct:System::Information
information	higan/pce/cartridge/cartridge.hpp	/^  } information;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Information
information	higan/pce/system/system.hpp	/^  } information;$/;"	m	struct:System	typeref:struct:System::Information
information	higan/sfc/cartridge/cartridge.hpp	/^  } information;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Information
information	higan/sfc/system/system.hpp	/^  } information;$/;"	m	struct:System	typeref:struct:System::Information
information	higan/ws/cartridge/cartridge.hpp	/^  } information;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Information
information	higan/ws/system/system.hpp	/^  } information;$/;"	m	struct:System	typeref:struct:System::Information
initialize	higan/gba/apu/apu.hpp	/^    uint1 initialize;$/;"	m	struct:APU::Noise
initialize	higan/gba/apu/apu.hpp	/^    uint1 initialize;$/;"	m	struct:APU::Square
initialize	higan/gba/apu/apu.hpp	/^    uint1 initialize;$/;"	m	struct:APU::Wave
initialized	hiro/core/application.hpp	/^    bool initialized = false;$/;"	m	struct:Application::State
initialized	ruby/input/shared/rawinput.cpp	/^  bool initialized = false;$/;"	m	struct:RawInput	file:
initialized	ruby/video/opengl/opengl.hpp	/^  bool initialized = false;$/;"	m	struct:OpenGL
inlen	nall/decode/inflate.hpp	/^  unsigned long inlen;$/;"	m	struct:nall::Decode::puff::state
inode	nall/inode.hpp	/^  auto operator=(const inode&) -> inode& = delete;$/;"	m	struct:nall::inode
inode	nall/inode.hpp	/^struct inode {$/;"	s	namespace:nall
input	higan/gb/cartridge/mbc7/mbc7.hpp	/^    } input;$/;"	m	struct:MBC7::EEPROM	typeref:struct:MBC7::EEPROM::InputShiftRegister
input	higan/gb/cartridge/tama/tama.hpp	/^    uint8 input;$/;"	m	struct:TAMA::IO
input	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  uint16 input;         \/\/input data from SPC7110 data ROM$/;"	m	struct:Decompressor	file:
input	higan/target-bsnes/bsnes.cpp	/^Input input;$/;"	v
input	higan/target-bsnes/input/input.hpp	/^    uint input = 0;$/;"	m	struct:InputMapping::Mapping
input	higan/target-bsnes/settings/settings.hpp	/^  } input;$/;"	m	struct:Settings	typeref:struct:Settings::Input
input	higan/target-higan/higan.cpp	/^unique_pointer<Input> input;$/;"	v
input	higan/target-higan/input/input.hpp	/^    uint input = 0;$/;"	m	struct:InputMapping::Mapping
input	nall/cipher/chacha20.hpp	/^  uint32_t input[16];$/;"	m	struct:nall::Cipher::ChaCha20
input	nall/suffix-array.hpp	/^  array_view<uint8_t> input;$/;"	m	struct:nall::SuffixArray
input	ruby/input/joypad/directinput.cpp	/^  Input& input;$/;"	m	struct:InputJoypadDirectInput	file:
input	ruby/input/joypad/sdl.cpp	/^  Input& input;$/;"	m	struct:InputJoypadSDL	file:
input	ruby/input/joypad/udev.cpp	/^  Input& input;$/;"	m	struct:InputJoypadUdev	file:
input	ruby/input/joypad/xinput.cpp	/^  Input& input;$/;"	m	struct:InputJoypadXInput	file:
input	ruby/input/keyboard/carbon.cpp	/^  Input& input;$/;"	m	struct:InputKeyboardCarbon	file:
input	ruby/input/keyboard/quartz.cpp	/^  Input& input;$/;"	m	struct:InputKeyboardQuartz	file:
input	ruby/input/keyboard/rawinput.cpp	/^  Input& input;$/;"	m	struct:InputKeyboardRawInput	file:
input	ruby/input/keyboard/xlib.cpp	/^  Input& input;$/;"	m	struct:InputKeyboardXlib	file:
input	ruby/input/mouse/rawinput.cpp	/^  Input& input;$/;"	m	struct:InputMouseRawInput	file:
input	ruby/input/mouse/xlib.cpp	/^  Input& input;$/;"	m	struct:InputMouseXlib	file:
inputChannels	ruby/audio/asio.cpp	/^    long inputChannels;$/;"	m	struct:AudioASIO::Device	file:
inputFormat	ruby/video/opengl/opengl.hpp	/^  GLuint inputFormat = GL_RGBA8;$/;"	m	struct:OpenGL
inputFrequency	higan/audio/audio.hpp	/^  double inputFrequency;$/;"	m	struct:Emulator::Stream
inputFrequency	nall/dsp/resampler/cubic.hpp	/^  double inputFrequency;$/;"	m	struct:nall::DSP::Resampler::Cubic
inputFrequency	ruby/video/video.hpp	/^  double inputFrequency = 0.0;$/;"	m	struct:VideoDriver
inputID	higan/target-bsnes/input/input.hpp	/^  uint inputID = 0;$/;"	m	struct:InputMapping
inputLatency	ruby/audio/asio.cpp	/^    long inputLatency;$/;"	m	struct:AudioASIO::Device	file:
inputManager	higan/target-bsnes/input/input.cpp	/^InputManager inputManager;$/;"	v
inputManager	higan/target-higan/input/input.cpp	/^unique_pointer<InputManager> inputManager;$/;"	v
inputSettings	higan/target-bsnes/settings/settings.cpp	/^InputSettings inputSettings;$/;"	v
instance	hiro/core/object.hpp	/^  wObject instance;             \/\/ 8$/;"	m	struct:mObject
instance	ruby/audio/asio.cpp	/^  static AudioASIO* instance;$/;"	m	struct:AudioASIO	file:
instance	ruby/audio/asio.cpp	/^AudioASIO* AudioASIO::instance = nullptr;$/;"	m	class:AudioASIO	file:
instance	ruby/audio/audio.hpp	/^  unique_pointer<AudioDriver> instance;$/;"	m	struct:Audio
instance	ruby/input/input.hpp	/^  unique_pointer<InputDriver> instance;$/;"	m	struct:Input
instance	ruby/video/video.hpp	/^  unique_pointer<VideoDriver> instance;$/;"	m	struct:Video
instruction	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      uint32 instruction;$/;"	m	struct:Pipeline::Instruction
instructionTable	higan/processor/hg51b/hg51b.hpp	/^  function<void ()> instructionTable[65536];$/;"	m	struct:Processor::HG51B
int16	higan/target-bsnes/input/input.hpp	/^  auto poll() -> int16;$/;"	m	struct:InputMapping
int16	higan/target-higan/input/input.hpp	/^  auto poll() -> int16;$/;"	m	struct:InputMapping
int16	ruby/audio/audio.hpp	/^  enum class Format : uint { none, int16, int32, float32, float64 };$/;"	m	class:AudioDriver::Format
int16_t	nall/stdint.hpp	/^  typedef signed short int16_t;$/;"	t
int32	ruby/audio/audio.hpp	/^  enum class Format : uint { none, int16, int32, float32, float64 };$/;"	m	class:AudioDriver::Format
int32_t	nall/stdint.hpp	/^  typedef signed int int32_t;$/;"	t
int64_t	nall/stdint.hpp	/^  typedef signed long long int64_t;$/;"	t
int8_t	nall/stdint.hpp	/^  typedef signed char int8_t;$/;"	t
intFrame	higan/ms/vdp/vdp.hpp	/^    bool intFrame = 0;$/;"	m	struct:VDP::IO
intLine	higan/md/apu/apu.hpp	/^    uint1 intLine;$/;"	m	struct:APU::State
intLine	higan/ms/cpu/cpu.hpp	/^    bool intLine = 0;$/;"	m	struct:CPU::State
intLine	higan/ms/vdp/vdp.hpp	/^    bool intLine = 0;$/;"	m	struct:VDP::IO
interface	higan/audio/audio.hpp	/^  Interface* interface = nullptr;$/;"	m	struct:Emulator::Audio
interface	higan/fc/system/system.hpp	/^  Emulator::Interface* interface = nullptr;$/;"	m	struct:System
interface	higan/gb/system/system.hpp	/^  Emulator::Interface* interface = nullptr;$/;"	m	struct:System
interface	higan/gba/system/system.hpp	/^  Emulator::Interface* interface = nullptr;$/;"	m	struct:System
interface	higan/md/system/system.hpp	/^  Emulator::Interface* interface = nullptr;$/;"	m	struct:System
interface	higan/ms/system/system.hpp	/^  Emulator::Interface* interface = nullptr;$/;"	m	struct:System
interface	higan/pce/system/system.hpp	/^  Emulator::Interface* interface = nullptr;$/;"	m	struct:System
interface	higan/sfc/system/system.hpp	/^  Emulator::Interface* interface = nullptr;$/;"	m	struct:System
interface	higan/target-higan/input/input.hpp	/^  Emulator::Interface* interface = nullptr;$/;"	m	struct:InputEmulator
interface	higan/video/video.hpp	/^  Interface* interface = nullptr;$/;"	m	struct:Emulator::Video
interface	higan/ws/system/system.hpp	/^  Emulator::Interface* interface = nullptr;$/;"	m	struct:System
interface	nall/platform.hpp	65;"	d
interface	nall/windows/guard.hpp	30;"	d
interface	nall/windows/guard.hpp	5;"	d
interface	nall/windows/registry.hpp	7;"	d
interface	ruby/audio/xaudio2.cpp	/^  IXAudio2* interface = nullptr;$/;"	m	struct:AudioXAudio2	file:
interface	ruby/audio/xaudio2.cpp	2;"	d	file:
interface	ruby/video/direct3d.cpp	1;"	d	file:
interface	ruby/video/direct3d.cpp	2;"	d	file:
interface	ruby/video/direct3d.cpp	4;"	d	file:
interface	ruby/video/directdraw.cpp	2;"	d	file:
interframeBlending	higan/video/video.hpp	/^    bool interframeBlending = false;$/;"	m	struct:Emulator::Video::Effects
interlace	higan/sfc/ppu/counter/counter.hpp	/^    bool interlace = 0;$/;"	m	struct:PPUcounter::__anon13
interlace	higan/sfc/ppu/object.hpp	/^    bool interlace;$/;"	m	struct:Object::IO
interlace	higan/sfc/ppu/ppu.hpp	/^    bool interlace;$/;"	m	struct:PPU::IO
interlace	higan/sfc/ppu/ppu.hpp	/^    bool interlace;$/;"	m	struct:PPU::__anon15
interlaceMethod	nall/decode/png.hpp	/^    uint interlaceMethod;$/;"	m	struct:nall::Decode::PNG::Info
interlaceMode	higan/md/vdp/vdp.hpp	/^    uint2 interlaceMode;$/;"	m	struct:VDP::IO
internalHeight	higan/emulator/interface.hpp	/^    uint internalHeight = 0;$/;"	m	struct:Emulator::Interface
internalWaitStates	higan/sfc/smp/smp.hpp	/^    uint2 internalWaitStates;$/;"	m	struct:SMP::IO
internalWidth	higan/emulator/interface.hpp	/^    uint internalWidth = 0;$/;"	m	struct:Emulator::Interface
internallyWritable	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint1 internallyWritable;  \/\/bit 12 (1 = MCC allows writes to BS Memory Cassette)$/;"	m	struct:MCC::Registers
interruptBase	higan/ws/cpu/cpu.hpp	/^    uint8 interruptBase;$/;"	m	struct:CPU::Registers
interruptEnable	higan/ws/cpu/cpu.hpp	/^    uint8 interruptEnable;$/;"	m	struct:CPU::Registers
interruptEnableJoypad	higan/gb/cpu/cpu.hpp	/^    bool interruptEnableJoypad = 0;$/;"	m	struct:CPU::Status
interruptEnableSerial	higan/gb/cpu/cpu.hpp	/^    bool interruptEnableSerial = 0;$/;"	m	struct:CPU::Status
interruptEnableStat	higan/gb/cpu/cpu.hpp	/^    bool interruptEnableStat = 0;$/;"	m	struct:CPU::Status
interruptEnableTimer	higan/gb/cpu/cpu.hpp	/^    bool interruptEnableTimer = 0;$/;"	m	struct:CPU::Status
interruptEnableVblank	higan/gb/cpu/cpu.hpp	/^    bool interruptEnableVblank = 0;$/;"	m	struct:CPU::Status
interruptHblank	higan/gb/ppu/ppu.hpp	/^    bool interruptHblank = 0;$/;"	m	struct:PPU::Status
interruptLYC	higan/gb/ppu/ppu.hpp	/^    bool interruptLYC = 0;$/;"	m	struct:PPU::Status
interruptLine	higan/md/cpu/cpu.hpp	/^    uint32 interruptLine;$/;"	m	struct:CPU::State
interruptOAM	higan/gb/ppu/ppu.hpp	/^    bool interruptOAM = 0;$/;"	m	struct:PPU::Status
interruptPending	higan/fc/cpu/cpu.hpp	/^    bool interruptPending = 0;$/;"	m	struct:CPU::IO
interruptPending	higan/md/cpu/cpu.hpp	/^    uint32 interruptPending;$/;"	m	struct:CPU::State
interruptPending	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool interruptPending;$/;"	m	struct:SA1::Status
interruptPending	higan/sfc/cpu/cpu.hpp	/^    bool interruptPending = false;$/;"	m	struct:CPU::Status
interruptRequestJoypad	higan/gb/cpu/cpu.hpp	/^    bool interruptRequestJoypad = 0;$/;"	m	struct:CPU::Status
interruptRequestSerial	higan/gb/cpu/cpu.hpp	/^    bool interruptRequestSerial = 0;$/;"	m	struct:CPU::Status
interruptRequestStat	higan/gb/cpu/cpu.hpp	/^    bool interruptRequestStat = 0;$/;"	m	struct:CPU::Status
interruptRequestTimer	higan/gb/cpu/cpu.hpp	/^    bool interruptRequestTimer = 0;$/;"	m	struct:CPU::Status
interruptRequestVblank	higan/gb/cpu/cpu.hpp	/^    bool interruptRequestVblank = 0;$/;"	m	struct:CPU::Status
interruptStatus	higan/ws/cpu/cpu.hpp	/^    uint8 interruptStatus;$/;"	m	struct:CPU::Registers
interruptVblank	higan/gb/ppu/ppu.hpp	/^    bool interruptVblank = 0;$/;"	m	struct:PPU::Status
interval	higan/target-bsnes/settings/settings.hpp	/^      uint interval = 30;$/;"	m	struct:Settings::Emulator::AutoSaveMemory
interval	hiro/core/shared.hpp	/^  auto interval() const { return self().interval(); }$/;"	f	struct:Timer
interval	hiro/core/timer.hpp	/^    uint interval = 0;$/;"	m	struct:mTimer::State
intmax	nall/string.hpp	/^  inline auto integer() const -> intmax;$/;"	m	struct:nall::string
intmax_t	nall/stdint.hpp	/^  typedef int64_t intmax_t;$/;"	t
intptr_t	nall/stdint.hpp	/^  typedef int32_t intptr_t;$/;"	t
intptr_t	nall/stdint.hpp	/^  typedef int64_t intptr_t;$/;"	t
invert	higan/md/ym2612/ym2612.hpp	/^        uint1 invert = 0;$/;"	m	struct:Channel::Operator::SSG
invisibleCursor	ruby/input/mouse/xlib.cpp	/^  Cursor invisibleCursor = 0;$/;"	m	struct:InputMouseXlib	file:
io	higan/fc/cpu/cpu.hpp	/^  } io;$/;"	m	struct:CPU	typeref:struct:CPU::IO
io	higan/fc/ppu/ppu.hpp	/^  } io;$/;"	m	struct:PPU	typeref:struct:PPU::IO
io	higan/gb/cartridge/huc1/huc1.hpp	/^  } io;$/;"	m	struct:HuC1	typeref:struct:HuC1::IO
io	higan/gb/cartridge/huc3/huc3.hpp	/^  } io;$/;"	m	struct:HuC3	typeref:struct:HuC3::IO
io	higan/gb/cartridge/mbc1/mbc1.hpp	/^  } io;$/;"	m	struct:MBC1	typeref:struct:MBC1::IO
io	higan/gb/cartridge/mbc1m/mbc1m.hpp	/^  } io;$/;"	m	struct:MBC1M	typeref:struct:MBC1M::IO
io	higan/gb/cartridge/mbc2/mbc2.hpp	/^  } io;$/;"	m	struct:MBC2	typeref:struct:MBC2::IO
io	higan/gb/cartridge/mbc3/mbc3.hpp	/^  } io;$/;"	m	struct:MBC3	typeref:struct:MBC3::IO
io	higan/gb/cartridge/mbc5/mbc5.hpp	/^  } io;$/;"	m	struct:MBC5	typeref:struct:MBC5::IO
io	higan/gb/cartridge/mbc6/mbc6.hpp	/^  } io;$/;"	m	struct:MBC6	typeref:struct:MBC6::IO
io	higan/gb/cartridge/mbc7/mbc7.hpp	/^  } io;$/;"	m	struct:MBC7	typeref:struct:MBC7::IO
io	higan/gb/cartridge/mmm01/mmm01.hpp	/^  } io;$/;"	m	struct:MMM01	typeref:struct:MMM01::IO
io	higan/gb/cartridge/tama/tama.hpp	/^  } io;$/;"	m	struct:TAMA	typeref:struct:TAMA::IO
io	higan/gba/memory/memory.hpp	/^  IO* io[0x400] = {nullptr};$/;"	m	struct:Bus
io	higan/gba/ppu/ppu.hpp	/^    } io;$/;"	m	struct:PPU::Background	typeref:struct:PPU::Background::IO
io	higan/gba/ppu/ppu.hpp	/^    } io;$/;"	m	struct:PPU::Objects	typeref:struct:PPU::Objects::IO
io	higan/gba/ppu/ppu.hpp	/^    } io;$/;"	m	struct:PPU::Screen	typeref:struct:PPU::Screen::IO
io	higan/gba/ppu/ppu.hpp	/^    } io;$/;"	m	struct:PPU::Window	typeref:struct:PPU::Window::IO
io	higan/gba/ppu/ppu.hpp	/^  } io;$/;"	m	struct:PPU	typeref:struct:PPU::IO
io	higan/md/apu/apu.hpp	/^  } io;$/;"	m	struct:APU	typeref:struct:APU::IO
io	higan/md/cpu/cpu.hpp	/^  } io;$/;"	m	struct:CPU	typeref:struct:CPU::IO
io	higan/md/vdp/vdp.hpp	/^    } io;$/;"	m	struct:VDP::Background	typeref:struct:VDP::Background::IO
io	higan/md/vdp/vdp.hpp	/^    } io;$/;"	m	struct:VDP::DMA	typeref:struct:VDP::DMA::IO
io	higan/md/vdp/vdp.hpp	/^    } io;$/;"	m	struct:VDP::Sprite	typeref:struct:VDP::Sprite::IO
io	higan/md/vdp/vdp.hpp	/^  } io;$/;"	m	struct:VDP	typeref:struct:VDP::IO
io	higan/md/ym2612/ym2612.hpp	/^  } io;$/;"	m	struct:YM2612	typeref:struct:YM2612::IO
io	higan/ms/vdp/vdp.hpp	/^  } io;$/;"	m	struct:VDP	typeref:struct:VDP::IO
io	higan/pce/cpu/cpu.hpp	/^  } io;$/;"	m	struct:CPU	typeref:struct:CPU::IO
io	higan/pce/psg/psg.hpp	/^    } io;$/;"	m	struct:PSG::Channel	typeref:struct:PSG::Channel::IO
io	higan/pce/psg/psg.hpp	/^  } io;$/;"	m	struct:PSG	typeref:struct:PSG::IO
io	higan/pce/vce/vce.hpp	/^  } io;$/;"	m	struct:VCE	typeref:struct:VCE::IO
io	higan/pce/vdc/vdc.hpp	/^  } io;$/;"	m	struct:VDC	typeref:struct:VDC::IO
io	higan/processor/hg51b/hg51b.hpp	/^  } io;$/;"	m	struct:Processor::HG51B	typeref:struct:Processor::HG51B::IO
io	higan/sfc/coprocessor/msu1/msu1.hpp	/^  } io;$/;"	v	typeref:struct:IO
io	higan/sfc/cpu/cpu.hpp	/^  } io;$/;"	m	struct:CPU	typeref:struct:CPU::IO
io	higan/sfc/ppu/object.hpp	/^  } io;$/;"	m	struct:Object	typeref:struct:Object::IO
io	higan/sfc/ppu/ppu.hpp	/^  } io;$/;"	m	struct:PPU	typeref:struct:PPU::IO
io	higan/sfc/ppu/screen.hpp	/^  } io;$/;"	m	struct:Screen	typeref:struct:Screen::IO
io	higan/sfc/ppu/window.hpp	/^  } io;$/;"	m	struct:Window	typeref:struct:Window::IO
io	higan/sfc/smp/smp.hpp	/^  } io;$/;"	m	struct:SMP	typeref:struct:SMP::IO
ip	higan/processor/v30mz/v30mz.hpp	/^    uint16_t ip;$/;"	m	struct:Processor::Registers
iplrom	higan/sfc/smp/smp.hpp	/^  uint8 iplrom[64];$/;"	m	struct:SMP
iplromEnable	higan/sfc/smp/smp.hpp	/^    uint1 iplromEnable = true;$/;"	m	struct:SMP::IO
ir	higan/processor/z80/z80.hpp	/^    Pair ir;$/;"	m	struct:Processor::Z80::Registers
iram	higan/sfc/coprocessor/sa1/sa1.hpp	/^  } iram;$/;"	m	struct:SA1	typeref:struct:SA1::IRAM
iram	higan/ws/memory/memory.cpp	/^InternalRAM iram;$/;"	m	namespace:WonderSwan	file:
irq	higan/gb/ppu/ppu.hpp	/^    bool irq = 0;  \/\/STAT IRQ line$/;"	m	struct:PPU::Status
irq	higan/gba/cpu/cpu.hpp	/^    uint1 irq;$/;"	m	struct:DMA
irq	higan/gba/cpu/cpu.hpp	/^    uint1 irq;$/;"	m	struct:Timer
irq	higan/gba/cpu/cpu.hpp	/^  } irq;$/;"	v	typeref:struct:IRQ
irq	higan/md/ym2612/ym2612.hpp	/^    uint1  irq = 0;$/;"	m	struct:YM2612::TimerA
irq	higan/md/ym2612/ym2612.hpp	/^    uint1 irq = 0;$/;"	m	struct:YM2612::TimerB
irq	higan/pce/cpu/cpu.hpp	/^  } irq;$/;"	m	struct:CPU	typeref:struct:CPU::IRQ
irq	higan/pce/vdc/vdc.hpp	/^  } irq;$/;"	m	struct:VDC	typeref:struct:VDC::IRQ
irq	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    } irq;$/;"	m	struct:Processor	typeref:struct:Processor::IRQ
irq	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  boolean irq;$/;"	v
irq	higan/processor/gsu/registers.hpp	/^    BooleanBitField<uint16_t, 15> irq;     \/\/interrupt flag$/;"	m	union:SFR::__anon27
irq	higan/processor/gsu/registers.hpp	/^  bool irq;$/;"	m	struct:CFGR
irq	higan/processor/hg51b/hg51b.hpp	/^    uint1 irq;      \/\/0 = enable, 1 = disable$/;"	m	struct:Processor::HG51B::IO
irq	higan/processor/wdc65816/wdc65816.hpp	/^    bool irq = false;  \/\/IRQ pin (0 = low, 1 = trigger)$/;"	m	struct:Processor::WDC65816::Registers
irq	higan/sfc/coprocessor/mcc/mcc.hpp	/^  } irq;$/;"	m	struct:MCC	typeref:struct:MCC::IRQ
irqAcknowledge	higan/fc/cartridge/chip/vrc3.cpp	/^  bool irqAcknowledge;$/;"	m	struct:VRC3	file:
irqAcknowledge	higan/fc/cartridge/chip/vrc4.cpp	/^  bool irqAcknowledge;$/;"	m	struct:VRC4	file:
irqAcknowledge	higan/fc/cartridge/chip/vrc6.cpp	/^  bool irqAcknowledge;$/;"	m	struct:VRC6	file:
irqAcknowledge	higan/fc/cartridge/chip/vrc7.cpp	/^  bool irqAcknowledge;$/;"	m	struct:VRC7	file:
irqCounter	higan/fc/cartridge/board/bandai-fcg.cpp	/^  uint16 irqCounter;$/;"	m	struct:BandaiFCG	file:
irqCounter	higan/fc/cartridge/board/sunsoft-5b.cpp	/^  uint16 irqCounter;$/;"	m	struct:Sunsoft5B	file:
irqCounter	higan/fc/cartridge/chip/mmc3.cpp	/^  uint8 irqCounter;$/;"	m	struct:MMC3	file:
irqCounter	higan/fc/cartridge/chip/mmc5.cpp	/^  uint irqCounter;$/;"	m	struct:MMC5	file:
irqCounter	higan/fc/cartridge/chip/mmc6.cpp	/^  uint8 irqCounter;$/;"	m	struct:MMC6	file:
irqCounter	higan/fc/cartridge/chip/vrc3.cpp	/^  } irqCounter;$/;"	m	struct:VRC3	typeref:struct:VRC3::__anon2	file:
irqCounter	higan/fc/cartridge/chip/vrc4.cpp	/^  uint8 irqCounter;$/;"	m	struct:VRC4	file:
irqCounter	higan/fc/cartridge/chip/vrc6.cpp	/^  uint8 irqCounter;$/;"	m	struct:VRC6	file:
irqCounter	higan/fc/cartridge/chip/vrc7.cpp	/^  uint8 irqCounter;$/;"	m	struct:VRC7	file:
irqCounterEnable	higan/fc/cartridge/board/bandai-fcg.cpp	/^  bool irqCounterEnable;$/;"	m	struct:BandaiFCG	file:
irqCounterEnable	higan/fc/cartridge/board/sunsoft-5b.cpp	/^  bool irqCounterEnable;$/;"	m	struct:Sunsoft5B	file:
irqDelay	higan/fc/cartridge/chip/mmc3.cpp	/^  uint irqDelay;$/;"	m	struct:MMC3	file:
irqDelay	higan/fc/cartridge/chip/mmc6.cpp	/^  uint irqDelay;$/;"	m	struct:MMC6	file:
irqEnable	higan/fc/apu/apu.hpp	/^    bool irqEnable;$/;"	m	struct:APU::DMC
irqEnable	higan/fc/cartridge/board/sunsoft-5b.cpp	/^  bool irqEnable;$/;"	m	struct:Sunsoft5B	file:
irqEnable	higan/fc/cartridge/chip/mmc3.cpp	/^  bool irqEnable;$/;"	m	struct:MMC3	file:
irqEnable	higan/fc/cartridge/chip/mmc5.cpp	/^  bool irqEnable;     \/\/$5204$/;"	m	struct:MMC5	file:
irqEnable	higan/fc/cartridge/chip/mmc6.cpp	/^  bool irqEnable;$/;"	m	struct:MMC6	file:
irqEnable	higan/fc/cartridge/chip/vrc3.cpp	/^  bool irqEnable;$/;"	m	struct:VRC3	file:
irqEnable	higan/fc/cartridge/chip/vrc4.cpp	/^  bool irqEnable;$/;"	m	struct:VRC4	file:
irqEnable	higan/fc/cartridge/chip/vrc6.cpp	/^  bool irqEnable;$/;"	m	struct:VRC6	file:
irqEnable	higan/fc/cartridge/chip/vrc7.cpp	/^  bool irqEnable;$/;"	m	struct:VRC7	file:
irqEnable	higan/gba/cpu/cpu.hpp	/^    uint1 irqEnable;$/;"	m	struct:Serial
irqEnable	higan/sfc/cpu/cpu.hpp	/^    boolean irqEnable;$/;"	m	struct:CPU::IO
irqHold	higan/sfc/cpu/cpu.hpp	/^    boolean irqHold;$/;"	m	struct:CPU::Status
irqLatch	higan/fc/cartridge/board/bandai-fcg.cpp	/^  uint16 irqLatch;$/;"	m	struct:BandaiFCG	file:
irqLatch	higan/fc/cartridge/chip/mmc3.cpp	/^  uint8 irqLatch;$/;"	m	struct:MMC3	file:
irqLatch	higan/fc/cartridge/chip/mmc6.cpp	/^  uint8 irqLatch;$/;"	m	struct:MMC6	file:
irqLatch	higan/fc/cartridge/chip/vrc3.cpp	/^  uint16 irqLatch;$/;"	m	struct:VRC3	file:
irqLatch	higan/fc/cartridge/chip/vrc4.cpp	/^  uint8 irqLatch;$/;"	m	struct:VRC4	file:
irqLatch	higan/fc/cartridge/chip/vrc6.cpp	/^  uint8 irqLatch;$/;"	m	struct:VRC6	file:
irqLatch	higan/fc/cartridge/chip/vrc7.cpp	/^  uint8 irqLatch;$/;"	m	struct:VRC7	file:
irqLine	higan/fc/cartridge/chip/mmc3.cpp	/^  bool irqLine;$/;"	m	struct:MMC3	file:
irqLine	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 irqLine;      \/\/$5203$/;"	m	struct:MMC5	file:
irqLine	higan/fc/cartridge/chip/mmc6.cpp	/^  bool irqLine;$/;"	m	struct:MMC6	file:
irqLine	higan/fc/cartridge/chip/vrc3.cpp	/^  bool irqLine;$/;"	m	struct:VRC3	file:
irqLine	higan/fc/cartridge/chip/vrc4.cpp	/^  bool irqLine;$/;"	m	struct:VRC4	file:
irqLine	higan/fc/cartridge/chip/vrc6.cpp	/^  bool irqLine;$/;"	m	struct:VRC6	file:
irqLine	higan/fc/cartridge/chip/vrc7.cpp	/^  bool irqLine;$/;"	m	struct:VRC7	file:
irqLine	higan/fc/cpu/cpu.hpp	/^    bool irqLine = 0;$/;"	m	struct:CPU::IO
irqLine	higan/pce/cpu/cpu.hpp	/^    inline auto irqLine() const { return line; }$/;"	f	struct:CPU::Timer
irqLine	higan/sfc/cpu/cpu.hpp	/^    boolean irqLine;$/;"	m	struct:CPU::Status
irqLock	higan/sfc/cpu/cpu.hpp	/^    bool irqLock = false;$/;"	m	struct:CPU::Status
irqMode	higan/fc/cartridge/chip/vrc3.cpp	/^  bool irqMode;$/;"	m	struct:VRC3	file:
irqMode	higan/fc/cartridge/chip/vrc4.cpp	/^  bool irqMode;$/;"	m	struct:VRC4	file:
irqMode	higan/fc/cartridge/chip/vrc6.cpp	/^  bool irqMode;$/;"	m	struct:VRC6	file:
irqMode	higan/fc/cartridge/chip/vrc7.cpp	/^  bool irqMode;$/;"	m	struct:VRC7	file:
irqPending	higan/fc/apu/apu.hpp	/^    bool irqPending;$/;"	m	struct:APU::DMC
irqPending	higan/fc/apu/apu.hpp	/^    bool irqPending;$/;"	m	struct:APU::FrameCounter
irqPending	higan/fc/cartridge/chip/mmc5.cpp	/^  bool irqPending;$/;"	m	struct:MMC5	file:
irqPending	higan/sfc/cpu/cpu.hpp	/^    boolean irqPending;$/;"	m	struct:CPU::Status
irqScalar	higan/fc/cartridge/chip/vrc4.cpp	/^  int irqScalar;$/;"	m	struct:VRC4	file:
irqScalar	higan/fc/cartridge/chip/vrc6.cpp	/^  int irqScalar;$/;"	m	struct:VRC6	file:
irqScalar	higan/fc/cartridge/chip/vrc7.cpp	/^  int irqScalar;$/;"	m	struct:VRC7	file:
irqTransition	higan/sfc/cpu/cpu.hpp	/^    boolean irqTransition;$/;"	m	struct:CPU::Status
irqValid	higan/sfc/cpu/cpu.hpp	/^    boolean irqValid;$/;"	m	struct:CPU::Status
irqduty	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 irqduty;$/;"	m	struct:EpsonRTC
irqflag	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 irqflag;$/;"	m	struct:EpsonRTC
irqhblank	higan/gba/ppu/ppu.hpp	/^    uint1 irqhblank;$/;"	m	struct:PPU::IO
irqmask	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 irqmask;$/;"	m	struct:EpsonRTC
irqperiod	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint2 irqperiod;$/;"	m	struct:EpsonRTC
irqvblank	higan/gba/ppu/ppu.hpp	/^    uint1 irqvblank;$/;"	m	struct:PPU::IO
irqvcoincidence	higan/gba/ppu/ppu.hpp	/^    uint1 irqvcoincidence;$/;"	m	struct:PPU::IO
isActive	ruby/audio/asio.hpp	/^  ASIOBool isActive;$/;"	m	struct:ASIOChannelInfo
isCurrentSource	ruby/audio/asio.hpp	/^  ASIOBool isCurrentSource;$/;"	m	struct:ASIOClockSource
isInput	ruby/audio/asio.hpp	/^  ASIOBool isInput;$/;"	m	struct:ASIOBufferInfo
isInput	ruby/audio/asio.hpp	/^  ASIOBool isInput;$/;"	m	struct:ASIOChannelInfo
isName	nall/string/markup/xml.hpp	/^  inline bool isName(char c) const {$/;"	f	struct:nall::XML::ManagedNode
isReady	ruby/audio/wasapi.cpp	/^  bool isReady = false;$/;"	m	struct:AudioWASAPI	file:
isReady	ruby/audio/xaudio2.cpp	/^  bool isReady = false;$/;"	m	struct:AudioXAudio2	file:
isReady	ruby/input/carbon.cpp	/^  bool isReady = false;$/;"	m	struct:InputCarbon	file:
isReady	ruby/input/quartz.cpp	/^  bool isReady = false;$/;"	m	struct:InputQuartz	file:
isReady	ruby/input/sdl.cpp	/^  bool isReady = false;$/;"	m	struct:InputSDL	file:
isReady	ruby/input/udev.cpp	/^  bool isReady = false;$/;"	m	struct:InputUdev	file:
isReady	ruby/input/windows.cpp	/^  bool isReady = false;$/;"	m	struct:InputWindows	file:
isReady	ruby/input/xlib.cpp	/^  bool isReady = false;$/;"	m	struct:InputXlib	file:
isVolatile	icarus/heuristics/heuristics.hpp	/^  auto& isVolatile() { _volatile = true; return *this; }$/;"	f	struct:Heuristics::Memory
isWhitespace	nall/string/markup/xml.hpp	/^  inline bool isWhitespace(char c) const {$/;"	f	struct:nall::XML::ManagedNode
isXInputDevice	ruby/input/joypad/directinput.cpp	/^    bool isXInputDevice = false;$/;"	m	struct:InputJoypadDirectInput::Joypad	file:
isXInputDevice	ruby/input/shared/rawinput.cpp	/^    bool isXInputDevice = false;$/;"	m	struct:RawInput::Device	file:
is_compatible	nall/function.hpp	/^  template<typename L> struct is_compatible {$/;"	s	struct:nall::R
is_compatible	nall/shared-pointer.hpp	/^  struct is_compatible {$/;"	s	struct:nall::shared_pointer
is_signed	nall/traits.hpp	/^  template<> struct is_signed<int128_t> : true_type {};$/;"	s	namespace:std
is_unsigned	nall/traits.hpp	/^  template<> struct is_unsigned<uint128_t> : true_type {};$/;"	s	namespace:std
isa	nall/suffix-array.hpp	/^  vector<int> isa;      \/\/inverted suffix array$/;"	m	struct:nall::SuffixArray
italic	hiro/core/font.hpp	/^    char italic = false;   \/\/1=4$/;"	m	struct:Font::State
item	higan/sfc/ppu/object.hpp	/^    Item item[2][32];$/;"	m	struct:Object::State
item	hiro/core/shared.hpp	/^  auto item(const string& path) const { return self().item(path); }$/;"	f	struct:TreeView
item	hiro/core/shared.hpp	/^  auto item(const string& path) const { return self().item(path); }$/;"	f	struct:TreeViewItem
item	hiro/core/shared.hpp	/^  auto item(uint position) const { return self().item(position); }$/;"	f	struct:ComboEdit
item	hiro/core/shared.hpp	/^  auto item(unsigned position) const { return self().item(position); }$/;"	f	struct:ComboButton
item	hiro/core/shared.hpp	/^  auto item(unsigned position) const { return self().item(position); }$/;"	f	struct:IconView
item	hiro/core/shared.hpp	/^  auto item(unsigned position) const { return self().item(position); }$/;"	f	struct:TabFrame
item	hiro/core/shared.hpp	/^  auto item(unsigned position) const { return self().item(position); }$/;"	f	struct:TableView
item	hiro/extension/shared.hpp	/^  auto item(uint position) const { return self().item(position); }$/;"	f	struct:ListView
item	ruby/input/joypad/udev.cpp	/^  udev_list_entry* item = nullptr;$/;"	m	struct:InputJoypadUdev	file:
itemCount	higan/sfc/ppu/object.hpp	/^    uint itemCount;$/;"	m	struct:Object::State
itemCount	hiro/core/shared.hpp	/^  auto itemCount() const { return self().itemCount(); }$/;"	f	struct:ComboButton
itemCount	hiro/core/shared.hpp	/^  auto itemCount() const { return self().itemCount(); }$/;"	f	struct:ComboEdit
itemCount	hiro/core/shared.hpp	/^  auto itemCount() const { return self().itemCount(); }$/;"	f	struct:IconView
itemCount	hiro/core/shared.hpp	/^  auto itemCount() const { return self().itemCount(); }$/;"	f	struct:TabFrame
itemCount	hiro/core/shared.hpp	/^  auto itemCount() const { return self().itemCount(); }$/;"	f	struct:TableView
itemCount	hiro/core/shared.hpp	/^  auto itemCount() const { return self().itemCount(); }$/;"	f	struct:TreeView
itemCount	hiro/core/shared.hpp	/^  auto itemCount() const { return self().itemCount(); }$/;"	f	struct:TreeViewItem
itemCount	hiro/extension/shared.hpp	/^  auto itemCount() const { return self().itemCount(); }$/;"	f	struct:ListView
items	hiro/core/core.hpp	/^    vector<sComboButtonItem> items;$/;"	m	struct:hiro::mComboButton::State
items	hiro/core/core.hpp	/^    vector<sComboEditItem> items;$/;"	m	struct:hiro::mComboEdit::State
items	hiro/core/core.hpp	/^    vector<sIconViewItem> items;$/;"	m	struct:hiro::mIconView::State
items	hiro/core/core.hpp	/^    vector<sTreeViewItem> items;$/;"	m	struct:hiro::mTreeView::State
items	hiro/core/core.hpp	/^    vector<sTreeViewItem> items;$/;"	m	struct:hiro::mTreeViewItem::State
items	hiro/core/shared.hpp	/^  auto items() const { return self().items(); }$/;"	f	struct:ComboButton
items	hiro/core/shared.hpp	/^  auto items() const { return self().items(); }$/;"	f	struct:ComboEdit
items	hiro/core/shared.hpp	/^  auto items() const { return self().items(); }$/;"	f	struct:IconView
items	hiro/core/shared.hpp	/^  auto items() const { return self().items(); }$/;"	f	struct:TabFrame
items	hiro/core/shared.hpp	/^  auto items() const { return self().items(); }$/;"	f	struct:TableView
items	hiro/core/shared.hpp	/^  auto items() const { return self().items(); }$/;"	f	struct:TreeView
items	hiro/core/shared.hpp	/^  auto items() const { return self().items(); }$/;"	f	struct:TreeViewItem
items	hiro/core/widget/tab-frame.hpp	/^    vector<sTabFrameItem> items;$/;"	m	struct:mTabFrame::State
items	hiro/core/widget/table-view.hpp	/^    vector<sTableViewItem> items;$/;"	m	struct:mTableView::State
items	hiro/extension/shared.hpp	/^  auto items() const { return self().items(); }$/;"	f	struct:ListView
iterator	nall/bit-vector.hpp	/^    iterator(bitvector& self, uint position) : self(self), position(position) {}$/;"	f	struct:nall::bitvector::iterator
iterator	nall/bit-vector.hpp	/^  struct iterator {$/;"	s	struct:nall::bitvector
iterator	nall/iterator.hpp	/^  iterator(T* self, uint offset) : self(self), offset(offset) {}$/;"	f	struct:nall::iterator
iterator	nall/iterator.hpp	/^template<typename T> struct iterator {$/;"	s	namespace:nall
iterator	nall/range.hpp	/^    iterator(int position, int step = 0) : position(position), step(step) {}$/;"	f	struct:nall::range_t::iterator
iterator	nall/range.hpp	/^  struct iterator {$/;"	s	struct:nall::range_t
iterator	nall/set.hpp	/^    iterator(const set& source, uint position) : base_iterator(source, position) {}$/;"	f	struct:nall::set::iterator
iterator	nall/set.hpp	/^  struct iterator : base_iterator {$/;"	s	struct:nall::set
iterator	nall/string/markup/node.hpp	/^    iterator(const Node& source, uint position) : source(source), position(position) {}$/;"	f	struct:nall::Markup::Node::iterator
iterator	nall/string/markup/node.hpp	/^  struct iterator {$/;"	s	struct:nall::Markup::Node
iterator_const	nall/iterator.hpp	/^  iterator_const(const T* self, uint offset) : self(self), offset(offset) {}$/;"	f	struct:nall::iterator_const
iterator_const	nall/iterator.hpp	/^template<typename T> struct iterator_const {$/;"	s	namespace:nall
iwram	higan/gba/cpu/cpu.hpp	/^  uint8 iwram[ 32 * 1024];$/;"	v
ix	higan/processor/z80/z80.hpp	/^    Pair ix;$/;"	m	struct:Processor::Z80::Registers
ix	higan/processor/z80/z80.hpp	/^  enum class Prefix : uint { hl, ix, iy } prefix = Prefix::hl;$/;"	m	class:Processor::Z80::Prefix
iy	higan/processor/z80/z80.hpp	/^    Pair iy;$/;"	m	struct:Processor::Z80::Registers
joy1	higan/sfc/cpu/cpu.hpp	/^    uint16 joy1;$/;"	m	struct:CPU::IO
joy2	higan/sfc/cpu/cpu.hpp	/^    uint16 joy2;$/;"	m	struct:CPU::IO
joy3	higan/sfc/cpu/cpu.hpp	/^    uint16 joy3;$/;"	m	struct:CPU::IO
joy4	higan/sfc/cpu/cpu.hpp	/^    uint16 joy4;$/;"	m	struct:CPU::IO
joybus	higan/gba/cpu/cpu.hpp	/^  } joybus;$/;"	v	typeref:struct:Joybus
joyp	higan/gb/cpu/cpu.hpp	/^    uint8 joyp;$/;"	m	struct:CPU::Status
joyp14Lock	higan/sfc/coprocessor/icd/icd.hpp	/^  bool joyp14Lock;$/;"	m	struct:ICD
joyp15Lock	higan/sfc/coprocessor/icd/icd.hpp	/^  bool joyp15Lock;$/;"	m	struct:ICD
joypID	higan/sfc/coprocessor/icd/icd.hpp	/^  uint joypID;$/;"	m	struct:ICD
joypPacket	higan/sfc/coprocessor/icd/icd.hpp	/^  Packet joypPacket;$/;"	m	struct:ICD
joypad	ruby/input/sdl.cpp	/^  InputJoypadSDL joypad;$/;"	m	struct:InputSDL	file:
joypad	ruby/input/udev.cpp	/^  InputJoypadUdev joypad;$/;"	m	struct:InputUdev	file:
joypadDirectInput	ruby/input/windows.cpp	/^  InputJoypadDirectInput joypadDirectInput;$/;"	m	struct:InputWindows	file:
joypadXInput	ruby/input/windows.cpp	/^  InputJoypadXInput joypadXInput;$/;"	m	struct:InputWindows	file:
joypads	ruby/input/joypad/directinput.cpp	/^  vector<Joypad> joypads;$/;"	m	struct:InputJoypadDirectInput	file:
joypads	ruby/input/joypad/sdl.cpp	/^  vector<Joypad> joypads;$/;"	m	struct:InputJoypadSDL	file:
joypads	ruby/input/joypad/udev.cpp	/^  vector<Joypad> joypads;$/;"	m	struct:InputJoypadUdev	file:
joypads	ruby/input/joypad/xinput.cpp	/^  vector<Joypad> joypads;$/;"	m	struct:InputJoypadXInput	file:
k	higan/processor/upd96050/upd96050.hpp	/^    int16 k;$/;"	m	struct:Processor::uPD96050::Registers
kb	ruby/input/keyboard/rawinput.cpp	/^  } kb;$/;"	m	struct:InputKeyboardRawInput	typeref:struct:InputKeyboardRawInput::Keyboard	file:
key	nall/map.hpp	/^    T key;$/;"	m	struct:nall::map::node_t
keyOn	higan/md/ym2612/ym2612.hpp	/^      uint1 keyOn = 0;$/;"	m	struct:Channel::Operator
keyScale	higan/md/ym2612/ym2612.hpp	/^        uint2  keyScale = 0;$/;"	m	struct:Channel::Operator::Envelope
keybit	ruby/input/joypad/udev.cpp	/^    uint8_t keybit[(KEY_MAX + 7) \/ 8] = {0};$/;"	m	struct:InputJoypadUdev::Joypad	file:
keyboard	ruby/input/carbon.cpp	/^  InputKeyboardCarbon keyboard;$/;"	m	struct:InputCarbon	file:
keyboard	ruby/input/quartz.cpp	/^  InputKeyboardQuartz keyboard;$/;"	m	struct:InputQuartz	file:
keyboard	ruby/input/sdl.cpp	/^  InputKeyboardXlib keyboard;$/;"	m	struct:InputSDL	file:
keyboard	ruby/input/udev.cpp	/^  InputKeyboardXlib keyboard;$/;"	m	struct:InputUdev	file:
keyboard	ruby/input/windows.cpp	/^  InputKeyboardRawInput keyboard;$/;"	m	struct:InputWindows	file:
keyboard	ruby/input/xlib.cpp	/^  InputKeyboardXlib keyboard;$/;"	m	struct:InputXlib	file:
keycode	ruby/input/keyboard/xlib.cpp	/^    uint keycode;$/;"	m	struct:InputKeyboardXlib::Key	file:
keycodes	hiro/gtk/settings.hpp	/^  vector<uint16_t> keycodes;$/;"	m	struct:hiro::Settings
keycodes	hiro/qt/settings.hpp	/^  vector<uint16_t> keycodes;$/;"	m	struct:hiro::Settings
keycodes	hiro/windows/keyboard.cpp	/^vector<uint16_t> pKeyboard::keycodes;$/;"	m	class:hiro::pKeyboard	file:
keycodes	hiro/windows/keyboard.hpp	/^  static vector<uint16_t> keycodes;$/;"	m	struct:hiro::pKeyboard
keypad	higan/gba/cpu/cpu.hpp	/^  } keypad;$/;"	v	typeref:struct:Keypad
keypad	higan/ws/system/system.hpp	/^  } keypad;$/;"	m	struct:System	typeref:struct:System::Keypad
keys	hiro/core/core.hpp	/^    vector<uint> keys;$/;"	m	struct:hiro::Hotkey::State
keys	hiro/core/core.hpp	/^  static const vector<string> keys;$/;"	m	struct:hiro::Keyboard
keys	hiro/core/keyboard.cpp	/^const vector<string> Keyboard::keys = {$/;"	m	class:Keyboard	file:
keys	ruby/input/keyboard/carbon.cpp	/^  vector<Key> keys;$/;"	m	struct:InputKeyboardCarbon	file:
keys	ruby/input/keyboard/quartz.cpp	/^  vector<Key> keys;$/;"	m	struct:InputKeyboardQuartz	file:
keys	ruby/input/keyboard/rawinput.cpp	/^  vector<Key> keys;$/;"	m	struct:InputKeyboardRawInput	file:
keys	ruby/input/keyboard/xlib.cpp	/^  vector<Key> keys;$/;"	m	struct:InputKeyboardXlib	file:
keysym	ruby/input/keyboard/xlib.cpp	/^    uint keysym;$/;"	m	struct:InputKeyboardXlib::Key	file:
kon	higan/sfc/dsp/dsp.hpp	/^    int kon = 0;                \/\/KON value when last checked$/;"	m	struct:State
konBuffer	higan/sfc/dsp/dsp.hpp	/^    int konBuffer = 0;$/;"	m	struct:State
konDelay	higan/sfc/dsp/dsp.hpp	/^    int konDelay = 0;        \/\/KON delay\/current setup phase$/;"	m	struct:Voice
l	higan/processor/upd96050/upd96050.hpp	/^    int16 l;$/;"	m	struct:Processor::uPD96050::Registers
l	higan/sfc/controller/gamepad/gamepad.hpp	/^  boolean a, x, l, r;$/;"	v
l	higan/sfc/controller/mouse/mouse.hpp	/^  bool l;      \/\/left button$/;"	v
l	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    boolean a, x, l, r;$/;"	m	struct:Gamepad
l	higan/ws/ppu/ppu.hpp	/^  } l;$/;"	m	struct:PPU	typeref:struct:PPU::Latches
l	nall/elliptic-curve/modulo25519-optimized.hpp	/^  uint64_t l[5];  \/\/51-bits per limb; 255-bits total$/;"	m	struct:nall::EllipticCurve::Modulo25519
label	genius/genius.hpp	/^  string label;$/;"	m	struct:Game
label	higan/emulator/game.hpp	/^  string label;$/;"	m	struct:Emulator::Game
lambda	nall/function.hpp	/^    lambda(const L& object) : object(object) {}$/;"	f	struct:nall::R::global::lambda
lambda	nall/function.hpp	/^  template<typename L> struct lambda : container {$/;"	s	struct:nall::R::global
language	nall/locale.hpp	/^    string language;$/;"	m	struct:nall::Locale::Dictionary
lastMove	hiro/gtk/window.hpp	/^  GtkAllocation lastMove = {0};$/;"	m	struct:hiro::pWindow
lastPoll	higan/target-bsnes/input/input.hpp	/^  uint64 lastPoll;   \/\/time in milliseconds since last call to poll()$/;"	m	struct:InputManager
lastPoll	higan/target-higan/input/input.hpp	/^  uint64 lastPoll;   \/\/time in milliseconds since last call to poll()$/;"	m	struct:InputManager
lastSize	hiro/gtk/window.hpp	/^  GtkAllocation lastSize = {0};$/;"	m	struct:hiro::pWindow
latch	higan/fc/cartridge/board/nes-fxrom.cpp	/^  bool latch[2];$/;"	v
latch	higan/fc/cartridge/board/nes-pxrom.cpp	/^  bool latch[2];$/;"	v
latch	higan/fc/cartridge/chip/vrc2.cpp	/^  bool latch;$/;"	m	struct:VRC2	file:
latch	higan/fc/ppu/ppu.hpp	/^      NaturalBitField<uint,15,15> latch;$/;"	m	union:PPU::IO::Union
latch	higan/fc/ppu/ppu.hpp	/^  } latch;$/;"	m	struct:PPU	typeref:struct:PPU::Latches
latch	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint1 latch;$/;"	m	struct:MBC3::IO::RTC
latch	higan/gba/cpu/cpu.hpp	/^    } latch;$/;"	m	struct:DMA	typeref:struct:DMA::Latch
latch	higan/gba/ppu/ppu.hpp	/^    } latch;$/;"	m	struct:PPU::Background	typeref:struct:PPU::Background::Latch
latch	higan/md/controller/control-pad/control-pad.hpp	/^  uint1 latch;$/;"	v
latch	higan/md/controller/fighting-pad/fighting-pad.hpp	/^  uint1 latch;$/;"	v
latch	higan/md/vdp/vdp.hpp	/^  } latch;$/;"	m	struct:VDP	typeref:struct:VDP::Latch
latch	higan/md/ym2612/ym2612.hpp	/^        uint11 latch = 0;$/;"	m	struct:Channel::Operator::Pitch
latch	higan/md/ym2612/ym2612.hpp	/^        uint3 latch = 0;$/;"	m	struct:Channel::Operator::Octave
latch	higan/pce/cpu/cpu.hpp	/^    uint7 latch;$/;"	m	struct:CPU::Timer
latch	higan/sfc/ppu/ppu.hpp	/^  } latch;$/;"	m	struct:PPU	typeref:struct:PPU::Latches
latch	higan/ws/eeprom/eeprom.hpp	/^    uint16 latch;$/;"	m	struct:Registers
latchDay	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint9 latchDay;$/;"	m	struct:MBC3::IO::RTC
latchDayCarry	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint1 latchDayCarry;$/;"	m	struct:MBC3::IO::RTC
latchHour	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint8 latchHour;$/;"	m	struct:MBC3::IO::RTC
latchMinute	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint8 latchMinute;$/;"	m	struct:MBC3::IO::RTC
latchSecond	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint8 latchSecond;$/;"	m	struct:MBC3::IO::RTC
latched	higan/fc/controller/gamepad/gamepad.hpp	/^  bool latched = 0;$/;"	v
latched	higan/sfc/controller/gamepad/gamepad.hpp	/^  bool latched;$/;"	v
latched	higan/sfc/controller/justifier/justifier.hpp	/^  bool latched;$/;"	v
latched	higan/sfc/controller/mouse/mouse.hpp	/^  bool latched;$/;"	v
latched	higan/sfc/controller/super-multitap/super-multitap.hpp	/^  bool latched;$/;"	v
latched	higan/sfc/controller/super-scope/super-scope.hpp	/^  bool latched;$/;"	v
latency	higan/target-bsnes/settings/settings.hpp	/^    uint latency = 0;$/;"	m	struct:Settings::Audio
latency	ruby/audio/audio.hpp	/^  uint latency = 0;$/;"	m	struct:AudioDriver
layout	hiro/gtk/widget/tab-frame.hpp	/^    GtkWidget* layout = nullptr;$/;"	m	struct:hiro::pTabFrame::Tab
lcdContrast	higan/ws/ppu/ppu.hpp	/^    uint1 lcdContrast;  \/\/WSC only$/;"	m	struct:PPU::Registers
lcdEnable	higan/ws/ppu/ppu.hpp	/^    uint1 lcdEnable = 1;$/;"	m	struct:PPU::Registers
lcdUnknown	higan/ws/ppu/ppu.hpp	/^    uint6 lcdUnknown;$/;"	m	struct:PPU::Registers
lcounter	higan/ms/vdp/vdp.hpp	/^    uint lcounter = 0;  \/\/line counter$/;"	m	struct:VDP::IO
lcp	nall/suffix-array.hpp	/^  vector<int> lcp;      \/\/longest common prefixes$/;"	m	struct:nall::SuffixArray
leapYear	higan/gb/cartridge/tama/tama.hpp	/^    uint2 leapYear;  \/\/0 = leap year; 1-3 = non-leap year$/;"	m	struct:TAMA::RTC
left	higan/fc/controller/gamepad/gamepad.hpp	/^  bool left = 0;$/;"	v
left	higan/gb/apu/apu.hpp	/^    int16 left;$/;"	m	struct:APU::Sequencer
left	higan/ms/psg/psg.hpp	/^    uint1   left;$/;"	m	struct:PSG::Noise
left	higan/ms/psg/psg.hpp	/^    uint1  left;$/;"	m	struct:PSG::Tone
left	higan/sfc/controller/gamepad/gamepad.hpp	/^  boolean up, down, left, right;$/;"	v
left	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    boolean up, down, left, right;$/;"	m	struct:Gamepad
left	higan/ws/apu/apu.hpp	/^      int11 left;$/;"	m	struct:APU::Channel5::Output
left	higan/ws/apu/apu.hpp	/^      uint8 left;$/;"	m	struct:APU::Channel1::Output
left	higan/ws/apu/apu.hpp	/^      uint8 left;$/;"	m	struct:APU::Channel2::Output
left	higan/ws/apu/apu.hpp	/^      uint8 left;$/;"	m	struct:APU::Channel3::Output
left	higan/ws/apu/apu.hpp	/^      uint8 left;$/;"	m	struct:APU::Channel4::Output
leftClip	higan/ms/vdp/vdp.hpp	/^    bool leftClip = 0;$/;"	m	struct:VDP::IO
leftColumnBlank	higan/md/vdp/vdp.hpp	/^    uint1 leftColumnBlank;$/;"	m	struct:VDP::IO
leftEnable	higan/gb/apu/apu.hpp	/^      bool leftEnable;$/;"	m	struct:APU::Sequencer::Channel
leftEnable	higan/gb/apu/apu.hpp	/^    bool leftEnable;$/;"	m	struct:APU::Sequencer
leftEnable	higan/md/ym2612/ym2612.hpp	/^    uint1 leftEnable = 1;$/;"	m	struct:Channel
leftEnable	higan/ws/apu/apu.hpp	/^      uint1 leftEnable;$/;"	m	struct:APU::Channel5::Registers
leftVolume	higan/gb/apu/apu.hpp	/^    uint3 leftVolume;$/;"	m	struct:APU::Sequencer
lenable	higan/gba/apu/apu.hpp	/^    uint1 lenable;$/;"	m	struct:APU::FIFO
lenable	higan/gba/apu/apu.hpp	/^    uint1 lenable[4];$/;"	m	struct:APU::Sequencer
length	higan/gb/apu/apu.hpp	/^    uint length;$/;"	m	struct:APU::Noise
length	higan/gb/apu/apu.hpp	/^    uint length;$/;"	m	struct:APU::Square1
length	higan/gb/apu/apu.hpp	/^    uint length;$/;"	m	struct:APU::Square2
length	higan/gb/apu/apu.hpp	/^    uint length;$/;"	m	struct:APU::Wave
length	higan/gba/apu/apu.hpp	/^    uint6 length;$/;"	m	struct:APU::Noise
length	higan/gba/apu/apu.hpp	/^    uint6 length;$/;"	m	struct:APU::Square
length	higan/gba/apu/apu.hpp	/^    uint8 length;$/;"	m	struct:APU::Wave
length	higan/gba/cpu/cpu.hpp	/^      VariadicNatural length;$/;"	m	struct:DMA::Latch
length	higan/gba/cpu/cpu.hpp	/^    VariadicNatural length;$/;"	m	struct:DMA
length	higan/md/vdp/vdp.hpp	/^      uint16 length;$/;"	m	struct:VDP::DMA::IO
length	higan/pce/vdc/vdc.hpp	/^    uint16 length;$/;"	m	struct:VDC::DMA
length	higan/processor/hg51b/hg51b.hpp	/^      uint16 length;$/;"	m	struct:Processor::HG51B::IO::DMA
length	higan/ws/apu/apu.hpp	/^      uint20 length;$/;"	m	struct:APU::DMA::Registers
length	higan/ws/apu/apu.hpp	/^      uint20 length;$/;"	m	struct:APU::DMA::State
length	hiro/core/core.hpp	/^    int length;$/;"	m	struct:hiro::Cursor::State
length	hiro/core/core.hpp	/^    uint length = 0;$/;"	m	struct:hiro::mHexEdit::State
length	hiro/core/core.hpp	/^    uint length = 101;$/;"	m	struct:hiro::mHorizontalScrollBar::State
length	hiro/core/core.hpp	/^    uint length = 101;$/;"	m	struct:hiro::mHorizontalSlider::State
length	hiro/core/core.hpp	/^    uint length = 101;$/;"	m	struct:hiro::mVerticalScrollBar::State
length	hiro/core/core.hpp	/^    uint length = 101;$/;"	m	struct:hiro::mVerticalSlider::State
length	hiro/core/shared.hpp	/^  auto length() const { return self().length(); }$/;"	f	struct:HexEdit
length	hiro/core/shared.hpp	/^  auto length() const { return self().length(); }$/;"	f	struct:HorizontalScrollBar
length	hiro/core/shared.hpp	/^  auto length() const { return self().length(); }$/;"	f	struct:HorizontalSlider
length	hiro/core/shared.hpp	/^  auto length() const { return self().length(); }$/;"	f	struct:VerticalScrollBar
length	hiro/core/shared.hpp	/^  auto length() const { return self().length(); }$/;"	f	struct:VerticalSlider
length	nall/hash/sha224.hpp	/^  uint64_t length = 0;$/;"	m	struct:nall::Hash::SHA224
length	nall/hash/sha256.hpp	/^  uint64_t length = 0;$/;"	m	struct:nall::Hash::SHA256
length	nall/hash/sha384.hpp	/^  uint128_t length = 0;$/;"	m	struct:nall::Hash::SHA384
length	nall/hash/sha512.hpp	/^  uint128_t length = 0;$/;"	m	struct:nall::Hash::SHA512
length	nall/hashset.hpp	/^  uint length = 8;  \/\/length of pool$/;"	m	struct:nall::hashset
length	nall/windows/detour.hpp	/^    uint length;$/;"	m	struct:nall::detour::opcode
length	nall/windows/utf8.hpp	/^    uint length = 0;$/;"	m	struct:nall::utf16_t
length	nall/windows/utf8.hpp	/^    uint length = 0;$/;"	m	struct:nall::utf8_t
lengthCounter	higan/fc/apu/apu.hpp	/^    uint lengthCounter;$/;"	m	struct:APU::DMC
lengthCounter	higan/fc/apu/apu.hpp	/^    uint lengthCounter;$/;"	m	struct:APU::Noise
lengthCounter	higan/fc/apu/apu.hpp	/^    uint lengthCounter;$/;"	m	struct:APU::Pulse
lengthCounter	higan/fc/apu/apu.hpp	/^    uint lengthCounter;$/;"	m	struct:APU::Triangle
lengthCounterTable	higan/fc/apu/apu.cpp	/^const uint8 APU::lengthCounterTable[32] = {$/;"	m	class:Famicom::APU	file:
lengthCounterTable	higan/fc/apu/apu.hpp	/^  static const uint8 lengthCounterTable[32];$/;"	m	struct:APU
lengthLatch	higan/fc/apu/apu.hpp	/^    uint8 lengthLatch;$/;"	m	struct:APU::DMC
lengths	nall/suffix-array.hpp	/^  vector<int> lengths;  \/\/longest previous factors$/;"	m	struct:nall::SuffixArray
level	higan/gba/apu/apu.hpp	/^      uint10 level;$/;"	m	struct:APU::Registers::SoundBias
levels	higan/md/psg/psg.hpp	/^  int16 levels[16];$/;"	m	struct:PSG
levels	higan/ms/psg/psg.hpp	/^  int16 levels[16];$/;"	m	struct:PSG
lfo	higan/md/ym2612/ym2612.hpp	/^  } lfo;$/;"	m	struct:YM2612	typeref:struct:YM2612::LFO
lfoControl	higan/pce/psg/psg.hpp	/^    uint2 lfoControl;$/;"	m	struct:PSG::IO
lfoDividers	higan/md/ym2612/constants.cpp	/^const uint8_t YM2612::lfoDividers[8] = {$/;"	m	class:YM2612	file:
lfoDividers	higan/md/ym2612/ym2612.hpp	/^  static const uint8_t lfoDividers[8];$/;"	v
lfoEnable	higan/md/ym2612/ym2612.hpp	/^      uint1 lfoEnable = 0;$/;"	m	struct:Channel::Operator
lfoEnable	higan/pce/psg/psg.hpp	/^    uint1 lfoEnable;$/;"	m	struct:PSG::IO
lfoFrequency	higan/pce/psg/psg.hpp	/^    uint8 lfoFrequency;$/;"	m	struct:PSG::IO
lfsr	higan/fc/apu/apu.hpp	/^    uint15 lfsr;$/;"	m	struct:APU::Noise
lfsr	higan/gb/apu/apu.hpp	/^    uint15 lfsr;$/;"	m	struct:APU::Noise
lfsr	higan/gba/apu/apu.hpp	/^    uint15 lfsr;$/;"	m	struct:APU::Noise
lfsr	higan/md/psg/psg.hpp	/^    uint16 lfsr;$/;"	m	struct:PSG::Noise
lfsr	higan/ms/psg/psg.hpp	/^    uint16  lfsr;$/;"	m	struct:PSG::Noise
libco_ppc_code	libco/ppc.c	/^static const uint32_t libco_ppc_code[1024] = {$/;"	v	file:
library	nall/dl.hpp	/^struct library {$/;"	s	namespace:nall
libxinput	ruby/input/joypad/xinput.cpp	/^  HMODULE libxinput = nullptr;$/;"	m	struct:InputJoypadXInput	file:
line	higan/md/ym2612/ym2612.hpp	/^    uint1  line = 0;$/;"	m	struct:YM2612::TimerA
line	higan/md/ym2612/ym2612.hpp	/^    uint1 line = 0;$/;"	m	struct:YM2612::TimerB
line	higan/pce/cpu/cpu.hpp	/^    bool  line = 0;$/;"	m	struct:CPU::Timer
line	higan/pce/vdc/vdc.hpp	/^    bool line = 0;$/;"	m	struct:VDC::IRQ
line	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint line;$/;"	m	struct:SA1::DMA
line	higan/sfc/smp/smp.hpp	/^    boolean line;$/;"	m	struct:SMP::Timer
lineA	higan/sfc/ppu/screen.hpp	/^  uint32* lineA;$/;"	m	struct:Screen
lineB	higan/sfc/ppu/screen.hpp	/^  uint32* lineB;$/;"	m	struct:Screen
lineClocks	higan/sfc/cpu/cpu.hpp	/^    uint lineClocks = 0;$/;"	m	struct:CPU::Status
lineCoincidence	higan/pce/vdc/vdc.hpp	/^    uint10 lineCoincidence;$/;"	m	struct:VDC::IO
lineCompare	higan/ws/ppu/ppu.hpp	/^    uint8 lineCompare;$/;"	m	struct:PPU::Registers
lineCounter	higan/ms/vdp/vdp.hpp	/^    uint8 lineCounter;$/;"	m	struct:VDP::IO
lineCounter	higan/sfc/cpu/cpu.hpp	/^    uint8 lineCounter = 0xff;$/;"	m	struct:CPU::Channel
lineInterrupts	higan/ms/vdp/vdp.hpp	/^    bool lineInterrupts = 0;$/;"	m	struct:VDP::IO
linearLength	higan/fc/apu/apu.hpp	/^    uint8 linearLength;$/;"	m	struct:APU::Triangle
linearLengthCounter	higan/fc/apu/apu.hpp	/^    uint8 linearLengthCounter;$/;"	m	struct:APU::Triangle
lineclocks	higan/sfc/ppu/counter/counter.hpp	/^    uint lineclocks = 1364;$/;"	m	struct:PPUcounter::__anon13
lines224	higan/ms/vdp/vdp.hpp	/^    bool lines224 = 0;$/;"	m	struct:VDP::IO
lines240	higan/ms/vdp/vdp.hpp	/^    bool lines240 = 0;$/;"	m	struct:VDP::IO
link	higan/md/vdp/vdp.hpp	/^    uint7  link;$/;"	m	struct:VDP::Object
link	higan/sfc/expansion/21fx/21fx.hpp	/^  nall::library link;$/;"	m	struct:S21FX
link	nall/set.hpp	/^    node_t* link[2] = {nullptr, nullptr};$/;"	m	struct:nall::set::node_t
link	nall/string/eval/node.hpp	/^  vector<Node*> link;$/;"	m	struct:nall::Eval::Node
linkBuffer	higan/sfc/expansion/21fx/21fx.hpp	/^  vector<uint8> linkBuffer;  \/\/Link -> SNES$/;"	m	struct:S21FX
linkInit	higan/sfc/expansion/21fx/21fx.hpp	/^  )> linkInit;$/;"	m	struct:S21FX
linkMain	higan/sfc/expansion/21fx/21fx.hpp	/^  function<void (vector<string>)> linkMain;$/;"	m	struct:S21FX
literal	nall/string/eval/node.hpp	/^  string literal;$/;"	m	struct:nall::Eval::Node
llcp	nall/suffix-array.hpp	/^  vector<int> llcp;     \/\/longest common prefixes - left$/;"	m	struct:nall::SuffixArray
lo	higan/processor/wdc65816/wdc65816.cpp	30;"	d	file:
lo	higan/processor/wdc65816/wdc65816.cpp	89;"	d	file:
lo	nall/arithmetic/natural.hpp	/^  Type lo;$/;"	m	struct:nall::Pair
load	higan/gba/cpu/cpu.hpp	/^    uint32 load;       \/\/write location of slot buffer$/;"	m	struct:__anon6
loaded	higan/fc/system/system.hpp	/^    bool loaded = false;$/;"	m	struct:System::Information
loaded	higan/md/system/system.hpp	/^    bool loaded = false;$/;"	m	struct:System::Information
loaded	higan/ms/system/system.hpp	/^    bool loaded = false;$/;"	m	struct:System::Information
loaded	higan/pce/system/system.hpp	/^    bool loaded = false;$/;"	m	struct:System::Information
loaded	higan/sfc/system/system.hpp	/^    bool loaded = false;$/;"	m	struct:System::Information
locale	hiro/core/application.hpp	/^    Locale locale;$/;"	m	struct:Application::State
location	genius/genius.hpp	/^  string location;$/;"	m	struct:ListWindow
location	higan/target-bsnes/program/program.hpp	/^    string location;$/;"	m	struct:Program::Game
location	higan/target-bsnes/settings/settings.hpp	/^  string location;$/;"	m	struct:Settings
location	icarus/heuristics/bs-memory.cpp	/^  string location;$/;"	m	struct:Heuristics::BSMemory	file:
location	icarus/heuristics/famicom.cpp	/^  string location;$/;"	m	struct:Heuristics::Famicom	file:
location	icarus/heuristics/game-boy-advance.cpp	/^  string location;$/;"	m	struct:Heuristics::GameBoyAdvance	file:
location	icarus/heuristics/game-boy.cpp	/^  string location;$/;"	m	struct:Heuristics::GameBoy	file:
location	icarus/heuristics/game-gear.cpp	/^  string location;$/;"	m	struct:Heuristics::GameGear	file:
location	icarus/heuristics/master-system.cpp	/^  string location;$/;"	m	struct:Heuristics::MasterSystem	file:
location	icarus/heuristics/mega-drive.cpp	/^  string location;$/;"	m	struct:Heuristics::MegaDrive	file:
location	icarus/heuristics/pc-engine.cpp	/^  string location;$/;"	m	struct:Heuristics::PCEngine	file:
location	icarus/heuristics/sufami-turbo.cpp	/^  string location;$/;"	m	struct:Heuristics::SufamiTurbo	file:
location	icarus/heuristics/super-famicom.cpp	/^  string location;$/;"	m	struct:Heuristics::SuperFamicom	file:
location	icarus/heuristics/supergrafx.cpp	/^  string location;$/;"	m	struct:Heuristics::SuperGrafx	file:
location	icarus/heuristics/wonderswan.cpp	/^  string location;$/;"	m	struct:Heuristics::WonderSwan	file:
location	nall/locale.hpp	/^    string location;$/;"	m	struct:nall::Locale::Dictionary
lock	higan/processor/hg51b/hg51b.hpp	/^      uint1  lock[2];$/;"	m	struct:Processor::HG51B::IO::Cache
lock	higan/processor/hg51b/hg51b.hpp	/^    uint1 lock;$/;"	m	struct:Processor::HG51B::IO
locked	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 locked = 1;$/;"	m	struct:BSMemory::Block::Status
locked	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    uint1  locked;$/;"	m	struct:BSMemory::Block
locks	hiro/core/lock.hpp	/^  mutable int locks = 0;$/;"	m	struct:Lock
logoCounter	higan/gba/player/player.hpp	/^    uint logoCounter;$/;"	m	struct:Player::Status
logoDetected	higan/gba/player/player.hpp	/^    bool logoDetected;$/;"	m	struct:Player::Status
lookup	higan/sfc/memory/memory.hpp	/^  uint8* lookup = nullptr;$/;"	m	struct:Bus
loop	higan/ws/apu/apu.hpp	/^      uint1 loop;$/;"	m	struct:APU::DMA::Registers
loopMode	higan/fc/apu/apu.hpp	/^    bool loopMode;$/;"	m	struct:APU::DMC
loopMode	higan/fc/apu/apu.hpp	/^    bool loopMode;$/;"	m	struct:APU::Envelope
loutput	higan/gba/apu/apu.hpp	/^    uint10 loutput;$/;"	m	struct:APU::Sequencer
lower	nall/primitives.hpp	/^  inline auto lower() { return data == 1 ? data = 0, true : false; }$/;"	f	struct:nall::Boolean
lower	nall/primitives.hpp	/^  inline auto lower(bool value) { return data && !value ? (data = value, true) : (data = value, false); }$/;"	f	struct:nall::Boolean
lpsIndex	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    bool lpsIndex;$/;"	m	struct:Decompressor::BG
lsample	higan/gba/apu/apu.hpp	/^    int16 lsample;$/;"	m	struct:APU::Sequencer
luminance	higan/target-bsnes/settings/settings.hpp	/^    uint luminance = 100;$/;"	m	struct:Settings::Video
luminance	higan/video/video.hpp	/^  double luminance = 1.0;$/;"	m	struct:Emulator::Video
lvolume	higan/gba/apu/apu.hpp	/^    uint3 lvolume;$/;"	m	struct:APU::Sequencer
lx	higan/fc/ppu/ppu.hpp	/^    uint lx = 0;$/;"	m	struct:PPU::IO
lx	higan/gb/ppu/ppu.hpp	/^    uint lx = 0;$/;"	m	struct:PPU::Status
lx	higan/gba/ppu/ppu.hpp	/^      int28 lx;$/;"	m	struct:PPU::Background::IO
ly	higan/fc/ppu/ppu.hpp	/^    uint ly = 0;$/;"	m	struct:PPU::IO
ly	higan/gb/ppu/ppu.hpp	/^    uint8 ly;$/;"	m	struct:PPU::Status
ly	higan/gba/ppu/ppu.hpp	/^      int28 ly;$/;"	m	struct:PPU::Background::IO
lyc	higan/gb/ppu/ppu.hpp	/^    uint8 lyc;$/;"	m	struct:PPU::Status
m	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    uint5 m;    \/\/mode$/;"	m	namespace:Processor
m	higan/processor/upd96050/upd96050.hpp	/^    int16 m;$/;"	m	struct:Processor::uPD96050::Registers
m	higan/processor/v30mz/v30mz.hpp	/^        BooleanBitField<uint16_t, 15> m;  \/\/mode$/;"	m	union:Processor::Registers::Flags::__anon26
m	higan/processor/wdc65816/instruction.cpp	28;"	d	file:
m	higan/processor/wdc65816/instruction.cpp	43;"	d	file:
m	higan/processor/wdc65816/instruction.cpp	46;"	d	file:
m	higan/processor/wdc65816/instruction.cpp	61;"	d	file:
m	higan/processor/wdc65816/wdc65816.hpp	/^    bool m;  \/\/accumulator mode$/;"	m	struct:Processor::WDC65816::Flags
m7a	higan/sfc/ppu/ppu.hpp	/^    uint16 m7a;$/;"	m	struct:PPU::IO
m7b	higan/sfc/ppu/ppu.hpp	/^    uint16 m7b;$/;"	m	struct:PPU::IO
m7c	higan/sfc/ppu/ppu.hpp	/^    uint16 m7c;$/;"	m	struct:PPU::IO
m7d	higan/sfc/ppu/ppu.hpp	/^    uint16 m7d;$/;"	m	struct:PPU::IO
m7x	higan/sfc/ppu/ppu.hpp	/^    uint16 m7x;$/;"	m	struct:PPU::IO
m7y	higan/sfc/ppu/ppu.hpp	/^    uint16 m7y;$/;"	m	struct:PPU::IO
mAction	hiro/core/core.hpp	/^struct mAction : mObject {$/;"	s	namespace:hiro
mButton	hiro/core/core.hpp	/^struct mButton : mWidget {$/;"	s	namespace:hiro
mCanvas	hiro/core/core.hpp	/^struct mCanvas : mWidget {$/;"	s	namespace:hiro
mCheckButton	hiro/core/core.hpp	/^struct mCheckButton : mWidget {$/;"	s	namespace:hiro
mCheckLabel	hiro/core/core.hpp	/^struct mCheckLabel : mWidget {$/;"	s	namespace:hiro
mComboButton	hiro/core/core.hpp	/^struct mComboButton : mWidget {$/;"	s	namespace:hiro
mComboButton	hiro/core/object.hpp	/^  auto parentComboButton(bool recursive = false) const -> mComboButton*;$/;"	m	struct:mObject
mComboButtonItem	hiro/core/core.hpp	/^struct mComboButtonItem : mObject {$/;"	s	namespace:hiro
mComboEdit	hiro/core/core.hpp	/^struct mComboEdit : mWidget {$/;"	s	namespace:hiro
mComboEdit	hiro/core/object.hpp	/^  auto parentComboEdit(bool recursive = false) const -> mComboEdit*;$/;"	m	struct:mObject
mComboEditItem	hiro/core/core.hpp	/^struct mComboEditItem : mObject {$/;"	s	namespace:hiro
mConsole	hiro/core/core.hpp	/^struct mConsole : mWidget {$/;"	s	namespace:hiro
mFixedLayout	hiro/extension/fixed-layout.hpp	/^struct mFixedLayout : mSizable {$/;"	s
mFixedLayoutCell	hiro/extension/fixed-layout.hpp	/^struct mFixedLayoutCell : mObject {$/;"	s
mFrame	hiro/core/core.hpp	/^struct mFrame : mWidget {$/;"	s	namespace:hiro
mFrame	hiro/core/object.hpp	/^  auto parentFrame(bool recursive = false) const -> mFrame*;$/;"	m	struct:mObject
mGroup	hiro/core/group.hpp	/^struct mGroup : mObject {$/;"	s
mHexEdit	hiro/core/core.hpp	/^struct mHexEdit : mWidget {$/;"	s	namespace:hiro
mHorizontalLayout	hiro/extension/horizontal-layout.hpp	/^struct mHorizontalLayout : mSizable {$/;"	s
mHorizontalLayoutCell	hiro/extension/horizontal-layout.hpp	/^struct mHorizontalLayoutCell : mObject {$/;"	s
mHorizontalScrollBar	hiro/core/core.hpp	/^struct mHorizontalScrollBar : mWidget {$/;"	s	namespace:hiro
mHorizontalSlider	hiro/core/core.hpp	/^struct mHorizontalSlider : mWidget {$/;"	s	namespace:hiro
mIconView	hiro/core/core.hpp	/^struct mIconView : mWidget {$/;"	s	namespace:hiro
mIconView	hiro/core/object.hpp	/^  auto parentIconView(bool recursive = false) const -> mIconView*;$/;"	m	struct:mObject
mIconViewItem	hiro/core/core.hpp	/^struct mIconViewItem : mObject {$/;"	s	namespace:hiro
mLabel	hiro/core/core.hpp	/^struct mLabel : mWidget {$/;"	s	namespace:hiro
mLineEdit	hiro/core/core.hpp	/^struct mLineEdit : mWidget {$/;"	s	namespace:hiro
mListView	hiro/extension/list-view.cpp	/^mListView::mListView() {$/;"	f	class:mListView
mListView	hiro/extension/list-view.hpp	/^struct mListView : mTableView {$/;"	s
mListViewItem	hiro/extension/list-view.cpp	/^mListViewItem::mListViewItem() {$/;"	f	class:mListViewItem
mListViewItem	hiro/extension/list-view.hpp	/^struct mListViewItem : mTableViewItem {$/;"	s
mMenu	hiro/core/core.hpp	/^struct mMenu : mAction {$/;"	s	namespace:hiro
mMenu	hiro/core/object.hpp	/^  auto parentMenu(bool recursive = false) const -> mMenu*;$/;"	m	struct:mObject
mMenuBar	hiro/core/core.hpp	/^struct mMenuBar : mObject {$/;"	s	namespace:hiro
mMenuBar	hiro/core/object.hpp	/^  auto parentMenuBar(bool recursive = false) const -> mMenuBar*;$/;"	m	struct:mObject
mMenuCheckItem	hiro/core/core.hpp	/^struct mMenuCheckItem : mAction {$/;"	s	namespace:hiro
mMenuItem	hiro/core/core.hpp	/^struct mMenuItem : mAction {$/;"	s	namespace:hiro
mMenuRadioItem	hiro/core/core.hpp	/^struct mMenuRadioItem : mAction {$/;"	s	namespace:hiro
mMenuSeparator	hiro/core/core.hpp	/^struct mMenuSeparator : mAction {$/;"	s	namespace:hiro
mObject	hiro/core/object.cpp	/^mObject::mObject() {$/;"	f	class:mObject
mObject	hiro/core/object.hpp	/^  auto parent() const -> mObject*;$/;"	m	struct:mObject
mObject	hiro/core/object.hpp	/^struct mObject {$/;"	s
mPopupMenu	hiro/core/core.hpp	/^struct mPopupMenu : mObject {$/;"	s	namespace:hiro
mPopupMenu	hiro/core/object.hpp	/^  auto parentPopupMenu(bool recursive = false) const -> mPopupMenu*;$/;"	m	struct:mObject
mProgressBar	hiro/core/core.hpp	/^struct mProgressBar : mWidget {$/;"	s	namespace:hiro
mRadioButton	hiro/core/core.hpp	/^struct mRadioButton : mWidget {$/;"	s	namespace:hiro
mRadioLabel	hiro/core/core.hpp	/^struct mRadioLabel : mWidget {$/;"	s	namespace:hiro
mSizable	hiro/core/object.hpp	/^  auto parentSizable(bool recursive = false) const -> mSizable*;$/;"	m	struct:mObject
mSizable	hiro/core/sizable.hpp	/^struct mSizable : mObject {$/;"	s
mSourceEdit	hiro/core/widget/source-edit.hpp	/^struct mSourceEdit : mWidget {$/;"	s
mStatusBar	hiro/core/core.hpp	/^struct mStatusBar : mObject {$/;"	s	namespace:hiro
mTabFrame	hiro/core/object.hpp	/^  auto parentTabFrame(bool recursive = false) const -> mTabFrame*;$/;"	m	struct:mObject
mTabFrame	hiro/core/widget/tab-frame.hpp	/^struct mTabFrame : mWidget {$/;"	s
mTabFrameItem	hiro/core/object.hpp	/^  auto parentTabFrameItem(bool recursive = false) const -> mTabFrameItem*;$/;"	m	struct:mObject
mTabFrameItem	hiro/core/widget/tab-frame-item.hpp	/^struct mTabFrameItem : mObject {$/;"	s
mTableLayout	hiro/extension/table-layout.hpp	/^struct mTableLayout : mSizable {$/;"	s
mTableLayoutCell	hiro/extension/table-layout.hpp	/^struct mTableLayoutCell : mObject {$/;"	s
mTableLayoutColumn	hiro/extension/table-layout.hpp	/^struct mTableLayoutColumn : mObject {$/;"	s
mTableLayoutRow	hiro/extension/table-layout.hpp	/^struct mTableLayoutRow : mObject {$/;"	s
mTableView	hiro/core/object.hpp	/^  auto parentTableView(bool recursive = false) const -> mTableView*;$/;"	m	struct:mObject
mTableView	hiro/core/widget/table-view.hpp	/^struct mTableView : mWidget {$/;"	s
mTableViewCell	hiro/core/widget/table-view-cell.hpp	/^struct mTableViewCell : mObject {$/;"	s
mTableViewColumn	hiro/core/widget/table-view-column.hpp	/^struct mTableViewColumn : mObject {$/;"	s
mTableViewItem	hiro/core/object.hpp	/^  auto parentTableViewItem(bool recursive = false) const -> mTableViewItem*;$/;"	m	struct:mObject
mTableViewItem	hiro/core/widget/table-view-item.hpp	/^struct mTableViewItem : mObject {$/;"	s
mTextEdit	hiro/core/core.hpp	/^struct mTextEdit : mWidget {$/;"	s	namespace:hiro
mTimer	hiro/core/timer.cpp	/^mTimer::mTimer() {$/;"	f	class:mTimer
mTimer	hiro/core/timer.hpp	/^struct mTimer : mObject {$/;"	s
mTreeView	hiro/core/core.hpp	/^struct mTreeView : mWidget {$/;"	s	namespace:hiro
mTreeView	hiro/core/object.hpp	/^  auto parentTreeView(bool recursive = false) const -> mTreeView*;$/;"	m	struct:mObject
mTreeViewItem	hiro/core/core.hpp	/^struct mTreeViewItem : mObject {$/;"	s	namespace:hiro
mTreeViewItem	hiro/core/object.hpp	/^  auto parentTreeViewItem(bool recursive = false) const -> mTreeViewItem*;$/;"	m	struct:mObject
mVerticalLayout	hiro/extension/vertical-layout.hpp	/^struct mVerticalLayout : mSizable {$/;"	s
mVerticalLayoutCell	hiro/extension/vertical-layout.hpp	/^struct mVerticalLayoutCell : mObject {$/;"	s
mVerticalScrollBar	hiro/core/core.hpp	/^struct mVerticalScrollBar : mWidget {$/;"	s	namespace:hiro
mVerticalSlider	hiro/core/core.hpp	/^struct mVerticalSlider : mWidget {$/;"	s	namespace:hiro
mViewport	hiro/core/core.hpp	/^struct mViewport : mWidget {$/;"	s	namespace:hiro
mWidget	hiro/core/object.hpp	/^  auto parentWidget(bool recursive = false) const -> mWidget*;$/;"	m	struct:mObject
mWidget	hiro/core/widget/widget.hpp	/^struct mWidget : mSizable {$/;"	s
mWindow	hiro/core/object.hpp	/^  auto parentWindow(bool recursive = false) const -> mWindow*;$/;"	m	struct:mObject
mWindow	hiro/core/window.cpp	/^mWindow::mWindow() {$/;"	f	class:mWindow
mWindow	hiro/core/window.hpp	/^struct mWindow : mObject {$/;"	s
ma	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 ma;$/;"	m	struct:SA1::MMIO
mail	nall/smtp.hpp	/^      string mail;$/;"	m	struct:nall::SMTP::Information::Contact
manifest	higan/fc/cartridge/cartridge.hpp	/^    string manifest;$/;"	m	struct:Cartridge::Information
manifest	higan/fc/system/system.hpp	/^    string manifest;$/;"	m	struct:System::Information
manifest	higan/gb/cartridge/cartridge.hpp	/^    string manifest;$/;"	m	struct:Cartridge::Information
manifest	higan/gb/system/system.hpp	/^    string manifest;$/;"	m	struct:System::Information
manifest	higan/gba/cartridge/cartridge.hpp	/^    string manifest;$/;"	m	struct:Cartridge::Information
manifest	higan/gba/system/system.hpp	/^    string manifest;$/;"	m	struct:System::Information
manifest	higan/md/cartridge/cartridge.hpp	/^    string manifest;$/;"	m	struct:Cartridge::Information
manifest	higan/md/system/system.hpp	/^    string manifest;$/;"	m	struct:System::Information
manifest	higan/ms/cartridge/cartridge.hpp	/^    string manifest;$/;"	m	struct:Cartridge::Information
manifest	higan/ms/system/system.hpp	/^    string manifest;$/;"	m	struct:System::Information
manifest	higan/pce/cartridge/cartridge.hpp	/^    string manifest;$/;"	m	struct:Cartridge::Information
manifest	higan/pce/system/system.hpp	/^    string manifest;$/;"	m	struct:System::Information
manifest	higan/target-bsnes/program/program.hpp	/^    string manifest;$/;"	m	struct:Program::Game
manifest	higan/ws/cartridge/cartridge.hpp	/^    string manifest;$/;"	m	struct:Cartridge::Information
manifest	higan/ws/system/system.hpp	/^    string manifest;$/;"	m	struct:System::Information
manifestViewer	higan/target-bsnes/tools/tools.cpp	/^ManifestViewer manifestViewer;$/;"	v
manufacturer	genius/genius.hpp	/^  string manufacturer;$/;"	m	struct:Memory
manufacturer	higan/emulator/game.hpp	/^    string manufacturer;$/;"	m	struct:Emulator::Game::Memory
manufacturer	higan/emulator/interface.hpp	/^    string manufacturer;$/;"	m	struct:Emulator::Interface::Information
manufacturer	higan/gba/cartridge/memory.hpp	/^  string manufacturer;$/;"	m	struct:FLASH
manufacturer	icarus/heuristics/heuristics.hpp	/^  auto& manufacturer(string manufacturer) { _manufacturer = manufacturer; return *this; }$/;"	f	struct:Heuristics::Memory
manufacturer	ruby/input/joypad/udev.cpp	/^    string manufacturer;$/;"	m	struct:InputJoypadUdev::Joypad	file:
map	hiro/gtk/keyboard.cpp	235;"	d	file:
map	hiro/gtk/keyboard.cpp	248;"	d	file:
map	hiro/qt/keyboard.cpp	53;"	d	file:
map	hiro/qt/keyboard.cpp	62;"	d	file:
map	hiro/windows/keyboard.cpp	26;"	d	file:
map	hiro/windows/keyboard.cpp	32;"	d	file:
map	nall/map.hpp	/^template<typename T, typename U> struct map {$/;"	s	namespace:nall
mapper	higan/gb/cartridge/cartridge.hpp	/^  Mapper* mapper = nullptr;$/;"	m	struct:Cartridge
mapper	higan/ms/cartridge/cartridge.hpp	/^  } mapper;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Mapper
mapping	higan/gba/ppu/ppu.hpp	/^      uint1 mapping;  \/\/0 = two-dimensional, 1 = one-dimensional$/;"	m	struct:PPU::Objects::IO
mapping	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint1 mapping;             \/\/bit  2 (0 = ignore A15; 1 = use A15)$/;"	m	struct:MCC::Registers
mappings	higan/target-bsnes/input/input.hpp	/^  vector<InputMapping> mappings;$/;"	m	struct:InputDevice
mappings	higan/target-bsnes/input/input.hpp	/^  vector<Mapping> mappings;$/;"	m	struct:InputMapping
mappings	higan/target-higan/input/input.hpp	/^  vector<InputMapping> mappings;$/;"	m	struct:InputDevice
mappings	higan/target-higan/input/input.hpp	/^  vector<Mapping> mappings;$/;"	m	struct:InputMapping
mar	higan/processor/hg51b/hg51b.hpp	/^    uint24 mar;      \/\/bus memory address register$/;"	m	struct:Processor::HG51B::Registers
mar	higan/processor/wdc65816/wdc65816.hpp	/^    uint24 mar;        \/\/memory address register$/;"	m	struct:Processor::WDC65816::Registers
margin	hiro/windows/header.hpp	/^    RECT margin;$/;"	m	struct:__anon1
mask	higan/gba/cartridge/memory.hpp	/^  uint mask;$/;"	m	struct:EEPROM
mask	higan/gba/cartridge/memory.hpp	/^  uint mask;$/;"	m	struct:MROM
mask	higan/gba/cartridge/memory.hpp	/^  uint mask;$/;"	m	struct:SRAM
mask	higan/md/cartridge/cartridge.hpp	/^    uint mask = 0;$/;"	m	struct:Cartridge::Memory
mask	higan/ms/cartridge/cartridge.hpp	/^    uint mask = 0;$/;"	m	struct:Cartridge::Memory
mask	higan/processor/v30mz/algorithms.cpp	10;"	d	file:
mask	higan/processor/v30mz/algorithms.cpp	225;"	d	file:
mask	higan/sfc/ppu/ppu.hpp	/^    uint mask = 0x7fff;$/;"	m	struct:PPU::VRAM
mask	higan/sfc/ppu/window.hpp	/^      uint2 mask;$/;"	m	struct:Window::IO::Color
mask	higan/sfc/ppu/window.hpp	/^      uint2 mask;$/;"	m	struct:Window::IO::Layer
mask	higan/ws/cartridge/cartridge.hpp	/^    uint mask = 0;$/;"	m	struct:Cartridge::Memory
mask	nall/image.hpp	/^    alwaysinline auto mask() const { return _mask; }$/;"	f	struct:nall::image::channel
mask	nall/varint.hpp	/^  uint64_t mask;$/;"	m	struct:nall::VariadicNatural
masterSelect	higan/fc/ppu/ppu.hpp	/^    bool masterSelect = 0;$/;"	m	struct:PPU::IO
masterVoice	ruby/audio/xaudio2.cpp	/^  IXAudio2MasteringVoice* masterVoice = nullptr;$/;"	m	struct:AudioXAudio2	file:
masterenable	higan/gba/apu/apu.hpp	/^    uint1 masterenable;$/;"	m	struct:APU::Sequencer
math	higan/sfc/ppu/screen.hpp	/^  } math;$/;"	m	struct:Screen	typeref:struct:Screen::Math
max	nall/algorithm.hpp	6;"	d
maximized	hiro/core/shared.hpp	/^  auto maximized() const { return self().maximized(); }$/;"	f	struct:Window
maximized	hiro/core/window.hpp	/^    bool maximized = false;$/;"	m	struct:mWindow::State
maximumBufferSize	ruby/audio/asio.cpp	/^    long maximumBufferSize;$/;"	m	struct:AudioASIO::Device	file:
maximumSize	hiro/core/shared.hpp	/^  auto maximumSize() const { return self().maximumSize(); }$/;"	f	struct:Window
maximumSize	hiro/core/window.hpp	/^    Size maximumSize;$/;"	m	struct:mWindow::State
maybe	higan/emulator/game.hpp	/^  inline auto memory(Markup::Node) -> maybe<Memory>;$/;"	m	struct:Emulator::Game
maybe	higan/emulator/game.hpp	/^  inline auto oscillator(natural = 0) -> maybe<Oscillator>;$/;"	m	struct:Emulator::Game
maybe	higan/gb/cartridge/mbc7/mbc7.hpp	/^      auto address() -> maybe<uint9>;$/;"	m	struct:MBC7::EEPROM::InputShiftRegister
maybe	higan/gb/cartridge/mbc7/mbc7.hpp	/^      auto data() -> maybe<uint16>;$/;"	m	struct:MBC7::EEPROM::InputShiftRegister
maybe	higan/gb/cartridge/mbc7/mbc7.hpp	/^      auto mode() -> maybe<uint2>;$/;"	m	struct:MBC7::EEPROM::InputShiftRegister
maybe	higan/gb/cartridge/mbc7/mbc7.hpp	/^      auto opcode() -> maybe<uint2>;$/;"	m	struct:MBC7::EEPROM::InputShiftRegister
maybe	higan/gb/cartridge/mbc7/mbc7.hpp	/^      auto start() -> maybe<uint1>;$/;"	m	struct:MBC7::EEPROM::InputShiftRegister
maybe	higan/gba/player/player.hpp	/^  auto keyinput() -> maybe<uint16>;$/;"	m	struct:Player
maybe	higan/gba/player/player.hpp	/^  auto read() -> maybe<uint32>;$/;"	m	struct:Player
maybe	higan/ms/cartridge/cartridge.hpp	/^  auto read(uint16 addr) -> maybe<uint8>;$/;"	m	struct:Cartridge
maybe	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto addressDRAM(uint24 address) const -> maybe<uint24>;$/;"	m	struct:HitachiDSP
maybe	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto addressIO(uint24 address) const -> maybe<uint24>;$/;"	m	struct:HitachiDSP
maybe	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto addressRAM(uint24 address) const -> maybe<uint24>;$/;"	m	struct:HitachiDSP
maybe	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto addressROM(uint24 address) const -> maybe<uint24>;$/;"	m	struct:HitachiDSP
maybe	higan/target-bsnes/input/input.hpp	/^  auto mapping(uint port, uint device, uint input) -> maybe<InputMapping&>;$/;"	m	struct:InputManager
maybe	higan/target-higan/input/input.hpp	/^  auto mapping(uint port, uint device, uint input) -> maybe<InputMapping&>;$/;"	m	struct:InputManager
maybe	hiro/cocoa/menu-bar.hpp	/^  auto _parent() -> maybe<pWindow&>;$/;"	m	struct:hiro::pMenuBar
maybe	hiro/cocoa/status-bar.hpp	/^  auto _parent() -> maybe<pWindow&>;$/;"	m	struct:hiro::pStatusBar
maybe	hiro/cocoa/widget/combo-button-item.hpp	/^  auto _parent() -> maybe<pComboButton&>;$/;"	m	struct:hiro::pComboButtonItem
maybe	hiro/cocoa/widget/frame.hpp	/^  auto _sizable() -> maybe<pSizable&>;$/;"	m	struct:hiro::pFrame
maybe	hiro/cocoa/widget/tab-frame-item.hpp	/^  auto _parent() -> maybe<pTabFrame&>;$/;"	m	struct:hiro::pTabFrameItem
maybe	hiro/cocoa/widget/table-view-cell.hpp	/^  auto _grandparent() -> maybe<pTableView&>;$/;"	m	struct:hiro::pTableViewCell
maybe	hiro/cocoa/widget/table-view-cell.hpp	/^  auto _parent() -> maybe<pTableViewItem&>;$/;"	m	struct:hiro::pTableViewCell
maybe	hiro/cocoa/widget/table-view-column.hpp	/^  auto _parent() -> maybe<pTableView&>;$/;"	m	struct:hiro::pTableViewColumn
maybe	hiro/cocoa/widget/table-view-item.hpp	/^  auto _parent() -> maybe<pTableView&>;$/;"	m	struct:hiro::pTableViewItem
maybe	hiro/extension/horizontal-layout.hpp	/^  auto alignment() const -> maybe<float>;$/;"	m	struct:mHorizontalLayout
maybe	hiro/extension/horizontal-layout.hpp	/^  auto alignment() const -> maybe<float>;$/;"	m	struct:mHorizontalLayoutCell
maybe	hiro/extension/vertical-layout.hpp	/^  auto alignment() const -> maybe<float>;$/;"	m	struct:mVerticalLayout
maybe	hiro/extension/vertical-layout.hpp	/^  auto alignment() const -> maybe<float>;$/;"	m	struct:mVerticalLayoutCell
maybe	hiro/gtk/widget/combo-button-item.hpp	/^  auto _parent() -> maybe<pComboButton&>;$/;"	m	struct:hiro::pComboButtonItem
maybe	hiro/gtk/widget/combo-edit-item.hpp	/^  auto _parent() -> maybe<pComboEdit&>;$/;"	m	struct:hiro::pComboEditItem
maybe	hiro/gtk/widget/frame.hpp	/^  auto _sizable() -> maybe<pSizable&>;$/;"	m	struct:hiro::pFrame
maybe	hiro/gtk/widget/tab-frame-item.hpp	/^  auto _parent() -> maybe<pTabFrame&>;$/;"	m	struct:hiro::pTabFrameItem
maybe	hiro/gtk/widget/table-view-cell.hpp	/^  auto _grandparent() -> maybe<pTableView&>;$/;"	m	struct:hiro::pTableViewCell
maybe	hiro/gtk/widget/table-view-cell.hpp	/^  auto _parent() -> maybe<pTableViewItem&>;$/;"	m	struct:hiro::pTableViewCell
maybe	hiro/gtk/widget/table-view-column.hpp	/^  auto _parent() -> maybe<pTableView&>;$/;"	m	struct:hiro::pTableViewColumn
maybe	hiro/gtk/widget/table-view-item.hpp	/^  auto _parent() -> maybe<pTableView&>;$/;"	m	struct:hiro::pTableViewItem
maybe	hiro/qt/action/action.hpp	/^  auto _parentMenu() -> maybe<pMenu&>;$/;"	m	struct:hiro::pAction
maybe	hiro/qt/action/action.hpp	/^  auto _parentMenuBar() -> maybe<pMenuBar&>;$/;"	m	struct:hiro::pAction
maybe	hiro/qt/action/action.hpp	/^  auto _parentPopupMenu() -> maybe<pPopupMenu&>;$/;"	m	struct:hiro::pAction
maybe	hiro/qt/menu-bar.hpp	/^  auto _parent() -> maybe<pWindow&>;$/;"	m	struct:hiro::pMenuBar
maybe	hiro/qt/status-bar.hpp	/^  auto _parent() -> maybe<pWindow&>;$/;"	m	struct:hiro::pStatusBar
maybe	hiro/qt/widget/combo-button-item.hpp	/^  auto _parent() -> maybe<pComboButton&>;$/;"	m	struct:hiro::pComboButtonItem
maybe	hiro/qt/widget/tab-frame-item.hpp	/^  auto _parent() -> maybe<pTabFrame&>;$/;"	m	struct:hiro::pTabFrameItem
maybe	hiro/qt/widget/table-view-cell.hpp	/^  auto _parent() -> maybe<pTableViewItem&>;$/;"	m	struct:hiro::pTableViewCell
maybe	hiro/qt/widget/table-view-column.hpp	/^  auto _parent() -> maybe<pTableView&>;$/;"	m	struct:hiro::pTableViewColumn
maybe	hiro/qt/widget/table-view-item.hpp	/^  auto _parent() -> maybe<pTableView&>;$/;"	m	struct:hiro::pTableViewItem
maybe	hiro/windows/action/action.hpp	/^  auto _parentMenu() -> maybe<pMenu&>;$/;"	m	struct:hiro::pAction
maybe	hiro/windows/action/action.hpp	/^  auto _parentMenuBar() -> maybe<pMenuBar&>;$/;"	m	struct:hiro::pAction
maybe	hiro/windows/action/action.hpp	/^  auto _parentPopupMenu() -> maybe<pPopupMenu&>;$/;"	m	struct:hiro::pAction
maybe	hiro/windows/menu-bar.hpp	/^  auto _parent() -> maybe<pWindow&>;$/;"	m	struct:hiro::pMenuBar
maybe	hiro/windows/status-bar.hpp	/^  auto _parent() -> maybe<pWindow&>;$/;"	m	struct:hiro::pStatusBar
maybe	hiro/windows/tool-tip.hpp	/^  auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT>;$/;"	m	struct:hiro::pToolTip
maybe	hiro/windows/widget/combo-button-item.hpp	/^  auto _parent() -> maybe<pComboButton&>;$/;"	m	struct:hiro::pComboButtonItem
maybe	hiro/windows/widget/tab-frame-item.hpp	/^  auto _parent() -> maybe<pTabFrame&>;$/;"	m	struct:hiro::pTabFrameItem
maybe	hiro/windows/widget/table-view-cell.hpp	/^  auto _parent() -> maybe<pTableViewItem&>;$/;"	m	struct:hiro::pTableViewCell
maybe	hiro/windows/widget/table-view-column.hpp	/^  auto _parent() -> maybe<pTableView&>;$/;"	m	struct:hiro::pTableViewColumn
maybe	hiro/windows/widget/table-view-item.hpp	/^  auto _parent() -> maybe<pTableView&>;$/;"	m	struct:hiro::pTableViewItem
maybe	hiro/windows/widget/widget.hpp	/^  auto _parentWidget() -> maybe<pWidget&>;$/;"	m	struct:hiro::pWidget
maybe	hiro/windows/widget/widget.hpp	/^  auto _parentWindow() -> maybe<pWindow&>;$/;"	m	struct:hiro::pWidget
maybe	hiro/windows/widget/widget.hpp	/^  virtual auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT>;$/;"	m	struct:hiro::pWidget
maybe	hiro/windows/window.hpp	/^  auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT>;$/;"	m	struct:hiro::pWindow
maybe	nall/maybe.hpp	/^  inline maybe() : _value(nullptr) {}$/;"	f	struct:nall::maybe
maybe	nall/maybe.hpp	/^  inline maybe() {}$/;"	f	struct:nall::maybe
maybe	nall/maybe.hpp	/^  inline maybe(T&& source) { operator=(move(source)); }$/;"	f	struct:nall::maybe
maybe	nall/maybe.hpp	/^  inline maybe(const T& source) : _value((T*)&source) {}$/;"	f	struct:nall::maybe
maybe	nall/maybe.hpp	/^  inline maybe(const T& source) { operator=(source); }$/;"	f	struct:nall::maybe
maybe	nall/maybe.hpp	/^  inline maybe(const maybe& source) : _value(source._value) {}$/;"	f	struct:nall::maybe
maybe	nall/maybe.hpp	/^  inline maybe(const maybe& source) { operator=(source); }$/;"	f	struct:nall::maybe
maybe	nall/maybe.hpp	/^  inline maybe(maybe&& source) { operator=(move(source)); }$/;"	f	struct:nall::maybe
maybe	nall/maybe.hpp	/^  inline maybe(nothing_t) : _value(nullptr) {}$/;"	f	struct:nall::maybe
maybe	nall/maybe.hpp	/^  inline maybe(nothing_t) {}$/;"	f	struct:nall::maybe
maybe	nall/maybe.hpp	/^struct maybe {$/;"	s	namespace:nall
maybe	nall/maybe.hpp	/^struct maybe<T&> {$/;"	s	namespace:nall
maybe	nall/string.hpp	/^  inline auto contains(string_view characters) const -> maybe<uint>;$/;"	m	struct:nall::string
maybe	nall/string.hpp	/^  inline auto find(string_view source) const -> maybe<uint>;$/;"	m	struct:nall::string
maybe	nall/string.hpp	/^  inline auto find(string_view source) const -> maybe<uint>;$/;"	m	struct:nall::vector
maybe	nall/string.hpp	/^  inline auto findFrom(int offset, string_view source) const -> maybe<uint>;$/;"	m	struct:nall::string
maybe	nall/string.hpp	/^  inline auto ifind(string_view source) const -> maybe<uint>;$/;"	m	struct:nall::string
maybe	nall/string.hpp	/^  inline auto ifind(string_view source) const -> maybe<uint>;$/;"	m	struct:nall::vector
maybe	nall/string.hpp	/^  inline auto ifindFrom(int offset, string_view source) const -> maybe<uint>;$/;"	m	struct:nall::string
maybe	nall/string.hpp	/^  inline auto iqfind(string_view source) const -> maybe<uint>;$/;"	m	struct:nall::string
maybe	nall/string.hpp	/^  inline auto qfind(string_view source) const -> maybe<uint>;$/;"	m	struct:nall::string
maybe	nall/string.hpp	/^  template<bool, bool> inline auto _find(int, string_view) const -> maybe<uint>;$/;"	m	struct:nall::string
maybe	nall/vector.hpp	/^  auto find(const T& value) const -> maybe<uint>;$/;"	m	struct:nall::vector_base
maybe	nall/vector.hpp	/^  auto find(const function<bool (const T& lhs)>& comparator) -> maybe<uint>;$/;"	m	struct:nall::vector_base
maybe	nall/vector.hpp	/^  auto findSorted(const T& value) const -> maybe<uint>;$/;"	m	struct:nall::vector_base
mb	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 mb;$/;"	m	struct:SA1::MMIO
mbc0	higan/gb/cartridge/mbc0/mbc0.hpp	/^} mbc0;$/;"	v	typeref:struct:MBC0
mbc1	higan/gb/cartridge/mbc1/mbc1.hpp	/^} mbc1;$/;"	v	typeref:struct:MBC1
mbc1m	higan/gb/cartridge/mbc1m/mbc1m.hpp	/^} mbc1m;$/;"	v	typeref:struct:MBC1M
mbc2	higan/gb/cartridge/mbc2/mbc2.hpp	/^} mbc2;$/;"	v	typeref:struct:MBC2
mbc3	higan/gb/cartridge/mbc3/mbc3.hpp	/^} mbc3;$/;"	v	typeref:struct:MBC3
mbc5	higan/gb/cartridge/mbc5/mbc5.hpp	/^} mbc5;$/;"	v	typeref:struct:MBC5
mbc6	higan/gb/cartridge/mbc6/mbc6.hpp	/^} mbc6;$/;"	v	typeref:struct:MBC6
mbc7	higan/gb/cartridge/mbc7/mbc7.hpp	/^} mbc7;$/;"	v	typeref:struct:MBC7
mcc	higan/sfc/coprocessor/mcc/mcc.cpp	/^MCC mcc;$/;"	m	namespace:SuperFamicom	file:
md	higan/processor/gsu/registers.hpp	/^  uint md;$/;"	m	struct:SCMR
md	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool md;$/;"	m	struct:SA1::MMIO
mdr	higan/fc/ppu/ppu.hpp	/^    uint8 mdr;$/;"	m	struct:PPU::IO
mdr	higan/gba/system/system.hpp	/^  uint32 mdr = 0;$/;"	m	struct:BIOS
mdr	higan/pce/cpu/cpu.hpp	/^    uint8 mdr;$/;"	m	struct:CPU::IO
mdr	higan/processor/hg51b/hg51b.hpp	/^    uint24 mdr;      \/\/bus memory data register$/;"	m	struct:Processor::HG51B::Registers
mdr	higan/processor/huc6280/huc6280.hpp	/^    uint8  mdr;$/;"	m	struct:Processor::HuC6280::Registers
mdr	higan/processor/mos6502/mos6502.hpp	/^    uint8  mdr;$/;"	m	struct:Processor::MOS6502::Registers
mdr	higan/processor/wdc65816/wdc65816.hpp	/^    uint8 mdr;         \/\/memory data register$/;"	m	struct:Processor::WDC65816::Registers
mdr	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint4 mdr;$/;"	m	struct:EpsonRTC
mdr	higan/sfc/ppu/ppu.hpp	/^    uint8 mdr;$/;"	m	struct:PPU::__anon16
mem	higan/processor/v30mz/v30mz.hpp	/^    uint3 mem;$/;"	m	struct:Processor::ModRM
member	nall/function.hpp	/^  template<typename C> struct member : container {$/;"	s	struct:nall::R::global
memory	genius/genius.hpp	/^  Memory memory;$/;"	m	struct:Component
memory	genius/genius.hpp	/^  Memory memory;$/;"	m	struct:MemoryWindow
memory	higan/gba/cpu/cpu.hpp	/^  } memory;$/;"	v	typeref:struct:Memory
memory	higan/md/vdp/vdp.hpp	/^    uint10 memory[40];$/;"	m	struct:VDP::VSRAM
memory	higan/md/vdp/vdp.hpp	/^    uint16 memory[32768];$/;"	m	struct:VDP::VRAM
memory	higan/md/vdp/vdp.hpp	/^    uint9 memory[64];$/;"	m	struct:VDP::CRAM
memory	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  WritableMemory memory;$/;"	m	struct:BSMemory
memory	higan/ws/memory/memory.hpp	/^  uint8 memory[65536];$/;"	m	struct:InternalRAM
memory	nall/beat/archive/container.hpp	/^  vector<uint8_t> memory;$/;"	m	struct:nall::Beat::Archive::Container
memory	nall/beat/archive/node.hpp	/^  vector<uint8_t> memory;$/;"	m	struct:nall::Beat::Archive::Node
memory	nall/memory.hpp	/^namespace nall { namespace memory {$/;"	n	namespace:nall
memory	nall/vfs/memory/file.hpp	/^namespace nall { namespace vfs { namespace memory {$/;"	n	namespace:nall::vfs
memoryList	higan/emulator/game.hpp	/^  vector<Memory> memoryList;$/;"	m	struct:Emulator::Game
memoryWindow	genius/genius.cpp	/^unique_pointer<MemoryWindow> memoryWindow;$/;"	v
menu	hiro/core/shared.hpp	/^  auto menu(unsigned position) const { return self().menu(position); }$/;"	f	struct:MenuBar
menuBar	hiro/core/shared.hpp	/^  auto menuBar() const { return self().menuBar(); }$/;"	f	struct:Window
menuBar	hiro/core/window.hpp	/^    sMenuBar menuBar;$/;"	m	struct:mWindow::State
menuContainer	hiro/gtk/window.hpp	/^  GtkWidget* menuContainer = nullptr;$/;"	m	struct:hiro::pWindow
menuCount	hiro/core/shared.hpp	/^  auto menuCount() const { return self().menuCount(); }$/;"	f	struct:MenuBar
menuHeight	hiro/gtk/settings.hpp	/^    int menuHeight = 8;$/;"	m	struct:hiro::Settings::Geometry
menuHeight	hiro/qt/settings.hpp	/^    int menuHeight = 9;$/;"	m	struct:hiro::Settings::Geometry
menus	hiro/core/core.hpp	/^    vector<sMenu> menus;$/;"	m	struct:hiro::mMenuBar::State
menus	hiro/core/shared.hpp	/^  auto menus() const { return self().menus(); }$/;"	f	struct:MenuBar
meridian	higan/gb/cartridge/tama/tama.hpp	/^    uint1 meridian;  \/\/0 = AM; 1 = PM$/;"	m	struct:TAMA::RTC
meridian	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 meridian;$/;"	m	struct:EpsonRTC
message	nall/smtp.hpp	/^    string message;$/;"	m	struct:nall::SMTP::Information
metadata	nall/beat/archive/container.hpp	/^  string metadata;$/;"	m	struct:nall::Beat::Archive::Container
min	nall/algorithm.hpp	5;"	d
minimized	hiro/core/shared.hpp	/^  auto minimized() const { return self().minimized(); }$/;"	f	struct:Window
minimized	hiro/core/window.hpp	/^    bool minimized = false;$/;"	m	struct:mWindow::State
minimumBufferSize	ruby/audio/asio.cpp	/^    long minimumBufferSize;$/;"	m	struct:AudioASIO::Device	file:
minimumSize	hiro/core/shared.hpp	/^  auto minimumSize() const { return self().minimumSize(); }$/;"	f	struct:Window
minimumSize	hiro/core/window.hpp	/^    Size minimumSize;$/;"	m	struct:mWindow::State
minimumStatusHeight	hiro/windows/window.cpp	/^uint pWindow::minimumStatusHeight = 0;$/;"	m	class:hiro::pWindow	file:
minimumStatusHeight	hiro/windows/window.hpp	/^  static uint minimumStatusHeight;$/;"	m	struct:hiro::pWindow
minute	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint8 minute;$/;"	m	struct:MBC3::IO::RTC
minute	higan/gb/cartridge/tama/tama.hpp	/^    uint8 minute;    \/\/0 - 59$/;"	m	struct:TAMA::RTC
minute	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  uint minute;$/;"	m	struct:SharpRTC
minutehi	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint3 minutehi;$/;"	m	struct:EpsonRTC
minutelo	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint4 minutelo;$/;"	m	struct:EpsonRTC
mirror	higan/fc/cartridge/board/bandai-fcg.cpp	/^  uint2 mirror;$/;"	m	struct:BandaiFCG	file:
mirror	higan/fc/cartridge/board/konami-vrc3.cpp	/^    bool mirror;  \/\/0 = horizontal, 1 = vertical$/;"	m	struct:KonamiVRC3::Settings	file:
mirror	higan/fc/cartridge/board/nes-bnrom.cpp	/^    bool mirror;  \/\/0 = horizontal, 1 = vertical$/;"	m	struct:NES_BNROM::Settings	file:
mirror	higan/fc/cartridge/board/nes-cnrom.cpp	/^    bool mirror;  \/\/0 = horizontal, 1 = vertical$/;"	m	struct:NES_CNROM::Settings	file:
mirror	higan/fc/cartridge/board/nes-fxrom.cpp	/^  bool mirror;$/;"	v
mirror	higan/fc/cartridge/board/nes-gxrom.cpp	/^    bool mirror;  \/\/0 = horizontal, 1 = vertical$/;"	m	struct:NES_GxROM::Settings	file:
mirror	higan/fc/cartridge/board/nes-nrom.cpp	/^    bool mirror;  \/\/0 = horizontal, 1 = vertical$/;"	m	struct:NES_NROM::Settings	file:
mirror	higan/fc/cartridge/board/nes-pxrom.cpp	/^  bool mirror;$/;"	v
mirror	higan/fc/cartridge/board/nes-uxrom.cpp	/^    bool mirror;  \/\/0 = horizontal, 1 = vertical$/;"	m	struct:NES_UxROM::Settings	file:
mirror	higan/fc/cartridge/board/sunsoft-5b.cpp	/^  uint2 mirror;$/;"	m	struct:Sunsoft5B	file:
mirror	higan/fc/cartridge/chip/mmc1.cpp	/^  uint2 mirror;  \/\/0 = first, 1 = second, 2 = vertical, 3 = horizontal$/;"	m	struct:MMC1	file:
mirror	higan/fc/cartridge/chip/mmc3.cpp	/^  bool mirror;$/;"	m	struct:MMC3	file:
mirror	higan/fc/cartridge/chip/mmc6.cpp	/^  bool mirror;$/;"	m	struct:MMC6	file:
mirror	higan/fc/cartridge/chip/vrc1.cpp	/^  bool mirror;$/;"	m	struct:VRC1	file:
mirror	higan/fc/cartridge/chip/vrc2.cpp	/^  uint2 mirror;$/;"	m	struct:VRC2	file:
mirror	higan/fc/cartridge/chip/vrc4.cpp	/^  uint2 mirror;$/;"	m	struct:VRC4	file:
mirror	higan/fc/cartridge/chip/vrc6.cpp	/^  uint2 mirror;$/;"	m	struct:VRC6	file:
mirror	higan/fc/cartridge/chip/vrc7.cpp	/^  uint2 mirror;$/;"	m	struct:VRC7	file:
mirrorSelect	higan/fc/cartridge/board/nes-axrom.cpp	/^  bool mirrorSelect;$/;"	m	struct:NES_AxROM	file:
missingFiles	icarus/core/core.hpp	/^  vector<string> missingFiles;$/;"	m	struct:Icarus
mkdir	ruby/ruby.cpp	6;"	d	file:
mltReq	higan/sfc/coprocessor/icd/icd.hpp	/^  uint8 mltReq;     \/\/number of active joypads$/;"	m	struct:ICD
mmc1	higan/fc/cartridge/board/nes-sxrom.cpp	/^  MMC1 mmc1;$/;"	m	struct:NES_SxROM	file:
mmc3	higan/fc/cartridge/board/nes-txrom.cpp	/^  MMC3 mmc3;$/;"	m	struct:NES_TxROM	file:
mmc5	higan/fc/cartridge/board/nes-exrom.cpp	/^  MMC5 mmc5;$/;"	m	struct:NES_ExROM	file:
mmc6	higan/fc/cartridge/board/nes-hkrom.cpp	/^  MMC6 mmc6;$/;"	m	struct:NES_HKROM	file:
mmio	higan/gb/memory/memory.hpp	/^  MMIO* mmio[65536];$/;"	m	struct:Bus
mmio	higan/sfc/coprocessor/sa1/sa1.hpp	/^  } mmio;$/;"	m	struct:SA1	typeref:struct:SA1::MMIO
mmm01	higan/gb/cartridge/mmm01/mmm01.hpp	/^} mmm01;$/;"	v	typeref:struct:MMM01
mmuPort	higan/fc/cartridge/board/sunsoft-5b.cpp	/^  uint4 mmuPort;$/;"	m	struct:Sunsoft5B	file:
moc	hiro/GNUmakefile	/^    moc = \/usr\/local\/lib\/qt5\/bin\/moc$/;"	m
moc	hiro/GNUmakefile	/^    moc = moc-qt4$/;"	m
mod	higan/processor/v30mz/v30mz.hpp	/^    uint2 mod;$/;"	m	struct:Processor::ModRM
modal	hiro/core/application.hpp	/^    int modal = 0;$/;"	m	struct:Application::State
modal	hiro/core/shared.hpp	/^  auto modal() const { return self().modal(); }$/;"	f	struct:Window
modal	hiro/core/window.hpp	/^    bool modal = false;$/;"	m	struct:mWindow::State
modalCount	hiro/windows/application.hpp	/^    int modalCount = 0;           \/\/number of modal loops$/;"	m	struct:hiro::pApplication::State
modalTimer	hiro/windows/application.hpp	/^    Timer modalTimer;             \/\/to run Application during modal events$/;"	m	struct:hiro::pApplication::State
mode	higan/fc/apu/apu.hpp	/^    uint2 mode;$/;"	m	struct:APU::FrameCounter
mode	higan/fc/cartridge/chip/vrc6.cpp	/^    bool mode;$/;"	m	struct:VRC6::Pulse	file:
mode	higan/gb/cartridge/mbc1/mbc1.hpp	/^    uint1 mode;$/;"	m	struct:MBC1::IO
mode	higan/gb/cartridge/mbc1m/mbc1m.hpp	/^    uint1 mode;$/;"	m	struct:MBC1M::IO
mode	higan/gb/cartridge/mmm01/mmm01.hpp	/^    uint1 mode;$/;"	m	struct:MMM01::IO
mode	higan/gb/cartridge/tama/tama.hpp	/^    uint3 mode;$/;"	m	struct:TAMA::IO
mode	higan/gb/ppu/ppu.hpp	/^    uint2 mode;$/;"	m	struct:PPU::Status
mode	higan/gba/apu/apu.hpp	/^    uint1 mode;$/;"	m	struct:APU::Wave
mode	higan/gba/cartridge/memory.hpp	/^  } mode;$/;"	m	struct:EEPROM	typeref:class:EEPROM::Mode
mode	higan/gba/cpu/cpu.hpp	/^    uint2 mode;$/;"	m	struct:Joybus
mode	higan/gba/ppu/background.cpp	/^uint3 PPU::Background::IO::mode;$/;"	m	class:PPU::Background::IO	file:
mode	higan/gba/ppu/ppu.hpp	/^      static uint3 mode;$/;"	m	struct:PPU::Background::IO
mode	higan/gba/ppu/ppu.hpp	/^    uint2  mode;$/;"	m	struct:PPU::Object
mode	higan/md/vdp/vdp.hpp	/^      uint2  mode;$/;"	m	struct:VDP::DMA::IO
mode	higan/md/ym2612/ym2612.hpp	/^    uint2 mode = 0;$/;"	m	struct:Channel
mode	higan/pce/vdc/vdc.hpp	/^      bool   mode = 0;$/;"	m	struct:VDC::Sprite::Object
mode	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  uint3 mode;$/;"	v
mode	nall/file-buffer.hpp	/^  struct mode { enum : uint { read, write, modify, append }; };$/;"	s	struct:nall::file_buffer
mode	nall/file-map.hpp	/^  struct mode { enum : uint { read, write, modify, append }; };$/;"	s	struct:nall::file_map
mode	nall/file.hpp	/^  struct mode { enum : uint { read, write, modify, append }; };$/;"	s	struct:nall::file
mode	nall/posix/shared-memory.hpp	/^  enum class mode : unsigned { server, client, inactive } _mode = mode::inactive;$/;"	c	struct:nall::shared_memory
mode	nall/vfs/vfs.hpp	/^  enum class mode : uint { read, write, modify, create };$/;"	c	struct:nall::vfs::file
mode	nall/windows/detour.hpp	/^    uint mode;$/;"	m	struct:nall::detour::opcode
mode	ruby/audio/wasapi.cpp	/^  uint mode = 0;$/;"	m	struct:AudioWASAPI	file:
mode4	higan/ms/vdp/vdp.hpp	/^    bool mode4 = 0;$/;"	m	struct:VDP::IO
mode7	higan/sfc/ppu/ppu.hpp	/^    uint8 mode7;$/;"	m	struct:PPU::Latches
model	higan/gb/cartridge/huc1/huc1.hpp	/^    uint1 model;$/;"	m	struct:HuC1::IO
model	higan/ms/system/system.hpp	/^    Model model = Model::MasterSystem;$/;"	m	struct:System::Information
model	higan/pce/interface/interface.cpp	/^Model model;$/;"	m	namespace:PCEngine	file:
model	higan/pce/system/system.hpp	/^    Model model = Model::PCEngine;$/;"	m	struct:System::Information
modified	genius/genius.hpp	/^  bool modified = false;$/;"	m	struct:GameWindow
modified	genius/genius.hpp	/^  bool modified = false;$/;"	m	struct:ListWindow
modified	genius/genius.hpp	/^  bool modified = false;$/;"	m	struct:MemoryWindow
modified	genius/genius.hpp	/^  bool modified = false;$/;"	m	struct:OscillatorWindow
modified	higan/processor/gsu/registers.hpp	/^  bool modified = false;$/;"	m	struct:Register
modified	nall/beat/archive/node.hpp	/^    string modified;$/;"	m	struct:nall::Beat::Archive::Node::Timestamp
modify	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    function<auto () -> void> modify;$/;"	m	struct:Processor::GPR
modify	nall/file-buffer.hpp	/^  struct mode { enum : uint { read, write, modify, append }; };$/;"	m	struct:nall::file_buffer::mode	typeref:enum:nall::file_buffer::mode::
modify	nall/file-map.hpp	/^  struct mode { enum : uint { read, write, modify, append }; };$/;"	m	struct:nall::file_map::mode	typeref:enum:nall::file_map::mode::
modify	nall/file.hpp	/^  struct mode { enum : uint { read, write, modify, append }; };$/;"	m	struct:nall::file::mode	typeref:enum:nall::file::mode::
modify	nall/inode.hpp	/^  enum class time : uint { create, modify, access };$/;"	m	class:nall::inode::time
modify	nall/vfs/vfs.hpp	/^  enum class mode : uint { read, write, modify, create };$/;"	m	class:nall::vfs::file::mode
modify	nall/windows/detour.hpp	/^    uint16 modify;$/;"	m	struct:nall::detour::opcode
modrm	higan/processor/v30mz/v30mz.hpp	/^  } modrm;$/;"	m	namespace:Processor	typeref:struct:Processor::ModRM
modulo	nall/arithmetic/barrett.hpp	/^  const pair modulo;$/;"	m	struct:nall::BarrettReduction
modulo	ruby/video/opengl/opengl.hpp	/^  uint modulo = 0;  \/\/frame counter modulus$/;"	m	struct:OpenGLProgram
monitor	hiro/core/shared.hpp	/^  auto monitor() const { return self().monitor(); }$/;"	f	struct:Window
monitor	hiro/windows/monitor.cpp	/^  uint monitor = 0;$/;"	m	struct:hiro::MonitorInfo	file:
monitor	ruby/input/joypad/udev.cpp	/^  udev_monitor* monitor = nullptr;$/;"	m	struct:InputJoypadUdev	file:
month	higan/gb/cartridge/tama/tama.hpp	/^    uint8 month;     \/\/1 - 12$/;"	m	struct:TAMA::RTC
month	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  uint month;$/;"	m	struct:SharpRTC
monthhi	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 monthhi;$/;"	m	struct:EpsonRTC
monthlo	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint4 monthlo;$/;"	m	struct:EpsonRTC
monthram	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint2 monthram;$/;"	m	struct:EpsonRTC
mosaic	higan/gba/ppu/ppu.hpp	/^      uint1 mosaic;$/;"	m	struct:PPU::Background::IO
mosaic	higan/gba/ppu/ppu.hpp	/^    Pixel mosaic;$/;"	m	struct:PPU::Background
mosaic	higan/gba/ppu/ppu.hpp	/^    Pixel mosaic;$/;"	m	struct:PPU::Objects
mosaic	higan/gba/ppu/ppu.hpp	/^    uint1  mosaic;$/;"	m	struct:PPU::Object
mosaic	higan/gba/ppu/ppu.hpp	/^    uint1  mosaic;$/;"	m	struct:PPU::Pixel
mosaicHeight	higan/gba/ppu/background.cpp	/^uint5 PPU::Background::IO::mosaicHeight;$/;"	m	class:PPU::Background::IO	file:
mosaicHeight	higan/gba/ppu/ppu.hpp	/^      static uint5 mosaicHeight;$/;"	m	struct:PPU::Background::IO
mosaicHeight	higan/gba/ppu/ppu.hpp	/^      uint5 mosaicHeight;$/;"	m	struct:PPU::Objects::IO
mosaicOffset	higan/gba/ppu/ppu.hpp	/^    uint mosaicOffset;$/;"	m	struct:PPU::Background
mosaicOffset	higan/gba/ppu/ppu.hpp	/^    uint mosaicOffset;$/;"	m	struct:PPU::Objects
mosaicWidth	higan/gba/ppu/background.cpp	/^uint5 PPU::Background::IO::mosaicWidth;$/;"	m	class:PPU::Background::IO	file:
mosaicWidth	higan/gba/ppu/ppu.hpp	/^      static uint5 mosaicWidth;$/;"	m	struct:PPU::Background::IO
mosaicWidth	higan/gba/ppu/ppu.hpp	/^      uint5 mosaicWidth;$/;"	m	struct:PPU::Objects::IO
mouse	ruby/input/sdl.cpp	/^  InputMouseXlib mouse;$/;"	m	struct:InputSDL	file:
mouse	ruby/input/udev.cpp	/^  InputMouseXlib mouse;$/;"	m	struct:InputUdev	file:
mouse	ruby/input/windows.cpp	/^  InputMouseRawInput mouse;$/;"	m	struct:InputWindows	file:
mouse	ruby/input/xlib.cpp	/^  InputMouseXlib mouse;$/;"	m	struct:InputXlib	file:
mouseAcquired	ruby/input/mouse/rawinput.cpp	/^  bool mouseAcquired = false;$/;"	m	struct:InputMouseRawInput	file:
movable	hiro/core/shared.hpp	/^  auto movable() const { return self().movable(); }$/;"	f	struct:TabFrameItem
movable	hiro/core/widget/tab-frame-item.hpp	/^    bool movable = false;$/;"	m	struct:mTabFrameItem::State
mpr	higan/processor/huc6280/huc6280.hpp	/^    uint8  mpr[8];$/;"	m	struct:Processor::HuC6280::Registers
mps	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^      uint8 mps;$/;"	m	struct:Decompressor::PEM::ContextInfo
mpsCount	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    uint8 mpsCount;$/;"	m	struct:Decompressor::BG
mpyctr	higan/sfc/cpu/cpu.hpp	/^    uint mpyctr = 0;$/;"	m	struct:CPU::ALU
mr	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint64 mr;$/;"	m	struct:SA1::MMIO
mrom	higan/gba/cartridge/memory.hpp	/^} mrom;$/;"	v	typeref:struct:MROM
ms	ruby/input/mouse/rawinput.cpp	/^  } ms;$/;"	m	struct:InputMouseRawInput	typeref:struct:InputMouseRawInput::Mouse	file:
ms	ruby/input/mouse/xlib.cpp	/^  } ms;$/;"	m	struct:InputMouseXlib	typeref:struct:InputMouseXlib::Mouse	file:
ms0	higan/processor/gsu/registers.hpp	/^  bool ms0;$/;"	m	struct:CFGR
msu1	higan/sfc/coprocessor/msu1/msu1.cpp	/^MSU1 msu1;$/;"	m	namespace:SuperFamicom	file:
mul	higan/processor/hg51b/hg51b.hpp	/^    uint48 mul;      \/\/multiplier$/;"	m	struct:Processor::HG51B::Registers
mulPending	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  bool mulPending;$/;"	m	struct:SPC7110
multiple	higan/md/ym2612/ym2612.hpp	/^      uint4 multiple = 0;$/;"	m	struct:Channel::Operator
multiplicand	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 multiplicand;  \/\/$5205$/;"	m	struct:MMC5	file:
multiplier	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 multiplier;    \/\/$5206$/;"	m	struct:MMC5	file:
multiplier	higan/target-bsnes/settings/settings.hpp	/^    uint multiplier = 2;$/;"	m	struct:Settings::Video
mute	higan/target-bsnes/settings/settings.hpp	/^    bool mute = false;$/;"	m	struct:Settings::Audio
mutex	ruby/input/shared/rawinput.cpp	/^  HANDLE mutex = nullptr;$/;"	m	struct:RawInput	file:
n	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    boolean n;  \/\/negative$/;"	m	namespace:Processor
n	higan/processor/hg51b/hg51b.hpp	/^    boolean n;  \/\/negative$/;"	m	struct:Processor::HG51B::Registers
n	higan/processor/huc6280/huc6280.hpp	/^    bool n;  \/\/negative$/;"	m	struct:Processor::HuC6280::Flags
n	higan/processor/mos6502/mos6502.hpp	/^    bool n;  \/\/negative$/;"	m	struct:Processor::MOS6502::Flags
n	higan/processor/spc700/spc700.hpp	/^    bool n;  \/\/negative$/;"	m	struct:Processor::SPC700::Flags
n	higan/processor/upd96050/upd96050.hpp	/^    int16 n;$/;"	m	struct:Processor::uPD96050::Registers
n	higan/processor/wdc65816/wdc65816.hpp	/^    bool n;  \/\/negative$/;"	m	struct:Processor::WDC65816::Flags
nall	nall/adaptive-array.hpp	/^namespace nall {$/;"	n
nall	nall/algorithm.hpp	/^namespace nall { namespace {$/;"	n
nall	nall/any.hpp	/^namespace nall {$/;"	n
nall	nall/arguments.hpp	/^namespace nall {$/;"	n
nall	nall/arithmetic.hpp	/^namespace nall {$/;"	n
nall	nall/arithmetic/barrett.hpp	/^namespace nall {$/;"	n
nall	nall/arithmetic/natural.hpp	/^namespace nall {$/;"	n
nall	nall/arithmetic/unsigned.hpp	/^namespace nall {$/;"	n
nall	nall/array-span.hpp	/^namespace nall {$/;"	n
nall	nall/array-view.hpp	/^namespace nall {$/;"	n
nall	nall/array.hpp	/^namespace nall {$/;"	n
nall	nall/atoi.hpp	/^namespace nall {$/;"	n
nall	nall/beat/archive/container.hpp	/^namespace nall { namespace Beat { namespace Archive {$/;"	n
nall	nall/beat/archive/create.hpp	/^namespace nall { namespace Beat { namespace Archive {$/;"	n
nall	nall/beat/archive/extract.hpp	/^namespace nall { namespace Beat { namespace Archive {$/;"	n
nall	nall/beat/archive/node.hpp	/^namespace nall { namespace Beat { namespace Archive {$/;"	n
nall	nall/beat/single/apply.hpp	/^namespace nall { namespace Beat { namespace Single {$/;"	n
nall	nall/beat/single/create.hpp	/^namespace nall { namespace Beat { namespace Single {$/;"	n
nall	nall/bit-field.hpp	/^namespace nall {$/;"	n
nall	nall/bit-vector.hpp	/^namespace nall {$/;"	n
nall	nall/bit.hpp	/^namespace nall {$/;"	n
nall	nall/chrono.hpp	/^namespace nall { namespace chrono { namespace {$/;"	n
nall	nall/cipher/chacha20.hpp	/^namespace nall { namespace Cipher {$/;"	n
nall	nall/counting-sort.hpp	/^namespace nall {$/;"	n
nall	nall/database/odbc.hpp	/^namespace nall { namespace Database {$/;"	n
nall	nall/database/sqlite3.hpp	/^namespace nall { namespace Database {$/;"	n
nall	nall/decode/base.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/base64.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/bmp.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/bwt.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/gzip.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/html.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/huffman.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/inflate.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/lzsa.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/mtf.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/png.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/rle.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/url.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/decode/zip.hpp	/^namespace nall { namespace Decode {$/;"	n
nall	nall/directory.hpp	/^namespace nall {$/;"	n
nall	nall/dl.hpp	/^namespace nall {$/;"	n
nall	nall/dsp/dsp.hpp	/^namespace nall { namespace DSP {$/;"	n
nall	nall/dsp/iir/biquad.hpp	/^namespace nall { namespace DSP { namespace IIR {$/;"	n
nall	nall/dsp/iir/one-pole.hpp	/^namespace nall { namespace DSP { namespace IIR {$/;"	n
nall	nall/dsp/resampler/cubic.hpp	/^namespace nall { namespace DSP { namespace Resampler {$/;"	n
nall	nall/elliptic-curve/curve25519.hpp	/^namespace nall { namespace EllipticCurve {$/;"	n
nall	nall/elliptic-curve/ed25519.hpp	/^namespace nall { namespace EllipticCurve {$/;"	n
nall	nall/elliptic-curve/modulo25519-optimized.hpp	/^namespace nall { namespace EllipticCurve {$/;"	n
nall	nall/elliptic-curve/modulo25519-reference.hpp	/^namespace nall { namespace EllipticCurve {$/;"	n
nall	nall/encode/base.hpp	/^namespace nall { namespace Encode {$/;"	n
nall	nall/encode/base64.hpp	/^namespace nall { namespace Encode {$/;"	n
nall	nall/encode/bmp.hpp	/^namespace nall { namespace Encode {$/;"	n
nall	nall/encode/bwt.hpp	/^namespace nall { namespace Encode {$/;"	n
nall	nall/encode/html.hpp	/^namespace nall { namespace Encode {$/;"	n
nall	nall/encode/huffman.hpp	/^namespace nall { namespace Encode {$/;"	n
nall	nall/encode/lzsa.hpp	/^namespace nall { namespace Encode {$/;"	n
nall	nall/encode/mtf.hpp	/^namespace nall { namespace Encode {$/;"	n
nall	nall/encode/rle.hpp	/^namespace nall { namespace Encode {$/;"	n
nall	nall/encode/url.hpp	/^namespace nall { namespace Encode {$/;"	n
nall	nall/encode/zip.hpp	/^namespace nall { namespace Encode {$/;"	n
nall	nall/file-buffer.hpp	/^namespace nall {$/;"	n
nall	nall/file-map.hpp	/^namespace nall {$/;"	n
nall	nall/file.hpp	/^namespace nall {$/;"	n
nall	nall/function.hpp	/^namespace nall {$/;"	n
nall	nall/hash/crc16.hpp	/^namespace nall { namespace Hash {$/;"	n
nall	nall/hash/crc32.hpp	/^namespace nall { namespace Hash {$/;"	n
nall	nall/hash/crc64.hpp	/^namespace nall { namespace Hash {$/;"	n
nall	nall/hash/hash.hpp	/^namespace nall { namespace Hash {$/;"	n
nall	nall/hash/sha224.hpp	/^namespace nall { namespace Hash {$/;"	n
nall	nall/hash/sha256.hpp	/^namespace nall { namespace Hash {$/;"	n
nall	nall/hash/sha384.hpp	/^namespace nall { namespace Hash {$/;"	n
nall	nall/hash/sha512.hpp	/^namespace nall { namespace Hash {$/;"	n
nall	nall/hashset.hpp	/^namespace nall {$/;"	n
nall	nall/hid.hpp	/^namespace nall { namespace HID {$/;"	n
nall	nall/http/client.hpp	/^namespace nall { namespace HTTP {$/;"	n
nall	nall/http/message.hpp	/^namespace nall { namespace HTTP {$/;"	n
nall	nall/http/request.hpp	/^namespace nall { namespace HTTP {$/;"	n
nall	nall/http/response.hpp	/^namespace nall { namespace HTTP {$/;"	n
nall	nall/http/role.hpp	/^namespace nall { namespace HTTP {$/;"	n
nall	nall/http/server.hpp	/^namespace nall { namespace HTTP {$/;"	n
nall	nall/image.hpp	/^namespace nall {$/;"	n
nall	nall/image/blend.hpp	/^namespace nall {$/;"	n
nall	nall/image/core.hpp	/^namespace nall {$/;"	n
nall	nall/image/fill.hpp	/^namespace nall {$/;"	n
nall	nall/image/interpolation.hpp	/^namespace nall {$/;"	n
nall	nall/image/load.hpp	/^namespace nall {$/;"	n
nall	nall/image/scale.hpp	/^namespace nall {$/;"	n
nall	nall/image/static.hpp	/^namespace nall {$/;"	n
nall	nall/image/utility.hpp	/^namespace nall {$/;"	n
nall	nall/induced-sort.hpp	/^namespace nall {$/;"	n
nall	nall/inode.hpp	/^namespace nall {$/;"	n
nall	nall/interpolation.hpp	/^namespace nall {$/;"	n
nall	nall/intrinsics.hpp	/^namespace nall {$/;"	n
nall	nall/iterator.hpp	/^namespace nall {$/;"	n
nall	nall/locale.hpp	/^namespace nall {$/;"	n
nall	nall/location.hpp	/^namespace nall { namespace Location {$/;"	n
nall	nall/mac/poly1305.hpp	/^namespace nall { namespace MAC {$/;"	n
nall	nall/main.hpp	/^namespace nall {$/;"	n
nall	nall/map.hpp	/^namespace nall {$/;"	n
nall	nall/matrix.hpp	/^namespace nall { namespace Matrix {$/;"	n
nall	nall/maybe.hpp	/^namespace nall {$/;"	n
nall	nall/memory.hpp	/^namespace nall { namespace memory {$/;"	n
nall	nall/merge-sort.hpp	/^namespace nall {$/;"	n
nall	nall/path.hpp	/^namespace nall { namespace Path {$/;"	n
nall	nall/platform.hpp	/^  namespace nall {$/;"	n
nall	nall/pointer.hpp	/^namespace nall {$/;"	n
nall	nall/posix/service.hpp	/^namespace nall {$/;"	n
nall	nall/posix/shared-memory.hpp	/^namespace nall {$/;"	n
nall	nall/primitives.hpp	/^namespace nall {$/;"	n
nall	nall/property.hpp	/^namespace nall {$/;"	n
nall	nall/queue.hpp	/^namespace nall {$/;"	n
nall	nall/random.hpp	/^namespace nall {$/;"	n
nall	nall/range.hpp	/^namespace nall {$/;"	n
nall	nall/run.hpp	/^namespace nall {$/;"	n
nall	nall/serial.hpp	/^namespace nall {$/;"	n
nall	nall/serializer.hpp	/^namespace nall {$/;"	n
nall	nall/set.hpp	/^namespace nall {$/;"	n
nall	nall/shared-pointer.hpp	/^namespace nall {$/;"	n
nall	nall/simd.hpp	/^namespace nall {$/;"	n
nall	nall/smtp.hpp	/^namespace nall {$/;"	n
nall	nall/string.hpp	/^namespace nall {$/;"	n
nall	nall/string/allocator/adaptive.hpp	/^namespace nall {$/;"	n
nall	nall/string/allocator/copy-on-write.hpp	/^namespace nall {$/;"	n
nall	nall/string/allocator/small-string-optimization.hpp	/^namespace nall {$/;"	n
nall	nall/string/allocator/vector.hpp	/^namespace nall {$/;"	n
nall	nall/string/atoi.hpp	/^namespace nall {$/;"	n
nall	nall/string/cast.hpp	/^namespace nall {$/;"	n
nall	nall/string/compare.hpp	/^namespace nall {$/;"	n
nall	nall/string/convert.hpp	/^namespace nall {$/;"	n
nall	nall/string/core.hpp	/^namespace nall {$/;"	n
nall	nall/string/eval/evaluator.hpp	/^namespace nall { namespace Eval {$/;"	n
nall	nall/string/eval/literal.hpp	/^namespace nall { namespace Eval {$/;"	n
nall	nall/string/eval/node.hpp	/^namespace nall { namespace Eval {$/;"	n
nall	nall/string/eval/parser.hpp	/^namespace nall { namespace Eval {$/;"	n
nall	nall/string/find.hpp	/^namespace nall {$/;"	n
nall	nall/string/format.hpp	/^namespace nall {$/;"	n
nall	nall/string/markup/bml.hpp	/^namespace nall { namespace BML {$/;"	n
nall	nall/string/markup/find.hpp	/^namespace nall { namespace Markup {$/;"	n
nall	nall/string/markup/node.hpp	/^namespace nall { namespace Markup {$/;"	n
nall	nall/string/markup/xml.hpp	/^namespace nall { namespace XML {$/;"	n
nall	nall/string/match.hpp	/^namespace nall {$/;"	n
nall	nall/string/pascal.hpp	/^namespace nall {$/;"	n
nall	nall/string/replace.hpp	/^namespace nall {$/;"	n
nall	nall/string/split.hpp	/^namespace nall {$/;"	n
nall	nall/string/transform/cml.hpp	/^namespace nall { namespace {$/;"	n
nall	nall/string/transform/dml.hpp	/^namespace nall { namespace {$/;"	n
nall	nall/string/trim.hpp	/^namespace nall {$/;"	n
nall	nall/string/utility.hpp	/^namespace nall {$/;"	n
nall	nall/string/vector.hpp	/^namespace nall {$/;"	n
nall	nall/string/view.hpp	/^namespace nall {$/;"	n
nall	nall/suffix-array.hpp	/^namespace nall {$/;"	n
nall	nall/terminal.hpp	/^namespace nall { namespace terminal {$/;"	n
nall	nall/thread.hpp	/^namespace nall {$/;"	n
nall	nall/traits.hpp	/^namespace nall {$/;"	n
nall	nall/unique-pointer.hpp	/^namespace nall {$/;"	n
nall	nall/utility.hpp	/^namespace nall {$/;"	n
nall	nall/varint.hpp	/^namespace nall {$/;"	n
nall	nall/vector.hpp	/^namespace nall {$/;"	n
nall	nall/vector/access.hpp	/^namespace nall {$/;"	n
nall	nall/vector/assign.hpp	/^namespace nall {$/;"	n
nall	nall/vector/compare.hpp	/^namespace nall {$/;"	n
nall	nall/vector/core.hpp	/^namespace nall {$/;"	n
nall	nall/vector/iterator.hpp	/^namespace nall {$/;"	n
nall	nall/vector/memory.hpp	/^namespace nall {$/;"	n
nall	nall/vector/modify.hpp	/^namespace nall {$/;"	n
nall	nall/vector/specialization/uint8_t.hpp	/^namespace nall {$/;"	n
nall	nall/vector/utility.hpp	/^namespace nall {$/;"	n
nall	nall/vfs/fs/file.hpp	/^namespace nall { namespace vfs { namespace fs {$/;"	n
nall	nall/vfs/memory/file.hpp	/^namespace nall { namespace vfs { namespace memory {$/;"	n
nall	nall/vfs/vfs.hpp	/^namespace nall { namespace vfs { namespace shared {$/;"	n
nall	nall/vfs/vfs.hpp	/^namespace nall { namespace vfs {$/;"	n
nall	nall/view.hpp	/^namespace nall {$/;"	n
nall	nall/windows/detour.hpp	/^namespace nall {$/;"	n
nall	nall/windows/guid.hpp	/^namespace nall {$/;"	n
nall	nall/windows/launcher.hpp	/^namespace nall {$/;"	n
nall	nall/windows/registry.hpp	/^namespace nall {$/;"	n
nall	nall/windows/service.hpp	/^namespace nall {$/;"	n
nall	nall/windows/shared-memory.hpp	/^namespace nall {$/;"	n
nall	nall/windows/utf8.hpp	/^namespace nall {$/;"	n
nall	nall/xorg/clipboard.hpp	/^namespace nall { namespace Clipboard {$/;"	n
nall.path	genius/GNUmakefile	/^nall.path := ..\/nall$/;"	m
nall.path	higan/GNUmakefile	/^nall.path := ..\/nall$/;"	m
nall.path	icarus/GNUmakefile	/^nall.path := ..\/nall$/;"	m
nallHash	nall/hash/hash.hpp	9;"	d
name	genius/GNUmakefile	/^name := genius$/;"	m
name	genius/genius.hpp	/^  string name;$/;"	m	struct:Game
name	higan/emulator/game.hpp	/^  string name;$/;"	m	struct:Emulator::Game
name	higan/emulator/interface.hpp	/^    string name;$/;"	m	namespace:Emulator
name	higan/emulator/interface.hpp	/^    string name;$/;"	m	struct:Emulator::Device
name	higan/emulator/interface.hpp	/^    string name;$/;"	m	struct:Emulator::Interface
name	higan/emulator/interface.hpp	/^    string name;$/;"	m	struct:Emulator::Interface::Information
name	higan/emulator/interface.hpp	/^    string name;$/;"	m	struct:Emulator::Port
name	higan/fc/cartridge/board/board.hpp	/^    string name;$/;"	m	struct:Board::Memory
name	higan/target-bsnes/GNUmakefile	/^name := bsnes$/;"	m
name	higan/target-bsnes/input/input.hpp	/^  string name;  \/\/input name (human readable)$/;"	m	struct:InputMapping
name	higan/target-bsnes/input/input.hpp	/^  string name;$/;"	m	struct:InputDevice
name	higan/target-bsnes/input/input.hpp	/^  string name;$/;"	m	struct:InputPort
name	higan/target-bsnes/program/program.hpp	/^    string name;$/;"	m	struct:Program::State
name	higan/target-bsnes/tools/tools.hpp	/^  string name;$/;"	m	struct:Cheat
name	higan/target-higan/GNUmakefile	/^name := higan$/;"	m
name	higan/target-higan/input/input.hpp	/^  string name;  \/\/input name (human readable)$/;"	m	struct:InputMapping
name	higan/target-higan/input/input.hpp	/^  string name;$/;"	m	struct:InputDevice
name	higan/target-higan/input/input.hpp	/^  string name;$/;"	m	struct:InputEmulator
name	higan/target-higan/input/input.hpp	/^  string name;$/;"	m	struct:InputPort
name	hiro/core/application.hpp	/^    string name;$/;"	m	struct:Application::State
name	hiro/core/core.hpp	/^    string name;$/;"	m	struct:hiro::Property::State
name	icarus/GNUmakefile	/^name := icarus$/;"	m
name	nall/beat/archive/node.hpp	/^      string name;$/;"	m	struct:nall::Beat::Archive::Node::Permission::Group
name	nall/beat/archive/node.hpp	/^      string name;$/;"	m	struct:nall::Beat::Archive::Node::Permission::Owner
name	nall/beat/archive/node.hpp	/^  string name;$/;"	m	struct:nall::Beat::Archive::Node
name	nall/decode/zip.hpp	/^    string name;$/;"	m	struct:nall::Decode::ZIP::File
name	nall/http/message.hpp	/^  auto name() const { return shared->name; }$/;"	f	struct:nall::HTTP::SharedVariable
name	nall/http/message.hpp	/^  string name;$/;"	m	struct:nall::HTTP::Variable
name	nall/smtp.hpp	/^      string name;$/;"	m	struct:nall::SMTP::Information::Attachment
name	nall/smtp.hpp	/^      string name;$/;"	m	struct:nall::SMTP::Information::Contact
name	nall/string/transform/cml.hpp	/^    string name;$/;"	m	struct:nall::__anon38::CML::Variable
name	ruby/audio/asio.cpp	/^    string name;$/;"	m	struct:AudioASIO::Device	file:
name	ruby/audio/asio.hpp	/^  char name[32];$/;"	m	struct:ASIOChannelInfo
name	ruby/audio/asio.hpp	/^  char name[32];$/;"	m	struct:ASIOClockSource
name	ruby/audio/wasapi.cpp	/^    string name;$/;"	m	struct:AudioWASAPI::Device	file:
name	ruby/audio/xaudio2.cpp	/^    string name;$/;"	m	struct:AudioXAudio2::Device	file:
name	ruby/input/joypad/udev.cpp	/^    string name;$/;"	m	struct:InputJoypadUdev::Joypad	file:
name	ruby/input/keyboard/carbon.cpp	/^    string name;$/;"	m	struct:InputKeyboardCarbon::Key	file:
name	ruby/input/keyboard/quartz.cpp	/^    string name;$/;"	m	struct:InputKeyboardQuartz::Key	file:
name	ruby/input/keyboard/rawinput.cpp	/^    string name;$/;"	m	struct:InputKeyboardRawInput::Key	file:
name	ruby/input/keyboard/xlib.cpp	/^    string name;$/;"	m	struct:InputKeyboardXlib::Key	file:
name	ruby/video/opengl/opengl.hpp	/^    string name;$/;"	m	struct:OpenGL::Setting
nameTableAddress	higan/ms/vdp/vdp.hpp	/^    uint3 nameTableAddress;$/;"	m	struct:VDP::IO
nameTableMask	higan/ms/vdp/vdp.hpp	/^    uint1 nameTableMask;$/;"	m	struct:VDP::IO
nameselect	higan/sfc/ppu/object.hpp	/^    uint1 nameselect;$/;"	m	struct:OAM::Object
nameselect	higan/sfc/ppu/object.hpp	/^    uint2  nameselect;$/;"	m	struct:Object::IO
nametable	higan/fc/ppu/ppu.hpp	/^      NaturalBitField<uint,10,11> nametable;$/;"	m	union:PPU::IO::Union
nametable	higan/fc/ppu/ppu.hpp	/^    uint16 nametable;$/;"	m	struct:PPU::Latches
nametableAddress	higan/md/vdp/vdp.hpp	/^      uint15 nametableAddress;$/;"	m	struct:VDP::Background::IO
nametableAddressBase	higan/md/vdp/vdp.hpp	/^      uint1  nametableAddressBase;$/;"	m	struct:VDP::Sprite::IO
nametableBasePatternA	higan/md/vdp/vdp.hpp	/^    uint1 nametableBasePatternA;$/;"	m	struct:VDP::IO
nametableBasePatternB	higan/md/vdp/vdp.hpp	/^    uint1 nametableBasePatternB;$/;"	m	struct:VDP::IO
nametableHeight	higan/md/vdp/vdp.hpp	/^      uint2  nametableHeight;$/;"	m	struct:VDP::Background::IO
nametableMode	higan/fc/cartridge/chip/mmc5.cpp	/^  uint2 nametableMode[4];  \/\/$5105$/;"	m	struct:MMC5	file:
nametableWidth	higan/md/vdp/vdp.hpp	/^      uint2  nametableWidth;$/;"	m	struct:VDP::Background::IO
nametableX	higan/fc/ppu/ppu.hpp	/^      NaturalBitField<uint,10,10> nametableX;$/;"	m	union:PPU::IO::Union
nametableY	higan/fc/ppu/ppu.hpp	/^      NaturalBitField<uint,11,11> nametableY;$/;"	m	union:PPU::IO::Union
narrow	higan/gb/apu/apu.hpp	/^    bool narrow;$/;"	m	struct:APU::Noise
narrowlfsr	higan/gba/apu/apu.hpp	/^    uint1 narrowlfsr;$/;"	m	struct:APU::Noise
navigation	hiro/core/shared.hpp	/^  auto navigation() const { return self().navigation(); }$/;"	f	struct:TabFrame
navigation	hiro/core/widget/tab-frame.hpp	/^    Navigation navigation = Navigation::Top;$/;"	m	struct:mTabFrame::State
near	nall/windows/guard.hpp	31;"	d
necdsp	higan/sfc/coprocessor/necdsp/necdsp.cpp	/^NECDSP necdsp;$/;"	m	namespace:SuperFamicom	file:
negate	higan/gba/apu/apu.hpp	/^    uint1 negate;$/;"	m	struct:APU::Sweep
neverinline	nall/platform.hpp	106;"	d
next	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^    uint8 next[2];      \/\/next state after output {MPS, LPS}$/;"	m	struct:Decompressor::ModelState	file:
next	higan/sfc/cpu/cpu.hpp	/^    maybe<Channel&> next;$/;"	m	struct:CPU::Channel
nextIfLps	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^      uint8 nextIfLps;$/;"	m	struct:Decompressor::PEM::State
nextIfMps	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^      uint8 nextIfMps;$/;"	m	struct:Decompressor::PEM::State
nmiEnable	higan/fc/ppu/ppu.hpp	/^    bool nmiEnable = 0;$/;"	m	struct:PPU::IO
nmiEnable	higan/sfc/cpu/cpu.hpp	/^    boolean nmiEnable;$/;"	m	struct:CPU::IO
nmiFlag	higan/fc/ppu/ppu.hpp	/^    bool nmiFlag = 0;$/;"	m	struct:PPU::IO
nmiHold	higan/fc/ppu/ppu.hpp	/^    bool nmiHold = 0;$/;"	m	struct:PPU::IO
nmiHold	higan/sfc/cpu/cpu.hpp	/^    boolean nmiHold;$/;"	m	struct:CPU::Status
nmiLine	higan/fc/cpu/cpu.hpp	/^    bool nmiLine = 0;$/;"	m	struct:CPU::IO
nmiLine	higan/md/apu/apu.hpp	/^    uint1 nmiLine;$/;"	m	struct:APU::State
nmiLine	higan/ms/cpu/cpu.hpp	/^    bool nmiLine = 0;$/;"	m	struct:CPU::State
nmiLine	higan/sfc/cpu/cpu.hpp	/^    boolean nmiLine;$/;"	m	struct:CPU::Status
nmiPending	higan/fc/cpu/cpu.hpp	/^    bool nmiPending = 0;$/;"	m	struct:CPU::IO
nmiPending	higan/sfc/cpu/cpu.hpp	/^    boolean nmiPending;$/;"	m	struct:CPU::Status
nmiTransition	higan/sfc/cpu/cpu.hpp	/^    boolean nmiTransition;$/;"	m	struct:CPU::Status
nmiValid	higan/sfc/cpu/cpu.hpp	/^    boolean nmiValid;$/;"	m	struct:CPU::Status
noSpriteLimit	higan/sfc/interface/configuration.hpp	/^      bool noSpriteLimit = false;$/;"	m	struct:Configuration::Hacks::PPUFast
noSpriteLimit	higan/target-bsnes/settings/settings.hpp	/^        bool noSpriteLimit = false;$/;"	m	struct:Settings::Emulator::Hack::FastPPU
node_t	nall/map.hpp	/^    node_t(const T& key) : key(key) {}$/;"	f	struct:nall::map::node_t
node_t	nall/map.hpp	/^    node_t(const T& key, const U& value) : key(key), value(value) {}$/;"	f	struct:nall::map::node_t
node_t	nall/map.hpp	/^  struct node_t {$/;"	s	struct:nall::map
node_t	nall/set.hpp	/^    node_t(const T& value) : value(value) {}$/;"	f	struct:nall::set::node_t
node_t	nall/set.hpp	/^  struct node_t {$/;"	s	struct:nall::set
nodes	nall/beat/archive/container.hpp	/^  vector<shared_pointer<Node>> nodes;$/;"	m	struct:nall::Beat::Archive::Container
nodes	nall/set.hpp	/^  uint nodes = 0;$/;"	m	struct:nall::set
noise	higan/fc/apu/apu.hpp	/^  } noise;$/;"	m	struct:APU	typeref:struct:APU::Noise
noise	higan/gb/apu/apu.hpp	/^    } square1, square2, wave, noise;$/;"	m	struct:APU::Sequencer	typeref:struct:APU::Sequencer::Channel
noise	higan/gb/apu/apu.hpp	/^  } noise;$/;"	m	struct:APU	typeref:struct:APU::Noise
noise	higan/gba/apu/apu.hpp	/^  } noise;$/;"	m	struct:APU	typeref:struct:APU::Noise
noise	higan/md/psg/psg.hpp	/^  } noise;$/;"	m	struct:PSG	typeref:struct:PSG::Noise
noise	higan/ms/psg/psg.hpp	/^  } noise;$/;"	m	struct:PSG	typeref:struct:PSG::Noise
noise	higan/sfc/dsp/dsp.hpp	/^    int noise = 0x4000;$/;"	m	struct:State
noise	higan/ws/apu/apu.hpp	/^      uint1 noise;$/;"	m	struct:APU::Channel4::Registers
noiseEnable	higan/pce/psg/psg.hpp	/^      uint1  noiseEnable;     \/\/channels 4 and 5 only$/;"	m	struct:PSG::Channel::IO
noiseFrequency	higan/pce/psg/psg.hpp	/^      uint5  noiseFrequency;  \/\/channels 4 and 5 only$/;"	m	struct:PSG::Channel::IO
noiseLFSR	higan/ws/apu/apu.hpp	/^      uint15 noiseLFSR;$/;"	m	struct:APU::Channel4::State
noiseMode	higan/ws/apu/apu.hpp	/^      uint3 noiseMode;$/;"	m	struct:APU::Channel4::Registers
noiseOutput	higan/ws/apu/apu.hpp	/^      uint1 noiseOutput;$/;"	m	struct:APU::Channel4::State
noisePeriod	higan/pce/psg/psg.hpp	/^      uint12 noisePeriod;$/;"	m	struct:PSG::Channel::IO
noisePeriodTableNTSC	higan/fc/apu/apu.cpp	/^const uint16 APU::noisePeriodTableNTSC[16] = {$/;"	m	class:Famicom::APU	file:
noisePeriodTableNTSC	higan/fc/apu/apu.hpp	/^  static const uint16 noisePeriodTableNTSC[16];$/;"	m	struct:APU
noisePeriodTablePAL	higan/fc/apu/apu.cpp	/^const uint16 APU::noisePeriodTablePAL[16] = {$/;"	m	class:Famicom::APU	file:
noisePeriodTablePAL	higan/fc/apu/apu.hpp	/^  static const uint16 noisePeriodTablePAL[16];$/;"	m	struct:APU
noiseReset	higan/ws/apu/apu.hpp	/^      uint1 noiseReset;$/;"	m	struct:APU::Channel4::Registers
noiseSample	higan/pce/psg/psg.hpp	/^      uint5  noiseSample;$/;"	m	struct:PSG::Channel::IO
noiseUpdate	higan/ws/apu/apu.hpp	/^      uint1 noiseUpdate;$/;"	m	struct:APU::Channel4::Registers
nonVolatile	higan/emulator/game.hpp	/^    boolean nonVolatile;$/;"	m	struct:Emulator::Game::Memory
nonce	nall/beat/archive/container.hpp	/^    uint192_t nonce = 0;$/;"	m	struct:nall::Beat::Archive::Container::Encryption
none	ruby/audio/audio.hpp	/^  enum class Format : uint { none, int16, int32, float32, float64 };$/;"	m	class:AudioDriver::Format
nonsequential	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    uint1 nonsequential = 1;$/;"	m	struct:Pipeline
note	genius/genius.hpp	/^  string note;$/;"	m	struct:Game
nothing	nall/maybe.hpp	/^static nothing_t nothing;$/;"	m	namespace:nall
nothing_t	nall/maybe.hpp	/^struct nothing_t {};$/;"	s	namespace:nall
numerator	ruby/input/mouse/xlib.cpp	/^    int numerator = 0;$/;"	m	struct:InputMouseXlib::Mouse	file:
nwait	higan/gba/cpu/cpu.hpp	/^    uint2 nwait[4];$/;"	m	struct:Wait
nyquist	higan/audio/audio.hpp	/^    vector<DSP::IIR::Biquad> nyquist;$/;"	m	struct:Emulator::Stream::Channel
o	higan/ws/apu/apu.hpp	/^    } o;$/;"	m	struct:APU::Channel1	typeref:struct:APU::Channel1::Output
o	higan/ws/apu/apu.hpp	/^    } o;$/;"	m	struct:APU::Channel2	typeref:struct:APU::Channel2::Output
o	higan/ws/apu/apu.hpp	/^    } o;$/;"	m	struct:APU::Channel3	typeref:struct:APU::Channel3::Output
o	higan/ws/apu/apu.hpp	/^    } o;$/;"	m	struct:APU::Channel4	typeref:struct:APU::Channel4::Output
o	higan/ws/apu/apu.hpp	/^    } o;$/;"	m	struct:APU::Channel5	typeref:struct:APU::Channel5::Output
oXInputCancelGuideButtonWait	ruby/input/joypad/xinput.cpp	12;"	d	file:
oXInputGetState	ruby/input/joypad/xinput.cpp	4;"	d	file:
oXInputGetStateEx	ruby/input/joypad/xinput.cpp	10;"	d	file:
oXInputPowerOffController	ruby/input/joypad/xinput.cpp	13;"	d	file:
oXInputSetState	ruby/input/joypad/xinput.cpp	5;"	d	file:
oXInputWaitForGuideButton	ruby/input/joypad/xinput.cpp	11;"	d	file:
oam	higan/fc/ppu/ppu.hpp	/^    OAM oam[8];   \/\/primary$/;"	m	struct:PPU::Latches
oam	higan/fc/ppu/ppu.hpp	/^  uint8 oam[256];$/;"	m	struct:PPU
oam	higan/gb/ppu/ppu.hpp	/^  uint8 oam[160];$/;"	m	struct:PPU
oam	higan/md/vdp/vdp.hpp	/^    adaptive_array<Object, 80> oam;$/;"	m	struct:VDP::Sprite
oam	higan/sfc/ppu/object.hpp	/^  OAM oam;$/;"	m	struct:Object
oam	higan/sfc/ppu/ppu.hpp	/^    uint8 oam;$/;"	m	struct:PPU::Latches
oam	higan/ws/ppu/ppu.hpp	/^    uint32 oam[2][128];$/;"	m	struct:PPU::Latches
oamAddress	higan/fc/ppu/ppu.hpp	/^    uint8 oamAddress;$/;"	m	struct:PPU::IO
oamAddress	higan/sfc/ppu/ppu.hpp	/^    uint10 oamAddress;$/;"	m	struct:PPU::IO
oamAddress	higan/sfc/ppu/ppu.hpp	/^    uint10 oamAddress;$/;"	m	struct:PPU::Latches
oamBaseAddress	higan/sfc/ppu/ppu.hpp	/^    uint10 oamBaseAddress;$/;"	m	struct:PPU::IO
oamCount	higan/ws/ppu/ppu.hpp	/^    uint oamCount = 0;$/;"	m	struct:PPU::Latches
oamCounter	higan/fc/ppu/ppu.hpp	/^    uint oamCounter = 0;$/;"	m	struct:PPU::Latches
oamIterator	higan/fc/ppu/ppu.hpp	/^    uint oamIterator = 0;$/;"	m	struct:PPU::Latches
oamPriority	higan/sfc/ppu/ppu.hpp	/^    bool oamPriority;$/;"	m	struct:PPU::IO
oamdmaPage	higan/fc/cpu/cpu.hpp	/^    uint8 oamdmaPage;$/;"	m	struct:CPU::IO
oamdmaPending	higan/fc/cpu/cpu.hpp	/^    bool oamdmaPending = 0;$/;"	m	struct:CPU::IO
ob	higan/gb/ppu/ppu.hpp	/^  Pixel ob;$/;"	m	struct:PPU
obEnable	higan/gb/ppu/ppu.hpp	/^    bool obEnable = 0;$/;"	m	struct:PPU::Status
obSize	higan/gb/ppu/ppu.hpp	/^    bool obSize = 0;$/;"	m	struct:PPU::Status
obc1	higan/sfc/coprocessor/obc1/obc1.cpp	/^OBC1 obc1;$/;"	m	namespace:SuperFamicom	file:
obj	higan/processor/gsu/registers.hpp	/^  bool obj;$/;"	m	struct:POR
obj	higan/sfc/ppu/ppu.hpp	/^  Object obj;$/;"	m	struct:PPU
obj	higan/sfc/ppu/screen.hpp	/^    } bg1, bg2, bg3, bg4, obj, back;$/;"	m	struct:Screen::IO	typeref:struct:Screen::IO::Layer
obj	higan/sfc/ppu/window.hpp	/^    } bg1, bg2, bg3, bg4, obj;$/;"	m	struct:Window::IO	typeref:struct:Window::IO::Layer
object	higan/gba/ppu/ppu.hpp	/^  } object[128];$/;"	m	struct:PPU	typeref:struct:PPU::Object
object	higan/sfc/ppu/object.hpp	/^  } object[128];$/;"	m	struct:OAM	typeref:struct:OAM::Object
object	hiro/core/shared.hpp	/^  auto object(unsigned position) const { return self().object(position); }$/;"	f	struct:Group
object	nall/function.hpp	/^    C* object;$/;"	m	struct:nall::R::global::member
object	nall/function.hpp	/^    member(auto (C::*function)(P...) -> R, C* object) : function(function), object(object) {}$/;"	f	struct:nall::R::global::member
object	nall/function.hpp	/^    member(auto (C::*function)(P...) -> R, C* object) : function(function), object(object) {}$/;"	m	struct:nall::R::global::member
object	nall/function.hpp	/^    mutable L object;$/;"	m	struct:nall::R::global::lambda
object.path	nall/GNUmakefile	/^  object.path := obj$/;"	m
objectCount	hiro/core/shared.hpp	/^  auto objectCount() const { return self().objectCount(); }$/;"	f	struct:Group
objectParam	higan/gba/ppu/ppu.hpp	/^  } objectParam[32];$/;"	m	struct:PPU	typeref:struct:PPU::ObjectParam
objects	genius/GNUmakefile	/^objects := obj\/genius.o$/;"	m
objects	higan/GNUmakefile	/^objects := libco emulator audio video resource$/;"	m
objects	higan/gba/ppu/ppu.hpp	/^  } objects;$/;"	m	struct:PPU	typeref:struct:PPU::Objects
objects	higan/md/vdp/vdp.hpp	/^    adaptive_array<Object, 20> objects;$/;"	m	struct:VDP::Sprite
objects	higan/ms/vdp/vdp.hpp	/^    adaptive_array<Object, 8> objects;$/;"	m	struct:VDP::Sprite
objects	higan/pce/vdc/vdc.hpp	/^    adaptive_array<Object, 64> objects;$/;"	m	struct:VDC::Sprite
objects	higan/target-bsnes/GNUmakefile	/^objects := $(objects:%=obj\/%.o)$/;"	m
objects	higan/target-higan/GNUmakefile	/^objects := $(objects:%=obj\/%.o)$/;"	m
objects	hiro/core/group.hpp	/^    vector<wObject> objects;$/;"	m	struct:mGroup::State
objects	hiro/windows/menu-bar.hpp	/^  vector<wObject> objects;$/;"	m	struct:hiro::pMenuBar
objects	icarus/GNUmakefile	/^objects := obj\/icarus.o$/;"	m
obp	higan/gb/ppu/ppu.hpp	/^  uint8 obp[2][4];$/;"	m	struct:PPU
obpd	higan/gb/ppu/ppu.hpp	/^  uint8 obpd[64];$/;"	m	struct:PPU
obpi	higan/gb/ppu/ppu.hpp	/^    uint8 obpi;$/;"	m	struct:PPU::Status
obpiIncrement	higan/gb/ppu/ppu.hpp	/^    bool obpiIncrement = 0;$/;"	m	struct:PPU::Status
octave	higan/md/ym2612/ym2612.hpp	/^      } octave;$/;"	m	struct:Channel::Operator	typeref:struct:Channel::Operator::Octave
offscreen	higan/sfc/controller/super-scope/super-scope.hpp	/^  bool offscreen;$/;"	v
offset	higan/gba/cartridge/memory.hpp	/^  uint offset;$/;"	m	struct:EEPROM
offset	higan/processor/gsu/registers.hpp	/^  uint16 offset;$/;"	m	struct:PixelCache
offset	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint4 offset;$/;"	m	struct:EpsonRTC
offset	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    uint offset;$/;"	m	struct:Decompressor::IM
offset	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  uint offset;          \/\/SPC7110 data ROM read offset$/;"	m	struct:Decompressor	file:
offset	hiro/core/core.hpp	/^    int offset;$/;"	m	struct:hiro::Cursor::State
offset	hiro/core/object.hpp	/^    int offset = -1;            \/\/ 4$/;"	m	struct:mObject::State
offset	nall/beat/archive/node.hpp	/^  uint64_t offset = 0;$/;"	m	struct:nall::Beat::Archive::Node
offset	nall/cipher/chacha20.hpp	/^  uint64_t offset;$/;"	m	struct:nall::Cipher::ChaCha20
offset	nall/encode/zip.hpp	/^    uint32_t offset;$/;"	m	struct:nall::Encode::ZIP::entry_t
offset	nall/iterator.hpp	/^  uint offset;$/;"	m	struct:nall::iterator
offset	nall/iterator.hpp	/^  uint offset;$/;"	m	struct:nall::iterator_const
offset	nall/iterator.hpp	/^  uint offset;$/;"	m	struct:nall::reverse_iterator
offset	nall/iterator.hpp	/^  uint offset;$/;"	m	struct:nall::reverse_iterator_const
offset	nall/mac/poly1305.hpp	/^  uint offset;$/;"	m	struct:nall::MAC::Poly1305
offset	nall/vector/iterator.hpp	/^  uint offset;$/;"	m	struct:nall::vector_iterator
offset	nall/vector/iterator.hpp	/^  uint offset;$/;"	m	struct:nall::vector_iterator_const
offset	nall/vector/iterator.hpp	/^  uint offset;$/;"	m	struct:nall::vector_iterator_reverse
offset	nall/vector/iterator.hpp	/^  uint offset;$/;"	m	struct:nall::vector_iterator_reverse_const
offsets	nall/suffix-array.hpp	/^  vector<int> offsets;  \/\/longest previous factors$/;"	m	struct:nall::SuffixArray
ol	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  OL  ol;$/;"	m	struct:Decompressor
oldturbo	higan/sfc/controller/super-scope/super-scope.hpp	/^  bool oldturbo;$/;"	v
onAbout	hiro/core/application.hpp	/^      function<void ()> onAbout;$/;"	m	struct:Application::State::Cocoa
onActivate	hiro/core/application.hpp	/^      function<void ()> onActivate;$/;"	m	struct:Application::State::Cocoa
onActivate	hiro/core/core.hpp	/^    function<void ()> onActivate;$/;"	m	struct:hiro::mButton::State
onActivate	hiro/core/core.hpp	/^    function<void ()> onActivate;$/;"	m	struct:hiro::mComboEdit::State
onActivate	hiro/core/core.hpp	/^    function<void ()> onActivate;$/;"	m	struct:hiro::mIconView::State
onActivate	hiro/core/core.hpp	/^    function<void ()> onActivate;$/;"	m	struct:hiro::mLineEdit::State
onActivate	hiro/core/core.hpp	/^    function<void ()> onActivate;$/;"	m	struct:hiro::mMenuItem::State
onActivate	hiro/core/core.hpp	/^    function<void ()> onActivate;$/;"	m	struct:hiro::mMenuRadioItem::State
onActivate	hiro/core/core.hpp	/^    function<void ()> onActivate;$/;"	m	struct:hiro::mRadioButton::State
onActivate	hiro/core/core.hpp	/^    function<void ()> onActivate;$/;"	m	struct:hiro::mRadioLabel::State
onActivate	hiro/core/core.hpp	/^    function<void ()> onActivate;$/;"	m	struct:hiro::mTreeView::State
onActivate	hiro/core/core.hpp	/^    function<void (string)> onActivate;$/;"	m	struct:hiro::mConsole::State
onActivate	hiro/core/shared.hpp	/^  auto onActivate(const function<void ()>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:Button
onActivate	hiro/core/shared.hpp	/^  auto onActivate(const function<void ()>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:ComboEdit
onActivate	hiro/core/shared.hpp	/^  auto onActivate(const function<void ()>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:IconView
onActivate	hiro/core/shared.hpp	/^  auto onActivate(const function<void ()>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:LineEdit
onActivate	hiro/core/shared.hpp	/^  auto onActivate(const function<void ()>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:MenuItem
onActivate	hiro/core/shared.hpp	/^  auto onActivate(const function<void ()>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:MenuRadioItem
onActivate	hiro/core/shared.hpp	/^  auto onActivate(const function<void ()>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:RadioButton
onActivate	hiro/core/shared.hpp	/^  auto onActivate(const function<void ()>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:RadioLabel
onActivate	hiro/core/shared.hpp	/^  auto onActivate(const function<void ()>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:TableView
onActivate	hiro/core/shared.hpp	/^  auto onActivate(const function<void ()>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:Timer
onActivate	hiro/core/shared.hpp	/^  auto onActivate(const function<void ()>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:TreeView
onActivate	hiro/core/shared.hpp	/^  auto onActivate(const function<void (string)>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:Console
onActivate	hiro/core/timer.hpp	/^    function<void ()> onActivate;$/;"	m	struct:mTimer::State
onActivate	hiro/core/widget/table-view.hpp	/^    function<void ()> onActivate;$/;"	m	struct:mTableView::State
onActivate	hiro/extension/list-view.hpp	/^    function<void ()> onActivate;$/;"	m	struct:mListView::State
onActivate	hiro/extension/shared.hpp	/^  auto onActivate(const function<void ()>& callback = {}) { return self().onActivate(callback), *this; }$/;"	f	struct:ListView
onChange	hiro/core/core.hpp	/^    function<void ()> onChange;$/;"	m	struct:hiro::mComboButton::State
onChange	hiro/core/core.hpp	/^    function<void ()> onChange;$/;"	m	struct:hiro::mComboEdit::State
onChange	hiro/core/core.hpp	/^    function<void ()> onChange;$/;"	m	struct:hiro::mHorizontalScrollBar::State
onChange	hiro/core/core.hpp	/^    function<void ()> onChange;$/;"	m	struct:hiro::mHorizontalSlider::State
onChange	hiro/core/core.hpp	/^    function<void ()> onChange;$/;"	m	struct:hiro::mIconView::State
onChange	hiro/core/core.hpp	/^    function<void ()> onChange;$/;"	m	struct:hiro::mLineEdit::State
onChange	hiro/core/core.hpp	/^    function<void ()> onChange;$/;"	m	struct:hiro::mTextEdit::State
onChange	hiro/core/core.hpp	/^    function<void ()> onChange;$/;"	m	struct:hiro::mTreeView::State
onChange	hiro/core/core.hpp	/^    function<void ()> onChange;$/;"	m	struct:hiro::mVerticalScrollBar::State
onChange	hiro/core/core.hpp	/^    function<void ()> onChange;$/;"	m	struct:hiro::mVerticalSlider::State
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:ComboButton
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:ComboEdit
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:HorizontalScrollBar
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:HorizontalSlider
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:IconView
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:LineEdit
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:SourceEdit
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:TabFrame
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:TableView
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:TextEdit
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:TreeView
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:VerticalScrollBar
onChange	hiro/core/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:VerticalSlider
onChange	hiro/core/widget/source-edit.hpp	/^    function<void ()> onChange;$/;"	m	struct:mSourceEdit::State
onChange	hiro/core/widget/tab-frame.hpp	/^    function<void ()> onChange;$/;"	m	struct:mTabFrame::State
onChange	hiro/core/widget/table-view.hpp	/^    function<void ()> onChange;$/;"	m	struct:mTableView::State
onChange	hiro/extension/list-view.hpp	/^    function<void ()> onChange;$/;"	m	struct:mListView::State
onChange	hiro/extension/shared.hpp	/^  auto onChange(const function<void ()>& callback = {}) { return self().onChange(callback), *this; }$/;"	f	struct:ListView
onClose	hiro/core/shared.hpp	/^  auto onClose(const function<void ()>& callback = {}) { return self().onClose(callback), *this; }$/;"	f	struct:Window
onClose	hiro/core/shared.hpp	/^  auto onClose(const function<void (sTabFrameItem)>& callback = {}) { return self().onClose(callback), *this; }$/;"	f	struct:TabFrame
onClose	hiro/core/widget/tab-frame.hpp	/^    function<void (TabFrameItem)> onClose;$/;"	m	struct:mTabFrame::State
onClose	hiro/core/window.hpp	/^    function<void ()> onClose;$/;"	m	struct:mWindow::State
onContext	hiro/core/core.hpp	/^    function<void ()> onContext;$/;"	m	struct:hiro::mIconView::State
onContext	hiro/core/core.hpp	/^    function<void ()> onContext;$/;"	m	struct:hiro::mTreeView::State
onContext	hiro/core/shared.hpp	/^  auto onContext(const function<void ()>& callback = {}) { return self().onContext(callback), *this; }$/;"	f	struct:IconView
onContext	hiro/core/shared.hpp	/^  auto onContext(const function<void ()>& callback = {}) { return self().onContext(callback), *this; }$/;"	f	struct:TableView
onContext	hiro/core/shared.hpp	/^  auto onContext(const function<void ()>& callback = {}) { return self().onContext(callback), *this; }$/;"	f	struct:TreeView
onContext	hiro/core/widget/table-view.hpp	/^    function<void ()> onContext;$/;"	m	struct:mTableView::State
onContext	hiro/extension/shared.hpp	/^  auto onContext(const function<void ()>& callback = {}) { return self().onContext(callback), *this; }$/;"	f	struct:ListView
onDrop	hiro/core/core.hpp	/^    function<void (vector<string>)> onDrop;$/;"	m	struct:hiro::mCanvas::State
onDrop	hiro/core/core.hpp	/^    function<void (vector<string>)> onDrop;$/;"	m	struct:hiro::mViewport::State
onDrop	hiro/core/shared.hpp	/^  auto onDrop(const function<void (vector<string>)>& callback = {}) { return self().onDrop(callback), *this; }$/;"	f	struct:Canvas
onDrop	hiro/core/shared.hpp	/^  auto onDrop(const function<void (vector<string>)>& callback = {}) { return self().onDrop(callback), *this; }$/;"	f	struct:Viewport
onDrop	hiro/core/shared.hpp	/^  auto onDrop(const function<void (vector<string>)>& callback = {}) { return self().onDrop(callback), *this; }$/;"	f	struct:Window
onDrop	hiro/core/window.hpp	/^    function<void (vector<string>)> onDrop;$/;"	m	struct:mWindow::State
onEdit	hiro/core/shared.hpp	/^  auto onEdit(const function<void (TableViewCell)>& callback = {}) { return self().onEdit(callback), *this; }$/;"	f	struct:TableView
onEdit	hiro/core/widget/table-view.hpp	/^    function<void (TableViewCell)> onEdit;$/;"	m	struct:mTableView::State
onKeyPress	hiro/core/shared.hpp	/^  auto onKeyPress(const function<void (signed)>& callback = {}) { return self().onKeyPress(callback), *this; }$/;"	f	struct:Window
onKeyPress	hiro/core/window.hpp	/^    function<void (int)> onKeyPress;$/;"	m	struct:mWindow::State
onKeyRelease	hiro/core/shared.hpp	/^  auto onKeyRelease(const function<void (signed)>& callback = {}) { return self().onKeyRelease(callback), *this; }$/;"	f	struct:Window
onKeyRelease	hiro/core/window.hpp	/^    function<void (int)> onKeyRelease;$/;"	m	struct:mWindow::State
onMain	hiro/core/application.hpp	/^    function<void ()> onMain;$/;"	m	struct:Application::State
onMouseLeave	hiro/core/core.hpp	/^    function<void ()> onMouseLeave;$/;"	m	struct:hiro::mCanvas::State
onMouseLeave	hiro/core/core.hpp	/^    function<void ()> onMouseLeave;$/;"	m	struct:hiro::mViewport::State
onMouseLeave	hiro/core/shared.hpp	/^  auto onMouseLeave(const function<void ()>& callback = {}) { return self().onMouseLeave(callback), *this; }$/;"	f	struct:Canvas
onMouseLeave	hiro/core/shared.hpp	/^  auto onMouseLeave(const function<void ()>& callback = {}) { return self().onMouseLeave(callback), *this; }$/;"	f	struct:Viewport
onMouseMove	hiro/core/core.hpp	/^    function<void (Position)> onMouseMove;$/;"	m	struct:hiro::mCanvas::State
onMouseMove	hiro/core/core.hpp	/^    function<void (Position)> onMouseMove;$/;"	m	struct:hiro::mViewport::State
onMouseMove	hiro/core/shared.hpp	/^  auto onMouseMove(const function<void (Position)>& callback = {}) { return self().onMouseMove(callback), *this; }$/;"	f	struct:Canvas
onMouseMove	hiro/core/shared.hpp	/^  auto onMouseMove(const function<void (Position)>& callback = {}) { return self().onMouseMove(callback), *this; }$/;"	f	struct:Viewport
onMousePress	hiro/core/core.hpp	/^    function<void (Mouse::Button)> onMousePress;$/;"	m	struct:hiro::mCanvas::State
onMousePress	hiro/core/core.hpp	/^    function<void (Mouse::Button)> onMousePress;$/;"	m	struct:hiro::mViewport::State
onMousePress	hiro/core/shared.hpp	/^  auto onMousePress(const function<void (Mouse::Button)>& callback = {}) { return self().onMousePress(callback), *this; }$/;"	f	struct:Canvas
onMousePress	hiro/core/shared.hpp	/^  auto onMousePress(const function<void (Mouse::Button)>& callback = {}) { return self().onMousePress(callback), *this; }$/;"	f	struct:Viewport
onMouseRelease	hiro/core/core.hpp	/^    function<void (Mouse::Button)> onMouseRelease;$/;"	m	struct:hiro::mCanvas::State
onMouseRelease	hiro/core/core.hpp	/^    function<void (Mouse::Button)> onMouseRelease;$/;"	m	struct:hiro::mViewport::State
onMouseRelease	hiro/core/shared.hpp	/^  auto onMouseRelease(const function<void (Mouse::Button)>& callback = {}) { return self().onMouseRelease(callback), *this; }$/;"	f	struct:Canvas
onMouseRelease	hiro/core/shared.hpp	/^  auto onMouseRelease(const function<void (Mouse::Button)>& callback = {}) { return self().onMouseRelease(callback), *this; }$/;"	f	struct:Viewport
onMove	hiro/core/core.hpp	/^    function<void ()> onMove;$/;"	m	struct:hiro::mTextEdit::State
onMove	hiro/core/shared.hpp	/^  auto onMove(const function<void ()>& callback = {}) { return self().onMove(callback), *this; }$/;"	f	struct:SourceEdit
onMove	hiro/core/shared.hpp	/^  auto onMove(const function<void ()>& callback = {}) { return self().onMove(callback), *this; }$/;"	f	struct:TextEdit
onMove	hiro/core/shared.hpp	/^  auto onMove(const function<void ()>& callback = {}) { return self().onMove(callback), *this; }$/;"	f	struct:Window
onMove	hiro/core/shared.hpp	/^  auto onMove(const function<void (sTabFrameItem, sTabFrameItem)>& callback = {}) { return self().onMove(callback), *this; }$/;"	f	struct:TabFrame
onMove	hiro/core/widget/source-edit.hpp	/^    function<void ()> onMove;$/;"	m	struct:mSourceEdit::State
onMove	hiro/core/widget/tab-frame.hpp	/^    function<void (TabFrameItem, TabFrameItem)> onMove;$/;"	m	struct:mTabFrame::State
onMove	hiro/core/window.hpp	/^    function<void ()> onMove;$/;"	m	struct:mWindow::State
onPreferences	hiro/core/application.hpp	/^      function<void ()> onPreferences;$/;"	m	struct:Application::State::Cocoa
onPress	higan/target-bsnes/input/input.hpp	/^  auto& onPress(function<void()> press) { return this->press = press, *this; }$/;"	f	struct:InputHotkey
onPress	hiro/core/core.hpp	/^    function<void ()> onPress;$/;"	m	struct:hiro::Hotkey::State
onQuit	hiro/core/application.hpp	/^      function<void ()> onQuit;$/;"	m	struct:Application::State::Cocoa
onRead	hiro/core/core.hpp	/^    function<uint8_t (uint)> onRead;$/;"	m	struct:hiro::mHexEdit::State
onRead	hiro/core/shared.hpp	/^  auto onRead(const function<uint8_t (unsigned)>& callback = {}) { return self().onRead(callback), *this; }$/;"	f	struct:HexEdit
onRelease	higan/target-bsnes/input/input.hpp	/^  auto& onRelease(function<void()> release) { return this->release = release, *this; }$/;"	f	struct:InputHotkey
onRelease	hiro/core/core.hpp	/^    function<void ()> onRelease;$/;"	m	struct:hiro::Hotkey::State
onSize	hiro/core/shared.hpp	/^  auto onSize(const function<void ()>& callback = {}) { return self().onSize(callback), *this; }$/;"	f	struct:Window
onSize	hiro/core/sizable.hpp	/^    function<void ()> onSize;$/;"	m	struct:mSizable::State
onSize	hiro/core/window.hpp	/^    function<void ()> onSize;$/;"	m	struct:mWindow::State
onSort	hiro/core/shared.hpp	/^  auto onSort(const function<void (TableViewColumn)>& callback = {}) { return self().onSort(callback), *this; }$/;"	f	struct:TableView
onSort	hiro/core/widget/table-view.hpp	/^    function<void (TableViewColumn)> onSort;$/;"	m	struct:mTableView::State
onToggle	hiro/core/core.hpp	/^    function<void ()> onToggle;$/;"	m	struct:hiro::mCheckButton::State
onToggle	hiro/core/core.hpp	/^    function<void ()> onToggle;$/;"	m	struct:hiro::mCheckLabel::State
onToggle	hiro/core/core.hpp	/^    function<void ()> onToggle;$/;"	m	struct:hiro::mMenuCheckItem::State
onToggle	hiro/core/core.hpp	/^    function<void (sTreeViewItem)> onToggle;$/;"	m	struct:hiro::mTreeView::State
onToggle	hiro/core/shared.hpp	/^  auto onToggle(const function<void ()>& callback = {}) { return self().onToggle(callback), *this; }$/;"	f	struct:CheckButton
onToggle	hiro/core/shared.hpp	/^  auto onToggle(const function<void ()>& callback = {}) { return self().onToggle(callback), *this; }$/;"	f	struct:CheckLabel
onToggle	hiro/core/shared.hpp	/^  auto onToggle(const function<void ()>& callback = {}) { return self().onToggle(callback), *this; }$/;"	f	struct:MenuCheckItem
onToggle	hiro/core/shared.hpp	/^  auto onToggle(const function<void (TableViewCell)>& callback = {}) { return self().onToggle(callback), *this; }$/;"	f	struct:TableView
onToggle	hiro/core/shared.hpp	/^  auto onToggle(const function<void (sTreeViewItem)>& callback = {}) { return self().onToggle(callback), *this; }$/;"	f	struct:TreeView
onToggle	hiro/core/widget/table-view.hpp	/^    function<void (TableViewCell)> onToggle;$/;"	m	struct:mTableView::State
onToggle	hiro/extension/list-view.hpp	/^    function<void (ListViewItem)> onToggle;$/;"	m	struct:mListView::State
onToggle	hiro/extension/shared.hpp	/^  auto onToggle(const function<void (ListViewItem)>& callback = {}) { return self().onToggle(callback), *this; }$/;"	f	struct:ListView
onWrite	hiro/core/core.hpp	/^    function<void (uint, uint8_t)> onWrite;$/;"	m	struct:hiro::mHexEdit::State
onWrite	hiro/core/shared.hpp	/^  auto onWrite(const function<void (unsigned, uint8_t)>& callback = {}) { return self().onWrite(callback), *this; }$/;"	f	struct:HexEdit
oneEnable	higan/sfc/ppu/window.hpp	/^      bool oneEnable;$/;"	m	struct:Window::IO::Color
oneEnable	higan/sfc/ppu/window.hpp	/^      bool oneEnable;$/;"	m	struct:Window::IO::Layer
oneInvert	higan/sfc/ppu/window.hpp	/^      bool oneInvert;$/;"	m	struct:Window::IO::Color
oneInvert	higan/sfc/ppu/window.hpp	/^      bool oneInvert;$/;"	m	struct:Window::IO::Layer
oneLeft	higan/sfc/ppu/window.hpp	/^    uint8 oneLeft;$/;"	m	struct:Window::IO
onePole	higan/audio/audio.hpp	/^  DSP::IIR::OnePole onePole;  \/\/first-order$/;"	m	struct:Emulator::Filter
oneRight	higan/sfc/ppu/window.hpp	/^    uint8 oneRight;$/;"	m	struct:Window::IO
op	higan/processor/gsu/instruction.cpp	2;"	d	file:
op	higan/processor/gsu/instruction.cpp	88;"	d	file:
op	higan/processor/huc6280/disassembler.cpp	337;"	d	file:
op	higan/processor/huc6280/disassembler.cpp	65;"	d	file:
op	higan/processor/huc6280/instruction.cpp	1;"	d	file:
op	higan/processor/huc6280/instruction.cpp	291;"	d	file:
op	higan/processor/lr35902/instruction.cpp	10;"	d	file:
op	higan/processor/lr35902/instruction.cpp	364;"	d	file:
op	higan/processor/mos6502/disassembler.cpp	214;"	d	file:
op	higan/processor/mos6502/disassembler.cpp	52;"	d	file:
op	higan/processor/mos6502/instruction.cpp	178;"	d	file:
op	higan/processor/mos6502/instruction.cpp	1;"	d	file:
op	higan/processor/spc700/instruction.cpp	1;"	d	file:
op	higan/processor/spc700/instruction.cpp	265;"	d	file:
op	higan/processor/v30mz/instruction.cpp	294;"	d	file:
op	higan/processor/v30mz/instruction.cpp	31;"	d	file:
op	higan/processor/z80/disassembler.cpp	1039;"	d	file:
op	higan/processor/z80/disassembler.cpp	51;"	d	file:
op	higan/processor/z80/instruction.cpp	35;"	d	file:
op	higan/processor/z80/instruction.cpp	909;"	d	file:
op0	higan/processor/gsu/disassembler.cpp	266;"	d	file:
op0	higan/processor/gsu/disassembler.cpp	29;"	d	file:
op1	higan/processor/gsu/disassembler.cpp	267;"	d	file:
op1	higan/processor/gsu/disassembler.cpp	30;"	d	file:
op12	higan/processor/gsu/instruction.cpp	16;"	d	file:
op12	higan/processor/gsu/instruction.cpp	91;"	d	file:
op15	higan/processor/gsu/instruction.cpp	25;"	d	file:
op15	higan/processor/gsu/instruction.cpp	92;"	d	file:
op16	higan/processor/gsu/instruction.cpp	31;"	d	file:
op16	higan/processor/gsu/instruction.cpp	93;"	d	file:
op16	higan/processor/wdc65816/disassembler.cpp	145;"	d	file:
op16	higan/processor/wdc65816/disassembler.cpp	423;"	d	file:
op2	higan/processor/gsu/disassembler.cpp	268;"	d	file:
op2	higan/processor/gsu/disassembler.cpp	31;"	d	file:
op24	higan/processor/wdc65816/disassembler.cpp	146;"	d	file:
op24	higan/processor/wdc65816/disassembler.cpp	424;"	d	file:
op4	higan/processor/gsu/instruction.cpp	5;"	d	file:
op4	higan/processor/gsu/instruction.cpp	89;"	d	file:
op6	higan/processor/gsu/instruction.cpp	11;"	d	file:
op6	higan/processor/gsu/instruction.cpp	90;"	d	file:
op8	higan/processor/wdc65816/disassembler.cpp	144;"	d	file:
op8	higan/processor/wdc65816/disassembler.cpp	422;"	d	file:
opA	higan/processor/wdc65816/instruction.cpp	25;"	d	file:
opA	higan/processor/wdc65816/instruction.cpp	63;"	d	file:
opM	higan/processor/wdc65816/instruction.cpp	27;"	d	file:
opM	higan/processor/wdc65816/instruction.cpp	42;"	d	file:
opM	higan/processor/wdc65816/instruction.cpp	45;"	d	file:
opM	higan/processor/wdc65816/instruction.cpp	60;"	d	file:
opX	higan/processor/wdc65816/instruction.cpp	30;"	d	file:
opX	higan/processor/wdc65816/instruction.cpp	33;"	d	file:
opX	higan/processor/wdc65816/instruction.cpp	36;"	d	file:
opX	higan/processor/wdc65816/instruction.cpp	39;"	d	file:
opX	higan/processor/wdc65816/instruction.cpp	48;"	d	file:
opX	higan/processor/wdc65816/instruction.cpp	51;"	d	file:
opX	higan/processor/wdc65816/instruction.cpp	54;"	d	file:
opX	higan/processor/wdc65816/instruction.cpp	57;"	d	file:
opcode	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  uint32 opcode;$/;"	v
opcode	higan/processor/v30mz/v30mz.hpp	/^  uint8 opcode;$/;"	m	namespace:Processor
opcode	nall/windows/detour.hpp	/^  struct opcode {$/;"	s	struct:nall::detour
opcodes	nall/windows/detour.hpp	/^  static opcode opcodes[];$/;"	m	struct:nall::detour
opcodes	nall/windows/detour.hpp	/^detour::opcode detour::opcodes[] = {$/;"	m	class:nall::detour
opened	nall/serial.hpp	/^  bool opened = false;$/;"	m	struct:nall::serial
openmp	higan/GNUmakefile	/^openmp := false$/;"	m
operator %	nall/arithmetic/barrett.hpp	/^template<typename T, uint Bits> auto operator%(T value, const BarrettReduction<Bits>& modulo) {$/;"	f	namespace:nall
operator %	nall/arithmetic/natural.hpp	/^  template<typename T> auto operator% (const T& rhs) const { return Cast(*this) %  Cast(rhs); }$/;"	f	struct:nall::Pair
operator %=	higan/processor/gsu/registers.hpp	/^  inline auto operator  %= (uint i) { return assign(data % i); }$/;"	f	struct:Register
operator %=	nall/arithmetic/natural.hpp	/^  template<typename T> auto& operator%= (const T& rhs) { return *this = *this %  Pair(rhs); }$/;"	f	struct:nall::Pair
operator %=	nall/primitives.hpp	/^    inline auto& operator %=(const type value) { return set(get()  % value); }$/;"	f	struct:nall::Natural::Reference
operator %=	nall/primitives.hpp	/^    inline auto& operator %=(const utype value) { return set(get()  % value); }$/;"	f	struct:nall::Integer::Reference
operator %=	nall/primitives.hpp	/^  inline auto& operator %=(const type value) { set(data  % value); return *this; }$/;"	f	struct:nall::Integer
operator %=	nall/primitives.hpp	/^  inline auto& operator %=(const type value) { set(data  % value); return *this; }$/;"	f	struct:nall::Natural
operator %=	nall/primitives.hpp	/^  inline auto& operator%=(const type value) { data = data % value; return *this; }$/;"	f	struct:nall::Real
operator %=	nall/varint.hpp	/^  inline auto& operator %=(const uint64_t value) { return assign(data  % value); }$/;"	f	struct:nall::VariadicNatural
operator &	nall/arithmetic/natural.hpp	/^  template<typename T> auto operator& (const T& rhs) const { return Cast(*this) &  Cast(rhs); }$/;"	f	struct:nall::Pair
operator &=	higan/processor/gsu/registers.hpp	/^  inline auto operator  &= (uint i) { return assign(data & i); }$/;"	f	struct:Register
operator &=	higan/processor/v30mz/v30mz.hpp	/^      auto& operator&=(uint value) { return data &= value, *this; }$/;"	f	struct:Processor::Registers::Flags
operator &=	nall/arithmetic/natural.hpp	/^  template<typename T> auto& operator&= (const T& rhs) { return *this = *this &  Pair(rhs); }$/;"	f	struct:nall::Pair
operator &=	nall/primitives.hpp	/^    inline auto& operator &=(const type value) { return set(get()  & value); }$/;"	f	struct:nall::Natural::Reference
operator &=	nall/primitives.hpp	/^    inline auto& operator &=(const utype value) { return set(get()  & value); }$/;"	f	struct:nall::Integer::Reference
operator &=	nall/primitives.hpp	/^  inline auto& operator &=(const type value) { set(data  & value); return *this; }$/;"	f	struct:nall::Integer
operator &=	nall/primitives.hpp	/^  inline auto& operator &=(const type value) { set(data  & value); return *this; }$/;"	f	struct:nall::Natural
operator &=	nall/varint.hpp	/^  inline auto& operator &=(const uint64_t value) { return assign(data  & value); }$/;"	f	struct:nall::VariadicNatural
operator ()	nall/http/message.hpp	/^  auto operator()() const { return shared->value; }$/;"	f	struct:nall::HTTP::SharedVariable
operator *	nall/arithmetic/natural.hpp	/^  template<typename T> auto operator* (const T& rhs) const { return Cast(*this) *  Cast(rhs); }$/;"	f	struct:nall::Pair
operator *=	higan/processor/gsu/registers.hpp	/^  inline auto operator  *= (uint i) { return assign(data * i); }$/;"	f	struct:Register
operator *=	nall/arithmetic/natural.hpp	/^  template<typename T> auto& operator*= (const T& rhs) { return *this = *this *  Pair(rhs); }$/;"	f	struct:nall::Pair
operator *=	nall/primitives.hpp	/^    inline auto& operator *=(const type value) { return set(get()  * value); }$/;"	f	struct:nall::Natural::Reference
operator *=	nall/primitives.hpp	/^    inline auto& operator *=(const utype value) { return set(get()  * value); }$/;"	f	struct:nall::Integer::Reference
operator *=	nall/primitives.hpp	/^  inline auto& operator *=(const type value) { set(data  * value); return *this; }$/;"	f	struct:nall::Integer
operator *=	nall/primitives.hpp	/^  inline auto& operator *=(const type value) { set(data  * value); return *this; }$/;"	f	struct:nall::Natural
operator *=	nall/primitives.hpp	/^  inline auto& operator*=(const type value) { data = data * value; return *this; }$/;"	f	struct:nall::Real
operator *=	nall/varint.hpp	/^  inline auto& operator *=(const uint64_t value) { return assign(data  * value); }$/;"	f	struct:nall::VariadicNatural
operator +	nall/arithmetic/natural.hpp	/^  template<typename T> auto operator+ (const T& rhs) const { return Cast(*this) +  Cast(rhs); }$/;"	f	struct:nall::Pair
operator ++	higan/processor/gsu/registers.hpp	/^  inline auto operator++() { return assign(data + 1); }$/;"	f	struct:Register
operator ++	higan/processor/gsu/registers.hpp	/^  inline auto operator++(int) { uint r = data; assign(data + 1); return r; }$/;"	f	struct:Register
operator ++	nall/primitives.hpp	/^    inline auto  operator++(int) { auto value = get(); set(value + 1); return value; }$/;"	f	struct:nall::Integer::Reference
operator ++	nall/primitives.hpp	/^    inline auto  operator++(int) { auto value = get(); set(value + 1); return value; }$/;"	f	struct:nall::Natural::Reference
operator ++	nall/primitives.hpp	/^    inline auto& operator++() { return set(get() + 1); }$/;"	f	struct:nall::Integer::Reference
operator ++	nall/primitives.hpp	/^    inline auto& operator++() { return set(get() + 1); }$/;"	f	struct:nall::Natural::Reference
operator ++	nall/primitives.hpp	/^  inline auto operator++(int) { type value = data; ++data; return value; }$/;"	f	struct:nall::Real
operator ++	nall/primitives.hpp	/^  inline auto operator++(int) { type value = data; set(data + 1); return value; }$/;"	f	struct:nall::Integer
operator ++	nall/primitives.hpp	/^  inline auto operator++(int) { type value = data; set(data + 1); return value; }$/;"	f	struct:nall::Natural
operator ++	nall/primitives.hpp	/^  inline auto& operator++() { data++; return *this; }$/;"	f	struct:nall::Real
operator ++	nall/primitives.hpp	/^  inline auto& operator++() { set(data + 1); return *this; }$/;"	f	struct:nall::Integer
operator ++	nall/primitives.hpp	/^  inline auto& operator++() { set(data + 1); return *this; }$/;"	f	struct:nall::Natural
operator ++	nall/varint.hpp	/^  inline auto operator++(int) { auto value = data; assign(data + 1); return value; }$/;"	f	struct:nall::VariadicNatural
operator ++	nall/varint.hpp	/^  inline auto& operator++() { return assign(data + 1); }$/;"	f	struct:nall::VariadicNatural
operator +=	higan/processor/gsu/registers.hpp	/^  inline auto operator  += (uint i) { return assign(data + i); }$/;"	f	struct:Register
operator +=	nall/arithmetic/natural.hpp	/^  template<typename T> auto& operator+= (const T& rhs) { return *this = *this +  Pair(rhs); }$/;"	f	struct:nall::Pair
operator +=	nall/primitives.hpp	/^    inline auto& operator +=(const type value) { return set(get()  + value); }$/;"	f	struct:nall::Natural::Reference
operator +=	nall/primitives.hpp	/^    inline auto& operator +=(const utype value) { return set(get()  + value); }$/;"	f	struct:nall::Integer::Reference
operator +=	nall/primitives.hpp	/^  inline auto& operator +=(const type value) { set(data  + value); return *this; }$/;"	f	struct:nall::Integer
operator +=	nall/primitives.hpp	/^  inline auto& operator +=(const type value) { set(data  + value); return *this; }$/;"	f	struct:nall::Natural
operator +=	nall/primitives.hpp	/^  inline auto& operator+=(const type value) { data = data + value; return *this; }$/;"	f	struct:nall::Real
operator +=	nall/varint.hpp	/^  inline auto& operator +=(const uint64_t value) { return assign(data  + value); }$/;"	f	struct:nall::VariadicNatural
operator -	nall/arithmetic/natural.hpp	/^  template<typename T> auto operator- (const T& rhs) const { return Cast(*this) -  Cast(rhs); }$/;"	f	struct:nall::Pair
operator --	higan/processor/gsu/registers.hpp	/^  inline auto operator--() { return assign(data - 1); }$/;"	f	struct:Register
operator --	higan/processor/gsu/registers.hpp	/^  inline auto operator--(int) { uint r = data; assign(data - 1); return r; }$/;"	f	struct:Register
operator --	nall/primitives.hpp	/^    inline auto  operator--(int) { auto value = get(); set(value - 1); return value; }$/;"	f	struct:nall::Integer::Reference
operator --	nall/primitives.hpp	/^    inline auto  operator--(int) { auto value = get(); set(value - 1); return value; }$/;"	f	struct:nall::Natural::Reference
operator --	nall/primitives.hpp	/^    inline auto& operator--() { return set(get() - 1); }$/;"	f	struct:nall::Integer::Reference
operator --	nall/primitives.hpp	/^    inline auto& operator--() { return set(get() - 1); }$/;"	f	struct:nall::Natural::Reference
operator --	nall/primitives.hpp	/^  inline auto operator--(int) { type value = data; --data; return value; }$/;"	f	struct:nall::Real
operator --	nall/primitives.hpp	/^  inline auto operator--(int) { type value = data; set(data - 1); return value; }$/;"	f	struct:nall::Integer
operator --	nall/primitives.hpp	/^  inline auto operator--(int) { type value = data; set(data - 1); return value; }$/;"	f	struct:nall::Natural
operator --	nall/primitives.hpp	/^  inline auto& operator--() { data--; return *this; }$/;"	f	struct:nall::Real
operator --	nall/primitives.hpp	/^  inline auto& operator--() { set(data - 1); return *this; }$/;"	f	struct:nall::Integer
operator --	nall/primitives.hpp	/^  inline auto& operator--() { set(data - 1); return *this; }$/;"	f	struct:nall::Natural
operator --	nall/varint.hpp	/^  inline auto operator--(int) { auto value = data; assign(data - 1); return value; }$/;"	f	struct:nall::VariadicNatural
operator --	nall/varint.hpp	/^  inline auto& operator--() { return assign(data - 1); }$/;"	f	struct:nall::VariadicNatural
operator -=	higan/processor/gsu/registers.hpp	/^  inline auto operator  -= (uint i) { return assign(data - i); }$/;"	f	struct:Register
operator -=	nall/arithmetic/natural.hpp	/^  template<typename T> auto& operator-= (const T& rhs) { return *this = *this -  Pair(rhs); }$/;"	f	struct:nall::Pair
operator -=	nall/primitives.hpp	/^    inline auto& operator -=(const type value) { return set(get()  - value); }$/;"	f	struct:nall::Natural::Reference
operator -=	nall/primitives.hpp	/^    inline auto& operator -=(const utype value) { return set(get()  - value); }$/;"	f	struct:nall::Integer::Reference
operator -=	nall/primitives.hpp	/^  inline auto& operator -=(const type value) { set(data  - value); return *this; }$/;"	f	struct:nall::Integer
operator -=	nall/primitives.hpp	/^  inline auto& operator -=(const type value) { set(data  - value); return *this; }$/;"	f	struct:nall::Natural
operator -=	nall/primitives.hpp	/^  inline auto& operator-=(const type value) { data = data - value; return *this; }$/;"	f	struct:nall::Real
operator -=	nall/varint.hpp	/^  inline auto& operator -=(const uint64_t value) { return assign(data  - value); }$/;"	f	struct:nall::VariadicNatural
operator /	nall/arithmetic/natural.hpp	/^  template<typename T> auto operator\/ (const T& rhs) const { return Cast(*this) \/  Cast(rhs); }$/;"	f	struct:nall::Pair
operator /=	higan/processor/gsu/registers.hpp	/^  inline auto operator  \/= (uint i) { return assign(data \/ i); }$/;"	f	struct:Register
operator /=	nall/arithmetic/natural.hpp	/^  template<typename T> auto& operator\/= (const T& rhs) { return *this = *this \/  Pair(rhs); }$/;"	f	struct:nall::Pair
operator /=	nall/primitives.hpp	/^    inline auto& operator \/=(const type value) { return set(get()  \/ value); }$/;"	f	struct:nall::Natural::Reference
operator /=	nall/primitives.hpp	/^    inline auto& operator \/=(const utype value) { return set(get()  \/ value); }$/;"	f	struct:nall::Integer::Reference
operator /=	nall/primitives.hpp	/^  inline auto& operator \/=(const type value) { set(data  \/ value); return *this; }$/;"	f	struct:nall::Integer
operator /=	nall/primitives.hpp	/^  inline auto& operator \/=(const type value) { set(data  \/ value); return *this; }$/;"	f	struct:nall::Natural
operator /=	nall/primitives.hpp	/^  inline auto& operator\/=(const type value) { data = data \/ value; return *this; }$/;"	f	struct:nall::Real
operator /=	nall/varint.hpp	/^  inline auto& operator \/=(const uint64_t value) { return assign(data  \/ value); }$/;"	f	struct:nall::VariadicNatural
operator <	ruby/input/joypad/udev.cpp	/^    bool operator< (const JoypadInput& source) const { return code <  source.code; }$/;"	f	struct:InputJoypadUdev::JoypadInput
operator <	ruby/video/opengl/opengl.hpp	/^    bool operator< (const Setting& source) const { return name <  source.name; }$/;"	f	struct:OpenGL::Setting
operator <<	nall/arithmetic/natural.hpp	/^  template<typename T> auto operator<<(const T& rhs) const { return Cast(*this) << Cast(rhs); }$/;"	f	struct:nall::Pair
operator <<=	higan/processor/gsu/registers.hpp	/^  inline auto operator <<= (uint i) { return assign(data << i); }$/;"	f	struct:Register
operator <<=	nall/arithmetic/natural.hpp	/^  template<typename T> auto& operator<<=(const T& rhs) { return *this = *this << Pair(rhs); }$/;"	f	struct:nall::Pair
operator <<=	nall/primitives.hpp	/^    inline auto& operator<<=(const type value) { return set(get() << value); }$/;"	f	struct:nall::Natural::Reference
operator <<=	nall/primitives.hpp	/^    inline auto& operator<<=(const utype value) { return set(get() << value); }$/;"	f	struct:nall::Integer::Reference
operator <<=	nall/primitives.hpp	/^  inline auto& operator<<=(const type value) { set(data << value); return *this; }$/;"	f	struct:nall::Integer
operator <<=	nall/primitives.hpp	/^  inline auto& operator<<=(const type value) { set(data << value); return *this; }$/;"	f	struct:nall::Natural
operator <<=	nall/varint.hpp	/^  inline auto& operator<<=(const uint64_t value) { return assign(data << value); }$/;"	f	struct:nall::VariadicNatural
operator =	higan/fc/ppu/ppu.hpp	/^      auto& operator=(const Union& u) { value = u.value; return *this; }$/;"	f	union:PPU::IO::Union
operator =	higan/processor/gsu/registers.hpp	/^  auto& operator=(uint data) {$/;"	f	struct:CFGR
operator =	higan/processor/gsu/registers.hpp	/^  auto& operator=(uint data) {$/;"	f	struct:POR
operator =	higan/processor/gsu/registers.hpp	/^  auto& operator=(uint data) {$/;"	f	struct:SCMR
operator =	higan/processor/gsu/registers.hpp	/^  inline auto operator   = (const Register& value) { return assign(value); }$/;"	f	struct:Register
operator =	higan/processor/gsu/registers.hpp	/^  inline auto operator   = (uint i) { return assign(i); }$/;"	f	struct:Register
operator =	higan/processor/gsu/registers.hpp	/^  inline auto& operator=(const uint value) { return data = value, *this; }$/;"	f	struct:SFR
operator =	higan/processor/huc6280/huc6280.hpp	/^    inline auto& operator=(uint8 data) {$/;"	f	struct:Processor::HuC6280::Flags
operator =	higan/processor/mos6502/mos6502.hpp	/^    inline auto& operator=(uint8 data) {$/;"	f	struct:Processor::MOS6502::Flags
operator =	higan/processor/spc700/spc700.hpp	/^    inline auto& operator=(uint8 data) {$/;"	f	struct:Processor::SPC700::Flags
operator =	higan/processor/v30mz/v30mz.hpp	/^      auto& operator =(uint value) { return data  = value, *this; }$/;"	f	struct:Processor::Registers::Flags
operator =	higan/processor/wdc65816/wdc65816.hpp	/^    inline auto& operator=(uint8 data) {$/;"	f	struct:Processor::WDC65816::Flags
operator =	nall/http/message.hpp	/^  auto& operator=(const string& value) { shared->value = value; return *this; }$/;"	f	struct:nall::HTTP::SharedVariable
operator =	nall/pointer.hpp	/^  auto& operator=(T* source) { value = source; return *this; }$/;"	f	struct:nall::pointer
operator =	nall/pointer.hpp	/^  auto& operator=(const pointer& source) { value = source.value; return *this; }$/;"	f	struct:nall::pointer
operator =	nall/primitives.hpp	/^    inline auto& operator  =(const type value) { return set(         value); }$/;"	f	struct:nall::Natural::Reference
operator =	nall/primitives.hpp	/^    inline auto& operator  =(const utype value) { return set(         value); }$/;"	f	struct:nall::Integer::Reference
operator =	nall/primitives.hpp	/^    inline auto& operator=(Reference& source) { return set(source.get()); }$/;"	f	struct:nall::Natural::Reference
operator =	nall/primitives.hpp	/^    inline auto& operator=(const Reference& source) { return set(source.get()); }$/;"	f	struct:nall::Integer::Reference
operator =	nall/primitives.hpp	/^  template<typename T> inline auto& operator=(const T& value) { data = (type)value; return *this; }$/;"	f	struct:nall::Real
operator =	nall/primitives.hpp	/^  template<typename T> inline auto& operator=(const T& value) { data = value; return *this; }$/;"	f	struct:nall::Boolean
operator =	nall/primitives.hpp	/^  template<typename T> inline auto& operator=(const T& value) { set(value); return *this; }$/;"	f	struct:nall::Integer
operator =	nall/primitives.hpp	/^  template<typename T> inline auto& operator=(const T& value) { set(value); return *this; }$/;"	f	struct:nall::Natural
operator =	nall/utility.hpp	/^  auto& operator=(const With& value) { return this->value = value; }$/;"	f	struct:nall::castable
operator =	nall/varint.hpp	/^    inline auto& operator=(const uint64_t value) {$/;"	f	struct:nall::VariadicNatural::Reference
operator =	nall/varint.hpp	/^  template<typename T> inline auto& operator=(const T& value) { return assign(value); }$/;"	f	struct:nall::VariadicNatural
operator ==	ruby/input/joypad/udev.cpp	/^    bool operator==(const JoypadInput& source) const { return code == source.code; }$/;"	f	struct:InputJoypadUdev::JoypadInput
operator ==	ruby/video/opengl/opengl.hpp	/^    bool operator==(const Setting& source) const { return name == source.name; }$/;"	f	struct:OpenGL::Setting
operator >>	nall/arithmetic/natural.hpp	/^  template<typename T> auto operator>>(const T& rhs) const { return Cast(*this) >> Cast(rhs); }$/;"	f	struct:nall::Pair
operator >>=	higan/processor/gsu/registers.hpp	/^  inline auto operator >>= (uint i) { return assign(data >> i); }$/;"	f	struct:Register
operator >>=	nall/arithmetic/natural.hpp	/^  template<typename T> auto& operator>>=(const T& rhs) { return *this = *this >> Pair(rhs); }$/;"	f	struct:nall::Pair
operator >>=	nall/primitives.hpp	/^    inline auto& operator>>=(const type value) { return set(get() >> value); }$/;"	f	struct:nall::Natural::Reference
operator >>=	nall/primitives.hpp	/^    inline auto& operator>>=(const utype value) { return set(get() >> value); }$/;"	f	struct:nall::Integer::Reference
operator >>=	nall/primitives.hpp	/^  inline auto& operator>>=(const type value) { set(data >> value); return *this; }$/;"	f	struct:nall::Integer
operator >>=	nall/primitives.hpp	/^  inline auto& operator>>=(const type value) { set(data >> value); return *this; }$/;"	f	struct:nall::Natural
operator >>=	nall/varint.hpp	/^  inline auto& operator>>=(const uint64_t value) { return assign(data >> value); }$/;"	f	struct:nall::VariadicNatural
operator R	nall/property.hpp	/^  operator R() const { return getter(); }$/;"	f	struct:nall::virtual_property
operator R	nall/property.hpp	/^  operator R() const { return getter(value); }$/;"	f	struct:nall::functional_property
operator T	nall/arithmetic/natural.hpp	/^  template<typename T> operator T() const { T value; _get(*this, value); return value; }$/;"	f	struct:nall::Pair
operator T&	nall/property.hpp	/^  operator T&() { return value; }             \/\/direct assignment$/;"	f	struct:nall::property
operator T*	nall/array-span.hpp	/^  inline operator T*() { return (T*)super::operator const T*(); }$/;"	f	struct:nall::array_span
operator To&	nall/utility.hpp	/^  operator To&() { return (To&)value; }$/;"	f	struct:nall::castable
operator With&	nall/utility.hpp	/^  operator With&() { return value; }$/;"	f	struct:nall::castable
operator XlibDisplay*	nall/xorg/xorg.hpp	/^  operator XlibDisplay*() const { return _display; }$/;"	f	struct:XDisplay
operator []	higan/sfc/ppu/ppu.hpp	/^    auto& operator[](uint addr) { return data[addr & mask]; }$/;"	f	struct:PPU::VRAM
operator ^	nall/arithmetic/natural.hpp	/^  template<typename T> auto operator^ (const T& rhs) const { return Cast(*this) ^  Cast(rhs); }$/;"	f	struct:nall::Pair
operator ^=	higan/processor/gsu/registers.hpp	/^  inline auto operator  ^= (uint i) { return assign(data ^ i); }$/;"	f	struct:Register
operator ^=	higan/processor/v30mz/v30mz.hpp	/^      auto& operator^=(uint value) { return data ^= value, *this; }$/;"	f	struct:Processor::Registers::Flags
operator ^=	nall/arithmetic/natural.hpp	/^  template<typename T> auto& operator^= (const T& rhs) { return *this = *this ^  Pair(rhs); }$/;"	f	struct:nall::Pair
operator ^=	nall/primitives.hpp	/^    inline auto& operator ^=(const type value) { return set(get()  ^ value); }$/;"	f	struct:nall::Natural::Reference
operator ^=	nall/primitives.hpp	/^    inline auto& operator ^=(const utype value) { return set(get()  ^ value); }$/;"	f	struct:nall::Integer::Reference
operator ^=	nall/primitives.hpp	/^  inline auto& operator ^=(const type value) { set(data  ^ value); return *this; }$/;"	f	struct:nall::Integer
operator ^=	nall/primitives.hpp	/^  inline auto& operator ^=(const type value) { set(data  ^ value); return *this; }$/;"	f	struct:nall::Natural
operator ^=	nall/varint.hpp	/^  inline auto& operator ^=(const uint64_t value) { return assign(data  ^ value); }$/;"	f	struct:nall::VariadicNatural
operator array_span<T>	nall/vector/core.hpp	/^template<typename T> vector<T>::operator array_span<T>() {$/;"	f	class:nall::vector
operator array_span<char>	nall/string.hpp	/^  operator array_span<char>() { return {(char*)get(), size()}; }$/;"	f	struct:nall::string
operator array_span<uint8_t>	nall/string.hpp	/^  operator array_span<uint8_t>() { return {(uint8_t*)get(), size()}; }$/;"	f	struct:nall::string
operator array_view<T>	nall/array.hpp	/^  operator array_view<T>() const {$/;"	f	struct:nall::array
operator array_view<T>	nall/vector/core.hpp	/^template<typename T> vector<T>::operator array_view<T>() const {$/;"	f	class:nall::vector
operator array_view<char>	nall/string.hpp	/^  operator array_view<char>() const { return {(const char*)data(), size()}; }$/;"	f	struct:nall::string
operator array_view<uint8_t>	nall/string.hpp	/^  operator array_view<uint8_t>() const { return {(const uint8_t*)data(), size()}; }$/;"	f	struct:nall::string
operator bool	higan/emulator/cheat.hpp	/^  explicit operator bool() const {$/;"	f	struct:Emulator::Cheat
operator bool	higan/emulator/game.hpp	/^    explicit operator bool() const { return (bool)type; }$/;"	f	struct:Emulator::Game::Memory
operator bool	higan/emulator/game.hpp	/^    explicit operator bool() const { return frequency; }$/;"	f	struct:Emulator::Game::Oscillator
operator bool	higan/emulator/platform.hpp	/^    explicit operator bool() const { return valid; }$/;"	f	struct:Emulator::Platform::Load
operator bool	higan/md/cartridge/cartridge.cpp	/^Cartridge::Memory::operator bool() const {$/;"	f	class:MegaDrive::Cartridge::Memory
operator bool	higan/sfc/memory/memory.hpp	/^  inline explicit operator bool() const { return size() > 0; }$/;"	f	struct:Memory
operator bool	higan/target-bsnes/program/program.hpp	/^    explicit operator bool() const { return (bool)location; }$/;"	f	struct:Program::Game
operator bool	hiro/core/alignment.cpp	/^Alignment::operator bool() const {$/;"	f	class:Alignment
operator bool	hiro/core/color.cpp	/^Color::operator bool() const {$/;"	f	class:Color
operator bool	hiro/core/cursor.cpp	/^Cursor::operator bool() const {$/;"	f	class:Cursor
operator bool	hiro/core/font.cpp	/^Font::operator bool() const {$/;"	f	class:Font
operator bool	hiro/core/geometry.cpp	/^Geometry::operator bool() const {$/;"	f	class:Geometry
operator bool	hiro/core/gradient.cpp	/^Gradient::operator bool() const {$/;"	f	class:Gradient
operator bool	hiro/core/hotkey.cpp	/^Hotkey::operator bool() const {$/;"	f	class:Hotkey
operator bool	hiro/core/object.cpp	/^mObject::operator bool() const {$/;"	f	class:mObject
operator bool	hiro/core/position.cpp	/^Position::operator bool() const {$/;"	f	class:Position
operator bool	hiro/core/size.cpp	/^Size::operator bool() const {$/;"	f	class:Size
operator bool	icarus/heuristics/bs-memory.cpp	/^BSMemory::operator bool() const {$/;"	f	class:Heuristics::BSMemory
operator bool	icarus/heuristics/famicom.cpp	/^Famicom::operator bool() const {$/;"	f	class:Heuristics::Famicom
operator bool	icarus/heuristics/game-boy-advance.cpp	/^GameBoyAdvance::operator bool() const {$/;"	f	class:Heuristics::GameBoyAdvance
operator bool	icarus/heuristics/game-boy.cpp	/^GameBoy::operator bool() const {$/;"	f	class:Heuristics::GameBoy
operator bool	icarus/heuristics/game-gear.cpp	/^GameGear::operator bool() const {$/;"	f	class:Heuristics::GameGear
operator bool	icarus/heuristics/master-system.cpp	/^MasterSystem::operator bool() const {$/;"	f	class:Heuristics::MasterSystem
operator bool	icarus/heuristics/mega-drive.cpp	/^MegaDrive::operator bool() const {$/;"	f	class:Heuristics::MegaDrive
operator bool	icarus/heuristics/pc-engine.cpp	/^PCEngine::operator bool() const {$/;"	f	class:Heuristics::PCEngine
operator bool	icarus/heuristics/sufami-turbo.cpp	/^SufamiTurbo::operator bool() const {$/;"	f	class:Heuristics::SufamiTurbo
operator bool	icarus/heuristics/super-famicom.cpp	/^SuperFamicom::operator bool() const {$/;"	f	class:Heuristics::SuperFamicom
operator bool	icarus/heuristics/supergrafx.cpp	/^SuperGrafx::operator bool() const {$/;"	f	class:Heuristics::SuperGrafx
operator bool	icarus/heuristics/wonderswan.cpp	/^WonderSwan::operator bool() const {$/;"	f	class:Heuristics::WonderSwan
operator bool	nall/any.hpp	/^  explicit operator bool() const { return container; }$/;"	f	struct:nall::any
operator bool	nall/arguments.hpp	/^  explicit operator bool() const { return (bool)arguments; }$/;"	f	struct:nall::Arguments
operator bool	nall/arithmetic/natural.hpp	/^  explicit operator bool() const { return hi | lo; }$/;"	f	struct:nall::Pair
operator bool	nall/array-view.hpp	/^  inline explicit operator bool() const { return _data && _size > 0; }$/;"	f	struct:nall::array_view
operator bool	nall/beat/archive/node.hpp	/^  explicit operator bool() const { return (bool)name; }$/;"	f	struct:nall::Beat::Archive::Node
operator bool	nall/bit-vector.hpp	/^    operator bool() const { return self.get(position); }$/;"	f	struct:nall::bitvector::reference
operator bool	nall/bit-vector.hpp	/^  explicit operator bool() const { return bits > 0; }$/;"	f	struct:nall::bitvector
operator bool	nall/database/odbc.hpp	/^    explicit operator bool() {$/;"	f	struct:nall::Database::ODBC::Query
operator bool	nall/database/odbc.hpp	/^  explicit operator bool() const { return _connection; }$/;"	f	struct:nall::Database::ODBC
operator bool	nall/database/sqlite3.hpp	/^    explicit operator bool() {$/;"	f	struct:nall::Database::SQLite3::Statement
operator bool	nall/database/sqlite3.hpp	/^  explicit operator bool() const { return _database; }$/;"	f	struct:nall::Database::SQLite3
operator bool	nall/decode/bmp.hpp	/^  explicit operator bool() const { return _data; }$/;"	f	struct:nall::Decode::BMP
operator bool	nall/dl.hpp	/^  explicit operator bool() const { return open(); }$/;"	f	struct:nall::library
operator bool	nall/elliptic-curve/modulo25519-optimized.hpp	/^  inline explicit operator bool() const { return (bool)operator()(); }$/;"	f	struct:nall::EllipticCurve::Modulo25519
operator bool	nall/elliptic-curve/modulo25519-reference.hpp	/^  inline explicit operator bool() const { return (bool)value; }$/;"	f	struct:nall::EllipticCurve::Modulo25519
operator bool	nall/file-buffer.hpp	/^  explicit operator bool() const {$/;"	f
operator bool	nall/file-map.hpp	/^  explicit operator bool() const { return _open; }$/;"	f	namespace:nall
operator bool	nall/function.hpp	/^  explicit operator bool() const { return callback; }$/;"	f	struct:nall::R
operator bool	nall/hashset.hpp	/^  explicit operator bool() const { return count; }$/;"	f	struct:nall::hashset
operator bool	nall/http/message.hpp	/^  explicit operator bool() const { return (bool)shared->name; }$/;"	f	struct:nall::HTTP::SharedVariable
operator bool	nall/http/request.hpp	/^  explicit operator bool() const { return requestType() != RequestType::None; }$/;"	f	struct:nall::HTTP::Request
operator bool	nall/http/response.hpp	/^  explicit operator bool() const { return responseType() != 0; }$/;"	f	struct:nall::HTTP::Response
operator bool	nall/image/core.hpp	/^image::operator bool() const {$/;"	f	class:nall::image
operator bool	nall/maybe.hpp	/^  inline explicit operator bool() const { return _valid; }$/;"	f	struct:nall::maybe
operator bool	nall/maybe.hpp	/^  inline explicit operator bool() const { return _value; }$/;"	f	struct:nall::maybe
operator bool	nall/pointer.hpp	/^  explicit operator bool() const { return value; }$/;"	f	struct:nall::pointer
operator bool	nall/posix/service.hpp	/^service::operator bool() const {$/;"	f	class:nall::service
operator bool	nall/posix/shared-memory.hpp	/^  explicit operator bool() const {$/;"	f	struct:nall::shared_memory
operator bool	nall/primitives.hpp	/^  inline operator bool() const { return data; }$/;"	f	struct:nall::Boolean
operator bool	nall/run.hpp	/^  explicit operator bool() const { return code == EXIT_SUCCESS; }$/;"	f	struct:nall::execute_result_t
operator bool	nall/serializer.hpp	/^  explicit operator bool() const {$/;"	f	namespace:nall
operator bool	nall/set.hpp	/^  explicit operator bool() const { return nodes; }$/;"	f	struct:nall::set
operator bool	nall/shared-pointer.hpp	/^  explicit operator bool() const {$/;"	f	struct:nall::shared_pointer
operator bool	nall/shared-pointer.hpp	/^  explicit operator bool() const {$/;"	f	struct:nall::shared_pointer_weak
operator bool	nall/string.hpp	/^  explicit operator bool() const { return _size; }$/;"	f	struct:nall::string
operator bool	nall/string/markup/node.hpp	/^  explicit operator bool() const { return shared->_name || shared->_children; }$/;"	f	struct:nall::Markup::Node
operator bool	nall/string/pascal.hpp	/^  explicit operator bool() const { return _data; }$/;"	f	struct:nall::string_pascal
operator bool	nall/unique-pointer.hpp	/^  explicit operator bool() const { return pointer; }$/;"	f	struct:nall::unique_pointer
operator bool	nall/vector/core.hpp	/^template<typename T> vector<T>::operator bool() const {$/;"	f	class:nall::vector
operator bool	nall/windows/service.hpp	/^  explicit operator bool() const { return false; }$/;"	f	struct:nall::service
operator bool	nall/windows/shared-memory.hpp	/^  explicit operator bool() const { return false; }$/;"	f	struct:nall::shared_memory
operator bool	ruby/audio/asio.cpp	/^    explicit operator bool() const { return name; }$/;"	f	struct:AudioASIO::Device
operator bool	ruby/audio/audio.hpp	/^  explicit operator bool() { return instance->driver() != "None"; }$/;"	f	struct:Audio
operator bool	ruby/input/input.hpp	/^  explicit operator bool() { return instance->driver() != "None"; }$/;"	f	struct:Input
operator bool	ruby/video/video.hpp	/^  explicit operator bool() { return instance->driver() != "None"; }$/;"	f	struct:Video
operator char*	nall/windows/utf8.hpp	/^    operator char*() { return buffer; }$/;"	f	struct:nall::utf8_t
operator const T&	nall/property.hpp	/^  operator const T&() const { return value; }$/;"	f	struct:nall::property
operator const T*	nall/array-view.hpp	/^  inline operator const T*() const {$/;"	f	struct:nall::array_view
operator const To&	nall/utility.hpp	/^  operator const To&() const { return (const To&)value; }$/;"	f	struct:nall::castable
operator const With&	nall/utility.hpp	/^  operator const With&() const { return value; }$/;"	f	struct:nall::castable
operator const char*	nall/string.hpp	/^  operator const char*() const { return (const char*)data(); }$/;"	f	struct:nall::string
operator const char*	nall/string/pascal.hpp	/^  operator const char*() const { return _data ? _data + sizeof(uint) : nullptr; }$/;"	f	struct:nall::string_pascal
operator const char*	nall/string/view.hpp	/^string_view::operator const char*() const {$/;"	f	class:nall::string_view
operator const char*	nall/windows/utf8.hpp	/^    operator const char*() const { return buffer; }$/;"	f	struct:nall::utf8_t
operator const wchar_t*	nall/windows/utf8.hpp	/^    operator const wchar_t*() const { return buffer; }$/;"	f	struct:nall::utf16_t
operator string	nall/string/pascal.hpp	/^  operator string() const { return _data ? string{_data + sizeof(uint)} : ""; }$/;"	f	struct:nall::string_pascal
operator type	nall/primitives.hpp	/^    inline operator type() const { return get(); }$/;"	f	struct:nall::Natural::Reference
operator type	nall/primitives.hpp	/^  inline operator type() const { return data; }$/;"	f	struct:nall::Integer
operator type	nall/primitives.hpp	/^  inline operator type() const { return data; }$/;"	f	struct:nall::Natural
operator type	nall/primitives.hpp	/^  inline operator type() const { return data; }$/;"	f	struct:nall::Real
operator uint	higan/processor/gsu/registers.hpp	/^  inline operator uint() const { return data & 0x9f7e; }$/;"	f	struct:SFR
operator uint	higan/processor/gsu/registers.hpp	/^  inline operator uint() const {$/;"	f	struct:Register
operator uint	higan/processor/gsu/registers.hpp	/^  operator uint() const {$/;"	f	struct:CFGR
operator uint	higan/processor/gsu/registers.hpp	/^  operator uint() const {$/;"	f	struct:POR
operator uint	higan/processor/gsu/registers.hpp	/^  operator uint() const {$/;"	f	struct:SCMR
operator uint	higan/processor/mos6502/mos6502.hpp	/^    inline operator uint() const {$/;"	f	struct:Processor::MOS6502::Flags
operator uint	higan/processor/spc700/spc700.hpp	/^    inline operator uint() const {$/;"	f	struct:Processor::SPC700::Flags
operator uint	higan/processor/upd96050/upd96050.hpp	/^    inline operator uint() const {$/;"	f	struct:Processor::uPD96050::Flag
operator uint	higan/processor/upd96050/upd96050.hpp	/^    inline operator uint() const {$/;"	f	struct:Processor::uPD96050::Status
operator uint	higan/processor/v30mz/v30mz.hpp	/^      operator uint() const { return data & 0x8fd5 | 0x7002; }$/;"	f	struct:Processor::Registers::Flags
operator uint	higan/processor/wdc65816/wdc65816.hpp	/^    inline operator uint() const {$/;"	f	struct:Processor::WDC65816::Flags
operator uint32_t	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    inline operator uint32_t() const { return data; }$/;"	f	struct:Processor::GPR
operator uint32_t	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    inline operator uint32_t() const {$/;"	f	namespace:Processor
operator uint64_t	nall/varint.hpp	/^    inline operator uint64_t() const {$/;"	f	struct:nall::VariadicNatural::Reference
operator uint64_t	nall/varint.hpp	/^  inline operator uint64_t() const { return data; }$/;"	f	struct:nall::VariadicNatural
operator uint8	higan/processor/huc6280/huc6280.hpp	/^    inline operator uint8() const {$/;"	f	struct:Processor::HuC6280::Flags
operator utype	nall/primitives.hpp	/^    inline operator utype() const { return get(); }$/;"	f	struct:nall::Integer::Reference
operator wchar_t*	nall/windows/utf8.hpp	/^    operator wchar_t*() { return buffer; }$/;"	f	struct:nall::utf16_t
operator |	nall/arithmetic/natural.hpp	/^  template<typename T> auto operator| (const T& rhs) const { return Cast(*this) |  Cast(rhs); }$/;"	f	struct:nall::Pair
operator |=	higan/processor/gsu/registers.hpp	/^  inline auto operator  |= (uint i) { return assign(data | i); }$/;"	f	struct:Register
operator |=	higan/processor/v30mz/v30mz.hpp	/^      auto& operator|=(uint value) { return data |= value, *this; }$/;"	f	struct:Processor::Registers::Flags
operator |=	nall/arithmetic/natural.hpp	/^  template<typename T> auto& operator|= (const T& rhs) { return *this = *this |  Pair(rhs); }$/;"	f	struct:nall::Pair
operator |=	nall/primitives.hpp	/^    inline auto& operator |=(const type value) { return set(get()  | value); }$/;"	f	struct:nall::Natural::Reference
operator |=	nall/primitives.hpp	/^    inline auto& operator |=(const utype value) { return set(get()  | value); }$/;"	f	struct:nall::Integer::Reference
operator |=	nall/primitives.hpp	/^  inline auto& operator |=(const type value) { set(data  | value); return *this; }$/;"	f	struct:nall::Integer
operator |=	nall/primitives.hpp	/^  inline auto& operator |=(const type value) { set(data  | value); return *this; }$/;"	f	struct:nall::Natural
operator |=	nall/varint.hpp	/^  inline auto& operator |=(const uint64_t value) { return assign(data  | value); }$/;"	f	struct:nall::VariadicNatural
operators	higan/md/ym2612/ym2612.hpp	/^    } operators[4]{*this, *this, *this, *this};$/;"	s	struct:Channel
option	higan/emulator/platform.hpp	/^    string option;$/;"	m	struct:Emulator::Platform::Load
option	higan/target-bsnes/program/program.hpp	/^    string option;$/;"	m	struct:Program::Game
option	hiro/extension/browser-dialog.hpp	/^    string option;$/;"	m	struct:BrowserDialog::Response
options	hiro/extension/browser-dialog.hpp	/^    vector<string> options;$/;"	m	struct:BrowserDialog::State
order	higan/audio/audio.hpp	/^  Order order;$/;"	m	struct:Emulator::Filter
order_lsb2	nall/endian.hpp	23;"	d
order_lsb2	nall/endian.hpp	7;"	d
order_lsb3	nall/endian.hpp	24;"	d
order_lsb3	nall/endian.hpp	8;"	d
order_lsb4	nall/endian.hpp	25;"	d
order_lsb4	nall/endian.hpp	9;"	d
order_lsb5	nall/endian.hpp	10;"	d
order_lsb5	nall/endian.hpp	26;"	d
order_lsb6	nall/endian.hpp	11;"	d
order_lsb6	nall/endian.hpp	27;"	d
order_lsb7	nall/endian.hpp	12;"	d
order_lsb7	nall/endian.hpp	28;"	d
order_lsb8	nall/endian.hpp	13;"	d
order_lsb8	nall/endian.hpp	29;"	d
order_msb2	nall/endian.hpp	14;"	d
order_msb2	nall/endian.hpp	30;"	d
order_msb3	nall/endian.hpp	15;"	d
order_msb3	nall/endian.hpp	31;"	d
order_msb4	nall/endian.hpp	16;"	d
order_msb4	nall/endian.hpp	32;"	d
order_msb5	nall/endian.hpp	17;"	d
order_msb5	nall/endian.hpp	33;"	d
order_msb6	nall/endian.hpp	18;"	d
order_msb6	nall/endian.hpp	34;"	d
order_msb7	nall/endian.hpp	19;"	d
order_msb7	nall/endian.hpp	35;"	d
order_msb8	nall/endian.hpp	20;"	d
order_msb8	nall/endian.hpp	36;"	d
orientation	higan/ws/cartridge/cartridge.hpp	/^    boolean orientation;  \/\/0 = horizontal; 1 = vertical$/;"	m	struct:Cartridge::Information
orientation	hiro/core/core.hpp	/^    Orientation orientation = Orientation::Horizontal;$/;"	m	struct:hiro::mButton::State
orientation	hiro/core/core.hpp	/^    Orientation orientation = Orientation::Horizontal;$/;"	m	struct:hiro::mCheckButton::State
orientation	hiro/core/core.hpp	/^    Orientation orientation = Orientation::Horizontal;$/;"	m	struct:hiro::mIconView::State
orientation	hiro/core/core.hpp	/^    Orientation orientation = Orientation::Horizontal;$/;"	m	struct:hiro::mRadioButton::State
orientation	hiro/core/shared.hpp	/^  auto orientation() const { return self().orientation(); }$/;"	f	struct:Button
orientation	hiro/core/shared.hpp	/^  auto orientation() const { return self().orientation(); }$/;"	f	struct:CheckButton
orientation	hiro/core/shared.hpp	/^  auto orientation() const { return self().orientation(); }$/;"	f	struct:IconView
orientation	hiro/core/shared.hpp	/^  auto orientation() const { return self().orientation(); }$/;"	f	struct:RadioButton
origin	nall/range.hpp	/^  int origin;$/;"	m	struct:nall::range_t
original_attr	nall/serial.hpp	/^  termios original_attr;$/;"	m	struct:nall::serial
oscillator	genius/genius.hpp	/^  Oscillator oscillator;$/;"	m	struct:Component
oscillator	genius/genius.hpp	/^  Oscillator oscillator;$/;"	m	struct:OscillatorWindow
oscillatorList	higan/emulator/game.hpp	/^  vector<Oscillator> oscillatorList;$/;"	m	struct:Emulator::Game
oscillatorWindow	genius/genius.cpp	/^unique_pointer<OscillatorWindow> oscillatorWindow;$/;"	v
other	nall/beat/archive/node.hpp	/^    } other;$/;"	m	struct:nall::Beat::Archive::Node::Permission	typeref:struct:nall::Beat::Archive::Node::Permission::Other
out	nall/decode/inflate.hpp	/^  unsigned char* out;$/;"	m	struct:nall::Decode::puff::state
outcnt	nall/decode/inflate.hpp	/^  unsigned long outcnt;$/;"	m	struct:nall::Decode::puff::state
outlen	nall/decode/inflate.hpp	/^  unsigned long outlen;$/;"	m	struct:nall::Decode::puff::state
output	higan/fc/cartridge/board/sunsoft-5b.cpp	/^    uint4 output;$/;"	m	struct:Sunsoft5B::Pulse	file:
output	higan/fc/cartridge/chip/vrc6.cpp	/^    uint4 output;$/;"	m	struct:VRC6::Pulse	file:
output	higan/fc/cartridge/chip/vrc6.cpp	/^    uint5 output;$/;"	m	struct:VRC6::Sawtooth	file:
output	higan/gb/apu/apu.hpp	/^    int16 output;$/;"	m	struct:APU::Noise
output	higan/gb/apu/apu.hpp	/^    int16 output;$/;"	m	struct:APU::Square1
output	higan/gb/apu/apu.hpp	/^    int16 output;$/;"	m	struct:APU::Square2
output	higan/gb/apu/apu.hpp	/^    int16 output;$/;"	m	struct:APU::Wave
output	higan/gb/cartridge/mbc7/mbc7.hpp	/^    } output;$/;"	m	struct:MBC7::EEPROM	typeref:struct:MBC7::EEPROM::OutputShiftRegister
output	higan/gb/cartridge/tama/tama.hpp	/^    uint8 output;$/;"	m	struct:TAMA::IO
output	higan/gba/apu/apu.hpp	/^    int8 output;$/;"	m	struct:APU::FIFO
output	higan/gba/apu/apu.hpp	/^    uint4 output;$/;"	m	struct:APU::Noise
output	higan/gba/apu/apu.hpp	/^    uint4 output;$/;"	m	struct:APU::Square
output	higan/gba/apu/apu.hpp	/^    uint4 output;$/;"	m	struct:APU::Wave
output	higan/gba/ppu/ppu.hpp	/^    Pixel output;$/;"	m	struct:PPU::Background
output	higan/gba/ppu/ppu.hpp	/^    Pixel output;$/;"	m	struct:PPU::Objects
output	higan/gba/ppu/ppu.hpp	/^    uint1 output;  \/\/IN0, IN1, IN2 only$/;"	m	struct:PPU::Window
output	higan/gba/ppu/ppu.hpp	/^  uint32* output;$/;"	m	struct:PPU
output	higan/md/psg/psg.hpp	/^    uint1  output;$/;"	m	struct:PSG::Noise
output	higan/md/psg/psg.hpp	/^    uint1  output;$/;"	m	struct:PSG::Tone
output	higan/md/vdp/vdp.hpp	/^    Pixel output;$/;"	m	struct:VDP::Background
output	higan/md/vdp/vdp.hpp	/^    Pixel output;$/;"	m	struct:VDP::Sprite
output	higan/md/vdp/vdp.hpp	/^    uint32* output = nullptr;$/;"	m	struct:VDP::State
output	higan/md/vdp/vdp.hpp	/^  uint32* output = nullptr;$/;"	m	struct:VDP
output	higan/md/ym2612/ym2612.hpp	/^      int16  output = 0;$/;"	m	struct:Channel::Operator
output	higan/ms/psg/psg.hpp	/^    uint1   output;$/;"	m	struct:PSG::Noise
output	higan/ms/psg/psg.hpp	/^    uint1  output;$/;"	m	struct:PSG::Tone
output	higan/ms/vdp/vdp.hpp	/^    } output;$/;"	m	struct:VDP::Background	typeref:struct:VDP::Background::Output
output	higan/ms/vdp/vdp.hpp	/^    } output;$/;"	m	struct:VDP::Sprite	typeref:struct:VDP::Sprite::Output
output	higan/pce/psg/psg.hpp	/^      uint5  output;$/;"	m	struct:PSG::Channel::IO
output	higan/sfc/coprocessor/icd/icd.hpp	/^  uint8 output[4 * 512];$/;"	m	struct:ICD
output	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  uint8 output;$/;"	m	struct:Decompressor	file:
output	higan/sfc/ppu/object.hpp	/^  } output;$/;"	m	struct:Object	typeref:struct:Object::Output
output	higan/sfc/ppu/ppu.hpp	/^  uint32* output = nullptr;$/;"	m	struct:PPU
output	higan/sfc/ppu/window.hpp	/^  } output;$/;"	m	struct:Window	typeref:struct:Window::Output
output	higan/target-bsnes/settings/settings.hpp	/^    string output = "Scale";$/;"	m	struct:Settings::Video
output	higan/ws/ppu/ppu.hpp	/^  uint32 output[224 * 144];$/;"	m	struct:PPU
output	nall/run.hpp	/^  string output;$/;"	m	struct:nall::execute_result_t
output	nall/string/transform/cml.hpp	/^    string output;$/;"	m	struct:nall::__anon38::CML::State
output	nall/string/transform/dml.hpp	/^    string output;$/;"	m	struct:nall::__anon37::DML::State
outputChannels	ruby/audio/asio.cpp	/^    long outputChannels;$/;"	m	struct:AudioASIO::Device	file:
outputFrequency	higan/audio/audio.hpp	/^  double outputFrequency;$/;"	m	struct:Emulator::Stream
outputFrequency	nall/dsp/resampler/cubic.hpp	/^  double outputFrequency;$/;"	m	struct:nall::DSP::Resampler::Cubic
outputFrequency	ruby/video/video.hpp	/^  double outputFrequency = 0.0;$/;"	m	struct:VideoDriver
outputHeight	ruby/video/opengl/opengl.hpp	/^  uint outputHeight = 0;$/;"	m	struct:OpenGL
outputLatency	ruby/audio/asio.cpp	/^    long outputLatency;$/;"	m	struct:AudioASIO::Device	file:
outputLevel	higan/md/ym2612/ym2612.hpp	/^      uint16 outputLevel = 0x1fff;$/;"	m	struct:Channel::Operator
outputWidth	ruby/video/opengl/opengl.hpp	/^  uint outputWidth = 0;$/;"	m	struct:OpenGL
outxBuffer	higan/sfc/dsp/dsp.hpp	/^    int outxBuffer = 0;$/;"	m	struct:State
ov	higan/processor/gsu/registers.hpp	/^    BooleanBitField<uint16_t,  4> ov;      \/\/overflow flag$/;"	m	union:SFR::__anon27
ov0	higan/processor/upd96050/upd96050.hpp	/^    boolean ov0;  \/\/overflow 0$/;"	m	struct:Processor::uPD96050::Flag
ov1	higan/processor/upd96050/upd96050.hpp	/^    boolean ov1;  \/\/overflow 1$/;"	m	struct:Processor::uPD96050::Flag
overflow	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool overflow;$/;"	m	struct:SA1::MMIO
override	higan/fc/cpu/cpu.hpp	/^  auto lastCycle() -> void override;$/;"	m	struct:CPU
override	higan/fc/cpu/cpu.hpp	/^  auto nmi(uint16& vector) -> void override;$/;"	m	struct:CPU
override	higan/fc/cpu/cpu.hpp	/^  auto read(uint16 addr) -> uint8 override;$/;"	m	struct:CPU
override	higan/fc/cpu/cpu.hpp	/^  auto readDebugger(uint16 addr) -> uint8 override;$/;"	m	struct:CPU
override	higan/fc/cpu/cpu.hpp	/^  auto write(uint16 addr, uint8 data) -> void override;$/;"	m	struct:CPU
override	higan/gb/cartridge/mbc7/mbc7.hpp	/^  auto load(Markup::Node document) -> void override;$/;"	m	struct:MBC7
override	higan/gb/cartridge/mbc7/mbc7.hpp	/^  auto main() -> void override;$/;"	m	struct:MBC7
override	higan/gb/cartridge/mbc7/mbc7.hpp	/^  auto power() -> void override;$/;"	m	struct:MBC7
override	higan/gb/cartridge/mbc7/mbc7.hpp	/^  auto read(uint16 address) -> uint8 override;$/;"	m	struct:MBC7
override	higan/gb/cartridge/mbc7/mbc7.hpp	/^  auto save(Markup::Node document) -> void override;$/;"	m	struct:MBC7
override	higan/gb/cartridge/mbc7/mbc7.hpp	/^  auto serialize(serializer&) -> void override;$/;"	m	struct:MBC7
override	higan/gb/cartridge/mbc7/mbc7.hpp	/^  auto write(uint16 address, uint8 data) -> void override;$/;"	m	struct:MBC7
override	higan/gb/cpu/cpu.hpp	/^  auto idle() -> void override;$/;"	m	struct:CPU
override	higan/gb/cpu/cpu.hpp	/^  auto read(uint16 addr) -> uint8 override;$/;"	m	struct:CPU
override	higan/gb/cpu/cpu.hpp	/^  auto readDebugger(uint16 addr) -> uint8 override;$/;"	m	struct:CPU
override	higan/gb/cpu/cpu.hpp	/^  auto write(uint16 addr, uint8 data) -> void override;$/;"	m	struct:CPU
override	higan/gba/cpu/cpu.hpp	/^  auto get(uint mode, uint32 addr) -> uint32 override;$/;"	v
override	higan/gba/cpu/cpu.hpp	/^  auto set(uint mode, uint32 addr, uint32 word) -> void override;$/;"	v
override	higan/gba/cpu/cpu.hpp	/^  auto sleep() -> void override;$/;"	v
override	higan/gba/cpu/cpu.hpp	/^  auto step(uint clocks) -> void override;$/;"	v
override	higan/md/apu/apu.hpp	/^  auto in(uint8 addr) -> uint8 override;$/;"	m	struct:APU
override	higan/md/apu/apu.hpp	/^  auto out(uint8 addr, uint8 data) -> void override;$/;"	m	struct:APU
override	higan/md/apu/apu.hpp	/^  auto read(uint16 addr) -> uint8 override;$/;"	m	struct:APU
override	higan/md/apu/apu.hpp	/^  auto step(uint clocks) -> void override;$/;"	m	struct:APU
override	higan/md/apu/apu.hpp	/^  auto synchronizing() const -> bool override;$/;"	m	struct:APU
override	higan/md/apu/apu.hpp	/^  auto write(uint16 addr, uint8 data) -> void override;$/;"	m	struct:APU
override	higan/md/controller/control-pad/control-pad.hpp	/^  auto readData() -> uint8 override;$/;"	v
override	higan/md/controller/control-pad/control-pad.hpp	/^  auto writeData(uint8 data) -> void override;$/;"	v
override	higan/md/controller/fighting-pad/fighting-pad.hpp	/^  auto main() -> void override;$/;"	v
override	higan/md/controller/fighting-pad/fighting-pad.hpp	/^  auto readData() -> uint8 override;$/;"	v
override	higan/md/controller/fighting-pad/fighting-pad.hpp	/^  auto writeData(uint8 data) -> void override;$/;"	v
override	higan/md/cpu/cpu.hpp	/^  auto readByte(uint24 address) -> uint16 override;$/;"	m	struct:CPU
override	higan/md/cpu/cpu.hpp	/^  auto readWord(uint24 address) -> uint16 override;$/;"	m	struct:CPU
override	higan/md/cpu/cpu.hpp	/^  auto step(uint clocks) -> void override;$/;"	m	struct:CPU
override	higan/md/cpu/cpu.hpp	/^  auto writeByte(uint24 address, uint16 data) -> void override;$/;"	m	struct:CPU
override	higan/md/cpu/cpu.hpp	/^  auto writeWord(uint24 address, uint16 data) -> void override;$/;"	m	struct:CPU
override	higan/ms/controller/gamepad/gamepad.hpp	/^  auto readData() -> uint7 override;$/;"	v
override	higan/ms/cpu/cpu.hpp	/^  auto in(uint8 addr) -> uint8 override;$/;"	m	struct:CPU
override	higan/ms/cpu/cpu.hpp	/^  auto out(uint8 addr, uint8 data) -> void override;$/;"	m	struct:CPU
override	higan/ms/cpu/cpu.hpp	/^  auto read(uint16 addr) -> uint8 override;$/;"	m	struct:CPU
override	higan/ms/cpu/cpu.hpp	/^  auto step(uint clocks) -> void override;$/;"	m	struct:CPU
override	higan/ms/cpu/cpu.hpp	/^  auto synchronizing() const -> bool override;$/;"	m	struct:CPU
override	higan/ms/cpu/cpu.hpp	/^  auto write(uint16 addr, uint8 data) -> void override;$/;"	m	struct:CPU
override	higan/pce/controller/gamepad/gamepad.hpp	/^  auto readData() -> uint4 override;$/;"	v
override	higan/pce/controller/gamepad/gamepad.hpp	/^  auto writeData(uint2 data) -> void override;$/;"	v
override	higan/pce/cpu/cpu.hpp	/^  auto lastCycle() -> void override;$/;"	m	struct:CPU
override	higan/pce/cpu/cpu.hpp	/^  auto read(uint8 bank, uint13 addr) -> uint8 override;$/;"	m	struct:CPU
override	higan/pce/cpu/cpu.hpp	/^  auto step(uint clocks) -> void override;$/;"	m	struct:CPU
override	higan/pce/cpu/cpu.hpp	/^  auto store(uint2 addr, uint8 data) -> void override;$/;"	m	struct:CPU
override	higan/pce/cpu/cpu.hpp	/^  auto write(uint8 bank, uint13 addr, uint8 data) -> void override;$/;"	m	struct:CPU
override	higan/sfc/coprocessor/armdsp/armdsp.hpp	/^  auto get(uint mode, uint32 addr) -> uint32 override;$/;"	m	struct:ArmDSP
override	higan/sfc/coprocessor/armdsp/armdsp.hpp	/^  auto set(uint mode, uint32 addr, uint32 word) -> void override;$/;"	m	struct:ArmDSP
override	higan/sfc/coprocessor/armdsp/armdsp.hpp	/^  auto sleep() -> void override;$/;"	m	struct:ArmDSP
override	higan/sfc/coprocessor/armdsp/armdsp.hpp	/^  auto step(uint clocks) -> void override;$/;"	m	struct:ArmDSP
override	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto halt() -> void override;$/;"	m	struct:HitachiDSP
override	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto isRAM(uint24 address) -> bool override;$/;"	m	struct:HitachiDSP
override	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto isROM(uint24 address) -> bool override;$/;"	m	struct:HitachiDSP
override	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto read(uint24 address) -> uint8 override;$/;"	m	struct:HitachiDSP
override	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto step(uint clocks) -> void override;$/;"	m	struct:HitachiDSP
override	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto write(uint24 address, uint8 data) -> void override;$/;"	m	struct:HitachiDSP
override	higan/sfc/coprocessor/icd/icd.hpp	/^  auto audioSample(const double* samples, uint channels) -> void override;$/;"	m	struct:ICD
override	higan/sfc/coprocessor/icd/icd.hpp	/^  auto inputPoll(uint port, uint device, uint id) -> int16 override;$/;"	m	struct:ICD
override	higan/sfc/coprocessor/icd/icd.hpp	/^  auto joypRead() -> uint4 override;$/;"	m	struct:ICD
override	higan/sfc/coprocessor/icd/icd.hpp	/^  auto joypWrite(bool p15, bool p14) -> void override;$/;"	m	struct:ICD
override	higan/sfc/coprocessor/icd/icd.hpp	/^  auto lcdOutput(uint2 color) -> void override;$/;"	m	struct:ICD
override	higan/sfc/coprocessor/icd/icd.hpp	/^  auto lcdScanline() -> void override;$/;"	m	struct:ICD
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^    alwaysinline auto read(uint24 address, uint8 data = 0) -> uint8 override;$/;"	m	struct:SA1::BWRAM
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^    alwaysinline auto read(uint24 address, uint8 data = 0) -> uint8 override;$/;"	m	struct:SA1::IRAM
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^    alwaysinline auto read(uint24 address, uint8 data = 0) -> uint8 override;$/;"	m	struct:SA1::ROM
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^    alwaysinline auto write(uint24 address, uint8 data) -> void override;$/;"	m	struct:SA1::BWRAM
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^    alwaysinline auto write(uint24 address, uint8 data) -> void override;$/;"	m	struct:SA1::IRAM
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^    alwaysinline auto write(uint24 address, uint8 data) -> void override;$/;"	m	struct:SA1::ROM
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^  alwaysinline auto idle() -> void override;$/;"	m	struct:SA1
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^  alwaysinline auto idleBranch() -> void override;$/;"	m	struct:SA1
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^  alwaysinline auto idleJump() -> void override;$/;"	m	struct:SA1
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^  alwaysinline auto interruptPending() const -> bool override;$/;"	m	struct:SA1
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^  alwaysinline auto lastCycle() -> void override;$/;"	m	struct:SA1
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^  alwaysinline auto read(uint24 address) -> uint8 override;$/;"	m	struct:SA1
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^  alwaysinline auto write(uint24 address, uint8 data) -> void override;$/;"	m	struct:SA1
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^  auto interrupt() -> void override;$/;"	m	struct:SA1
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^  auto readDisassembler(uint24 address) -> uint8 override;$/;"	m	struct:SA1
override	higan/sfc/coprocessor/sa1/sa1.hpp	/^  auto synchronizing() const -> bool override;$/;"	m	struct:SA1
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^    auto data() -> uint8* override;$/;"	m	struct:SuperFX::CPURAM
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^    auto data() -> uint8* override;$/;"	m	struct:SuperFX::CPUROM
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^    auto read(uint24, uint8) -> uint8 override;$/;"	m	struct:SuperFX::CPURAM
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^    auto read(uint24, uint8) -> uint8 override;$/;"	m	struct:SuperFX::CPUROM
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^    auto size() const -> uint override;$/;"	m	struct:SuperFX::CPURAM
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^    auto size() const -> uint override;$/;"	m	struct:SuperFX::CPUROM
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^    auto write(uint24, uint8) -> void override;$/;"	m	struct:SuperFX::CPURAM
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^    auto write(uint24, uint8) -> void override;$/;"	m	struct:SuperFX::CPUROM
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  alwaysinline auto pipe() -> uint8 override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto color(uint8 source) -> uint8 override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto flushCache() -> void override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto plot(uint8 x, uint8 y) -> void override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto read(uint24 addr, uint8 data = 0x00) -> uint8 override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto readRAMBuffer(uint16 addr) -> uint8 override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto readROMBuffer() -> uint8 override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto rpix(uint8 x, uint8 y) -> uint8 override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto step(uint clocks) -> void override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto stop() -> void override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto syncRAMBuffer() -> void override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto syncROMBuffer() -> void override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto write(uint24 addr, uint8 data) -> void override;$/;"	m	struct:SuperFX
override	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto writeRAMBuffer(uint16 addr, uint8 data) -> void override;$/;"	m	struct:SuperFX
override	higan/sfc/cpu/cpu.hpp	/^  auto idle() -> void override;$/;"	m	struct:CPU
override	higan/sfc/cpu/cpu.hpp	/^  auto read(uint24 addr) -> uint8 override;$/;"	m	struct:CPU
override	higan/sfc/cpu/cpu.hpp	/^  auto readDisassembler(uint24 addr) -> uint8 override;$/;"	m	struct:CPU
override	higan/sfc/cpu/cpu.hpp	/^  auto write(uint24 addr, uint8 data) -> void override;$/;"	m	struct:CPU
override	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  auto data() -> uint8* override;$/;"	m	struct:BSMemory
override	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  auto read(uint24 address, uint8 data) -> uint8 override;$/;"	m	struct:BSMemory
override	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  auto size() const -> uint override;$/;"	m	struct:BSMemory
override	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  auto write(uint24 address, uint8 data) -> void override;$/;"	m	struct:BSMemory
override	higan/sfc/smp/smp.hpp	/^  auto idle() -> void override;$/;"	m	struct:SMP
override	higan/sfc/smp/smp.hpp	/^  auto read(uint16 address) -> uint8 override;$/;"	m	struct:SMP
override	higan/sfc/smp/smp.hpp	/^  auto readDisassembler(uint16 address) -> uint8 override;$/;"	m	struct:SMP
override	higan/sfc/smp/smp.hpp	/^  auto write(uint16 address, uint8 data) -> void override;$/;"	m	struct:SMP
override	higan/target-bsnes/program/program.hpp	/^  auto audioSample(const double* samples, uint channels) -> void override;$/;"	m	struct:Program
override	higan/target-bsnes/program/program.hpp	/^  auto inputPoll(uint port, uint device, uint input) -> int16 override;$/;"	m	struct:Program
override	higan/target-bsnes/program/program.hpp	/^  auto inputRumble(uint port, uint device, uint input, bool enable) -> void override;$/;"	m	struct:Program
override	higan/target-bsnes/program/program.hpp	/^  auto load(uint id, string name, string type, vector<string> options = {}) -> Emulator::Platform::Load override;$/;"	m	struct:Program
override	higan/target-bsnes/program/program.hpp	/^  auto open(uint id, string name, vfs::file::mode mode, bool required) -> vfs::shared::file override;$/;"	m	struct:Program
override	higan/target-bsnes/program/program.hpp	/^  auto videoRefresh(uint display, const uint32* data, uint pitch, uint width, uint height) -> void override;$/;"	m	struct:Program
override	higan/target-higan/program/program.hpp	/^  auto audioSample(const double* samples, uint channels) -> void override;$/;"	m	struct:Program
override	higan/target-higan/program/program.hpp	/^  auto dipSettings(Markup::Node node) -> uint override;$/;"	m	struct:Program
override	higan/target-higan/program/program.hpp	/^  auto inputPoll(uint port, uint device, uint input) -> int16 override;$/;"	m	struct:Program
override	higan/target-higan/program/program.hpp	/^  auto inputRumble(uint port, uint device, uint input, bool enable) -> void override;$/;"	m	struct:Program
override	higan/target-higan/program/program.hpp	/^  auto load(uint id, string name, string type, vector<string> options = {}) -> Emulator::Platform::Load override;$/;"	m	struct:Program
override	higan/target-higan/program/program.hpp	/^  auto notify(string text) -> void override;$/;"	m	struct:Program
override	higan/target-higan/program/program.hpp	/^  auto open(uint id, string name, vfs::file::mode mode, bool required) -> vfs::shared::file override;$/;"	m	struct:Program
override	higan/target-higan/program/program.hpp	/^  auto path(uint id) -> string override;$/;"	m	struct:Program
override	higan/target-higan/program/program.hpp	/^  auto videoRefresh(uint display, const uint32* data, uint pitch, uint width, uint height) -> void override;$/;"	m	struct:Program
override	higan/ws/cartridge/cartridge.hpp	/^  auto portRead(uint16 addr) -> uint8 override;$/;"	m	struct:Cartridge
override	higan/ws/cartridge/cartridge.hpp	/^  auto portWrite(uint16 addr, uint8 data) -> void override;$/;"	m	struct:Cartridge
override	higan/ws/cpu/cpu.hpp	/^  auto in(uint16 port) -> uint8 override;$/;"	m	struct:CPU
override	higan/ws/cpu/cpu.hpp	/^  auto out(uint16 port, uint8 data) -> void override;$/;"	m	struct:CPU
override	higan/ws/cpu/cpu.hpp	/^  auto portRead(uint16 addr) -> uint8 override;$/;"	m	struct:CPU
override	higan/ws/cpu/cpu.hpp	/^  auto portWrite(uint16 addr, uint8 data) -> void override;$/;"	m	struct:CPU
override	higan/ws/cpu/cpu.hpp	/^  auto read(uint20 addr) -> uint8 override;$/;"	m	struct:CPU
override	higan/ws/cpu/cpu.hpp	/^  auto wait(uint clocks = 1) -> void override;$/;"	m	struct:CPU
override	higan/ws/cpu/cpu.hpp	/^  auto write(uint20 addr, uint8 data) -> void override;$/;"	m	struct:CPU
override	higan/ws/ppu/ppu.hpp	/^  auto portRead(uint16 addr) -> uint8 override;$/;"	m	struct:PPU
override	higan/ws/ppu/ppu.hpp	/^  auto portWrite(uint16 addr, uint8 data) -> void override;$/;"	m	struct:PPU
override	higan/ws/system/system.hpp	/^  auto portRead(uint16 addr) -> uint8 override;$/;"	m	struct:System
override	higan/ws/system/system.hpp	/^  auto portWrite(uint16 addr, uint8 data) -> void override;$/;"	m	struct:System
override	hiro/cocoa/action/action.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pAction
override	hiro/cocoa/action/action.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pAction
override	hiro/cocoa/status-bar.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pStatusBar
override	hiro/cocoa/status-bar.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pStatusBar
override	hiro/cocoa/status-bar.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pStatusBar
override	hiro/cocoa/widget/button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pButton
override	hiro/cocoa/widget/button.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pButton
override	hiro/cocoa/widget/canvas.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pCanvas
override	hiro/cocoa/widget/check-button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pCheckButton
override	hiro/cocoa/widget/check-button.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pCheckButton
override	hiro/cocoa/widget/check-label.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pCheckLabel
override	hiro/cocoa/widget/combo-button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pComboButton
override	hiro/cocoa/widget/combo-button.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pComboButton
override	hiro/cocoa/widget/frame.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/cocoa/widget/frame.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/cocoa/widget/frame.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/cocoa/widget/frame.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/cocoa/widget/horizontal-scroll-bar.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pHorizontalScrollBar
override	hiro/cocoa/widget/horizontal-slider.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pHorizontalSlider
override	hiro/cocoa/widget/label.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pLabel
override	hiro/cocoa/widget/label.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pLabel
override	hiro/cocoa/widget/line-edit.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pLineEdit
override	hiro/cocoa/widget/progress-bar.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pProgressBar
override	hiro/cocoa/widget/radio-button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pRadioButton
override	hiro/cocoa/widget/radio-button.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pRadioButton
override	hiro/cocoa/widget/radio-label.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pRadioLabel
override	hiro/cocoa/widget/radio-label.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pRadioLabel
override	hiro/cocoa/widget/tab-frame.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pTabFrame
override	hiro/cocoa/widget/tab-frame.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pTabFrame
override	hiro/cocoa/widget/tab-frame.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pTabFrame
override	hiro/cocoa/widget/tab-frame.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pTabFrame
override	hiro/cocoa/widget/table-view-column.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pTableViewColumn
override	hiro/cocoa/widget/table-view-column.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pTableViewColumn
override	hiro/cocoa/widget/table-view.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pTableView
override	hiro/cocoa/widget/table-view.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pTableView
override	hiro/cocoa/widget/text-edit.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pTextEdit
override	hiro/cocoa/widget/text-edit.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pTextEdit
override	hiro/cocoa/widget/vertical-scroll-bar.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pVerticalScrollBar
override	hiro/cocoa/widget/vertical-slider.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pVerticalSlider
override	hiro/cocoa/widget/vertical-slider.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pVerticalSlider
override	hiro/cocoa/widget/widget.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/cocoa/widget/widget.hpp	/^  auto setFocused() -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/cocoa/widget/widget.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/cocoa/widget/widget.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/cocoa/widget/widget.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/cocoa/window.hpp	/^  auto focused() const -> bool override;$/;"	m	struct:hiro::pWindow
override	hiro/cocoa/window.hpp	/^  auto setFocused() -> void override;$/;"	m	struct:hiro::pWindow
override	hiro/core/core.hpp	/^  auto destruct() -> void override;$/;"	m	struct:hiro::mComboButton
override	hiro/core/core.hpp	/^  auto destruct() -> void override;$/;"	m	struct:hiro::mComboEdit
override	hiro/core/core.hpp	/^  auto destruct() -> void override;$/;"	m	struct:hiro::mFrame
override	hiro/core/core.hpp	/^  auto destruct() -> void override;$/;"	m	struct:hiro::mIconView
override	hiro/core/core.hpp	/^  auto destruct() -> void override;$/;"	m	struct:hiro::mMenu
override	hiro/core/core.hpp	/^  auto destruct() -> void override;$/;"	m	struct:hiro::mMenuBar
override	hiro/core/core.hpp	/^  auto destruct() -> void override;$/;"	m	struct:hiro::mPopupMenu
override	hiro/core/core.hpp	/^  auto destruct() -> void override;$/;"	m	struct:hiro::mTreeView
override	hiro/core/core.hpp	/^  auto destruct() -> void override;$/;"	m	struct:hiro::mTreeViewItem
override	hiro/core/core.hpp	/^  auto group() const -> Group override;$/;"	m	struct:hiro::mMenuRadioItem
override	hiro/core/core.hpp	/^  auto group() const -> Group override;$/;"	m	struct:hiro::mRadioButton
override	hiro/core/core.hpp	/^  auto group() const -> Group override;$/;"	m	struct:hiro::mRadioLabel
override	hiro/core/core.hpp	/^  auto remove() -> type& override;$/;"	m	struct:hiro::mAction
override	hiro/core/core.hpp	/^  auto remove() -> type& override;$/;"	m	struct:hiro::mComboButtonItem
override	hiro/core/core.hpp	/^  auto remove() -> type& override;$/;"	m	struct:hiro::mComboEditItem
override	hiro/core/core.hpp	/^  auto remove() -> type& override;$/;"	m	struct:hiro::mIconViewItem
override	hiro/core/core.hpp	/^  auto remove() -> type& override;$/;"	m	struct:hiro::mMenuBar
override	hiro/core/core.hpp	/^  auto remove() -> type& override;$/;"	m	struct:hiro::mStatusBar
override	hiro/core/core.hpp	/^  auto remove() -> type& override;$/;"	m	struct:hiro::mTreeViewItem
override	hiro/core/core.hpp	/^  auto setFocused() -> type& override;$/;"	m	struct:hiro::mTreeViewItem
override	hiro/core/core.hpp	/^  auto setGroup(sGroup group = {}) -> type& override;$/;"	m	struct:hiro::mMenuRadioItem
override	hiro/core/core.hpp	/^  auto setGroup(sGroup group = {}) -> type& override;$/;"	m	struct:hiro::mRadioButton
override	hiro/core/core.hpp	/^  auto setGroup(sGroup group = {}) -> type& override;$/;"	m	struct:hiro::mRadioLabel
override	hiro/core/core.hpp	/^  auto setParent(mObject* object = nullptr, int offset = -1) -> type& override;$/;"	m	struct:hiro::mIconView
override	hiro/core/core.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:hiro::mComboButton
override	hiro/core/core.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:hiro::mComboEdit
override	hiro/core/core.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:hiro::mFrame
override	hiro/core/core.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:hiro::mMenu
override	hiro/core/core.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:hiro::mMenuBar
override	hiro/core/core.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:hiro::mPopupMenu
override	hiro/core/core.hpp	/^  auto setVisible(bool visible = true) -> type& override;$/;"	m	struct:hiro::mPopupMenu
override	hiro/core/widget/tab-frame-item.hpp	/^  auto destruct() -> void override;$/;"	m	struct:mTabFrameItem
override	hiro/core/widget/tab-frame-item.hpp	/^  auto remove() -> type& override;$/;"	m	struct:mTabFrameItem
override	hiro/core/widget/tab-frame-item.hpp	/^  auto setEnabled(bool enabled = true) -> type& override;$/;"	m	struct:mTabFrameItem
override	hiro/core/widget/tab-frame-item.hpp	/^  auto setFont(const Font& font = {}) -> type& override;$/;"	m	struct:mTabFrameItem
override	hiro/core/widget/tab-frame-item.hpp	/^  auto setParent(mObject* object = nullptr, int offset = -1) -> type& override;$/;"	m	struct:mTabFrameItem
override	hiro/core/widget/tab-frame-item.hpp	/^  auto setVisible(bool visible = true) -> type& override;$/;"	m	struct:mTabFrameItem
override	hiro/core/widget/tab-frame.hpp	/^  auto destruct() -> void override;$/;"	m	struct:mTabFrame
override	hiro/core/widget/tab-frame.hpp	/^  auto setEnabled(bool enabled = true) -> type& override;$/;"	m	struct:mTabFrame
override	hiro/core/widget/tab-frame.hpp	/^  auto setFont(const Font& font = {}) -> type& override;$/;"	m	struct:mTabFrame
override	hiro/core/widget/tab-frame.hpp	/^  auto setParent(mObject* object = nullptr, int offset = -1) -> type& override;$/;"	m	struct:mTabFrame
override	hiro/core/widget/tab-frame.hpp	/^  auto setVisible(bool visible = true) -> type& override;$/;"	m	struct:mTabFrame
override	hiro/core/widget/table-view-column.hpp	/^  auto remove() -> type& override;$/;"	m	struct:mTableViewColumn
override	hiro/core/widget/table-view-item.hpp	/^  auto destruct() -> void override;$/;"	m	struct:mTableViewItem
override	hiro/core/widget/table-view-item.hpp	/^  auto remove() -> type& override;$/;"	m	struct:mTableViewItem
override	hiro/core/widget/table-view-item.hpp	/^  auto setFocused() -> type& override;$/;"	m	struct:mTableViewItem
override	hiro/core/widget/table-view-item.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:mTableViewItem
override	hiro/core/widget/table-view.hpp	/^  auto destruct() -> void override;$/;"	m	struct:mTableView
override	hiro/core/widget/table-view.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:mTableView
override	hiro/core/widget/widget.hpp	/^  auto remove() -> type& override;$/;"	m	struct:mWidget
override	hiro/core/window.hpp	/^  auto reset() -> type& override;$/;"	m	struct:mWindow
override	hiro/extension/fixed-layout.hpp	/^  auto destruct() -> void override;$/;"	m	struct:mFixedLayout
override	hiro/extension/fixed-layout.hpp	/^  auto destruct() -> void override;$/;"	m	struct:mFixedLayoutCell
override	hiro/extension/fixed-layout.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:mFixedLayout
override	hiro/extension/fixed-layout.hpp	/^  auto reset() -> type& override;$/;"	m	struct:mFixedLayout
override	hiro/extension/fixed-layout.hpp	/^  auto setEnabled(bool enabled) -> type& override;$/;"	m	struct:mFixedLayout
override	hiro/extension/fixed-layout.hpp	/^  auto setEnabled(bool enabled) -> type& override;$/;"	m	struct:mFixedLayoutCell
override	hiro/extension/fixed-layout.hpp	/^  auto setFont(const Font& font) -> type& override;$/;"	m	struct:mFixedLayout
override	hiro/extension/fixed-layout.hpp	/^  auto setFont(const Font& font) -> type& override;$/;"	m	struct:mFixedLayoutCell
override	hiro/extension/fixed-layout.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:mFixedLayout
override	hiro/extension/fixed-layout.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:mFixedLayoutCell
override	hiro/extension/fixed-layout.hpp	/^  auto setVisible(bool visible) -> type& override;$/;"	m	struct:mFixedLayoutCell
override	hiro/extension/fixed-layout.hpp	/^  auto setVisible(bool visible) ->type& override;$/;"	m	struct:mFixedLayout
override	hiro/extension/horizontal-layout.hpp	/^  auto destruct() -> void override;$/;"	m	struct:mHorizontalLayout
override	hiro/extension/horizontal-layout.hpp	/^  auto destruct() -> void override;$/;"	m	struct:mHorizontalLayoutCell
override	hiro/extension/horizontal-layout.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:mHorizontalLayout
override	hiro/extension/horizontal-layout.hpp	/^  auto reset() -> type& override;$/;"	m	struct:mHorizontalLayout
override	hiro/extension/horizontal-layout.hpp	/^  auto setEnabled(bool enabled) -> type& override;$/;"	m	struct:mHorizontalLayout
override	hiro/extension/horizontal-layout.hpp	/^  auto setEnabled(bool enabled) -> type& override;$/;"	m	struct:mHorizontalLayoutCell
override	hiro/extension/horizontal-layout.hpp	/^  auto setFont(const Font& font) -> type& override;$/;"	m	struct:mHorizontalLayout
override	hiro/extension/horizontal-layout.hpp	/^  auto setFont(const Font& font) -> type& override;$/;"	m	struct:mHorizontalLayoutCell
override	hiro/extension/horizontal-layout.hpp	/^  auto setGeometry(Geometry geometry) -> type& override;$/;"	m	struct:mHorizontalLayout
override	hiro/extension/horizontal-layout.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:mHorizontalLayoutCell
override	hiro/extension/horizontal-layout.hpp	/^  auto setVisible(bool visible) -> type& override;$/;"	m	struct:mHorizontalLayout
override	hiro/extension/horizontal-layout.hpp	/^  auto setVisible(bool visible) -> type& override;$/;"	m	struct:mHorizontalLayoutCell
override	hiro/extension/list-view.hpp	/^  auto reset() -> type& override;$/;"	m	struct:mListView
override	hiro/extension/table-layout.hpp	/^  auto destruct() -> void override;$/;"	m	struct:mTableLayout
override	hiro/extension/table-layout.hpp	/^  auto destruct() -> void override;$/;"	m	struct:mTableLayoutCell
override	hiro/extension/table-layout.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:mTableLayout
override	hiro/extension/table-layout.hpp	/^  auto setEnabled(bool enabled) -> type& override;$/;"	m	struct:mTableLayout
override	hiro/extension/table-layout.hpp	/^  auto setEnabled(bool enabled) -> type& override;$/;"	m	struct:mTableLayoutCell
override	hiro/extension/table-layout.hpp	/^  auto setFont(const Font& font) -> type& override;$/;"	m	struct:mTableLayout
override	hiro/extension/table-layout.hpp	/^  auto setFont(const Font& font) -> type& override;$/;"	m	struct:mTableLayoutCell
override	hiro/extension/table-layout.hpp	/^  auto setGeometry(Geometry geometry) -> type& override;$/;"	m	struct:mTableLayout
override	hiro/extension/table-layout.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:mTableLayout
override	hiro/extension/table-layout.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:mTableLayoutCell
override	hiro/extension/table-layout.hpp	/^  auto setVisible(bool visible) -> type& override;$/;"	m	struct:mTableLayout
override	hiro/extension/table-layout.hpp	/^  auto setVisible(bool visible) -> type& override;$/;"	m	struct:mTableLayoutCell
override	hiro/extension/vertical-layout.hpp	/^  auto destruct() -> void override;$/;"	m	struct:mVerticalLayout
override	hiro/extension/vertical-layout.hpp	/^  auto destruct() -> void override;$/;"	m	struct:mVerticalLayoutCell
override	hiro/extension/vertical-layout.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:mVerticalLayout
override	hiro/extension/vertical-layout.hpp	/^  auto reset() -> type& override;$/;"	m	struct:mVerticalLayout
override	hiro/extension/vertical-layout.hpp	/^  auto setEnabled(bool enabled) -> type& override;$/;"	m	struct:mVerticalLayout
override	hiro/extension/vertical-layout.hpp	/^  auto setEnabled(bool enabled) -> type& override;$/;"	m	struct:mVerticalLayoutCell
override	hiro/extension/vertical-layout.hpp	/^  auto setFont(const Font& font) -> type& override;$/;"	m	struct:mVerticalLayout
override	hiro/extension/vertical-layout.hpp	/^  auto setFont(const Font& font) -> type& override;$/;"	m	struct:mVerticalLayoutCell
override	hiro/extension/vertical-layout.hpp	/^  auto setGeometry(Geometry geometry) -> type& override;$/;"	m	struct:mVerticalLayout
override	hiro/extension/vertical-layout.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:mVerticalLayout
override	hiro/extension/vertical-layout.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type& override;$/;"	m	struct:mVerticalLayoutCell
override	hiro/extension/vertical-layout.hpp	/^  auto setVisible(bool visible) -> type& override;$/;"	m	struct:mVerticalLayout
override	hiro/extension/vertical-layout.hpp	/^  auto setVisible(bool visible) -> type& override;$/;"	m	struct:mVerticalLayoutCell
override	hiro/gtk/action/action.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pAction
override	hiro/gtk/action/action.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pAction
override	hiro/gtk/action/action.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pAction
override	hiro/gtk/action/menu.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pMenu
override	hiro/gtk/menu-bar.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pMenuBar
override	hiro/gtk/menu-bar.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pMenuBar
override	hiro/gtk/menu-bar.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pMenuBar
override	hiro/gtk/popup-menu.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pPopupMenu
override	hiro/gtk/status-bar.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pStatusBar
override	hiro/gtk/status-bar.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pStatusBar
override	hiro/gtk/status-bar.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pStatusBar
override	hiro/gtk/timer.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pTimer
override	hiro/gtk/widget/button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pButton
override	hiro/gtk/widget/canvas.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pCanvas
override	hiro/gtk/widget/check-button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pCheckButton
override	hiro/gtk/widget/combo-button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pComboButton
override	hiro/gtk/widget/combo-button.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pComboButton
override	hiro/gtk/widget/combo-edit.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pComboEdit
override	hiro/gtk/widget/combo-edit.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pComboEdit
override	hiro/gtk/widget/frame.hpp	/^  auto container(mWidget& widget) -> GtkWidget* override;$/;"	m	struct:hiro::pFrame
override	hiro/gtk/widget/frame.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/gtk/widget/frame.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/gtk/widget/frame.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/gtk/widget/frame.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/gtk/widget/hex-edit.hpp	/^  auto focused() const -> bool override;$/;"	m	struct:hiro::pHexEdit
override	hiro/gtk/widget/horizontal-slider.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pHorizontalSlider
override	hiro/gtk/widget/label.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pLabel
override	hiro/gtk/widget/label.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pLabel
override	hiro/gtk/widget/source-edit.hpp	/^  auto setFocused() -> void override;$/;"	m	struct:hiro::pSourceEdit
override	hiro/gtk/widget/tab-frame.hpp	/^  auto container(mWidget& widget) -> GtkWidget* override;$/;"	m	struct:hiro::pTabFrame
override	hiro/gtk/widget/tab-frame.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pTabFrame
override	hiro/gtk/widget/tab-frame.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pTabFrame
override	hiro/gtk/widget/table-view-column.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pTableViewColumn
override	hiro/gtk/widget/table-view-column.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pTableViewColumn
override	hiro/gtk/widget/table-view.hpp	/^  auto focused() const -> bool override;$/;"	m	struct:hiro::pTableView
override	hiro/gtk/widget/table-view.hpp	/^  auto setFocused() -> void override;$/;"	m	struct:hiro::pTableView
override	hiro/gtk/widget/table-view.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pTableView
override	hiro/gtk/widget/table-view.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pTableView
override	hiro/gtk/widget/text-edit.hpp	/^  auto focused() const -> bool override;$/;"	m	struct:hiro::pTextEdit
override	hiro/gtk/widget/text-edit.hpp	/^  auto setFocused() -> void override;$/;"	m	struct:hiro::pTextEdit
override	hiro/gtk/widget/tree-view.hpp	/^  auto setFocused() -> void override;$/;"	m	struct:hiro::pTreeView
override	hiro/gtk/widget/vertical-slider.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pVerticalSlider
override	hiro/gtk/widget/widget.hpp	/^  auto focused() const -> bool override;$/;"	m	struct:hiro::pWidget
override	hiro/gtk/widget/widget.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/gtk/widget/widget.hpp	/^  auto setFocused() -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/gtk/widget/widget.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/gtk/widget/widget.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/gtk/widget/widget.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/gtk/window.hpp	/^  auto focused() const -> bool override;$/;"	m	struct:hiro::pWindow
override	hiro/gtk/window.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pWindow
override	hiro/gtk/window.hpp	/^  auto setFocused() -> void override;$/;"	m	struct:hiro::pWindow
override	hiro/gtk/window.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pWindow
override	hiro/qt/action/action.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pAction
override	hiro/qt/action/action.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pAction
override	hiro/qt/action/action.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pAction
override	hiro/qt/action/menu-check-item.hpp	/^  auto _setState() -> void override;$/;"	m	struct:hiro::pMenuCheckItem
override	hiro/qt/action/menu-item.hpp	/^  auto _setState() -> void override;$/;"	m	struct:hiro::pMenuItem
override	hiro/qt/action/menu-radio-item.hpp	/^  auto _setState() -> void override;$/;"	m	struct:hiro::pMenuRadioItem
override	hiro/qt/action/menu.hpp	/^  auto _setState() -> void override;$/;"	m	struct:hiro::pMenu
override	hiro/qt/menu-bar.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pMenuBar
override	hiro/qt/menu-bar.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pMenuBar
override	hiro/qt/menu-bar.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pMenuBar
override	hiro/qt/popup-menu.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pPopupMenu
override	hiro/qt/popup-menu.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pPopupMenu
override	hiro/qt/qt.hpp	/^  auto mousePressEvent(QMouseEvent*) -> void override;$/;"	m	struct:hiro::QtTableView
override	hiro/qt/qt.hpp	/^  auto resizeEvent(QResizeEvent*) -> void override;$/;"	m	struct:hiro::QtTableView
override	hiro/qt/qt.hpp	/^  auto showEvent(QShowEvent*) -> void override;$/;"	m	struct:hiro::QtTabFrame
override	hiro/qt/qt.hpp	/^  auto showEvent(QShowEvent*) -> void override;$/;"	m	struct:hiro::QtTableView
override	hiro/qt/status-bar.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pStatusBar
override	hiro/qt/status-bar.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pStatusBar
override	hiro/qt/status-bar.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pStatusBar
override	hiro/qt/timer.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pTimer
override	hiro/qt/widget/button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pButton
override	hiro/qt/widget/check-button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pCheckButton
override	hiro/qt/widget/check-label.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pCheckLabel
override	hiro/qt/widget/combo-button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pComboButton
override	hiro/qt/widget/frame.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/qt/widget/frame.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/qt/widget/frame.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/qt/widget/horizontal-scroll-bar.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pHorizontalScrollBar
override	hiro/qt/widget/label.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pLabel
override	hiro/qt/widget/label.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pLabel
override	hiro/qt/widget/line-edit.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pLineEdit
override	hiro/qt/widget/progress-bar.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pProgressBar
override	hiro/qt/widget/radio-button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pRadioButton
override	hiro/qt/widget/tab-frame-item.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pTabFrameItem
override	hiro/qt/widget/tab-frame.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pTabFrame
override	hiro/qt/widget/table-view-column.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pTableViewColumn
override	hiro/qt/widget/table-view-item.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pTableViewItem
override	hiro/qt/widget/vertical-scroll-bar.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pVerticalScrollBar
override	hiro/qt/widget/vertical-slider.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pVerticalSlider
override	hiro/qt/widget/widget.hpp	/^  auto focused() const -> bool override;$/;"	m	struct:hiro::pWidget
override	hiro/qt/widget/widget.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/qt/widget/widget.hpp	/^  auto setFocused() -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/qt/widget/widget.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/qt/widget/widget.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/qt/widget/widget.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/qt/window.hpp	/^  auto focused() const -> bool override;$/;"	m	struct:hiro::pWindow
override	hiro/qt/window.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pWindow
override	hiro/qt/window.hpp	/^  auto setFocused() -> void override;$/;"	m	struct:hiro::pWindow
override	hiro/windows/action/menu-radio-item.hpp	/^  auto setGroup(sGroup group) -> void override;$/;"	m	struct:hiro::pMenuRadioItem
override	hiro/windows/menu-bar.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pMenuBar
override	hiro/windows/menu-bar.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pMenuBar
override	hiro/windows/menu-bar.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pMenuBar
override	hiro/windows/popup-menu.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pPopupMenu
override	hiro/windows/popup-menu.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pPopupMenu
override	hiro/windows/status-bar.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pStatusBar
override	hiro/windows/status-bar.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pStatusBar
override	hiro/windows/status-bar.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pStatusBar
override	hiro/windows/timer.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pTimer
override	hiro/windows/widget/button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pButton
override	hiro/windows/widget/button.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pButton
override	hiro/windows/widget/button.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pButton
override	hiro/windows/widget/button.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pButton
override	hiro/windows/widget/button.hpp	/^  auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT> override;$/;"	m	struct:hiro::pButton
override	hiro/windows/widget/canvas.hpp	/^  auto doMouseLeave() -> void override;$/;"	m	struct:hiro::pCanvas
override	hiro/windows/widget/canvas.hpp	/^  auto doMouseMove(int x, int y) -> void override;$/;"	m	struct:hiro::pCanvas
override	hiro/windows/widget/canvas.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pCanvas
override	hiro/windows/widget/canvas.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pCanvas
override	hiro/windows/widget/canvas.hpp	/^  auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT> override;$/;"	m	struct:hiro::pCanvas
override	hiro/windows/widget/check-button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pCheckButton
override	hiro/windows/widget/check-button.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pCheckButton
override	hiro/windows/widget/check-button.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pCheckButton
override	hiro/windows/widget/check-button.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pCheckButton
override	hiro/windows/widget/check-button.hpp	/^  auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT> override;$/;"	m	struct:hiro::pCheckButton
override	hiro/windows/widget/check-label.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pCheckLabel
override	hiro/windows/widget/combo-button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pComboButton
override	hiro/windows/widget/combo-button.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pComboButton
override	hiro/windows/widget/frame.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/windows/widget/frame.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/windows/widget/frame.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pFrame
override	hiro/windows/widget/hex-edit.hpp	/^  auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT> override;$/;"	m	struct:hiro::pHexEdit
override	hiro/windows/widget/horizontal-scroll-bar.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pHorizontalScrollBar
override	hiro/windows/widget/horizontal-slider.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pHorizontalSlider
override	hiro/windows/widget/label.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pLabel
override	hiro/windows/widget/label.hpp	/^  auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT> override;$/;"	m	struct:hiro::pLabel
override	hiro/windows/widget/line-edit.hpp	/^  auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT> override;$/;"	m	struct:hiro::pLineEdit
override	hiro/windows/widget/progress-bar.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pProgressBar
override	hiro/windows/widget/radio-button.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pRadioButton
override	hiro/windows/widget/radio-button.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pRadioButton
override	hiro/windows/widget/radio-button.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pRadioButton
override	hiro/windows/widget/radio-button.hpp	/^  auto setGroup(sGroup group) -> void override;$/;"	m	struct:hiro::pRadioButton
override	hiro/windows/widget/radio-button.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pRadioButton
override	hiro/windows/widget/radio-button.hpp	/^  auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT> override;$/;"	m	struct:hiro::pRadioButton
override	hiro/windows/widget/radio-label.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pRadioLabel
override	hiro/windows/widget/radio-label.hpp	/^  auto setGroup(sGroup group) -> void override;$/;"	m	struct:hiro::pRadioLabel
override	hiro/windows/widget/tab-frame.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pTabFrame
override	hiro/windows/widget/tab-frame.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pTabFrame
override	hiro/windows/widget/tab-frame.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pTabFrame
override	hiro/windows/widget/table-view.hpp	/^  auto setGeometry(Geometry geometry) -> void override;$/;"	m	struct:hiro::pTableView
override	hiro/windows/widget/table-view.hpp	/^  auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT> override;$/;"	m	struct:hiro::pTableView
override	hiro/windows/widget/text-edit.hpp	/^  auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT> override;$/;"	m	struct:hiro::pTextEdit
override	hiro/windows/widget/vertical-scroll-bar.hpp	/^  auto minimumSize() const -> Size override;$/;"	m	struct:hiro::pVerticalScrollBar
override	hiro/windows/widget/viewport.hpp	/^  auto doMouseLeave() -> void override;$/;"	m	struct:hiro::pViewport
override	hiro/windows/widget/viewport.hpp	/^  auto doMouseMove(int x, int y) -> void override;$/;"	m	struct:hiro::pViewport
override	hiro/windows/widget/viewport.hpp	/^  auto windowProc(HWND, UINT, WPARAM, LPARAM) -> maybe<LRESULT> override;$/;"	m	struct:hiro::pViewport
override	hiro/windows/widget/widget.hpp	/^  auto focused() const -> bool override;$/;"	m	struct:hiro::pWidget
override	hiro/windows/widget/widget.hpp	/^  auto setEnabled(bool enabled) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/windows/widget/widget.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/windows/widget/widget.hpp	/^  auto setVisible(bool visible) -> void override;$/;"	m	struct:hiro::pWidget
override	hiro/windows/window.hpp	/^  auto focused() const -> bool override;$/;"	m	struct:hiro::pWindow
override	hiro/windows/window.hpp	/^  auto setFont(const Font& font) -> void override;$/;"	m	struct:hiro::pWindow
override	nall/http/request.hpp	/^  inline auto body(const function<bool (const uint8_t* data, uint size)>& callback) const -> bool override;$/;"	m	struct:nall::HTTP::Request
override	nall/http/request.hpp	/^  inline auto head(const function<bool (const uint8_t* data, uint size)>& callback) const -> bool override;$/;"	m	struct:nall::HTTP::Request
override	nall/http/request.hpp	/^  inline auto setBody() -> bool override;$/;"	m	struct:nall::HTTP::Request
override	nall/http/request.hpp	/^  inline auto setHead() -> bool override;$/;"	m	struct:nall::HTTP::Request
override	nall/http/response.hpp	/^  inline auto body(const function<bool (const uint8_t* data, uint size)>& callback) const -> bool override;$/;"	m	struct:nall::HTTP::Response
override	nall/http/response.hpp	/^  inline auto head(const function<bool (const uint8_t* data, uint size)>& callback) const -> bool override;$/;"	m	struct:nall::HTTP::Response
override	nall/http/response.hpp	/^  inline auto setBody() -> bool override;$/;"	m	struct:nall::HTTP::Response
override	nall/http/response.hpp	/^  inline auto setHead() -> bool override;$/;"	m	struct:nall::HTTP::Response
overscan	higan/md/vdp/vdp.hpp	/^    uint1 overscan;   \/\/0 = 224 lines; 1 = 240 lines$/;"	m	struct:VDP::IO
overscan	higan/md/vdp/vdp.hpp	/^    uint1 overscan;$/;"	m	struct:VDP::Latch
overscan	higan/sfc/ppu/ppu.hpp	/^    bool overscan;$/;"	m	struct:PPU::IO
overscan	higan/sfc/ppu/ppu.hpp	/^    bool overscan;$/;"	m	struct:PPU::__anon15
overscan	higan/target-bsnes/settings/settings.hpp	/^    bool overscan = false;$/;"	m	struct:Settings::Video
owner	nall/beat/archive/node.hpp	/^    } owner;$/;"	m	struct:nall::Beat::Archive::Node::Permission	typeref:struct:nall::Beat::Archive::Node::Permission::Owner
p	higan/processor/hg51b/hg51b.hpp	/^    uint15 p;        \/\/page register$/;"	m	struct:Processor::HG51B::Registers
p	higan/processor/huc6280/huc6280.hpp	/^    Flags  p;$/;"	m	struct:Processor::HuC6280::Registers
p	higan/processor/mos6502/mos6502.hpp	/^    Flags  p;$/;"	m	struct:Processor::MOS6502::Registers
p	higan/processor/spc700/spc700.hpp	/^    Flags p;$/;"	m	struct:Processor::SPC700::Registers
p	higan/processor/spc700/spc700.hpp	/^    bool p;  \/\/page$/;"	m	struct:Processor::SPC700::Flags
p	higan/processor/v30mz/v30mz.hpp	/^        BooleanBitField<uint16_t,  2> p;  \/\/parity$/;"	m	union:Processor::Registers::Flags::__anon26
p	higan/processor/wdc65816/wdc65816.hpp	/^    Flags p;$/;"	m	struct:Processor::WDC65816::Registers
p	hiro/qt/qt.hpp	/^  pButton& p;$/;"	m	struct:hiro::QtButton
p	hiro/qt/qt.hpp	/^  pCanvas& p;$/;"	m	struct:hiro::QtCanvas
p	hiro/qt/qt.hpp	/^  pCheckButton& p;$/;"	m	struct:hiro::QtCheckButton
p	hiro/qt/qt.hpp	/^  pCheckLabel& p;$/;"	m	struct:hiro::QtCheckLabel
p	hiro/qt/qt.hpp	/^  pComboButton& p;$/;"	m	struct:hiro::QtComboButton
p	hiro/qt/qt.hpp	/^  pHexEdit& p;$/;"	m	struct:hiro::QtHexEdit
p	hiro/qt/qt.hpp	/^  pHexEdit& p;$/;"	m	struct:hiro::QtHexEditScrollBar
p	hiro/qt/qt.hpp	/^  pHorizontalScrollBar& p;$/;"	m	struct:hiro::QtHorizontalScrollBar
p	hiro/qt/qt.hpp	/^  pHorizontalSlider& p;$/;"	m	struct:hiro::QtHorizontalSlider
p	hiro/qt/qt.hpp	/^  pLabel& p;$/;"	m	struct:hiro::QtLabel
p	hiro/qt/qt.hpp	/^  pLineEdit& p;$/;"	m	struct:hiro::QtLineEdit
p	hiro/qt/qt.hpp	/^  pMenuCheckItem& p;$/;"	m	struct:hiro::QtMenuCheckItem
p	hiro/qt/qt.hpp	/^  pMenuItem& p;$/;"	m	struct:hiro::QtMenuItem
p	hiro/qt/qt.hpp	/^  pMenuRadioItem& p;$/;"	m	struct:hiro::QtMenuRadioItem
p	hiro/qt/qt.hpp	/^  pRadioButton& p;$/;"	m	struct:hiro::QtRadioButton
p	hiro/qt/qt.hpp	/^  pRadioLabel& p;$/;"	m	struct:hiro::QtRadioLabel
p	hiro/qt/qt.hpp	/^  pTabFrame& p;$/;"	m	struct:hiro::QtTabFrame
p	hiro/qt/qt.hpp	/^  pTableView& p;$/;"	m	struct:hiro::QtTableView
p	hiro/qt/qt.hpp	/^  pTableView& p;$/;"	m	struct:hiro::QtTableViewDelegate
p	hiro/qt/qt.hpp	/^  pTextEdit& p;$/;"	m	struct:hiro::QtTextEdit
p	hiro/qt/qt.hpp	/^  pTimer& p;$/;"	m	struct:hiro::QtTimer
p	hiro/qt/qt.hpp	/^  pVerticalScrollBar& p;$/;"	m	struct:hiro::QtVerticalScrollBar
p	hiro/qt/qt.hpp	/^  pVerticalSlider& p;$/;"	m	struct:hiro::QtVerticalSlider
p	hiro/qt/qt.hpp	/^  pViewport& p;$/;"	m	struct:hiro::QtViewport
p	hiro/qt/qt.hpp	/^  pWindow& p;$/;"	m	struct:hiro::QtWindow
p	nall/string/eval/evaluator.hpp	104;"	d
p	nall/string/eval/evaluator.hpp	128;"	d
p	nall/string/eval/evaluator.hpp	34;"	d
p	nall/string/eval/evaluator.hpp	42;"	d
p	nall/string/eval/evaluator.hpp	6;"	d
p	nall/string/eval/evaluator.hpp	83;"	d
p	nall/string/eval/parser.hpp	154;"	d
p	nall/string/eval/parser.hpp	58;"	d
p0	higan/processor/upd96050/upd96050.hpp	/^    boolean p0;    \/\/output port 0$/;"	m	struct:Processor::uPD96050::Status
p1	higan/processor/upd96050/upd96050.hpp	/^    boolean p1;    \/\/output port 1$/;"	m	struct:Processor::uPD96050::Status
p14	higan/gb/cpu/cpu.hpp	/^    bool p14 = 0;$/;"	m	struct:CPU::Status
p15	higan/gb/cpu/cpu.hpp	/^    bool p15 = 0;$/;"	m	struct:CPU::Status
pAction	hiro/cocoa/action/action.hpp	/^struct pAction :  pObject {$/;"	s	namespace:hiro
pAction	hiro/gtk/action/action.hpp	/^struct pAction : pObject {$/;"	s	namespace:hiro
pAction	hiro/qt/action/action.hpp	/^struct pAction : pObject {$/;"	s	namespace:hiro
pAction	hiro/windows/action/action.hpp	/^struct pAction : pObject {$/;"	s	namespace:hiro
pApplication	hiro/cocoa/application.hpp	/^struct pApplication {$/;"	s	namespace:hiro
pApplication	hiro/gtk/application.hpp	/^struct pApplication {$/;"	s	namespace:hiro
pApplication	hiro/qt/application.hpp	/^struct pApplication {$/;"	s	namespace:hiro
pApplication	hiro/windows/application.hpp	/^struct pApplication {$/;"	s	namespace:hiro
pAudioData	ruby/audio/xaudio2.hpp	/^  const BYTE* pAudioData;$/;"	m	struct:XAUDIO2_BUFFER
pBrowserWindow	hiro/cocoa/browser-window.hpp	/^struct pBrowserWindow {$/;"	s	namespace:hiro
pBrowserWindow	hiro/gtk/browser-window.hpp	/^struct pBrowserWindow {$/;"	s	namespace:hiro
pBrowserWindow	hiro/qt/browser-window.hpp	/^struct pBrowserWindow {$/;"	s	namespace:hiro
pBrowserWindow	hiro/windows/browser-window.hpp	/^struct pBrowserWindow {$/;"	s	namespace:hiro
pButton	hiro/cocoa/widget/button.hpp	/^struct pButton : pWidget {$/;"	s	namespace:hiro
pButton	hiro/gtk/widget/button.hpp	/^struct pButton : pWidget {$/;"	s	namespace:hiro
pButton	hiro/qt/widget/button.hpp	/^struct pButton : pWidget {$/;"	s	namespace:hiro
pButton	hiro/windows/widget/button.hpp	/^struct pButton : pWidget {$/;"	s	namespace:hiro
pCanvas	hiro/cocoa/widget/canvas.hpp	/^struct pCanvas : pWidget {$/;"	s	namespace:hiro
pCanvas	hiro/gtk/widget/canvas.hpp	/^struct pCanvas : pWidget {$/;"	s	namespace:hiro
pCanvas	hiro/qt/widget/canvas.hpp	/^struct pCanvas : pWidget {$/;"	s	namespace:hiro
pCanvas	hiro/windows/widget/canvas.hpp	/^struct pCanvas : pWidget {$/;"	s	namespace:hiro
pCheckButton	hiro/cocoa/widget/check-button.hpp	/^struct pCheckButton : pWidget {$/;"	s	namespace:hiro
pCheckButton	hiro/gtk/widget/check-button.hpp	/^struct pCheckButton : pWidget {$/;"	s	namespace:hiro
pCheckButton	hiro/qt/widget/check-button.hpp	/^struct pCheckButton : pWidget {$/;"	s	namespace:hiro
pCheckButton	hiro/windows/widget/check-button.hpp	/^struct pCheckButton : pWidget {$/;"	s	namespace:hiro
pCheckLabel	hiro/cocoa/widget/check-label.hpp	/^struct pCheckLabel : pWidget {$/;"	s	namespace:hiro
pCheckLabel	hiro/gtk/widget/check-label.hpp	/^struct pCheckLabel : pWidget {$/;"	s	namespace:hiro
pCheckLabel	hiro/qt/widget/check-label.hpp	/^struct pCheckLabel : pWidget {$/;"	s	namespace:hiro
pCheckLabel	hiro/windows/widget/check-label.hpp	/^struct pCheckLabel : pWidget {$/;"	s	namespace:hiro
pComboButton	hiro/cocoa/widget/combo-button.hpp	/^struct pComboButton : pWidget {$/;"	s	namespace:hiro
pComboButton	hiro/gtk/widget/combo-button.hpp	/^struct pComboButton : pWidget {$/;"	s	namespace:hiro
pComboButton	hiro/qt/widget/combo-button.hpp	/^struct pComboButton : pWidget {$/;"	s	namespace:hiro
pComboButton	hiro/windows/widget/combo-button.hpp	/^struct pComboButton : pWidget {$/;"	s	namespace:hiro
pComboButtonItem	hiro/cocoa/widget/combo-button-item.hpp	/^struct pComboButtonItem : pObject {$/;"	s	namespace:hiro
pComboButtonItem	hiro/gtk/widget/combo-button-item.hpp	/^struct pComboButtonItem : pObject {$/;"	s	namespace:hiro
pComboButtonItem	hiro/qt/widget/combo-button-item.hpp	/^struct pComboButtonItem : pObject {$/;"	s	namespace:hiro
pComboButtonItem	hiro/windows/widget/combo-button-item.hpp	/^struct pComboButtonItem : pObject {$/;"	s	namespace:hiro
pComboEdit	hiro/gtk/widget/combo-edit.hpp	/^struct pComboEdit : pWidget {$/;"	s	namespace:hiro
pComboEditItem	hiro/gtk/widget/combo-edit-item.hpp	/^struct pComboEditItem : pObject {$/;"	s	namespace:hiro
pConsole	hiro/cocoa/widget/console.hpp	/^  pConsole(Console& console) : pWidget(console), console(console) {}$/;"	f	struct:hiro::pConsole
pConsole	hiro/cocoa/widget/console.hpp	/^struct pConsole : public pWidget {$/;"	s	namespace:hiro
pConsole	hiro/gtk/widget/console.hpp	/^struct pConsole : pWidget {$/;"	s	namespace:hiro
pConsole	hiro/qt/platform.hpp	/^  pConsole(Console& console) : pWidget(console), console(console) {}$/;"	f	struct:hiro::pConsole
pConsole	hiro/qt/platform.hpp	/^struct pConsole : public QObject, public pWidget {$/;"	s	namespace:hiro
pContext	ruby/audio/xaudio2.hpp	/^  void* pContext;$/;"	m	struct:XAUDIO2_BUFFER
pCurrentBufferContext	ruby/audio/xaudio2.hpp	/^  void* pCurrentBufferContext;$/;"	m	struct:XAUDIO2_VOICE_STATE
pDecodedPacketCumulativeBytes	ruby/audio/xaudio2.hpp	/^  const UINT32* pDecodedPacketCumulativeBytes;$/;"	m	struct:XAUDIO2_BUFFER_WMA
pDesktop	hiro/cocoa/desktop.hpp	/^struct pDesktop {$/;"	s	namespace:hiro
pDesktop	hiro/gtk/desktop.hpp	/^struct pDesktop {$/;"	s	namespace:hiro
pDesktop	hiro/qt/desktop.hpp	/^struct pDesktop {$/;"	s	namespace:hiro
pDesktop	hiro/windows/desktop.hpp	/^struct pDesktop {$/;"	s	namespace:hiro
pEffect	ruby/audio/xaudio2.hpp	/^  IUnknown* pEffect;$/;"	m	struct:XAUDIO2_EFFECT_DESCRIPTOR
pEffectDescriptors	ruby/audio/xaudio2.hpp	/^  const XAUDIO2_EFFECT_DESCRIPTOR* pEffectDescriptors;$/;"	m	struct:XAUDIO2_EFFECT_CHAIN
pFont	hiro/cocoa/font.hpp	/^struct pFont {$/;"	s	namespace:hiro
pFont	hiro/gtk/font.hpp	/^struct pFont {$/;"	s	namespace:hiro
pFont	hiro/qt/font.hpp	/^struct pFont {$/;"	s	namespace:hiro
pFont	hiro/windows/font.hpp	/^struct pFont {$/;"	s	namespace:hiro
pFrame	hiro/cocoa/widget/frame.hpp	/^struct pFrame : pWidget {$/;"	s	namespace:hiro
pFrame	hiro/gtk/widget/frame.hpp	/^struct pFrame : pWidget {$/;"	s	namespace:hiro
pFrame	hiro/qt/widget/frame.hpp	/^struct pFrame : pWidget {$/;"	s	namespace:hiro
pFrame	hiro/windows/widget/frame.hpp	/^struct pFrame : pWidget {$/;"	s	namespace:hiro
pGroup	hiro/cocoa/group.hpp	/^struct pGroup : pObject {$/;"	s	namespace:hiro
pGroup	hiro/gtk/group.hpp	/^struct pGroup : pObject {$/;"	s	namespace:hiro
pGroup	hiro/qt/group.hpp	/^struct pGroup : pObject {$/;"	s	namespace:hiro
pGroup	hiro/windows/group.hpp	/^struct pGroup : pObject {$/;"	s	namespace:hiro
pHexEdit	hiro/cocoa/widget/hex-edit.hpp	/^  pHexEdit(HexEdit& hexEdit) : pWidget(hexEdit), hexEdit(hexEdit) {}$/;"	f	struct:hiro::pHexEdit
pHexEdit	hiro/cocoa/widget/hex-edit.hpp	/^struct pHexEdit : public pWidget {$/;"	s	namespace:hiro
pHexEdit	hiro/gtk/widget/hex-edit.hpp	/^struct pHexEdit : pWidget {$/;"	s	namespace:hiro
pHexEdit	hiro/qt/widget/hex-edit.hpp	/^struct pHexEdit : pWidget {$/;"	s	namespace:hiro
pHexEdit	hiro/windows/widget/hex-edit.hpp	/^struct pHexEdit : pWidget {$/;"	s	namespace:hiro
pHorizontalScrollBar	hiro/cocoa/widget/horizontal-scroll-bar.hpp	/^struct pHorizontalScrollBar : pWidget {$/;"	s	namespace:hiro
pHorizontalScrollBar	hiro/gtk/widget/horizontal-scroll-bar.hpp	/^struct pHorizontalScrollBar : pWidget {$/;"	s	namespace:hiro
pHorizontalScrollBar	hiro/qt/widget/horizontal-scroll-bar.hpp	/^struct pHorizontalScrollBar : pWidget {$/;"	s	namespace:hiro
pHorizontalScrollBar	hiro/windows/widget/horizontal-scroll-bar.hpp	/^struct pHorizontalScrollBar : pWidget {$/;"	s	namespace:hiro
pHorizontalSlider	hiro/cocoa/widget/horizontal-slider.hpp	/^struct pHorizontalSlider : pWidget {$/;"	s	namespace:hiro
pHorizontalSlider	hiro/gtk/widget/horizontal-slider.hpp	/^struct pHorizontalSlider : pWidget {$/;"	s	namespace:hiro
pHorizontalSlider	hiro/qt/widget/horizontal-slider.hpp	/^struct pHorizontalSlider : pWidget {$/;"	s	namespace:hiro
pHorizontalSlider	hiro/windows/widget/horizontal-slider.hpp	/^struct pHorizontalSlider : pWidget {$/;"	s	namespace:hiro
pIconView	hiro/gtk/widget/icon-view-item.hpp	/^  auto _parent() -> pIconView*;$/;"	m	struct:hiro::pIconViewItem
pIconView	hiro/gtk/widget/icon-view.hpp	/^struct pIconView : pWidget {$/;"	s	namespace:hiro
pIconView	hiro/qt/platform.hpp	/^  pIconView(IconView& iconView) : pWidget(iconView), iconView(iconView) {}$/;"	f	struct:hiro::pIconView
pIconView	hiro/qt/platform.hpp	/^struct pIconView : public QObject, public pWidget {$/;"	s	namespace:hiro
pIconViewItem	hiro/gtk/widget/icon-view-item.hpp	/^struct pIconViewItem : pObject {$/;"	s	namespace:hiro
pKeyboard	hiro/cocoa/keyboard.hpp	/^struct pKeyboard {$/;"	s	namespace:hiro
pKeyboard	hiro/gtk/keyboard.hpp	/^struct pKeyboard {$/;"	s	namespace:hiro
pKeyboard	hiro/qt/keyboard.hpp	/^struct pKeyboard {$/;"	s	namespace:hiro
pKeyboard	hiro/windows/keyboard.hpp	/^struct pKeyboard {$/;"	s	namespace:hiro
pLabel	hiro/cocoa/widget/label.hpp	/^struct pLabel : pWidget {$/;"	s	namespace:hiro
pLabel	hiro/gtk/widget/label.hpp	/^struct pLabel : pWidget {$/;"	s	namespace:hiro
pLabel	hiro/qt/widget/label.hpp	/^struct pLabel : pWidget {$/;"	s	namespace:hiro
pLabel	hiro/windows/widget/label.hpp	/^struct pLabel : pWidget {$/;"	s	namespace:hiro
pLineEdit	hiro/cocoa/widget/line-edit.hpp	/^struct pLineEdit : pWidget {$/;"	s	namespace:hiro
pLineEdit	hiro/gtk/widget/line-edit.hpp	/^struct pLineEdit : pWidget {$/;"	s	namespace:hiro
pLineEdit	hiro/qt/widget/line-edit.hpp	/^struct pLineEdit : pWidget {$/;"	s	namespace:hiro
pLineEdit	hiro/windows/widget/line-edit.hpp	/^struct pLineEdit : pWidget {$/;"	s	namespace:hiro
pMenu	hiro/cocoa/action/menu.hpp	/^struct pMenu : pAction {$/;"	s	namespace:hiro
pMenu	hiro/gtk/action/menu.hpp	/^struct pMenu : pAction {$/;"	s	namespace:hiro
pMenu	hiro/qt/action/menu.hpp	/^struct pMenu : public pAction {$/;"	s	namespace:hiro
pMenu	hiro/windows/action/menu.hpp	/^struct pMenu : pAction {$/;"	s	namespace:hiro
pMenuBar	hiro/cocoa/menu-bar.hpp	/^struct pMenuBar : pObject {$/;"	s	namespace:hiro
pMenuBar	hiro/gtk/menu-bar.hpp	/^struct pMenuBar : pObject {$/;"	s	namespace:hiro
pMenuBar	hiro/qt/menu-bar.hpp	/^struct pMenuBar : pObject {$/;"	s	namespace:hiro
pMenuBar	hiro/windows/menu-bar.hpp	/^struct pMenuBar : pObject {$/;"	s	namespace:hiro
pMenuCheckItem	hiro/cocoa/action/menu-check-item.hpp	/^struct pMenuCheckItem : pAction {$/;"	s	namespace:hiro
pMenuCheckItem	hiro/gtk/action/menu-check-item.hpp	/^struct pMenuCheckItem : pAction {$/;"	s	namespace:hiro
pMenuCheckItem	hiro/qt/action/menu-check-item.hpp	/^struct pMenuCheckItem : pAction {$/;"	s	namespace:hiro
pMenuCheckItem	hiro/windows/action/menu-check-item.hpp	/^struct pMenuCheckItem : pAction {$/;"	s	namespace:hiro
pMenuItem	hiro/cocoa/action/menu-item.hpp	/^struct pMenuItem : pAction {$/;"	s	namespace:hiro
pMenuItem	hiro/gtk/action/menu-item.hpp	/^struct pMenuItem : pAction {$/;"	s	namespace:hiro
pMenuItem	hiro/qt/action/menu-item.hpp	/^struct pMenuItem : pAction {$/;"	s	namespace:hiro
pMenuItem	hiro/windows/action/menu-item.hpp	/^struct pMenuItem : pAction {$/;"	s	namespace:hiro
pMenuRadioItem	hiro/cocoa/action/menu-radio-item.hpp	/^struct pMenuRadioItem : pAction {$/;"	s	namespace:hiro
pMenuRadioItem	hiro/gtk/action/menu-radio-item.hpp	/^struct pMenuRadioItem : pAction {$/;"	s	namespace:hiro
pMenuRadioItem	hiro/qt/action/menu-radio-item.hpp	/^struct pMenuRadioItem : pAction {$/;"	s	namespace:hiro
pMenuRadioItem	hiro/windows/action/menu-radio-item.hpp	/^struct pMenuRadioItem : pAction {$/;"	s	namespace:hiro
pMenuSeparator	hiro/cocoa/action/menu-separator.hpp	/^struct pMenuSeparator : pAction {$/;"	s	namespace:hiro
pMenuSeparator	hiro/gtk/action/menu-separator.hpp	/^struct pMenuSeparator : pAction {$/;"	s	namespace:hiro
pMenuSeparator	hiro/qt/action/menu-separator.hpp	/^struct pMenuSeparator : pAction {$/;"	s	namespace:hiro
pMenuSeparator	hiro/windows/action/menu-separator.hpp	/^struct pMenuSeparator : pAction {$/;"	s	namespace:hiro
pMessageWindow	hiro/cocoa/message-window.hpp	/^struct pMessageWindow {$/;"	s	namespace:hiro
pMessageWindow	hiro/gtk/message-window.hpp	/^struct pMessageWindow {$/;"	s	namespace:hiro
pMessageWindow	hiro/qt/message-window.hpp	/^struct pMessageWindow {$/;"	s	namespace:hiro
pMessageWindow	hiro/windows/message-window.hpp	/^struct pMessageWindow {$/;"	s	namespace:hiro
pMonitor	hiro/cocoa/monitor.hpp	/^struct pMonitor {$/;"	s	namespace:hiro
pMonitor	hiro/gtk/monitor.hpp	/^struct pMonitor {$/;"	s	namespace:hiro
pMonitor	hiro/qt/monitor.hpp	/^struct pMonitor {$/;"	s	namespace:hiro
pMonitor	hiro/windows/monitor.hpp	/^struct pMonitor {$/;"	s	namespace:hiro
pMouse	hiro/cocoa/mouse.hpp	/^struct pMouse {$/;"	s	namespace:hiro
pMouse	hiro/gtk/mouse.hpp	/^struct pMouse {$/;"	s	namespace:hiro
pMouse	hiro/qt/mouse.hpp	/^struct pMouse {$/;"	s	namespace:hiro
pMouse	hiro/windows/mouse.hpp	/^struct pMouse {$/;"	s	namespace:hiro
pObject	hiro/cocoa/object.hpp	/^  pObject(mObject& reference) : reference(reference) {}$/;"	f	struct:hiro::pObject
pObject	hiro/cocoa/object.hpp	/^struct pObject : Lock {$/;"	s	namespace:hiro
pObject	hiro/gtk/object.hpp	/^  pObject(mObject& reference) : reference(reference) {}$/;"	f	struct:hiro::pObject
pObject	hiro/gtk/object.hpp	/^struct pObject : Lock {$/;"	s	namespace:hiro
pObject	hiro/qt/object.hpp	/^  pObject(mObject& reference) : reference(reference) {}$/;"	f	struct:hiro::pObject
pObject	hiro/qt/object.hpp	/^struct pObject : Lock {$/;"	s	namespace:hiro
pObject	hiro/windows/object.hpp	/^  pObject(mObject& reference) : reference(reference) {}$/;"	f	struct:hiro::pObject
pObject	hiro/windows/object.hpp	/^struct pObject : Lock {$/;"	s	namespace:hiro
pOutputVoices	ruby/audio/xaudio2.hpp	/^  IXAudio2Voice** pOutputVoices;$/;"	m	struct:XAUDIO2_VOICE_SENDS
pPopupMenu	hiro/cocoa/popup-menu.hpp	/^struct pPopupMenu : pObject {$/;"	s	namespace:hiro
pPopupMenu	hiro/gtk/popup-menu.hpp	/^struct pPopupMenu : pObject {$/;"	s	namespace:hiro
pPopupMenu	hiro/qt/popup-menu.hpp	/^struct pPopupMenu : pObject {$/;"	s	namespace:hiro
pPopupMenu	hiro/windows/popup-menu.hpp	/^struct pPopupMenu : pObject {$/;"	s	namespace:hiro
pProgressBar	hiro/cocoa/widget/progress-bar.hpp	/^struct pProgressBar : pWidget {$/;"	s	namespace:hiro
pProgressBar	hiro/gtk/widget/progress-bar.hpp	/^struct pProgressBar : pWidget {$/;"	s	namespace:hiro
pProgressBar	hiro/qt/widget/progress-bar.hpp	/^struct pProgressBar : pWidget {$/;"	s	namespace:hiro
pProgressBar	hiro/windows/widget/progress-bar.hpp	/^struct pProgressBar : pWidget {$/;"	s	namespace:hiro
pRadioButton	hiro/cocoa/widget/radio-button.hpp	/^struct pRadioButton : pWidget {$/;"	s	namespace:hiro
pRadioButton	hiro/gtk/widget/radio-button.hpp	/^struct pRadioButton : pWidget {$/;"	s	namespace:hiro
pRadioButton	hiro/qt/widget/radio-button.hpp	/^struct pRadioButton : pWidget {$/;"	s	namespace:hiro
pRadioButton	hiro/windows/widget/radio-button.hpp	/^struct pRadioButton : pWidget {$/;"	s	namespace:hiro
pRadioLabel	hiro/cocoa/widget/radio-label.hpp	/^struct pRadioLabel : pWidget {$/;"	s	namespace:hiro
pRadioLabel	hiro/gtk/widget/radio-label.hpp	/^struct pRadioLabel : pWidget {$/;"	s	namespace:hiro
pRadioLabel	hiro/qt/widget/radio-label.hpp	/^struct pRadioLabel : pWidget {$/;"	s	namespace:hiro
pRadioLabel	hiro/windows/widget/radio-label.hpp	/^struct pRadioLabel : pWidget {$/;"	s	namespace:hiro
pSizable	hiro/cocoa/sizable.hpp	/^struct pSizable : pObject {$/;"	s	namespace:hiro
pSizable	hiro/gtk/sizable.hpp	/^struct pSizable : pObject {$/;"	s	namespace:hiro
pSizable	hiro/qt/sizable.hpp	/^struct pSizable : pObject {$/;"	s	namespace:hiro
pSizable	hiro/windows/sizable.hpp	/^struct pSizable : pObject {$/;"	s	namespace:hiro
pSourceEdit	hiro/gtk/widget/source-edit.hpp	/^struct pSourceEdit : pWidget {$/;"	s	namespace:hiro
pStatusBar	hiro/cocoa/status-bar.hpp	/^struct pStatusBar : pObject {$/;"	s	namespace:hiro
pStatusBar	hiro/gtk/status-bar.hpp	/^struct pStatusBar : pObject {$/;"	s	namespace:hiro
pStatusBar	hiro/qt/status-bar.hpp	/^struct pStatusBar : pObject {$/;"	s	namespace:hiro
pStatusBar	hiro/windows/status-bar.hpp	/^struct pStatusBar : pObject {$/;"	s	namespace:hiro
pTabFrame	hiro/cocoa/widget/tab-frame.hpp	/^struct pTabFrame : pWidget {$/;"	s	namespace:hiro
pTabFrame	hiro/gtk/widget/tab-frame.hpp	/^struct pTabFrame : pWidget {$/;"	s	namespace:hiro
pTabFrame	hiro/qt/widget/tab-frame.hpp	/^struct pTabFrame : pWidget {$/;"	s	namespace:hiro
pTabFrame	hiro/windows/widget/tab-frame.hpp	/^struct pTabFrame : pWidget {$/;"	s	namespace:hiro
pTabFrameItem	hiro/cocoa/widget/tab-frame-item.hpp	/^struct pTabFrameItem : pObject {$/;"	s	namespace:hiro
pTabFrameItem	hiro/gtk/widget/tab-frame-item.hpp	/^struct pTabFrameItem : pObject {$/;"	s	namespace:hiro
pTabFrameItem	hiro/qt/widget/tab-frame-item.hpp	/^struct pTabFrameItem : pObject {$/;"	s	namespace:hiro
pTabFrameItem	hiro/windows/widget/tab-frame-item.hpp	/^struct pTabFrameItem : pObject {$/;"	s	namespace:hiro
pTableView	hiro/cocoa/widget/table-view.hpp	/^struct pTableView : pWidget {$/;"	s	namespace:hiro
pTableView	hiro/gtk/widget/table-view.hpp	/^struct pTableView : pWidget {$/;"	s	namespace:hiro
pTableView	hiro/qt/widget/table-view.hpp	/^struct pTableView : pWidget {$/;"	s	namespace:hiro
pTableView	hiro/windows/widget/table-view.hpp	/^struct pTableView : pWidget {$/;"	s	namespace:hiro
pTableViewCell	hiro/cocoa/widget/table-view-cell.hpp	/^struct pTableViewCell : pObject {$/;"	s	namespace:hiro
pTableViewCell	hiro/gtk/widget/table-view-cell.hpp	/^struct pTableViewCell : pObject {$/;"	s	namespace:hiro
pTableViewCell	hiro/qt/widget/table-view-cell.hpp	/^struct pTableViewCell : pObject {$/;"	s	namespace:hiro
pTableViewCell	hiro/windows/widget/table-view-cell.hpp	/^struct pTableViewCell : pObject {$/;"	s	namespace:hiro
pTableViewColumn	hiro/cocoa/widget/table-view-column.hpp	/^struct pTableViewColumn : pObject {$/;"	s	namespace:hiro
pTableViewColumn	hiro/gtk/widget/table-view-column.hpp	/^struct pTableViewColumn : pObject {$/;"	s	namespace:hiro
pTableViewColumn	hiro/qt/widget/table-view-column.hpp	/^struct pTableViewColumn : pObject {$/;"	s	namespace:hiro
pTableViewColumn	hiro/windows/widget/table-view-column.hpp	/^struct pTableViewColumn : pObject {$/;"	s	namespace:hiro
pTableViewItem	hiro/cocoa/widget/table-view-item.hpp	/^struct pTableViewItem : pObject {$/;"	s	namespace:hiro
pTableViewItem	hiro/gtk/widget/table-view-item.hpp	/^struct pTableViewItem : pObject {$/;"	s	namespace:hiro
pTableViewItem	hiro/qt/widget/table-view-item.hpp	/^struct pTableViewItem : pObject {$/;"	s	namespace:hiro
pTableViewItem	hiro/windows/widget/table-view-item.hpp	/^struct pTableViewItem : pObject {$/;"	s	namespace:hiro
pTextEdit	hiro/cocoa/widget/text-edit.hpp	/^struct pTextEdit : pWidget {$/;"	s	namespace:hiro
pTextEdit	hiro/gtk/widget/text-edit.hpp	/^struct pTextEdit : pWidget {$/;"	s	namespace:hiro
pTextEdit	hiro/qt/widget/text-edit.hpp	/^struct pTextEdit : pWidget {$/;"	s	namespace:hiro
pTextEdit	hiro/windows/widget/text-edit.hpp	/^struct pTextEdit : pWidget {$/;"	s	namespace:hiro
pTimer	hiro/cocoa/timer.hpp	/^struct pTimer : pObject {$/;"	s	namespace:hiro
pTimer	hiro/gtk/timer.hpp	/^struct pTimer : pObject {$/;"	s	namespace:hiro
pTimer	hiro/qt/timer.hpp	/^struct pTimer : pObject {$/;"	s	namespace:hiro
pTimer	hiro/windows/timer.hpp	/^struct pTimer : pObject {$/;"	s	namespace:hiro
pToolTip	hiro/windows/tool-tip.cpp	/^pToolTip::pToolTip(const string& toolTipText) {$/;"	f	class:hiro::pToolTip
pToolTip	hiro/windows/tool-tip.hpp	/^struct pToolTip {$/;"	s	namespace:hiro
pTreeView	hiro/gtk/widget/tree-view-item.hpp	/^  auto _parentWidget() -> pTreeView*;$/;"	m	struct:hiro::pTreeViewItem
pTreeView	hiro/gtk/widget/tree-view.hpp	/^struct pTreeView : pWidget {$/;"	s	namespace:hiro
pTreeViewItem	hiro/gtk/widget/tree-view-item.hpp	/^  auto _parentItem() -> pTreeViewItem*;$/;"	m	struct:hiro::pTreeViewItem
pTreeViewItem	hiro/gtk/widget/tree-view-item.hpp	/^struct pTreeViewItem : pObject {$/;"	s	namespace:hiro
pVerticalScrollBar	hiro/cocoa/widget/vertical-scroll-bar.hpp	/^struct pVerticalScrollBar : pWidget {$/;"	s	namespace:hiro
pVerticalScrollBar	hiro/gtk/widget/vertical-scroll-bar.hpp	/^struct pVerticalScrollBar : pWidget {$/;"	s	namespace:hiro
pVerticalScrollBar	hiro/qt/widget/vertical-scroll-bar.hpp	/^struct pVerticalScrollBar : pWidget {$/;"	s	namespace:hiro
pVerticalScrollBar	hiro/windows/widget/vertical-scroll-bar.hpp	/^struct pVerticalScrollBar : pWidget {$/;"	s	namespace:hiro
pVerticalSlider	hiro/cocoa/widget/vertical-slider.hpp	/^struct pVerticalSlider : pWidget {$/;"	s	namespace:hiro
pVerticalSlider	hiro/gtk/widget/vertical-slider.hpp	/^struct pVerticalSlider : pWidget {$/;"	s	namespace:hiro
pVerticalSlider	hiro/qt/widget/vertical-slider.hpp	/^struct pVerticalSlider : pWidget {$/;"	s	namespace:hiro
pVerticalSlider	hiro/windows/widget/vertical-slider.hpp	/^struct pVerticalSlider : pWidget {$/;"	s	namespace:hiro
pViewport	hiro/cocoa/widget/viewport.hpp	/^struct pViewport : pWidget {$/;"	s	namespace:hiro
pViewport	hiro/gtk/widget/viewport.hpp	/^struct pViewport : pWidget {$/;"	s	namespace:hiro
pViewport	hiro/qt/widget/viewport.hpp	/^struct pViewport : pWidget {$/;"	s	namespace:hiro
pViewport	hiro/windows/widget/viewport.hpp	/^struct pViewport : pWidget {$/;"	s	namespace:hiro
pWidget	hiro/cocoa/widget/widget.hpp	/^struct pWidget : pSizable {$/;"	s	namespace:hiro
pWidget	hiro/gtk/widget/widget.hpp	/^struct pWidget : pSizable {$/;"	s	namespace:hiro
pWidget	hiro/qt/widget/widget.hpp	/^struct pWidget : pSizable {$/;"	s	namespace:hiro
pWidget	hiro/windows/widget/widget.hpp	/^struct pWidget : pSizable {$/;"	s	namespace:hiro
pWindow	hiro/cocoa/window.hpp	/^struct pWindow : pObject {$/;"	s	namespace:hiro
pWindow	hiro/gtk/menu-bar.hpp	/^  auto _parent() -> pWindow*;$/;"	m	struct:hiro::pMenuBar
pWindow	hiro/gtk/status-bar.hpp	/^  auto _parent() -> pWindow*;$/;"	m	struct:hiro::pStatusBar
pWindow	hiro/gtk/window.hpp	/^struct pWindow : pObject {$/;"	s	namespace:hiro
pWindow	hiro/qt/window.hpp	/^struct pWindow : pObject {$/;"	s	namespace:hiro
pWindow	hiro/windows/window.hpp	/^struct pWindow : pObject {$/;"	s	namespace:hiro
pXInputCancelGuideButtonWait	ruby/input/joypad/xinput.cpp	/^typedef DWORD WINAPI (*pXInputCancelGuideButtonWait)(DWORD dwUserIndex);$/;"	t	file:
pXInputGetState	ruby/input/joypad/xinput.cpp	/^typedef DWORD WINAPI (*pXInputGetState)(DWORD dwUserIndex, XINPUT_STATE* pState);$/;"	t	file:
pXInputGetStateEx	ruby/input/joypad/xinput.cpp	/^typedef DWORD WINAPI (*pXInputGetStateEx)(DWORD dwUserIndex, XINPUT_STATE* pState);$/;"	t	file:
pXInputPowerOffController	ruby/input/joypad/xinput.cpp	/^typedef DWORD WINAPI (*pXInputPowerOffController)(DWORD dwUserIndex);$/;"	t	file:
pXInputSetState	ruby/input/joypad/xinput.cpp	/^typedef DWORD WINAPI (*pXInputSetState)(DWORD dwUserIndex, XINPUT_VIBRATION* pVibration);$/;"	t	file:
pXInputWaitForGuideButton	ruby/input/joypad/xinput.cpp	/^typedef DWORD WINAPI (*pXInputWaitForGuideButton)(DWORD dwUserIndex, DWORD dwFlag, void* pUnknown);$/;"	t	file:
pa	higan/gba/ppu/ppu.hpp	/^      int16 pa;$/;"	m	struct:PPU::Background::IO
pa	higan/gba/ppu/ppu.hpp	/^    int16 pa;$/;"	m	struct:PPU::ObjectParam
packet	higan/gba/player/player.hpp	/^    uint packet;$/;"	m	struct:Player::Status
packet	higan/sfc/coprocessor/icd/icd.hpp	/^  Packet packet[64];$/;"	m	struct:ICD
packetLock	higan/sfc/coprocessor/icd/icd.hpp	/^  bool packetLock;$/;"	m	struct:ICD
packetOffset	higan/sfc/coprocessor/icd/icd.hpp	/^  uint8 packetOffset;$/;"	m	struct:ICD
packetSize	higan/sfc/coprocessor/icd/icd.hpp	/^  uint packetSize;$/;"	m	struct:ICD
pad	nall/mac/poly1305.hpp	/^  uint64_t pad[2];$/;"	m	struct:nall::MAC::Poly1305
padding	hiro/extension/horizontal-layout.hpp	/^    Geometry padding;$/;"	m	struct:mHorizontalLayout::State
padding	hiro/extension/shared.hpp	/^  auto padding() const { return self().padding(); }$/;"	f	struct:TableLayout
padding	hiro/extension/table-layout.hpp	/^    Geometry padding;$/;"	m	struct:mTableLayout::State
padding	hiro/extension/vertical-layout.hpp	/^    Geometry padding;$/;"	m	struct:mVerticalLayout::State
page	higan/processor/hg51b/hg51b.hpp	/^      uint1  page;$/;"	m	struct:Processor::HG51B::IO::Cache
page	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 page;$/;"	m	struct:BSMemory::Global::Status
page	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  } page;$/;"	m	struct:BSMemory	typeref:struct:BSMemory::Page
pageAvailable	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 pageAvailable = 1;$/;"	m	struct:BSMemory::Global::Status
pageReady	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 pageReady = 1;$/;"	m	struct:BSMemory::Global::Status
palette	higan/gb/ppu/ppu.hpp	/^    uint8 palette;$/;"	m	struct:PPU::Pixel
palette	higan/gba/ppu/ppu.hpp	/^      uint4  palette;$/;"	m	struct:PPU::Background::Latch
palette	higan/gba/ppu/ppu.hpp	/^    uint4  palette;$/;"	m	struct:PPU::Object
palette	higan/md/vdp/vdp.hpp	/^    uint2  palette;$/;"	m	struct:VDP::Object
palette	higan/ms/vdp/vdp.hpp	/^      uint1 palette;$/;"	m	struct:VDP::Background::Output
palette	higan/pce/vdc/vdc.hpp	/^      uint4  palette;$/;"	m	struct:VDC::Sprite::Object
palette	higan/pce/vdc/vdc.hpp	/^    uint4 palette;$/;"	m	struct:VDC::Background
palette	higan/pce/vdc/vdc.hpp	/^    uint4 palette;$/;"	m	struct:VDC::Sprite
palette	higan/sfc/ppu/object.hpp	/^      uint8 palette;$/;"	m	struct:Object::Output::Pixel
palette	higan/sfc/ppu/object.hpp	/^    uint3 palette;$/;"	m	struct:OAM::Object
palette	higan/sfc/ppu/object.hpp	/^    uint8  palette;$/;"	m	struct:Object::Tile
palette	higan/video/video.hpp	/^  uint32* palette = nullptr;$/;"	m	struct:Emulator::Video
palette	higan/ws/ppu/ppu.hpp	/^    } palette[16];$/;"	m	struct:PPU::Registers	typeref:struct:PPU::Registers::Palette
palette	nall/decode/png.hpp	/^    uint8_t palette[256][3];$/;"	m	struct:nall::Decode::PNG::Info
parameter	nall/thread.hpp	/^    uintptr parameter = 0;$/;"	m	struct:nall::thread::context
parent	hiro/core/core.hpp	/^    sWindow parent;$/;"	m	struct:hiro::BrowserWindow::State
parent	hiro/core/core.hpp	/^    sWindow parent;$/;"	m	struct:hiro::MessageWindow::State
parent	hiro/core/object.hpp	/^    mObject* parent = nullptr;  \/\/ 8$/;"	m	struct:mObject::State
parent	hiro/extension/browser-dialog.hpp	/^    sWindow parent;$/;"	m	struct:BrowserDialog::State
parent	hiro/extension/message-dialog.hpp	/^    sWindow parent;$/;"	m	struct:MessageDialog::State
parse	nall/string/markup/xml.hpp	/^  inline void parse(const char*& p) {$/;"	f	struct:nall::XML::ManagedNode
parseClosureElement	nall/string/markup/xml.hpp	/^  inline bool parseClosureElement(const char*& p) {$/;"	f	struct:nall::XML::ManagedNode
parseElement	nall/string/markup/xml.hpp	/^  inline void parseElement(const char*& p) {$/;"	f	struct:nall::XML::ManagedNode
parseExpression	nall/string/markup/xml.hpp	/^  inline bool parseExpression(const char*& p) {$/;"	f	struct:nall::XML::ManagedNode
parseHead	nall/string/markup/xml.hpp	/^  inline bool parseHead(const char*& p) {$/;"	f	struct:nall::XML::ManagedNode
patch	higan/md/cartridge/cartridge.hpp	/^  Memory patch;$/;"	m	struct:Cartridge
patched	higan/target-bsnes/program/program.hpp	/^    boolean patched;$/;"	m	struct:Program::Game
patches	higan/target-bsnes/settings/settings.hpp	/^    string patches;$/;"	m	struct:Settings::Path
path	higan/target-bsnes/input/input.hpp	/^  string path;  \/\/configuration file key path$/;"	m	struct:InputMapping
path	higan/target-bsnes/settings/settings.hpp	/^  } path;$/;"	m	struct:Settings	typeref:struct:Settings::Path
path	higan/target-higan/input/input.hpp	/^  string path;  \/\/configuration file key path$/;"	m	struct:InputMapping
path	hiro/core/core.hpp	/^    string path;$/;"	m	struct:hiro::BrowserWindow::State
path	hiro/core/shared.hpp	/^  auto path() const { return self().path(); }$/;"	f	struct:TreeViewItem
path	hiro/extension/browser-dialog.hpp	/^    string path;$/;"	m	struct:BrowserDialog::State
path	nall/string/transform/cml.hpp	/^    string path;$/;"	m	struct:nall::__anon38::CML::Settings
path	nall/string/transform/dml.hpp	/^    string path;$/;"	m	struct:nall::__anon37::DML::Settings
path	ruby/input/shared/rawinput.cpp	/^    string path;$/;"	m	struct:RawInput::Device	file:
pathID	higan/emulator/platform.hpp	/^    uint pathID = 0;$/;"	m	struct:Emulator::Platform::Load
pathID	higan/fc/cartridge/cartridge.hpp	/^    uint pathID = 0;$/;"	m	struct:Cartridge::Information
pathID	higan/gb/cartridge/cartridge.hpp	/^    uint pathID = 0;$/;"	m	struct:Cartridge::Information
pathID	higan/gba/cartridge/cartridge.hpp	/^    uint pathID = 0;$/;"	m	struct:Cartridge::Information
pathID	higan/md/cartridge/cartridge.hpp	/^    uint pathID = 0;$/;"	m	struct:Cartridge::Information
pathID	higan/ms/cartridge/cartridge.hpp	/^    uint pathID = 0;$/;"	m	struct:Cartridge::Information
pathID	higan/pce/cartridge/cartridge.hpp	/^    uint pathID = 0;$/;"	m	struct:Cartridge::Information
pathID	higan/sfc/cartridge/cartridge.hpp	/^    uint pathID = 0;$/;"	m	struct:Cartridge::Information
pathID	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  uint pathID = 0;$/;"	m	struct:BSMemory
pathID	higan/sfc/slot/sufamiturbo/sufamiturbo.hpp	/^  uint pathID = 0;$/;"	m	struct:SufamiTurboCartridge
pathID	higan/ws/cartridge/cartridge.hpp	/^    uint pathID = 0;$/;"	m	struct:Cartridge::Information
pathID	ruby/input/joypad/directinput.cpp	/^    uint32_t pathID = 0;$/;"	m	struct:InputJoypadDirectInput::Joypad	file:
pathSettings	higan/target-bsnes/settings/settings.cpp	/^PathSettings pathSettings;$/;"	v
pattern	higan/gb/apu/apu.hpp	/^    uint8 pattern[16];$/;"	m	struct:APU::Wave
pattern	higan/gba/apu/apu.hpp	/^    uint4 pattern[2 * 32];$/;"	m	struct:APU::Wave
pattern	higan/ms/vdp/vdp.hpp	/^      uint8 pattern;$/;"	m	struct:VDP::Sprite::Object
pattern	higan/pce/vdc/vdc.hpp	/^      uint10 pattern;$/;"	m	struct:VDC::Sprite::Object
pattern	higan/processor/arm7tdmi/instruction.cpp	365;"	d	file:
pattern	higan/processor/arm7tdmi/instruction.cpp	375;"	d	file:
pattern	higan/processor/arm7tdmi/instruction.cpp	537;"	d	file:
pattern	higan/processor/arm7tdmi/instruction.cpp	68;"	d	file:
pattern	higan/processor/hg51b/instruction.cpp	634;"	d	file:
pattern	higan/processor/hg51b/instruction.cpp	7;"	d	file:
pattern	higan/processor/m68k/instruction.cpp	1265;"	d	file:
pattern	higan/processor/m68k/instruction.cpp	18;"	d	file:
patternHold	higan/gb/apu/apu.hpp	/^    uint patternHold;$/;"	m	struct:APU::Wave
patternOffset	higan/gb/apu/apu.hpp	/^    uint5 patternOffset;$/;"	m	struct:APU::Wave
patternSample	higan/gb/apu/apu.hpp	/^    uint4 patternSample;$/;"	m	struct:APU::Wave
patternTableAddress	higan/ms/vdp/vdp.hpp	/^    uint8 patternTableAddress;$/;"	m	struct:VDP::IO
patternaddr	higan/gba/apu/apu.hpp	/^    uint5 patternaddr;$/;"	m	struct:APU::Wave
patternbank	higan/gba/apu/apu.hpp	/^    uint1 patternbank;$/;"	m	struct:APU::Wave
patternsample	higan/gba/apu/apu.hpp	/^    uint4 patternsample;$/;"	m	struct:APU::Wave
pause	higan/sfc/controller/super-scope/super-scope.hpp	/^  bool pause;$/;"	v
pause	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 pause;$/;"	m	struct:EpsonRTC
pause	higan/target-higan/program/program.hpp	/^  bool pause = false;$/;"	m	struct:Program
pauselock	higan/sfc/controller/super-scope/super-scope.hpp	/^  bool pauselock;$/;"	v
pb	higan/gba/ppu/ppu.hpp	/^      int16 pb;$/;"	m	struct:PPU::Background::IO
pb	higan/gba/ppu/ppu.hpp	/^    int16 pb;$/;"	m	struct:PPU::ObjectParam
pb	higan/processor/hg51b/hg51b.hpp	/^      uint15 pb;$/;"	m	struct:Processor::HG51B::IO::Cache
pb	higan/processor/hg51b/hg51b.hpp	/^    uint15 pb;  \/\/program bank$/;"	m	struct:Processor::HG51B::Registers
pbr	higan/processor/gsu/registers.hpp	/^  uint8 pbr;        \/\/program bank register$/;"	m	struct:Registers
pc	higan/gba/ppu/ppu.hpp	/^      int16 pc;$/;"	m	struct:PPU::Background::IO
pc	higan/gba/ppu/ppu.hpp	/^    int16 pc;$/;"	m	struct:PPU::ObjectParam
pc	higan/processor/hg51b/hg51b.hpp	/^      uint8  pc;$/;"	m	struct:Processor::HG51B::IO::Cache
pc	higan/processor/hg51b/hg51b.hpp	/^    uint8  pc;  \/\/program counter$/;"	m	struct:Processor::HG51B::Registers
pc	higan/processor/huc6280/huc6280.hpp	/^    uint16 pc;$/;"	m	struct:Processor::HuC6280::Registers
pc	higan/processor/lr35902/lr35902.hpp	/^    Pair pc;$/;"	m	struct:Processor::LR35902::Registers
pc	higan/processor/mos6502/mos6502.hpp	/^    uint16 pc;$/;"	m	struct:Processor::MOS6502::Registers
pc	higan/processor/spc700/spc700.hpp	/^    } pc, ya;$/;"	m	struct:Processor::SPC700::Registers	typeref:union:Processor::SPC700::Registers::Pair
pc	higan/processor/upd96050/upd96050.hpp	/^    VariadicNatural pc;  \/\/program counter$/;"	m	struct:Processor::uPD96050::Registers
pc	higan/processor/wdc65816/wdc65816.hpp	/^    uint24 pc;$/;"	m	struct:Processor::WDC65816::Registers
pc	higan/processor/z80/z80.hpp	/^    uint16 pc;$/;"	m	struct:Processor::Z80::Registers
pd	higan/gba/ppu/ppu.hpp	/^      int16 pd;$/;"	m	struct:PPU::Background::IO
pd	higan/gba/ppu/ppu.hpp	/^    int16 pd;$/;"	m	struct:PPU::ObjectParam
pem	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  PEM pem;$/;"	m	struct:Decompressor
pending	higan/gba/cpu/cpu.hpp	/^    boolean pending;$/;"	m	struct:Timer
pending	higan/processor/hg51b/hg51b.hpp	/^      uint4  pending;$/;"	m	struct:Processor::HG51B::IO::Bus
pendingCollision	higan/pce/vdc/vdc.hpp	/^    bool pendingCollision = 0;$/;"	m	struct:VDC::IRQ
pendingIRQ	higan/pce/cpu/cpu.hpp	/^    bool   pendingIRQ = 0;$/;"	m	struct:CPU::IRQ
pendingLineCoincidence	higan/pce/vdc/vdc.hpp	/^    bool pendingLineCoincidence = 0;$/;"	m	struct:VDC::IRQ
pendingOverflow	higan/pce/vdc/vdc.hpp	/^    bool pendingOverflow = 0;$/;"	m	struct:VDC::IRQ
pendingTransferSATB	higan/pce/vdc/vdc.hpp	/^    bool pendingTransferSATB = 0;$/;"	m	struct:VDC::IRQ
pendingTransferVRAM	higan/pce/vdc/vdc.hpp	/^    bool pendingTransferVRAM = 0;$/;"	m	struct:VDC::IRQ
pendingVblank	higan/pce/vdc/vdc.hpp	/^    bool pendingVblank = 0;$/;"	m	struct:VDC::IRQ
pendingVector	higan/pce/cpu/cpu.hpp	/^    uint16 pendingVector;$/;"	m	struct:CPU::IRQ
period	higan/fc/apu/apu.hpp	/^    uint11 period;$/;"	m	struct:APU::Pulse
period	higan/fc/apu/apu.hpp	/^    uint11 period;$/;"	m	struct:APU::Triangle
period	higan/fc/apu/apu.hpp	/^    uint3 period;$/;"	m	struct:APU::Sweep
period	higan/fc/apu/apu.hpp	/^    uint4 period;$/;"	m	struct:APU::DMC
period	higan/fc/apu/apu.hpp	/^    uint4 period;$/;"	m	struct:APU::Noise
period	higan/gb/apu/apu.hpp	/^    uint period;$/;"	m	struct:APU::Noise
period	higan/gb/apu/apu.hpp	/^    uint period;$/;"	m	struct:APU::Square1
period	higan/gb/apu/apu.hpp	/^    uint period;$/;"	m	struct:APU::Square2
period	higan/gb/apu/apu.hpp	/^    uint period;$/;"	m	struct:APU::Wave
period	higan/gba/apu/apu.hpp	/^    uint period;$/;"	m	struct:APU::Noise
period	higan/gba/apu/apu.hpp	/^    uint period;$/;"	m	struct:APU::Square
period	higan/gba/apu/apu.hpp	/^    uint period;$/;"	m	struct:APU::Wave
period	higan/gba/apu/apu.hpp	/^    uint3 period;$/;"	m	struct:APU::Envelope
period	higan/gba/apu/apu.hpp	/^    uint3 period;$/;"	m	struct:APU::Sweep
period	higan/gba/cpu/cpu.hpp	/^    uint16 period;$/;"	m	struct:Timer
period	higan/md/ym2612/ym2612.hpp	/^    uint10 period = 0;$/;"	m	struct:YM2612::TimerA
period	higan/md/ym2612/ym2612.hpp	/^    uint8 period = 0;$/;"	m	struct:YM2612::TimerB
period	higan/ws/apu/apu.hpp	/^      uint11 period;$/;"	m	struct:APU::Channel1::State
period	higan/ws/apu/apu.hpp	/^      uint11 period;$/;"	m	struct:APU::Channel2::State
period	higan/ws/apu/apu.hpp	/^      uint11 period;$/;"	m	struct:APU::Channel3::State
period	higan/ws/apu/apu.hpp	/^      uint11 period;$/;"	m	struct:APU::Channel4::State
period	ruby/audio/xaudio2.cpp	/^  uint period = 0;          \/\/amount (in 32-bit frames) of samples per buffer$/;"	m	struct:AudioXAudio2	file:
periodCounter	higan/fc/apu/apu.hpp	/^    uint periodCounter;$/;"	m	struct:APU::DMC
periodCounter	higan/fc/apu/apu.hpp	/^    uint periodCounter;$/;"	m	struct:APU::Noise
periodCounter	higan/fc/apu/apu.hpp	/^    uint periodCounter;$/;"	m	struct:APU::Pulse
periodCounter	higan/fc/apu/apu.hpp	/^    uint periodCounter;$/;"	m	struct:APU::Triangle
peripherals	higan/fc/cpu/cpu.hpp	/^  vector<Thread*> peripherals;$/;"	m	struct:CPU
peripherals	higan/md/cpu/cpu.hpp	/^  vector<Thread*> peripherals;$/;"	m	struct:CPU
peripherals	higan/ms/cpu/cpu.hpp	/^  vector<Thread*> peripherals;$/;"	m	struct:CPU
peripherals	higan/pce/cpu/cpu.hpp	/^  vector<Thread*> peripherals;$/;"	m	struct:CPU
peripherals	higan/sfc/cpu/cpu.hpp	/^  vector<Thread*> peripherals;$/;"	m	struct:CPU
permission	nall/beat/archive/node.hpp	/^  } permission;$/;"	m	struct:nall::Beat::Archive::Node	typeref:struct:nall::Beat::Archive::Node::Permission
permissions	nall/beat/archive/node.hpp	/^  bool permissions = false;$/;"	m	struct:nall::Beat::Archive::Node
phase	higan/fc/cartridge/chip/vrc6.cpp	/^    uint1 phase;$/;"	m	struct:VRC6::Sawtooth	file:
phase	higan/gb/apu/apu.hpp	/^    uint3 phase;$/;"	m	struct:APU::Square1
phase	higan/gb/apu/apu.hpp	/^    uint3 phase;$/;"	m	struct:APU::Square2
phase	higan/gb/apu/apu.hpp	/^  uint3 phase;   \/\/high 3-bits of clock counter$/;"	m	struct:APU
phase	higan/gba/apu/apu.hpp	/^    uint3 phase;$/;"	m	struct:APU::Square
phase	higan/md/ym2612/ym2612.hpp	/^      } phase;$/;"	m	struct:Channel::Operator	typeref:struct:Channel::Operator::Phase
phase	ruby/video/opengl/opengl.hpp	/^  uint phase = 0;   \/\/frame counter$/;"	m	struct:OpenGLProgram
phi	higan/gba/cpu/cpu.hpp	/^    uint2 phi;$/;"	m	struct:Wait
phi	nall/suffix-array.hpp	/^  vector<int> phi;      \/\/phi$/;"	m	struct:nall::SuffixArray
pin	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  } pin;$/;"	m	struct:BSMemory	typeref:struct:BSMemory::Pin
pinout	higan/fc/cartridge/board/konami-vrc2.cpp	/^    } pinout;$/;"	m	struct:KonamiVRC2::Settings	typeref:struct:KonamiVRC2::Settings::Pinout	file:
pinout	higan/fc/cartridge/board/konami-vrc4.cpp	/^    } pinout;$/;"	m	struct:KonamiVRC4::Settings	typeref:struct:KonamiVRC4::Settings::Pinout	file:
pio	higan/sfc/cpu/cpu.hpp	/^    uint8 pio = 0xff;$/;"	m	struct:CPU::IO
pipeline	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  } pipeline;$/;"	v	typeref:struct:Pipeline
pipeline	higan/processor/gsu/registers.hpp	/^  uint8 pipeline;$/;"	m	struct:Registers
pitch	higan/md/psg/psg.hpp	/^    uint10 pitch;$/;"	m	struct:PSG::Noise
pitch	higan/md/psg/psg.hpp	/^    uint10 pitch;$/;"	m	struct:PSG::Tone
pitch	higan/md/ym2612/ym2612.hpp	/^      } pitch;$/;"	m	struct:Channel::Operator	typeref:struct:Channel::Operator::Pitch
pitch	higan/ms/psg/psg.hpp	/^    uint10  pitch;$/;"	m	struct:PSG::Noise
pitch	higan/ms/psg/psg.hpp	/^    uint10 pitch;$/;"	m	struct:PSG::Tone
pitch	higan/target-bsnes/program/program.hpp	/^    uint pitch = 0;$/;"	m	struct:Program::Screenshot
pitch	higan/ws/apu/apu.hpp	/^      uint11 pitch;$/;"	m	struct:APU::Channel1::Registers
pitch	higan/ws/apu/apu.hpp	/^      uint11 pitch;$/;"	m	struct:APU::Channel2::Registers
pitch	higan/ws/apu/apu.hpp	/^      uint11 pitch;$/;"	m	struct:APU::Channel3::Registers
pitch	higan/ws/apu/apu.hpp	/^      uint11 pitch;$/;"	m	struct:APU::Channel4::Registers
pitch	nall/decode/png.hpp	/^    uint pitch;$/;"	m	struct:nall::Decode::PNG::Info
pitch	nall/image.hpp	/^  alwaysinline auto pitch() const { return _width * stride(); }$/;"	f	struct:nall::image
pixel	higan/ws/ppu/ppu.hpp	/^    Pixel pixel;$/;"	m	struct:PPU::State
pixelcache	higan/processor/gsu/registers.hpp	/^} pixelcache[2];$/;"	v	typeref:struct:PixelCache
pixels	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  uint64 pixels;$/;"	m	struct:Decompressor	file:
pixels	higan/video/video.hpp	/^  uint32* pixels = nullptr;$/;"	m	struct:Emulator::Sprite
pixels	hiro/windows/widget/canvas.hpp	/^  vector<uint32_t> pixels;$/;"	m	struct:hiro::pCanvas
pixmaps	ruby/video/opengl/opengl.hpp	/^  vector<OpenGLTexture> pixmaps;$/;"	m	struct:OpenGLProgram
placeholder	nall/any.hpp	/^    virtual auto copy() const -> placeholder* = 0;$/;"	m	struct:nall::any::placeholder
placeholder	nall/any.hpp	/^  struct placeholder {$/;"	s	struct:nall::any
platform	higan/emulator/emulator.cpp	/^Platform* platform = nullptr;$/;"	m	namespace:Emulator	file:
platform	higan/fc/fc.hpp	14;"	d
platform	higan/gb/gb.hpp	14;"	d
platform	higan/gba/gba.hpp	12;"	d
platform	higan/md/md.hpp	16;"	d
platform	higan/ms/ms.hpp	14;"	d
platform	higan/pce/pce.hpp	14;"	d
platform	higan/sfc/sfc.hpp	24;"	d
platform	higan/ws/ws.hpp	14;"	d
platform	nall/GNUmakefile	/^    platform := bsd$/;"	m
platform	nall/GNUmakefile	/^    platform := linux$/;"	m
platform	nall/GNUmakefile	/^    platform := macos$/;"	m
platform	nall/GNUmakefile	/^    platform := windows$/;"	m
player	higan/gba/player/player.cpp	/^Player player;$/;"	m	namespace:GameBoyAdvance	file:
player1	higan/sfc/controller/justifier/justifier.hpp	/^  } player1, player2;$/;"	v	typeref:struct:Player
player2	higan/sfc/controller/justifier/justifier.hpp	/^  } player1, player2;$/;"	v	typeref:struct:Player
plcp	nall/suffix-array.hpp	/^  vector<int> plcp;     \/\/permuted longest common prefixes$/;"	m	struct:nall::SuffixArray
point	nall/elliptic-curve/curve25519.hpp	/^  struct point { field x, z; };$/;"	s	struct:nall::EllipticCurve::Curve25519
point	nall/elliptic-curve/ed25519.hpp	/^  struct point { field x, y, z, t; };$/;"	s	struct:nall::EllipticCurve::Ed25519
pointer	nall/pointer.hpp	/^  pointer(T* source) { value = source; }$/;"	f	struct:nall::pointer
pointer	nall/pointer.hpp	/^  pointer(const pointer& source) { value = source.value; }$/;"	f	struct:nall::pointer
pointer	nall/pointer.hpp	/^struct pointer {$/;"	s	namespace:nall
pointer	nall/shared-pointer.hpp	/^  void* pointer = nullptr;$/;"	m	struct:nall::shared_pointer_manager
poll	higan/processor/v30mz/v30mz.hpp	/^    bool poll;    \/\/set to false to suppress interrupt polling between CPU instructions$/;"	m	struct:Processor::State
pool	higan/ws/ppu/ppu.hpp	/^    uint4 pool[8];$/;"	m	struct:PPU::Registers
pool	nall/bit-vector.hpp	/^  uint8_t* pool = nullptr;$/;"	m	struct:nall::bitvector
pool	nall/hashset.hpp	/^  T** pool = nullptr;$/;"	m	struct:nall::hashset
por	higan/processor/gsu/registers.hpp	/^  POR por;          \/\/plot option register$/;"	m	struct:Registers
port	higan/fc/controller/controller.hpp	/^  const uint port;$/;"	m	struct:Controller
port	higan/fc/controller/controller.hpp	/^  uint port;$/;"	m	struct:ControllerPort
port	higan/fc/controller/gamepad/gamepad.hpp	/^  Gamepad(uint port);$/;"	v
port	higan/md/controller/control-pad/control-pad.hpp	/^  ControlPad(uint port);$/;"	v
port	higan/md/controller/controller.hpp	/^  const uint port;$/;"	m	struct:Controller
port	higan/md/controller/controller.hpp	/^  uint port;$/;"	m	struct:ControllerPort
port	higan/md/controller/fighting-pad/fighting-pad.hpp	/^  FightingPad(uint port);$/;"	v
port	higan/ms/controller/controller.hpp	/^  const uint port;$/;"	m	struct:Controller
port	higan/ms/controller/controller.hpp	/^  uint port;$/;"	m	struct:ControllerPort
port	higan/ms/controller/gamepad/gamepad.hpp	/^  Gamepad(uint port);$/;"	v
port	higan/sfc/controller/controller.hpp	/^  const uint port;$/;"	m	struct:Controller
port	higan/sfc/controller/controller.hpp	/^  uint port;$/;"	m	struct:ControllerPort
port	higan/sfc/controller/gamepad/gamepad.hpp	/^  Gamepad(uint port);$/;"	v
port	higan/sfc/controller/mouse/mouse.hpp	/^  Mouse(uint port);$/;"	v
port	higan/sfc/controller/super-multitap/super-multitap.hpp	/^  SuperMultitap(uint port);$/;"	v
port	higan/sfc/controller/super-scope/super-scope.hpp	/^  SuperScope(uint port);$/;"	v
port	higan/ws/memory/memory.hpp	/^  IO* port[64 * 1024] = {nullptr};$/;"	m	struct:Bus
port	nall/serial.hpp	/^  int port = -1;$/;"	m	struct:nall::serial
port	nall/smtp.hpp	/^    uint16_t port;$/;"	m	struct:nall::SMTP::Information
portID	higan/target-bsnes/input/input.hpp	/^  uint portID = 0;$/;"	m	struct:InputMapping
ports	higan/target-bsnes/input/input.hpp	/^  vector<InputPort> ports;$/;"	m	struct:InputManager
ports	higan/target-higan/input/input.hpp	/^  vector<InputPort> ports;$/;"	m	struct:InputEmulator
position	hiro/core/core.hpp	/^    uint position = 0;$/;"	m	struct:hiro::mHorizontalScrollBar::State
position	hiro/core/core.hpp	/^    uint position = 0;$/;"	m	struct:hiro::mHorizontalSlider::State
position	hiro/core/core.hpp	/^    uint position = 0;$/;"	m	struct:hiro::mProgressBar::State
position	hiro/core/core.hpp	/^    uint position = 0;$/;"	m	struct:hiro::mVerticalScrollBar::State
position	hiro/core/core.hpp	/^    uint position = 0;$/;"	m	struct:hiro::mVerticalSlider::State
position	hiro/core/shared.hpp	/^  auto position() const { return self().position(); }$/;"	f	struct:HorizontalScrollBar
position	hiro/core/shared.hpp	/^  auto position() const { return self().position(); }$/;"	f	struct:HorizontalSlider
position	hiro/core/shared.hpp	/^  auto position() const { return self().position(); }$/;"	f	struct:ProgressBar
position	hiro/core/shared.hpp	/^  auto position() const { return self().position(); }$/;"	f	struct:VerticalScrollBar
position	hiro/core/shared.hpp	/^  auto position() const { return self().position(); }$/;"	f	struct:VerticalSlider
position	hiro/windows/action/action.hpp	/^  unsigned position = 0;$/;"	m	struct:hiro::pAction
position	nall/bit-vector.hpp	/^    uint position;$/;"	m	struct:nall::bitvector::iterator
position	nall/bit-vector.hpp	/^    uint position;$/;"	m	struct:nall::bitvector::reference
position	nall/range.hpp	/^    int position;$/;"	m	struct:nall::range_t::iterator
position	nall/range.hpp	/^    int position;$/;"	m	struct:nall::range_t::reverse_iterator
position	nall/set.hpp	/^    uint position;$/;"	m	struct:nall::set::base_iterator
position	nall/string/markup/node.hpp	/^    uint position;$/;"	m	struct:nall::Markup::Node::iterator
post	nall/http/request.hpp	/^  Variables post;$/;"	m	struct:nall::HTTP::Request
pow2	higan/md/ym2612/ym2612.hpp	/^  int16  pow2[0x200];$/;"	v
powerPending	higan/sfc/cpu/cpu.hpp	/^    bool powerPending = false;$/;"	m	struct:CPU::Status
ppu	higan/fc/ppu/ppu.cpp	/^PPU ppu;$/;"	m	namespace:Famicom	file:
ppu	higan/gb/ppu/ppu.cpp	/^PPU ppu;$/;"	m	namespace:GameBoy	file:
ppu	higan/gba/ppu/ppu.cpp	/^PPU ppu;$/;"	m	namespace:GameBoyAdvance	file:
ppu	higan/sfc/ppu-fast/ppu.cpp	/^PPU ppu;$/;"	m	namespace:SuperFamicom	file:
ppu	higan/sfc/ppu-fast/ppu.cpp	7;"	d	file:
ppu	higan/sfc/ppu-fast/ppu.hpp	9;"	d
ppu	higan/sfc/ppu/ppu.cpp	/^PPU ppu;$/;"	m	namespace:SuperFamicom	file:
ppu	higan/ws/ppu/ppu.cpp	/^PPU ppu;$/;"	m	namespace:WonderSwan	file:
ppu1	higan/sfc/interface/configuration.hpp	/^    } ppu1;$/;"	m	struct:Configuration::System	typeref:struct:Configuration::System::PPU1
ppu1	higan/sfc/ppu/ppu.hpp	/^  } ppu1, ppu2;$/;"	m	struct:PPU	typeref:struct:PPU::__anon16
ppu2	higan/sfc/interface/configuration.hpp	/^    } ppu2;$/;"	m	struct:Configuration::System	typeref:struct:Configuration::System::PPU2
ppu2	higan/sfc/ppu/ppu.hpp	/^  } ppu1, ppu2;$/;"	m	struct:PPU	typeref:struct:PPU::__anon16
ppuFast	higan/sfc/interface/configuration.hpp	/^    } ppuFast;$/;"	m	struct:Configuration::Hacks	typeref:struct:Configuration::Hacks::PPUFast
ppubase	higan/sfc/ppu-fast/ppu.cpp	/^PPU& ppubase = ppu;$/;"	m	namespace:SuperFamicom	file:
pram	higan/gba/ppu/ppu.hpp	/^  uint16 pram[512];$/;"	m	struct:PPU
precision	ruby/audio/wasapi.cpp	/^  uint precision = 0;$/;"	m	struct:AudioWASAPI	file:
prediction	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^    uint8 prediction;   \/\/current model state$/;"	m	struct:Decompressor::Context	file:
preferredBufferSize	ruby/audio/asio.cpp	/^    long preferredBufferSize;$/;"	m	struct:AudioASIO::Device	file:
prefersTrackingUntilMouseUp	hiro/cocoa/widget/table-view.hpp	/^+(BOOL) prefersTrackingUntilMouseUp;$/;"	v
prefetch	higan/gba/cpu/cpu.hpp	/^    uint1 prefetch;$/;"	m	struct:Wait
prefetch	higan/gba/cpu/cpu.hpp	/^  } prefetch;$/;"	v	typeref:struct:__anon6
prefix	higan/processor/v30mz/v30mz.hpp	/^    bool prefix;  \/\/set to true for prefix instructions; prevents flushing of Prefix struct$/;"	m	struct:Processor::State
prefix	higan/processor/z80/z80.hpp	/^  enum class Prefix : uint { hl, ix, iy } prefix = Prefix::hl;$/;"	m	struct:Processor::Z80	typeref:class:Processor::Z80::Prefix
prefix	nall/GNUmakefile	/^prefix := $(HOME)\/.local$/;"	m
prefix	nall/windows/detour.hpp	/^    uint16 prefix;$/;"	m	struct:nall::detour::opcode
prefixes	higan/processor/v30mz/v30mz.hpp	/^  vector<uint8> prefixes;$/;"	m	namespace:Processor
presentation	higan/target-bsnes/presentation/presentation.cpp	/^Presentation presentation;$/;"	v
presentation	higan/target-higan/presentation/presentation.cpp	/^unique_pointer<Presentation> presentation;$/;"	v
press	higan/target-bsnes/input/input.hpp	/^  function<auto() -> void> press;$/;"	m	struct:InputHotkey
press	higan/target-higan/input/input.hpp	/^  function<auto () -> void> press;$/;"	m	struct:InputHotkey
prev	higan/sfc/controller/justifier/justifier.hpp	/^  uint prev;$/;"	v
prev	higan/sfc/controller/super-scope/super-scope.hpp	/^  uint prev;$/;"	v
previousBitplaneBits	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    uint16 previousBitplaneBits[8];$/;"	m	struct:Decompressor::CM
previousPrompt	hiro/gtk/widget/console.hpp	/^  string previousPrompt;$/;"	m	struct:hiro::pConsole
prgBank	higan/fc/cartridge/board/bandai-fcg.cpp	/^  uint8 prgBank;$/;"	m	struct:BandaiFCG	file:
prgBank	higan/fc/cartridge/board/nes-axrom.cpp	/^  uint4 prgBank;$/;"	m	struct:NES_AxROM	file:
prgBank	higan/fc/cartridge/board/nes-bnrom.cpp	/^  uint2 prgBank;$/;"	m	struct:NES_BNROM	file:
prgBank	higan/fc/cartridge/board/nes-fxrom.cpp	/^  uint4 prgBank;$/;"	v
prgBank	higan/fc/cartridge/board/nes-gxrom.cpp	/^  uint2 prgBank;$/;"	m	struct:NES_GxROM	file:
prgBank	higan/fc/cartridge/board/nes-pxrom.cpp	/^  uint4 prgBank;$/;"	v
prgBank	higan/fc/cartridge/board/nes-uxrom.cpp	/^  uint4 prgBank;$/;"	m	struct:NES_UxROM	file:
prgBank	higan/fc/cartridge/board/sunsoft-5b.cpp	/^  uint8 prgBank[4];$/;"	m	struct:Sunsoft5B	file:
prgBank	higan/fc/cartridge/chip/mmc1.cpp	/^  uint4 prgBank;$/;"	m	struct:MMC1	file:
prgBank	higan/fc/cartridge/chip/mmc3.cpp	/^  uint8 prgBank[2];$/;"	m	struct:MMC3	file:
prgBank	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 prgBank[4];         \/\/$5114-5117$/;"	m	struct:MMC5	file:
prgBank	higan/fc/cartridge/chip/mmc6.cpp	/^  uint8 prgBank[2];$/;"	m	struct:MMC6	file:
prgBank	higan/fc/cartridge/chip/vrc1.cpp	/^  uint4 prgBank[3];$/;"	m	struct:VRC1	file:
prgBank	higan/fc/cartridge/chip/vrc2.cpp	/^  uint5 prgBank[2];$/;"	m	struct:VRC2	file:
prgBank	higan/fc/cartridge/chip/vrc3.cpp	/^  uint4 prgBank;$/;"	m	struct:VRC3	file:
prgBank	higan/fc/cartridge/chip/vrc4.cpp	/^  uint5 prgBank[2];$/;"	m	struct:VRC4	file:
prgBank	higan/fc/cartridge/chip/vrc6.cpp	/^  uint8 prgBank[2];$/;"	m	struct:VRC6	file:
prgBank	higan/fc/cartridge/chip/vrc7.cpp	/^  uint8 prgBank[3];$/;"	m	struct:VRC7	file:
prgMode	higan/fc/cartridge/chip/mmc1.cpp	/^  bool prgMode;$/;"	m	struct:MMC1	file:
prgMode	higan/fc/cartridge/chip/mmc3.cpp	/^  bool prgMode;$/;"	m	struct:MMC3	file:
prgMode	higan/fc/cartridge/chip/mmc5.cpp	/^  uint2 prgMode;  \/\/$5100$/;"	m	struct:MMC5	file:
prgMode	higan/fc/cartridge/chip/mmc6.cpp	/^  bool prgMode;$/;"	m	struct:MMC6	file:
prgMode	higan/fc/cartridge/chip/vrc4.cpp	/^  bool prgMode;$/;"	m	struct:VRC4	file:
prgSize	higan/fc/cartridge/chip/mmc1.cpp	/^  bool prgSize;  \/\/0 = 32K, 1 = 16K$/;"	m	struct:MMC1	file:
prgram	higan/fc/cartridge/board/board.hpp	/^  Memory prgram;$/;"	m	struct:Board
prgramWriteProtect	higan/fc/cartridge/chip/mmc5.cpp	/^  uint2 prgramWriteProtect[2];  \/\/$5102,$5103$/;"	m	struct:MMC5	file:
prgrom	higan/fc/cartridge/board/board.hpp	/^  Memory prgrom;$/;"	m	struct:Board
primary	hiro/windows/monitor.cpp	/^  uint primary = 0;$/;"	m	struct:hiro::MonitorInfo	file:
print	hiro/cocoa/widget/console.cpp	/^void pConsole::print(string text) {$/;"	f	class:hiro::pConsole
print	hiro/core/shared.hpp	/^  auto print(const string& text) { return self().print(text), *this; }$/;"	f	struct:Console
printf	higan/emulator/thread.hpp	5;"	d
prior	higan/md/ym2612/ym2612.hpp	/^      int16  prior = 0;$/;"	m	struct:Channel::Operator
priority	higan/gb/ppu/ppu.hpp	/^    bool priority = 0;$/;"	m	struct:PPU::Pixel
priority	higan/gba/ppu/ppu.hpp	/^      uint2 priority;$/;"	m	struct:PPU::Background::IO
priority	higan/gba/ppu/ppu.hpp	/^    uint2  priority;$/;"	m	struct:PPU::Object
priority	higan/gba/ppu/ppu.hpp	/^    uint2  priority;$/;"	m	struct:PPU::Pixel
priority	higan/md/vdp/vdp.hpp	/^    uint1  priority;$/;"	m	struct:VDP::Object
priority	higan/md/vdp/vdp.hpp	/^    uint1 priority;$/;"	m	struct:VDP::Pixel
priority	higan/ms/vdp/vdp.hpp	/^      uint1 priority;$/;"	m	struct:VDP::Background::Output
priority	higan/pce/vdc/vdc.hpp	/^      bool   priority = 0;$/;"	m	struct:VDC::Sprite::Object
priority	higan/pce/vdc/vdc.hpp	/^    bool priority = 0;$/;"	m	struct:VDC::Sprite
priority	higan/pce/vpc/vpc.hpp	/^    uint2 priority;$/;"	m	struct:VPC::Settings
priority	higan/sfc/ppu/object.hpp	/^      uint  priority;  \/\/0 = none (transparent)$/;"	m	struct:Object::Output::Pixel
priority	higan/sfc/ppu/object.hpp	/^    uint priority[4];$/;"	m	struct:Object::IO
priority	higan/sfc/ppu/object.hpp	/^    uint2  priority;$/;"	m	struct:Object::Tile
priority	higan/sfc/ppu/object.hpp	/^    uint2 priority;$/;"	m	struct:OAM::Object
privateKey	nall/beat/archive/container.hpp	/^    uint256_t privateKey = 0;$/;"	m	struct:nall::Beat::Archive::Container::Encryption
privateKey	nall/beat/archive/container.hpp	/^    uint256_t privateKey = 0;$/;"	m	struct:nall::Beat::Archive::Container::Signature
probability	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^    uint8 probability;  \/\/of the more probable symbol (MPS)$/;"	m	struct:Decompressor::ModelState	file:
processor	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  } processor;$/;"	v	typeref:struct:Processor
processors	higan/processor/GNUmakefile	/^processors := $(call unique,$(processors))$/;"	m
product	ruby/input/joypad/udev.cpp	/^    string product;$/;"	m	struct:InputJoypadUdev::Joypad	file:
productID	ruby/input/joypad/directinput.cpp	/^    uint16_t productID = 0;$/;"	m	struct:InputJoypadDirectInput::Joypad	file:
productID	ruby/input/joypad/udev.cpp	/^    string productID;$/;"	m	struct:InputJoypadUdev::Joypad	file:
productID	ruby/input/shared/rawinput.cpp	/^    uint16_t productID = 0;$/;"	m	struct:RawInput::Device	file:
program	higan/target-bsnes/program/program.cpp	/^Program program;$/;"	v
program	higan/target-bsnes/program/program.hpp	/^    vector<uint8_t> program;$/;"	m	struct:Program::BSMemory
program	higan/target-bsnes/program/program.hpp	/^    vector<uint8_t> program;$/;"	m	struct:Program::GameBoy
program	higan/target-bsnes/program/program.hpp	/^    vector<uint8_t> program;$/;"	m	struct:Program::SufamiTurbo
program	higan/target-bsnes/program/program.hpp	/^    vector<uint8_t> program;$/;"	m	struct:Program::SuperFamicom
program	higan/target-higan/program/program.cpp	/^unique_pointer<Program> program;$/;"	v
program	ruby/video/opengl/opengl.hpp	/^  GLuint program = 0;$/;"	m	struct:OpenGLSurface
programArgument	nall/arguments.hpp	/^  string programArgument;$/;"	m	struct:nall::Arguments
programRAM	higan/processor/hg51b/hg51b.hpp	/^  uint16 programRAM[2][256];  \/\/instruction cache$/;"	m	struct:Processor::HG51B
programRAM	higan/sfc/coprocessor/armdsp/armdsp.hpp	/^  uint8 programRAM[16 * 1024];$/;"	m	struct:ArmDSP
programROM	higan/processor/upd96050/upd96050.hpp	/^  uint24 programROM[16384];$/;"	m	struct:Processor::uPD96050
programROM	higan/sfc/coprocessor/armdsp/armdsp.hpp	/^  uint8 programROM[128 * 1024];$/;"	m	struct:ArmDSP
programs	ruby/video/opengl/opengl.hpp	/^  vector<OpenGLProgram> programs;$/;"	m	struct:OpenGL
prom	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  ReadableMemory prom;  \/\/program ROM$/;"	m	struct:SPC7110
prompt	hiro/core/core.hpp	/^    string prompt;$/;"	m	struct:hiro::mConsole::State
prompt	hiro/core/shared.hpp	/^  auto prompt() const { return self().prompt(); }$/;"	f	struct:Console
properties	hiro/core/object.hpp	/^    set<Property> properties;   \/\/16$/;"	m	struct:mObject::State
property	nall/property.hpp	/^  property(const T& value) : value(value) {}$/;"	f	struct:nall::property
property	nall/property.hpp	/^template<typename T> struct property {$/;"	s	namespace:nall
pseudoHires	higan/sfc/ppu/ppu.hpp	/^    bool pseudoHires;$/;"	m	struct:PPU::IO
psg	higan/md/psg/psg.cpp	/^PSG psg;$/;"	m	namespace:MegaDrive	file:
psg	higan/ms/psg/psg.cpp	/^PSG psg;$/;"	m	namespace:MasterSystem	file:
psg	higan/pce/psg/psg.cpp	/^PSG psg;$/;"	m	namespace:PCEngine	file:
psram	higan/sfc/coprocessor/mcc/mcc.hpp	/^  WritableMemory psram;$/;"	m	struct:MCC
psramEnableHi	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint1 psramEnableHi;       \/\/bit  4$/;"	m	struct:MCC::Registers
psramEnableLo	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint1 psramEnableLo;       \/\/bit  3$/;"	m	struct:MCC::Registers
psramMapping	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint2 psramMapping;        \/\/bits 5-6$/;"	m	struct:MCC::Registers
publicKey	nall/beat/archive/container.hpp	/^    uint256_t publicKey = 0;$/;"	m	struct:nall::Beat::Archive::Container::Signature
puff	nall/decode/inflate.hpp	/^namespace puff {$/;"	n	namespace:nall::Decode
pulse	higan/fc/apu/apu.hpp	/^  } pulse[2];$/;"	m	struct:APU	typeref:struct:APU::Pulse
pulse	higan/fc/cartridge/board/sunsoft-5b.cpp	/^  } pulse[3];$/;"	m	struct:Sunsoft5B	typeref:struct:Sunsoft5B::Pulse	file:
pulse1	higan/fc/cartridge/chip/vrc6.cpp	/^  } pulse1, pulse2;$/;"	m	struct:VRC6	typeref:struct:VRC6::Pulse	file:
pulse2	higan/fc/cartridge/chip/vrc6.cpp	/^  } pulse1, pulse2;$/;"	m	struct:VRC6	typeref:struct:VRC6::Pulse	file:
pulseDAC	higan/fc/apu/apu.hpp	/^  int16 pulseDAC[32];$/;"	m	struct:APU
pulseLock	higan/sfc/coprocessor/icd/icd.hpp	/^  bool pulseLock;$/;"	m	struct:ICD
pulsePeriod	higan/fc/apu/apu.hpp	/^    uint11 pulsePeriod;$/;"	m	struct:APU::Sweep
px	higan/gb/ppu/ppu.hpp	/^  uint px = 0;$/;"	m	struct:PPU
qtActionGroup	hiro/qt/action/menu-radio-item.hpp	/^  QActionGroup* qtActionGroup = nullptr;$/;"	m	struct:hiro::pMenuRadioItem
qtApplication	hiro/qt/application.hpp	/^static QApplication* qtApplication = nullptr;$/;"	m	namespace:hiro
qtButton	hiro/qt/widget/button.hpp	/^  QtButton* qtButton = nullptr;$/;"	m	struct:hiro::pButton
qtCanvas	hiro/qt/widget/canvas.hpp	/^  QtCanvas* qtCanvas = nullptr;$/;"	m	struct:hiro::pCanvas
qtCheckButton	hiro/qt/widget/check-button.hpp	/^  QtCheckButton* qtCheckButton = nullptr;$/;"	m	struct:hiro::pCheckButton
qtCheckLabel	hiro/qt/widget/check-label.hpp	/^  QtCheckLabel* qtCheckLabel = nullptr;$/;"	m	struct:hiro::pCheckLabel
qtComboButton	hiro/qt/widget/combo-button.hpp	/^  QtComboButton* qtComboButton = nullptr;$/;"	m	struct:hiro::pComboButton
qtConsole	hiro/qt/platform.hpp	/^  QtConsole* qtConsole;$/;"	m	struct:hiro::pConsole
qtContainer	hiro/qt/window.hpp	/^  QWidget* qtContainer = nullptr;$/;"	m	struct:hiro::pWindow
qtFrame	hiro/qt/widget/frame.hpp	/^  QGroupBox* qtFrame = nullptr;$/;"	m	struct:hiro::pFrame
qtHexEdit	hiro/qt/widget/hex-edit.hpp	/^  QtHexEdit* qtHexEdit = nullptr;$/;"	m	struct:hiro::pHexEdit
qtHorizontalScrollBar	hiro/qt/widget/horizontal-scroll-bar.hpp	/^  QtHorizontalScrollBar* qtHorizontalScrollBar = nullptr;$/;"	m	struct:hiro::pHorizontalScrollBar
qtHorizontalSlider	hiro/qt/widget/horizontal-slider.hpp	/^  QtHorizontalSlider* qtHorizontalSlider = nullptr;$/;"	m	struct:hiro::pHorizontalSlider
qtIconView	hiro/qt/platform.hpp	/^  QtListWidget* qtIconView;$/;"	m	struct:hiro::pIconView
qtImage	hiro/qt/widget/canvas.hpp	/^  QImage* qtImage = nullptr;$/;"	m	struct:hiro::pCanvas
qtImageHeight	hiro/qt/widget/canvas.hpp	/^  unsigned qtImageHeight = 0;$/;"	m	struct:hiro::pCanvas
qtImageWidth	hiro/qt/widget/canvas.hpp	/^  unsigned qtImageWidth = 0;$/;"	m	struct:hiro::pCanvas
qtItem	hiro/qt/widget/table-view-item.hpp	/^  QTreeWidgetItem* qtItem = nullptr;$/;"	m	struct:hiro::pTableViewItem
qtLabel	hiro/qt/widget/label.hpp	/^  QtLabel* qtLabel = nullptr;$/;"	m	struct:hiro::pLabel
qtLayout	hiro/qt/widget/hex-edit.hpp	/^  QHBoxLayout* qtLayout = nullptr;$/;"	m	struct:hiro::pHexEdit
qtLayout	hiro/qt/window.hpp	/^  QVBoxLayout* qtLayout = nullptr;$/;"	m	struct:hiro::pWindow
qtLineEdit	hiro/qt/widget/line-edit.hpp	/^  QtLineEdit* qtLineEdit = nullptr;$/;"	m	struct:hiro::pLineEdit
qtMenu	hiro/qt/action/menu.hpp	/^  QMenu* qtMenu = nullptr;$/;"	m	struct:hiro::pMenu
qtMenuBar	hiro/qt/window.hpp	/^  QMenuBar* qtMenuBar = nullptr;$/;"	m	struct:hiro::pWindow
qtMenuCheckItem	hiro/qt/action/menu-check-item.hpp	/^  QtMenuCheckItem* qtMenuCheckItem = nullptr;$/;"	m	struct:hiro::pMenuCheckItem
qtMenuItem	hiro/qt/action/menu-item.hpp	/^  QtMenuItem* qtMenuItem = nullptr;$/;"	m	struct:hiro::pMenuItem
qtMenuRadioItem	hiro/qt/action/menu-radio-item.hpp	/^  QtMenuRadioItem* qtMenuRadioItem = nullptr;$/;"	m	struct:hiro::pMenuRadioItem
qtMenuSeparator	hiro/qt/action/menu-separator.hpp	/^  QAction* qtMenuSeparator = nullptr;$/;"	m	struct:hiro::pMenuSeparator
qtPopupMenu	hiro/qt/popup-menu.hpp	/^  QMenu* qtPopupMenu = nullptr;$/;"	m	struct:hiro::pPopupMenu
qtProgressBar	hiro/qt/widget/progress-bar.hpp	/^  QProgressBar* qtProgressBar = nullptr;$/;"	m	struct:hiro::pProgressBar
qtRadioButton	hiro/qt/widget/radio-button.hpp	/^  QtRadioButton* qtRadioButton = nullptr;$/;"	m	struct:hiro::pRadioButton
qtRadioLabel	hiro/qt/widget/radio-label.hpp	/^  QtRadioLabel* qtRadioLabel = nullptr;$/;"	m	struct:hiro::pRadioLabel
qtScrollBar	hiro/qt/widget/hex-edit.hpp	/^  QtHexEditScrollBar* qtScrollBar = nullptr;$/;"	m	struct:hiro::pHexEdit
qtStatusBar	hiro/qt/window.hpp	/^  QStatusBar* qtStatusBar = nullptr;$/;"	m	struct:hiro::pWindow
qtTabFrame	hiro/qt/widget/tab-frame.hpp	/^  QtTabFrame* qtTabFrame = nullptr;$/;"	m	struct:hiro::pTabFrame
qtTabFrameItem	hiro/qt/widget/tab-frame-item.hpp	/^  QWidget* qtTabFrameItem = nullptr;$/;"	m	struct:hiro::pTabFrameItem
qtTableView	hiro/qt/widget/table-view.hpp	/^  QtTableView* qtTableView = nullptr;$/;"	m	struct:hiro::pTableView
qtTableViewDelegate	hiro/qt/widget/table-view.hpp	/^  QtTableViewDelegate* qtTableViewDelegate = nullptr;$/;"	m	struct:hiro::pTableView
qtTextEdit	hiro/qt/widget/text-edit.hpp	/^  QtTextEdit* qtTextEdit = nullptr;$/;"	m	struct:hiro::pTextEdit
qtTimer	hiro/qt/timer.hpp	/^  QtTimer* qtTimer = nullptr;$/;"	m	struct:hiro::pTimer
qtVerticalScrollBar	hiro/qt/widget/vertical-scroll-bar.hpp	/^  QtVerticalScrollBar* qtVerticalScrollBar = nullptr;$/;"	m	struct:hiro::pVerticalScrollBar
qtVerticalSlider	hiro/qt/widget/vertical-slider.hpp	/^  QtVerticalSlider* qtVerticalSlider = nullptr;$/;"	m	struct:hiro::pVerticalSlider
qtViewport	hiro/qt/widget/viewport.hpp	/^  QtViewport* qtViewport = nullptr;$/;"	m	struct:hiro::pViewport
qtWidget	hiro/qt/widget/widget.hpp	/^  QWidget* qtWidget = nullptr;$/;"	m	struct:hiro::pWidget
qtWindow	hiro/qt/window.hpp	/^  QtWindow* qtWindow = nullptr;$/;"	m	struct:hiro::pWindow
qualifier	higan/target-bsnes/input/input.hpp	/^    Qualifier qualifier = Qualifier::None;$/;"	m	struct:InputMapping::Mapping
qualifier	higan/target-higan/input/input.hpp	/^    Qualifier qualifier = Qualifier::None;$/;"	m	struct:InputMapping::Mapping
quality	nall/dsp/iir/biquad.hpp	/^  double quality;             \/\/frequency response quality$/;"	m	struct:nall::DSP::IIR::Biquad
query	nall/database/odbc.hpp	/^      Query& query;$/;"	m	struct:nall::Database::ODBC::Query::Iterator
query	nall/database/sqlite3.hpp	/^      Query& query;$/;"	m	struct:nall::Database::SQLite3::Query::Iterator
queue	nall/hash/sha224.hpp	/^  uint32_t queue[16] = {0};$/;"	m	struct:nall::Hash::SHA224
queue	nall/hash/sha256.hpp	/^  uint32_t queue[16] = {0};$/;"	m	struct:nall::Hash::SHA256
queue	nall/hash/sha384.hpp	/^  uint64_t queue[16] = {0};$/;"	m	struct:nall::Hash::SHA384
queue	nall/hash/sha512.hpp	/^  uint64_t queue[16] = {0};$/;"	m	struct:nall::Hash::SHA512
queue	nall/queue.hpp	/^  queue(const queue& source) { operator=(source); }$/;"	f	struct:nall::queue
queue	nall/queue.hpp	/^  queue(queue&& source) { operator=(move(source)); }$/;"	f	struct:nall::queue
queue	nall/queue.hpp	/^struct queue {$/;"	s	namespace:nall
queue	ruby/audio/wasapi.cpp	/^  } queue;$/;"	m	struct:AudioWASAPI	typeref:struct:AudioWASAPI::Queue	file:
queue	ruby/audio/xaudio2.cpp	/^  volatile long queue = 0;  \/\/how many buffers are queued and ready for playback$/;"	m	struct:AudioXAudio2	file:
queueFull	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 queueFull;$/;"	m	struct:BSMemory::Block::Status
queueFull	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 queueFull;$/;"	m	struct:BSMemory::Global::Status
queued	nall/hash/sha224.hpp	/^  uint32_t queued = 0;$/;"	m	struct:nall::Hash::SHA224
queued	nall/hash/sha256.hpp	/^  uint32_t queued = 0;$/;"	m	struct:nall::Hash::SHA256
queued	nall/hash/sha384.hpp	/^  uint64_t queued = 0;$/;"	m	struct:nall::Hash::SHA384
queued	nall/hash/sha512.hpp	/^  uint64_t queued = 0;$/;"	m	struct:nall::Hash::SHA512
quit	hiro/core/application.hpp	/^    bool quit = false;$/;"	m	struct:Application::State
r	higan/processor/gsu/registers.hpp	/^    BooleanBitField<uint16_t,  6> r;       \/\/ROM r14 read flag$/;"	m	union:SFR::__anon27
r	higan/processor/gsu/registers.hpp	/^  Register r[16];   \/\/general purpose registers$/;"	m	struct:Registers
r	higan/processor/hg51b/hg51b.hpp	/^  } r;$/;"	m	struct:Processor::HG51B	typeref:struct:Processor::HG51B::Registers
r	higan/processor/huc6280/huc6280.hpp	/^  } r;$/;"	m	struct:Processor::HuC6280	typeref:struct:Processor::HuC6280::Registers
r	higan/processor/lr35902/lr35902.hpp	/^  } r;$/;"	m	struct:Processor::LR35902	typeref:struct:Processor::LR35902::Registers
r	higan/processor/mos6502/mos6502.hpp	/^  } r;$/;"	m	struct:Processor::MOS6502	typeref:struct:Processor::MOS6502::Registers
r	higan/processor/spc700/spc700.hpp	/^  } r;$/;"	m	struct:Processor::SPC700	typeref:struct:Processor::SPC700::Registers
r	higan/processor/v30mz/v30mz.hpp	/^  } r;$/;"	m	namespace:Processor	typeref:struct:Processor::Registers
r	higan/processor/wdc65816/wdc65816.hpp	/^  } r;$/;"	m	struct:Processor::WDC65816	typeref:struct:Processor::WDC65816::Registers
r	higan/processor/z80/z80.hpp	/^  } r;$/;"	m	struct:Processor::Z80	typeref:struct:Processor::Z80::Registers
r	higan/sfc/controller/gamepad/gamepad.hpp	/^  boolean a, x, l, r;$/;"	v
r	higan/sfc/controller/mouse/mouse.hpp	/^  bool r;      \/\/right button$/;"	v
r	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    boolean a, x, l, r;$/;"	m	struct:Gamepad
r	higan/sfc/coprocessor/mcc/mcc.hpp	/^  } r, w;$/;"	m	struct:MCC	typeref:struct:MCC::Registers
r	higan/ws/apu/apu.hpp	/^    } r;$/;"	m	struct:APU::Channel1	typeref:struct:APU::Channel1::Registers
r	higan/ws/apu/apu.hpp	/^    } r;$/;"	m	struct:APU::Channel2	typeref:struct:APU::Channel2::Registers
r	higan/ws/apu/apu.hpp	/^    } r;$/;"	m	struct:APU::Channel3	typeref:struct:APU::Channel3::Registers
r	higan/ws/apu/apu.hpp	/^    } r;$/;"	m	struct:APU::Channel4	typeref:struct:APU::Channel4::Registers
r	higan/ws/apu/apu.hpp	/^    } r;$/;"	m	struct:APU::Channel5	typeref:struct:APU::Channel5::Registers
r	higan/ws/apu/apu.hpp	/^    } r;$/;"	m	struct:APU::DMA	typeref:struct:APU::DMA::Registers
r	higan/ws/apu/apu.hpp	/^  } r;$/;"	m	struct:APU	typeref:struct:APU::Registers
r	higan/ws/cartridge/cartridge.hpp	/^  } r;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Registers
r	higan/ws/cpu/cpu.hpp	/^  } r;$/;"	m	struct:CPU	typeref:struct:CPU::Registers
r	higan/ws/eeprom/eeprom.hpp	/^  } r;$/;"	v	typeref:struct:Registers
r	higan/ws/ppu/ppu.hpp	/^  } r;$/;"	m	struct:PPU	typeref:struct:PPU::Registers
r	higan/ws/system/system.hpp	/^  } r;$/;"	m	struct:System	typeref:struct:System::Registers
r	nall/mac/poly1305.hpp	/^  uint64_t r[3];$/;"	m	struct:nall::MAC::Poly1305
r0	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r0	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    uint8 r0, r1, r2;$/;"	m	struct:Decompressor::OL
r1	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r1	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    uint8 r0, r1, r2;$/;"	m	struct:Decompressor::OL
r10	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r8, r9, r10, r11, r12, r13, r14;$/;"	m	struct:Processor::FIQ
r10	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r11	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r8, r9, r10, r11, r12, r13, r14;$/;"	m	struct:Processor::FIQ
r11	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r12	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r8, r9, r10, r11, r12, r13, r14;$/;"	m	struct:Processor::FIQ
r12	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r13	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r13, r14;$/;"	m	struct:Processor::ABT
r13	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r13, r14;$/;"	m	struct:Processor::IRQ
r13	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r13, r14;$/;"	m	struct:Processor::SVC
r13	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r13, r14;$/;"	m	struct:Processor::UND
r13	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r8, r9, r10, r11, r12, r13, r14;$/;"	m	struct:Processor::FIQ
r13	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r14	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r13, r14;$/;"	m	struct:Processor::ABT
r14	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r13, r14;$/;"	m	struct:Processor::IRQ
r14	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r13, r14;$/;"	m	struct:Processor::SVC
r14	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r13, r14;$/;"	m	struct:Processor::UND
r14	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r8, r9, r10, r11, r12, r13, r14;$/;"	m	struct:Processor::FIQ
r14	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r15	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r2	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r2	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    uint8 r0, r1, r2;$/;"	m	struct:Decompressor::OL
r2188	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2188, r2189, r218a, r218b;$/;"	m	struct:Satellaview::__anon7
r2189	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2188, r2189, r218a, r218b;$/;"	m	struct:Satellaview::__anon7
r218a	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2188, r2189, r218a, r218b;$/;"	m	struct:Satellaview::__anon7
r218b	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2188, r2189, r218a, r218b;$/;"	m	struct:Satellaview::__anon7
r218c	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r218c, r218d, r218e, r218f;$/;"	m	struct:Satellaview::__anon7
r218d	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r218c, r218d, r218e, r218f;$/;"	m	struct:Satellaview::__anon7
r218e	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r218c, r218d, r218e, r218f;$/;"	m	struct:Satellaview::__anon7
r218f	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r218c, r218d, r218e, r218f;$/;"	m	struct:Satellaview::__anon7
r2190	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2190, r2191, r2192, r2193;$/;"	m	struct:Satellaview::__anon7
r2191	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2190, r2191, r2192, r2193;$/;"	m	struct:Satellaview::__anon7
r2192	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2190, r2191, r2192, r2193;$/;"	m	struct:Satellaview::__anon7
r2193	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2190, r2191, r2192, r2193;$/;"	m	struct:Satellaview::__anon7
r2194	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2194, r2195, r2196, r2197;$/;"	m	struct:Satellaview::__anon7
r2195	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2194, r2195, r2196, r2197;$/;"	m	struct:Satellaview::__anon7
r2196	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2194, r2195, r2196, r2197;$/;"	m	struct:Satellaview::__anon7
r2197	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2194, r2195, r2196, r2197;$/;"	m	struct:Satellaview::__anon7
r2198	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2198, r2199, r219a, r219b;$/;"	m	struct:Satellaview::__anon7
r2199	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2198, r2199, r219a, r219b;$/;"	m	struct:Satellaview::__anon7
r219a	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2198, r2199, r219a, r219b;$/;"	m	struct:Satellaview::__anon7
r219b	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r2198, r2199, r219a, r219b;$/;"	m	struct:Satellaview::__anon7
r219c	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r219c, r219d, r219e, r219f;$/;"	m	struct:Satellaview::__anon7
r219d	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r219c, r219d, r219e, r219f;$/;"	m	struct:Satellaview::__anon7
r219e	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r219c, r219d, r219e, r219f;$/;"	m	struct:Satellaview::__anon7
r219f	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 r219c, r219d, r219e, r219f;$/;"	m	struct:Satellaview::__anon7
r3	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r4	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r4800	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  uint8 r4800;  \/\/hard enable$/;"	m	struct:SDD1
r4801	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  uint8 r4801;  \/\/soft enable$/;"	m	struct:SDD1
r4801	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4801;  \/\/compression table B0$/;"	m	struct:SPC7110
r4802	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4802;  \/\/compression table B1$/;"	m	struct:SPC7110
r4803	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint7 r4803;  \/\/compression table B2$/;"	m	struct:SPC7110
r4804	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  uint8 r4804;  \/\/MMC bank 0$/;"	m	struct:SDD1
r4804	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4804;  \/\/compression table index$/;"	m	struct:SPC7110
r4805	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  uint8 r4805;  \/\/MMC bank 1$/;"	m	struct:SDD1
r4805	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4805;  \/\/adjust length B0$/;"	m	struct:SPC7110
r4806	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  uint8 r4806;  \/\/MMC bank 2$/;"	m	struct:SDD1
r4806	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4806;  \/\/adjust length B1$/;"	m	struct:SPC7110
r4807	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  uint8 r4807;  \/\/MMC bank 3$/;"	m	struct:SDD1
r4807	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4807;  \/\/stride length$/;"	m	struct:SPC7110
r4809	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4809;  \/\/compression counter B0$/;"	m	struct:SPC7110
r480a	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r480a;  \/\/compression counter B1$/;"	m	struct:SPC7110
r480b	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r480b;  \/\/decompression settings$/;"	m	struct:SPC7110
r480c	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r480c;  \/\/decompression status$/;"	m	struct:SPC7110
r4810	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4810;  \/\/data port read + seek$/;"	m	struct:SPC7110
r4811	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4811;  \/\/data offset B0$/;"	m	struct:SPC7110
r4812	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4812;  \/\/data offset B1$/;"	m	struct:SPC7110
r4813	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint7 r4813;  \/\/data offset B2$/;"	m	struct:SPC7110
r4814	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4814;  \/\/data adjust B0$/;"	m	struct:SPC7110
r4815	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4815;  \/\/data adjust B1$/;"	m	struct:SPC7110
r4816	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4816;  \/\/data stride B0$/;"	m	struct:SPC7110
r4817	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4817;  \/\/data stride B1$/;"	m	struct:SPC7110
r4818	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4818;  \/\/data port settings$/;"	m	struct:SPC7110
r481a	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r481a;  \/\/data port seek$/;"	m	struct:SPC7110
r4820	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4820;  \/\/16-bit multiplicand B0, 32-bit dividend B0$/;"	m	struct:SPC7110
r4821	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4821;  \/\/16-bit multiplicand B1, 32-bit dividend B1$/;"	m	struct:SPC7110
r4822	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4822;  \/\/32-bit dividend B2$/;"	m	struct:SPC7110
r4823	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4823;  \/\/32-bit dividend B3$/;"	m	struct:SPC7110
r4824	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4824;  \/\/16-bit multiplier B0$/;"	m	struct:SPC7110
r4825	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4825;  \/\/16-bit multiplier B1$/;"	m	struct:SPC7110
r4826	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4826;  \/\/16-bit divisor B0$/;"	m	struct:SPC7110
r4827	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4827;  \/\/16-bit divisor B1$/;"	m	struct:SPC7110
r4828	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4828;  \/\/32-bit product B0, 32-bit quotient B0$/;"	m	struct:SPC7110
r4829	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4829;  \/\/32-bit product B1, 32-bit quotient B1$/;"	m	struct:SPC7110
r482a	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r482a;  \/\/32-bit product B2, 32-bit quotient B2$/;"	m	struct:SPC7110
r482b	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r482b;  \/\/32-bit product B3, 32-bit quotient B3$/;"	m	struct:SPC7110
r482c	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r482c;  \/\/16-bit remainder B0$/;"	m	struct:SPC7110
r482d	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r482d;  \/\/16-bit remainder B1$/;"	m	struct:SPC7110
r482e	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r482e;  \/\/math settings$/;"	m	struct:SPC7110
r482f	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r482f;  \/\/math status$/;"	m	struct:SPC7110
r4830	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4830;  \/\/bank 0 mapping + SRAM write enable$/;"	m	struct:SPC7110
r4831	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4831;  \/\/bank 1 mapping$/;"	m	struct:SPC7110
r4832	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4832;  \/\/bank 2 mapping$/;"	m	struct:SPC7110
r4833	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4833;  \/\/bank 3 mapping$/;"	m	struct:SPC7110
r4834	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  uint8 r4834;  \/\/bank mapping settings$/;"	m	struct:SPC7110
r5	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r6	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r6003	higan/sfc/coprocessor/icd/icd.hpp	/^  uint8 r6003;      \/\/control port$/;"	m	struct:ICD
r6004	higan/sfc/coprocessor/icd/icd.hpp	/^  uint8 r6004;      \/\/joypad 1$/;"	m	struct:ICD
r6005	higan/sfc/coprocessor/icd/icd.hpp	/^  uint8 r6005;      \/\/joypad 2$/;"	m	struct:ICD
r6006	higan/sfc/coprocessor/icd/icd.hpp	/^  uint8 r6006;      \/\/joypad 3$/;"	m	struct:ICD
r6007	higan/sfc/coprocessor/icd/icd.hpp	/^  uint8 r6007;      \/\/joypad 4$/;"	m	struct:ICD
r7	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r7000	higan/sfc/coprocessor/icd/icd.hpp	/^  uint8 r7000[16];  \/\/JOYP packet data$/;"	m	struct:ICD
r8	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r8, r9, r10, r11, r12, r13, r14;$/;"	m	struct:Processor::FIQ
r8	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
r9	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      GPR r8, r9, r10, r11, r12, r13, r14;$/;"	m	struct:Processor::FIQ
r9	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    GPR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;$/;"	m	struct:Processor
raise	nall/primitives.hpp	/^  inline auto raise() { return data == 0 ? data = 1, true : false; }$/;"	f	struct:nall::Boolean
raise	nall/primitives.hpp	/^  inline auto raise(bool value) { return !data && value ? (data = value, true) : (data = value, false); }$/;"	f	struct:nall::Boolean
ram	higan/fc/cpu/cpu.hpp	/^  uint8 ram[0x800];$/;"	m	struct:CPU
ram	higan/gb/cartridge/cartridge.hpp	/^  } rom, ram, rtc;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Memory
ram	higan/gb/cartridge/huc1/huc1.hpp	/^    } ram;$/;"	m	struct:HuC1::IO	typeref:struct:HuC1::IO::RAM
ram	higan/gb/cartridge/huc3/huc3.hpp	/^    } ram;$/;"	m	struct:HuC3::IO	typeref:struct:HuC3::IO::RAM
ram	higan/gb/cartridge/mbc1/mbc1.hpp	/^    } ram;$/;"	m	struct:MBC1::IO	typeref:struct:MBC1::IO::RAM
ram	higan/gb/cartridge/mbc2/mbc2.hpp	/^    } ram;$/;"	m	struct:MBC2::IO	typeref:struct:MBC2::IO::RAM
ram	higan/gb/cartridge/mbc3/mbc3.hpp	/^    } ram;$/;"	m	struct:MBC3::IO	typeref:struct:MBC3::IO::RAM
ram	higan/gb/cartridge/mbc5/mbc5.hpp	/^    } ram;$/;"	m	struct:MBC5::IO	typeref:struct:MBC5::IO::RAM
ram	higan/gb/cartridge/mbc6/mbc6.hpp	/^    } ram;$/;"	m	struct:MBC6::IO	typeref:struct:MBC6::IO::RAM
ram	higan/gb/cartridge/mbc7/mbc7.hpp	/^    } ram;$/;"	m	struct:MBC7::IO	typeref:struct:MBC7::IO::RAM
ram	higan/gb/cartridge/mmm01/mmm01.hpp	/^    } ram;$/;"	m	struct:MMM01::IO	typeref:struct:MMM01::IO::RAM
ram	higan/md/apu/apu.hpp	/^  uint8 ram[8 * 1024];$/;"	m	struct:APU
ram	higan/md/cartridge/cartridge.hpp	/^  Memory ram;$/;"	m	struct:Cartridge
ram	higan/md/cpu/cpu.hpp	/^  uint8 ram[64 * 1024];$/;"	m	struct:CPU
ram	higan/ms/cartridge/cartridge.hpp	/^  Memory ram;$/;"	m	struct:Cartridge
ram	higan/ms/cpu/cpu.hpp	/^  uint8 ram[8 * 1024];$/;"	m	struct:CPU
ram	higan/pce/cpu/cpu.hpp	/^  uint8 ram[0x8000];  \/\/PC Engine = 8KB, SuperGrafx = 32KB$/;"	m	struct:CPU
ram	higan/processor/hg51b/hg51b.hpp	/^      uint3 ram = 3;$/;"	m	struct:Processor::HG51B::IO::Wait
ram	higan/processor/hg51b/hg51b.hpp	/^    uint24 ram;      \/\/data RAM data buffer$/;"	m	struct:Processor::HG51B::Registers
ram	higan/sfc/cartridge/cartridge.hpp	/^  WritableMemory ram;$/;"	m	struct:Cartridge
ram	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  WritableMemory ram;$/;"	m	struct:HitachiDSP
ram	higan/sfc/coprocessor/obc1/obc1.hpp	/^  WritableMemory ram;$/;"	m	struct:OBC1
ram	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  WritableMemory ram;$/;"	m	struct:SPC7110
ram	higan/sfc/coprocessor/superfx/superfx.hpp	/^  WritableMemory ram;$/;"	m	struct:SuperFX
ram	higan/sfc/expansion/21fx/21fx.hpp	/^  uint8 ram[122];$/;"	m	struct:S21FX
ram	higan/sfc/slot/sufamiturbo/sufamiturbo.hpp	/^  WritableMemory ram;$/;"	m	struct:SufamiTurboCartridge
ram	higan/ws/cartridge/cartridge.hpp	/^  Memory ram;$/;"	m	struct:Cartridge
ramBank	higan/fc/cartridge/chip/mmc5.cpp	/^  uint2 ramBank;            \/\/$5113$/;"	m	struct:MMC5	file:
ramDisable	higan/fc/cartridge/chip/mmc1.cpp	/^  bool ramDisable;$/;"	m	struct:MMC1	file:
ramDisable	higan/sfc/smp/smp.hpp	/^    uint1 ramDisable;$/;"	m	struct:SMP::IO
ramEnable	higan/fc/cartridge/chip/mmc3.cpp	/^  bool ramEnable;$/;"	m	struct:MMC3	file:
ramEnable	higan/fc/cartridge/chip/mmc6.cpp	/^  bool ramEnable;$/;"	m	struct:MMC6	file:
ramEnable	higan/md/cartridge/cartridge.hpp	/^  uint1 ramEnable;$/;"	m	struct:Cartridge
ramEnablePage2	higan/ms/cartridge/cartridge.hpp	/^    uint1 ramEnablePage2;$/;"	m	struct:Cartridge::Mapper
ramEnablePage3	higan/ms/cartridge/cartridge.hpp	/^    uint1 ramEnablePage3;$/;"	m	struct:Cartridge::Mapper
ramMask	higan/sfc/coprocessor/superfx/superfx.hpp	/^  uint ramMask;$/;"	m	struct:SuperFX
ramPage2	higan/ms/cartridge/cartridge.hpp	/^    uint1 ramPage2;$/;"	m	struct:Cartridge::Mapper
ramReadable	higan/fc/cartridge/chip/mmc6.cpp	/^  bool ramReadable[2];$/;"	m	struct:MMC6	file:
ramSelect	higan/fc/cartridge/chip/mmc5.cpp	/^  bool ramSelect;           \/\/$5113$/;"	m	struct:MMC5	file:
ramWritable	higan/fc/cartridge/chip/mmc6.cpp	/^  bool ramWritable[2];$/;"	m	struct:MMC6	file:
ramWritable	higan/md/cartridge/cartridge.hpp	/^  uint1 ramWritable;$/;"	m	struct:Cartridge
ramWritable	higan/sfc/smp/smp.hpp	/^    uint1 ramWritable = true;$/;"	m	struct:SMP::IO
ramWriteProtect	higan/fc/cartridge/chip/mmc3.cpp	/^  bool ramWriteProtect;$/;"	m	struct:MMC3	file:
ramaddr	higan/processor/gsu/registers.hpp	/^  uint16 ramaddr;$/;"	m	struct:Registers
ramar	higan/processor/gsu/registers.hpp	/^  uint16 ramar;     \/\/RAM buffer address register$/;"	m	struct:Registers
rambr	higan/processor/gsu/registers.hpp	/^  bool rambr;       \/\/game pack RAM bank register$/;"	m	struct:Registers
ramcl	higan/processor/gsu/registers.hpp	/^  uint ramcl;       \/\/clock ticks until ramdr is valid$/;"	m	struct:Registers
ramdr	higan/processor/gsu/registers.hpp	/^  uint8 ramdr;      \/\/RAM buffer data register$/;"	m	struct:Registers
ran	higan/processor/gsu/registers.hpp	/^  bool ran;$/;"	m	struct:SCMR
random	higan/md/system/system.cpp	/^Random random;$/;"	m	namespace:MegaDrive	file:
random	higan/sfc/system/system.cpp	/^Random random;$/;"	m	namespace:SuperFamicom	file:
range	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  uint16 range;         \/\/arithmetic range: technically 8-bits, but Max+1 = 256$/;"	m	struct:Decompressor	file:
range	nall/range.hpp	/^inline auto range(int offset, int size) {$/;"	f	namespace:nall
range	nall/range.hpp	/^inline auto range(int offset, int size, int step) {$/;"	f	namespace:nall
range	nall/range.hpp	/^inline auto range(int size) {$/;"	f	namespace:nall
rangeOver	higan/sfc/ppu/object.hpp	/^    bool rangeOver;$/;"	m	struct:Object::IO
range_t	nall/range.hpp	/^struct range_t {$/;"	s	namespace:nall
rate	higan/fc/cartridge/chip/vrc6.cpp	/^    uint6 rate;$/;"	m	struct:VRC6::Sawtooth	file:
rate	higan/md/psg/psg.hpp	/^    uint2  rate;$/;"	m	struct:PSG::Noise
rate	higan/md/ym2612/ym2612.hpp	/^        int    rate = 0;$/;"	m	struct:Channel::Operator::Envelope
rate	higan/md/ym2612/ym2612.hpp	/^    uint3  rate = 0;$/;"	m	struct:YM2612::LFO
rate	higan/ms/psg/psg.hpp	/^    uint2   rate;$/;"	m	struct:PSG::Noise
rate	higan/ws/apu/apu.hpp	/^      uint2 rate;$/;"	m	struct:APU::DMA::Registers
ratio	nall/dsp/resampler/cubic.hpp	/^  double ratio;$/;"	m	struct:nall::DSP::Resampler::Cubic
rawinput	ruby/input/shared/rawinput.cpp	/^static RawInput rawinput;$/;"	v	file:
rbegin	nall/arguments.hpp	/^  auto rbegin() const { return arguments.rbegin(); }$/;"	f	struct:nall::Arguments
rbegin	nall/arguments.hpp	/^  auto rbegin() { return arguments.rbegin(); }$/;"	f	struct:nall::Arguments
rbegin	nall/beat/archive/container.hpp	/^  auto rbegin() const { return nodes.rbegin(); }$/;"	f	struct:nall::Beat::Archive::Container
rbegin	nall/beat/archive/container.hpp	/^  auto rbegin() { return nodes.rbegin(); }$/;"	f	struct:nall::Beat::Archive::Container
rbegin	nall/iterator.hpp	/^template<typename T> auto rbegin(T& self) { return self.rbegin(); }$/;"	f	namespace:nall
rddiv	higan/sfc/cpu/cpu.hpp	/^    uint16 rddiv;$/;"	m	struct:CPU::IO
rdelete	nall/GNUmakefile	/^    rdelete = $(info Deleting $1 ...) @del \/s \/q $(subst \/,\\,$1) && if exist $(subst \/,\\,$1) (rmdir \/s \/q $(subst \/,\\,$1))$/;"	m
rdelete	nall/GNUmakefile	/^    rdelete = $(info Deleting $1 ...) @rm -rf $1$/;"	m
rdmpy	higan/sfc/cpu/cpu.hpp	/^    uint16 rdmpy;$/;"	m	struct:CPU::IO
rdoffset	higan/gba/apu/apu.hpp	/^    uint5 rdoffset;$/;"	m	struct:APU::FIFO
rdyAddrValid	higan/fc/cpu/cpu.hpp	/^    bool rdyAddrValid = 0;$/;"	m	struct:CPU::IO
rdyAddrValue	higan/fc/cpu/cpu.hpp	/^    uint16 rdyAddrValue;$/;"	m	struct:CPU::IO
rdyLine	higan/fc/cpu/cpu.hpp	/^    bool rdyLine = 1;$/;"	m	struct:CPU::IO
read	higan/md/cartridge/cartridge.hpp	/^  function<uint16 (uint22 address)> read;$/;"	m	struct:Cartridge
read	nall/vfs/vfs.hpp	/^  enum class mode : uint { read, write, modify, create };$/;"	m	class:nall::vfs::file::mode
read	ruby/audio/asio.cpp	/^    uint16_t read;$/;"	m	struct:AudioASIO::Queue	file:
read	ruby/audio/wasapi.cpp	/^    uint16_t read;$/;"	m	struct:AudioWASAPI::Queue	file:
readAddr	higan/fc/apu/apu.hpp	/^    uint15 readAddr;$/;"	m	struct:APU::DMC
readAddress	higan/sfc/coprocessor/icd/icd.hpp	/^  uint readAddress;$/;"	m	struct:ICD
readBank	higan/sfc/coprocessor/icd/icd.hpp	/^  uint readBank;$/;"	m	struct:ICD
readCompleted	higan/ws/eeprom/eeprom.hpp	/^    bool readCompleted;$/;"	m	struct:Registers
readRequested	higan/ws/eeprom/eeprom.hpp	/^    bool readRequested;$/;"	m	struct:Registers
readable	nall/beat/archive/node.hpp	/^      bool readable = false;$/;"	m	struct:nall::Beat::Archive::Node::Permission::Group
readable	nall/beat/archive/node.hpp	/^      bool readable = false;$/;"	m	struct:nall::Beat::Archive::Node::Permission::Other
readable	nall/beat/archive/node.hpp	/^      bool readable = false;$/;"	m	struct:nall::Beat::Archive::Node::Permission::Owner
reader	higan/sfc/memory/memory.hpp	/^  function<uint8 (uint24, uint8)> reader[256];$/;"	m	struct:Bus
reader	nall/string/transform/cml.hpp	/^    function<string (string)> reader;$/;"	m	struct:nall::__anon38::CML::Settings
reader	nall/string/transform/dml.hpp	/^    function<string (string)> reader;$/;"	m	struct:nall::__anon37::DML::Settings
reading	higan/processor/hg51b/hg51b.hpp	/^      uint1  reading;$/;"	m	struct:Processor::HG51B::IO::Bus
ready	higan/gb/cartridge/tama/tama.hpp	/^    uint1 ready;$/;"	m	struct:TAMA::IO
ready	higan/sfc/coprocessor/armdsp/registers.hpp	/^    bool ready;$/;"	m	struct:Bridge::Buffer
ready	higan/sfc/coprocessor/armdsp/registers.hpp	/^  bool ready;$/;"	m	struct:Bridge
ready	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 ready;$/;"	m	struct:EpsonRTC
ready	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 ready = 1;$/;"	m	struct:BSMemory::Block::Status
ready	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 ready = 1;$/;"	m	struct:BSMemory::Compatible::Status
ready	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 ready = 1;$/;"	m	struct:BSMemory::Global::Status
ready	ruby/input/shared/rawinput.cpp	/^  bool ready = false;$/;"	m	struct:RawInput	file:
receive	higan/gba/cpu/cpu.hpp	/^    uint32 receive;$/;"	m	struct:Joybus
receiveComplete	higan/gba/cpu/cpu.hpp	/^    uint1 receiveComplete;$/;"	m	struct:Joybus
receiveFlag	higan/gba/cpu/cpu.hpp	/^    uint1 receiveFlag;$/;"	m	struct:Joybus
recent	higan/target-bsnes/settings/settings.hpp	/^    } recent;$/;"	m	struct:Settings::Path	typeref:struct:Settings::Path::Recent
recv	higan/gba/player/player.hpp	/^    uint32 recv;$/;"	m	struct:Player::Status
red	hiro/core/core.hpp	/^    uint8_t red;$/;"	m	struct:hiro::Color::State
red	nall/image.hpp	/^  alwaysinline auto red() const { return _red; }$/;"	f	struct:nall::image
red	nall/set.hpp	/^    bool red = 1;$/;"	m	struct:nall::set::node_t
reference	hiro/cocoa/object.hpp	/^  mObject& reference;$/;"	m	struct:hiro::pObject
reference	hiro/gtk/object.hpp	/^  mObject& reference;$/;"	m	struct:hiro::pObject
reference	hiro/qt/object.hpp	/^  mObject& reference;$/;"	m	struct:hiro::pObject
reference	hiro/windows/object.hpp	/^  mObject& reference;$/;"	m	struct:hiro::pObject
reference	nall/bit-vector.hpp	/^    reference(bitvector& self, uint position) : self(self), position(position) {}$/;"	f	struct:nall::bitvector::reference
reference	nall/bit-vector.hpp	/^  struct reference {$/;"	s	struct:nall::bitvector
refreshRate	higan/emulator/interface.hpp	/^    double refreshRate = 0;$/;"	m	struct:Emulator::Interface
reg	higan/processor/v30mz/v30mz.hpp	/^    uint3 reg;$/;"	m	struct:Processor::ModRM
region	genius/genius.hpp	/^  string region;$/;"	m	struct:Game
region	higan/emulator/game.hpp	/^  string region;$/;"	m	struct:Emulator::Game
region	higan/fc/cartridge/cartridge.hpp	/^    string region;$/;"	m	struct:Cartridge::Information
region	higan/fc/system/system.hpp	/^    Region region = Region::NTSCJ;$/;"	m	struct:System::Information
region	higan/md/cartridge/cartridge.hpp	/^    string region;$/;"	m	struct:Cartridge::Information
region	higan/md/system/system.hpp	/^    Region region = Region::NTSCJ;$/;"	m	struct:System::Information
region	higan/ms/cartridge/cartridge.hpp	/^    string region;$/;"	m	struct:Cartridge::Information
region	higan/ms/system/system.hpp	/^    Region region = Region::NTSC;$/;"	m	struct:System::Information
region	higan/sfc/cartridge/cartridge.hpp	/^    string region;$/;"	m	struct:Cartridge::Information
region	higan/sfc/system/system.hpp	/^    Region region = Region::NTSC;$/;"	m	struct:System::Information
registry	nall/windows/registry.hpp	/^struct registry {$/;"	s	namespace:nall
regs	higan/gba/apu/apu.hpp	/^  } regs;$/;"	m	struct:APU	typeref:struct:APU::Registers
regs	higan/processor/gsu/registers.hpp	/^} regs;$/;"	v	typeref:struct:Registers
regs	higan/processor/upd96050/upd96050.hpp	/^  } regs;$/;"	m	struct:Processor::uPD96050	typeref:struct:Processor::uPD96050::Registers
regs	higan/sfc/dsp/dsp.hpp	/^    uint8 regs[128];$/;"	m	struct:State
regs	higan/sfc/expansion/satellaview/satellaview.hpp	/^  } regs;$/;"	m	struct:Satellaview	typeref:struct:Satellaview::__anon7
relativeHeight	ruby/video/opengl/opengl.hpp	/^  double relativeHeight = 0;$/;"	m	struct:OpenGLProgram
relativeWidth	ruby/video/opengl/opengl.hpp	/^  double relativeWidth = 0;$/;"	m	struct:OpenGLProgram
relativeX	ruby/input/mouse/rawinput.cpp	/^    int relativeX = 0;$/;"	m	struct:InputMouseRawInput::Mouse	file:
relativeX	ruby/input/mouse/xlib.cpp	/^    uint relativeX = 0;$/;"	m	struct:InputMouseXlib::Mouse	file:
relativeY	ruby/input/mouse/rawinput.cpp	/^    int relativeY = 0;$/;"	m	struct:InputMouseRawInput::Mouse	file:
relativeY	ruby/input/mouse/xlib.cpp	/^    uint relativeY = 0;$/;"	m	struct:InputMouseXlib::Mouse	file:
relativeZ	ruby/input/mouse/rawinput.cpp	/^    int relativeZ = 0;$/;"	m	struct:InputMouseRawInput::Mouse	file:
release	higan/target-bsnes/input/input.hpp	/^  function<auto() -> void> release;$/;"	m	struct:InputHotkey
release	higan/target-higan/input/input.hpp	/^  function<auto () -> void> release;$/;"	m	struct:InputHotkey
releaseRate	higan/md/ym2612/ym2612.hpp	/^        uint5  releaseRate = 1;$/;"	m	struct:Channel::Operator::Envelope
reload	higan/fc/apu/apu.hpp	/^    bool reload;$/;"	m	struct:APU::Sweep
reload	higan/gba/cpu/cpu.hpp	/^    uint16 reload;$/;"	m	struct:Timer
reload	higan/md/ym2612/ym2612.hpp	/^        uint11 reload = 0;$/;"	m	struct:Channel::Operator::Pitch
reload	higan/md/ym2612/ym2612.hpp	/^        uint3 reload = 0;$/;"	m	struct:Channel::Operator::Octave
reload	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    uint1 reload = 1;$/;"	m	struct:Pipeline
reloadDecay	higan/fc/apu/apu.hpp	/^    bool reloadDecay;$/;"	m	struct:APU::Envelope
reloadLinear	higan/fc/apu/apu.hpp	/^    bool reloadLinear;$/;"	m	struct:APU::Triangle
remove	hiro/core/shared.hpp	/^  auto remove(sAction action) { return self().remove(action), *this; }$/;"	f	struct:Menu
remove	hiro/core/shared.hpp	/^  auto remove(sAction action) { return self().remove(action), *this; }$/;"	f	struct:PopupMenu
remove	hiro/core/shared.hpp	/^  auto remove(sComboButtonItem item) { return self().remove(item), *this; }$/;"	f	struct:ComboButton
remove	hiro/core/shared.hpp	/^  auto remove(sComboEditItem item) { return self().remove(item), *this; }$/;"	f	struct:ComboEdit
remove	hiro/core/shared.hpp	/^  auto remove(sIconViewItem item) { return self().remove(item), *this; }$/;"	f	struct:IconView
remove	hiro/core/shared.hpp	/^  auto remove(sMenu menu) { return self().remove(menu), *this; }$/;"	f	struct:MenuBar
remove	hiro/core/shared.hpp	/^  auto remove(sMenuBar menuBar) { return self().remove(menuBar), *this; }$/;"	f	struct:Window
remove	hiro/core/shared.hpp	/^  auto remove(sSizable sizable) { return self().remove(sizable), *this; }$/;"	f	struct:Frame
remove	hiro/core/shared.hpp	/^  auto remove(sSizable sizable) { return self().remove(sizable), *this; }$/;"	f	struct:TabFrameItem
remove	hiro/core/shared.hpp	/^  auto remove(sSizable sizable) { return self().remove(sizable), *this; }$/;"	f	struct:Window
remove	hiro/core/shared.hpp	/^  auto remove(sStatusBar statusBar) { return self().remove(statusBar), *this; }$/;"	f	struct:Window
remove	hiro/core/shared.hpp	/^  auto remove(sTabFrameItem item) { return self().remove(item), *this; }$/;"	f	struct:TabFrame
remove	hiro/core/shared.hpp	/^  auto remove(sTableViewCell cell) { return self().remove(cell), *this; }$/;"	f	struct:TableViewItem
remove	hiro/core/shared.hpp	/^  auto remove(sTableViewColumn column) { return self().remove(column), *this; }$/;"	f	struct:TableView
remove	hiro/core/shared.hpp	/^  auto remove(sTableViewItem item) { return self().remove(item), *this; }$/;"	f	struct:TableView
remove	hiro/core/shared.hpp	/^  auto remove(sTreeViewItem item) { return self().remove(item), *this; }$/;"	f	struct:TreeView
remove	hiro/core/shared.hpp	/^  auto remove(sTreeViewItem item) { return self().remove(item), *this; }$/;"	f	struct:TreeViewItem
remove	hiro/extension/shared.hpp	/^  auto remove(sFixedLayoutCell cell) { return self().remove(cell), *this; }$/;"	f	struct:FixedLayout
remove	hiro/extension/shared.hpp	/^  auto remove(sHorizontalLayoutCell cell) { return self().remove(cell), *this; }$/;"	f	struct:HorizontalLayout
remove	hiro/extension/shared.hpp	/^  auto remove(sListViewItem item) { return self().remove(item), *this; }$/;"	f	struct:ListView
remove	hiro/extension/shared.hpp	/^  auto remove(sSizable sizable) { return self().remove(sizable), *this; }$/;"	f	struct:FixedLayout
remove	hiro/extension/shared.hpp	/^  auto remove(sSizable sizable) { return self().remove(sizable), *this; }$/;"	f	struct:HorizontalLayout
remove	hiro/extension/shared.hpp	/^  auto remove(sSizable sizable) { return self().remove(sizable), *this; }$/;"	f	struct:TableLayout
remove	hiro/extension/shared.hpp	/^  auto remove(sSizable sizable) { return self().remove(sizable), *this; }$/;"	f	struct:VerticalLayout
remove	hiro/extension/shared.hpp	/^  auto remove(sTableLayoutCell cell) { return self().remove(cell), *this; }$/;"	f	struct:TableLayout
remove	hiro/extension/shared.hpp	/^  auto remove(sVerticalLayoutCell cell) { return self().remove(cell), *this; }$/;"	f	struct:VerticalLayout
renable	higan/gba/apu/apu.hpp	/^    uint1 renable;$/;"	m	struct:APU::FIFO
renable	higan/gba/apu/apu.hpp	/^    uint1 renable[4];$/;"	m	struct:APU::Sequencer
rend	nall/arguments.hpp	/^  auto rend() const { return arguments.rend(); }$/;"	f	struct:nall::Arguments
rend	nall/arguments.hpp	/^  auto rend() { return arguments.rend(); }$/;"	f	struct:nall::Arguments
rend	nall/beat/archive/container.hpp	/^  auto rend() const { return nodes.rend(); }$/;"	f	struct:nall::Beat::Archive::Container
rend	nall/beat/archive/container.hpp	/^  auto rend() { return nodes.rend(); }$/;"	f	struct:nall::Beat::Archive::Container
rend	nall/iterator.hpp	/^template<typename T> auto rend(T& self) { return self.rend(); }$/;"	f	namespace:nall
renderClient	ruby/audio/wasapi.cpp	/^  IAudioRenderClient* renderClient = nullptr;$/;"	m	struct:AudioWASAPI	file:
repeat	higan/gba/cpu/cpu.hpp	/^    uint1 repeat;$/;"	m	struct:DMA
repeatMode7	higan/sfc/ppu/ppu.hpp	/^    uint2 repeatMode7;$/;"	m	struct:PPU::IO
resampler	higan/audio/audio.hpp	/^    DSP::Resampler::Cubic resampler;$/;"	m	struct:Emulator::Stream::Channel
resamplers	ruby/audio/audio.hpp	/^  vector<nall::DSP::Resampler::Cubic> resamplers;$/;"	m	struct:Audio
reserved	ruby/audio/asio.hpp	/^  char reserved[12];$/;"	m	struct:ASIOTimeInfo
reserved	ruby/audio/asio.hpp	/^  long reserved[4];$/;"	m	struct:ASIOTime
reset	higan/sfc/coprocessor/armdsp/registers.hpp	/^  bool reset;$/;"	m	struct:Bridge
reset	hiro/cocoa/widget/console.cpp	/^void pConsole::reset() {$/;"	f	class:hiro::pConsole
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:ComboButton
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:ComboEdit
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:Console
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:Frame
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:IconView
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:Menu
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:MenuBar
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:PopupMenu
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:TabFrame
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:TabFrameItem
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:TableView
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:TableViewItem
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:TreeView
reset	hiro/core/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:Window
reset	hiro/extension/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:FixedLayout
reset	hiro/extension/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:HorizontalLayout
reset	hiro/extension/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:ListView
reset	hiro/extension/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:ListViewItem
reset	hiro/extension/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:TableLayout
reset	hiro/extension/shared.hpp	/^  auto reset() { return self().reset(), *this; }$/;"	f	struct:VerticalLayout
reset	nall/queue.hpp	/^  auto reset() {$/;"	f	struct:nall::queue
resetIRQEnable	higan/gba/cpu/cpu.hpp	/^    uint1 resetIRQEnable;$/;"	m	struct:Joybus
resetPending	higan/sfc/cpu/cpu.hpp	/^    bool resetPending = false;$/;"	m	struct:CPU::Status
resetSignal	higan/gba/cpu/cpu.hpp	/^    uint1 resetSignal;$/;"	m	struct:Joybus
resetVector	higan/sfc/expansion/21fx/21fx.hpp	/^  uint16 resetVector;$/;"	m	struct:S21FX
resettable	higan/emulator/interface.hpp	/^    bool resettable = false;$/;"	m	struct:Emulator::Interface::Information
resizable	hiro/core/shared.hpp	/^  auto resizable() const { return self().resizable(); }$/;"	f	struct:TableViewColumn
resizable	hiro/core/shared.hpp	/^  auto resizable() const { return self().resizable(); }$/;"	f	struct:Window
resizable	hiro/core/widget/table-view-column.hpp	/^    bool resizable = true;$/;"	m	struct:mTableViewColumn::State
resizable	hiro/core/window.hpp	/^    bool resizable = true;$/;"	m	struct:mWindow::State
resize	nall/varint.hpp	/^  inline auto resize(uint bits) {$/;"	f	struct:nall::VariadicNatural
resizeColumns	hiro/core/shared.hpp	/^  auto resizeColumns() { return self().resizeColumns(), *this; }$/;"	f	struct:TableView
response	hiro/extension/browser-dialog.cpp	/^  BrowserDialog::Response response;$/;"	m	struct:BrowserDialogWindow	file:
response	hiro/extension/browser-dialog.hpp	/^  } response;$/;"	m	struct:BrowserDialog	typeref:struct:BrowserDialog::Response
response	hiro/extension/message-dialog.hpp	/^    string response;$/;"	m	struct:MessageDialog::State
response	nall/smtp.hpp	/^    string response;$/;"	m	struct:nall::SMTP::Information
result	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  uint32 result;        \/\/decompressed word after calling decode()$/;"	m	struct:Decompressor	file:
resync	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 resync;$/;"	m	struct:EpsonRTC
reverseTransfer	higan/sfc/cpu/cpu.hpp	/^    uint1 reverseTransfer = 1;$/;"	m	struct:CPU::Channel
reverse_iterator	nall/iterator.hpp	/^  reverse_iterator(T* self, uint offset) : self(self), offset(offset) {}$/;"	f	struct:nall::reverse_iterator
reverse_iterator	nall/iterator.hpp	/^template<typename T> struct reverse_iterator {$/;"	s	namespace:nall
reverse_iterator	nall/range.hpp	/^    reverse_iterator(int position, int step = 0) : position(position), step(step) {}$/;"	f	struct:nall::range_t::reverse_iterator
reverse_iterator	nall/range.hpp	/^  struct reverse_iterator {$/;"	s	struct:nall::range_t
reverse_iterator_const	nall/iterator.hpp	/^  reverse_iterator_const(const T* self, uint offset) : self(self), offset(offset) {}$/;"	f	struct:nall::reverse_iterator_const
reverse_iterator_const	nall/iterator.hpp	/^template<typename T> struct reverse_iterator_const {$/;"	s	namespace:nall
reverse_wrapper	nall/iterator.hpp	/^template<typename T> struct reverse_wrapper {$/;"	s	namespace:nall
revision	genius/genius.hpp	/^  string revision;$/;"	m	struct:Game
revision	higan/emulator/game.hpp	/^  string revision;$/;"	m	struct:Emulator::Game
revision	higan/fc/cartridge/board/nes-exrom.cpp	/^  } revision;$/;"	m	struct:NES_ExROM	typeref:class:NES_ExROM::Revision	file:
revision	higan/fc/cartridge/board/nes-fxrom.cpp	/^  } revision;$/;"	v	typeref:struct:NES_FxROM
revision	higan/fc/cartridge/board/nes-pxrom.cpp	/^  } revision;$/;"	v	typeref:struct:NES_PxROM
revision	higan/fc/cartridge/board/nes-sxrom.cpp	/^  } revision;$/;"	m	struct:NES_SxROM	typeref:class:NES_SxROM::Revision	file:
revision	higan/fc/cartridge/board/nes-txrom.cpp	/^  } revision;$/;"	m	struct:NES_TxROM	typeref:class:NES_TxROM::Revision	file:
revision	higan/fc/cartridge/chip/mmc1.cpp	/^  } revision;$/;"	m	struct:MMC1	typeref:class:MMC1::Revision	file:
revision	higan/fc/cartridge/chip/mmc5.cpp	/^  } revision;$/;"	m	struct:MMC5	typeref:class:MMC5::Revision	file:
revision	higan/processor/upd96050/upd96050.hpp	/^  enum class Revision : uint { uPD7725, uPD96050 } revision;$/;"	m	struct:Processor::uPD96050	typeref:class:Processor::uPD96050::Revision
rhw	ruby/video/direct3d.cpp	/^    float x, y, z, rhw;  \/\/screen coordinates$/;"	m	struct:VideoDirect3D::Vertex	file:
right	higan/fc/controller/gamepad/gamepad.hpp	/^  bool right = 0;$/;"	v
right	higan/gb/apu/apu.hpp	/^    int16 right;$/;"	m	struct:APU::Sequencer
right	higan/ms/psg/psg.hpp	/^    uint1   right;$/;"	m	struct:PSG::Noise
right	higan/ms/psg/psg.hpp	/^    uint1  right;$/;"	m	struct:PSG::Tone
right	higan/sfc/controller/gamepad/gamepad.hpp	/^  boolean up, down, left, right;$/;"	v
right	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    boolean up, down, left, right;$/;"	m	struct:Gamepad
right	higan/ws/apu/apu.hpp	/^      int11 right;$/;"	m	struct:APU::Channel5::Output
right	higan/ws/apu/apu.hpp	/^      uint8 right;$/;"	m	struct:APU::Channel1::Output
right	higan/ws/apu/apu.hpp	/^      uint8 right;$/;"	m	struct:APU::Channel2::Output
right	higan/ws/apu/apu.hpp	/^      uint8 right;$/;"	m	struct:APU::Channel3::Output
right	higan/ws/apu/apu.hpp	/^      uint8 right;$/;"	m	struct:APU::Channel4::Output
rightEnable	higan/gb/apu/apu.hpp	/^      bool rightEnable;$/;"	m	struct:APU::Sequencer::Channel
rightEnable	higan/gb/apu/apu.hpp	/^    bool rightEnable;$/;"	m	struct:APU::Sequencer
rightEnable	higan/md/ym2612/ym2612.hpp	/^    uint1 rightEnable = 1;$/;"	m	struct:Channel
rightEnable	higan/ws/apu/apu.hpp	/^      uint1 rightEnable;$/;"	m	struct:APU::Channel5::Registers
rightVolume	higan/gb/apu/apu.hpp	/^    uint3 rightVolume;$/;"	m	struct:APU::Sequencer
rlcp	nall/suffix-array.hpp	/^  vector<int> rlcp;     \/\/longest common prefixes - right$/;"	m	struct:nall::SuffixArray
rom	higan/gb/cartridge/cartridge.hpp	/^  } rom, ram, rtc;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Memory
rom	higan/gb/cartridge/huc1/huc1.hpp	/^    } rom;$/;"	m	struct:HuC1::IO	typeref:struct:HuC1::IO::ROM
rom	higan/gb/cartridge/huc3/huc3.hpp	/^    } rom;$/;"	m	struct:HuC3::IO	typeref:struct:HuC3::IO::ROM
rom	higan/gb/cartridge/mbc1/mbc1.hpp	/^    } rom;$/;"	m	struct:MBC1::IO	typeref:struct:MBC1::IO::ROM
rom	higan/gb/cartridge/mbc1m/mbc1m.hpp	/^    } rom;$/;"	m	struct:MBC1M::IO	typeref:struct:MBC1M::IO::ROM
rom	higan/gb/cartridge/mbc2/mbc2.hpp	/^    } rom;$/;"	m	struct:MBC2::IO	typeref:struct:MBC2::IO::ROM
rom	higan/gb/cartridge/mbc3/mbc3.hpp	/^    } rom;$/;"	m	struct:MBC3::IO	typeref:struct:MBC3::IO::ROM
rom	higan/gb/cartridge/mbc5/mbc5.hpp	/^    } rom;$/;"	m	struct:MBC5::IO	typeref:struct:MBC5::IO::ROM
rom	higan/gb/cartridge/mbc6/mbc6.hpp	/^    } rom;$/;"	m	struct:MBC6::IO	typeref:struct:MBC6::IO::ROM
rom	higan/gb/cartridge/mbc7/mbc7.hpp	/^    } rom;$/;"	m	struct:MBC7::IO	typeref:struct:MBC7::IO::ROM
rom	higan/gb/cartridge/mmm01/mmm01.hpp	/^    } rom;$/;"	m	struct:MMM01::IO	typeref:struct:MMM01::IO::ROM
rom	higan/gb/cartridge/tama/tama.hpp	/^    } rom;$/;"	m	struct:TAMA::IO	typeref:struct:TAMA::IO::ROM
rom	higan/md/cartridge/cartridge.hpp	/^  Memory rom;$/;"	m	struct:Cartridge
rom	higan/ms/cartridge/cartridge.hpp	/^  Memory rom;$/;"	m	struct:Cartridge
rom	higan/pce/cartridge/cartridge.hpp	/^  Memory rom;$/;"	m	struct:Cartridge
rom	higan/processor/hg51b/hg51b.hpp	/^      uint3 rom = 3;$/;"	m	struct:Processor::HG51B::IO::Wait
rom	higan/processor/hg51b/hg51b.hpp	/^    uint1 rom = 1;  \/\/0 = 2 ROMs, 1 = 1 ROM$/;"	m	struct:Processor::HG51B::IO
rom	higan/processor/hg51b/hg51b.hpp	/^    uint24 rom;      \/\/data ROM data buffer$/;"	m	struct:Processor::HG51B::Registers
rom	higan/sfc/cartridge/cartridge.hpp	/^  ReadableMemory rom;$/;"	m	struct:Cartridge
rom	higan/sfc/coprocessor/event/event.hpp	/^  ReadableMemory rom[4];$/;"	m	struct:Event
rom	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  ReadableMemory rom;$/;"	m	struct:HitachiDSP
rom	higan/sfc/coprocessor/mcc/mcc.hpp	/^  ReadableMemory rom;$/;"	m	struct:MCC
rom	higan/sfc/coprocessor/sa1/sa1.hpp	/^  } rom;$/;"	m	struct:SA1	typeref:struct:SA1::ROM
rom	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  ReadableMemory rom;$/;"	m	struct:SDD1
rom	higan/sfc/coprocessor/superfx/superfx.hpp	/^  ReadableMemory rom;$/;"	m	struct:SuperFX
rom	higan/sfc/slot/sufamiturbo/sufamiturbo.hpp	/^  ReadableMemory rom;$/;"	m	struct:SufamiTurboCartridge
rom	higan/ws/cartridge/cartridge.hpp	/^  Memory rom;$/;"	m	struct:Cartridge
romBank	higan/md/cartridge/cartridge.hpp	/^  uint6 romBank[8];$/;"	m	struct:Cartridge
romBank0	higan/ws/cartridge/cartridge.hpp	/^    uint8 romBank0 = 0xff;$/;"	m	struct:Cartridge::Registers
romBank1	higan/ws/cartridge/cartridge.hpp	/^    uint8 romBank1 = 0xff;$/;"	m	struct:Cartridge::Registers
romBank2	higan/ws/cartridge/cartridge.hpp	/^    uint8 romBank2 = 0xff;$/;"	m	struct:Cartridge::Registers
romEnable	higan/md/cpu/cpu.hpp	/^    boolean romEnable;$/;"	m	struct:CPU::IO
romEnableHi	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint1 romEnableHi;         \/\/bit  8$/;"	m	struct:MCC::Registers
romEnableLo	higan/sfc/coprocessor/mcc/mcc.hpp	/^    uint1 romEnableLo;         \/\/bit  7$/;"	m	struct:MCC::Registers
romMask	higan/sfc/coprocessor/superfx/superfx.hpp	/^  uint romMask;$/;"	m	struct:SuperFX
romPage0	higan/ms/cartridge/cartridge.hpp	/^    uint8 romPage0;$/;"	m	struct:Cartridge::Mapper
romPage1	higan/ms/cartridge/cartridge.hpp	/^    uint8 romPage1;$/;"	m	struct:Cartridge::Mapper
romPage2	higan/ms/cartridge/cartridge.hpp	/^    uint8 romPage2;$/;"	m	struct:Cartridge::Mapper
romSpeed	higan/sfc/cpu/cpu.hpp	/^    uint romSpeed = 8;$/;"	m	struct:CPU::IO
romWriteEnable	higan/ms/cartridge/cartridge.hpp	/^    uint1 romWriteEnable;$/;"	m	struct:Cartridge::Mapper
rombr	higan/processor/gsu/registers.hpp	/^  uint8 rombr;      \/\/game pack ROM bank register$/;"	m	struct:Registers
romcl	higan/processor/gsu/registers.hpp	/^  uint romcl;       \/\/clock ticks until romdr is valid$/;"	m	struct:Registers
romdr	higan/processor/gsu/registers.hpp	/^  uint8 romdr;      \/\/ROM buffer data register$/;"	m	struct:Registers
ron	higan/processor/gsu/registers.hpp	/^  bool ron;$/;"	m	struct:SCMR
root	nall/map.hpp	/^  set<node_t> root;$/;"	m	struct:nall::map
root	nall/set.hpp	/^  node_t* root = nullptr;$/;"	m	struct:nall::set
rootWindow	ruby/input/mouse/xlib.cpp	/^  Window rootWindow = 0;$/;"	m	struct:InputMouseXlib	file:
rotate	higan/video/video.hpp	/^  uint32* rotate = nullptr;$/;"	m	struct:Emulator::Video
rotate	higan/ws/system/system.hpp	/^    bool rotate;$/;"	m	struct:System::Keypad
rotateLeft	higan/video/video.hpp	/^    bool rotateLeft = false;$/;"	m	struct:Emulator::Video::Effects
roundseconds	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 roundseconds;$/;"	m	struct:EpsonRTC
routput	higan/gba/apu/apu.hpp	/^    uint10 routput;$/;"	m	struct:APU::Sequencer
row	hiro/extension/shared.hpp	/^  auto row(uint position) const { return self().row(position); }$/;"	f	struct:TableLayout
rowCount	hiro/extension/shared.hpp	/^  auto rowCount() const { return self().rowCount(); }$/;"	f	struct:TableLayout
rows	hiro/core/core.hpp	/^    uint rows = 16;$/;"	m	struct:hiro::mHexEdit::State
rows	hiro/core/shared.hpp	/^  auto rows() const { return self().rows(); }$/;"	f	struct:HexEdit
rows	hiro/extension/table-layout.hpp	/^    vector<TableLayoutRow> rows;$/;"	m	struct:mTableLayout::State
rp	higan/processor/upd96050/upd96050.hpp	/^    VariadicNatural rp;  \/\/ROM pointer$/;"	m	struct:Processor::uPD96050::Registers
rqm	higan/processor/upd96050/upd96050.hpp	/^    boolean rqm;   \/\/request for master (=1 on internal access; =0 on external access)$/;"	m	struct:Processor::uPD96050::Status
rsample	higan/gba/apu/apu.hpp	/^    int16 rsample;$/;"	m	struct:APU::Sequencer
rtc	higan/gb/cartridge/cartridge.hpp	/^  } rom, ram, rtc;$/;"	m	struct:Cartridge	typeref:struct:Cartridge::Memory
rtc	higan/gb/cartridge/mbc3/mbc3.hpp	/^    } rtc;$/;"	m	struct:MBC3::IO	typeref:struct:MBC3::IO::RTC
rtc	higan/gb/cartridge/tama/tama.hpp	/^  } rtc;$/;"	m	struct:TAMA	typeref:struct:TAMA::RTC
rtc	higan/ws/cartridge/cartridge.hpp	/^  RTC rtc;$/;"	m	struct:Cartridge
rtcCounter	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 rtcCounter;$/;"	m	struct:Satellaview::__anon7
rtcHour	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 rtcHour;$/;"	m	struct:Satellaview::__anon7
rtcMinute	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 rtcMinute;$/;"	m	struct:Satellaview::__anon7
rtcSecond	higan/sfc/expansion/satellaview/satellaview.hpp	/^    uint8 rtcSecond;$/;"	m	struct:Satellaview::__anon7
ruby	ruby/audio/audio.cpp	/^namespace ruby {$/;"	n	file:
ruby	ruby/input/input.cpp	/^namespace ruby {$/;"	n	file:
ruby	ruby/ruby.hpp	/^namespace ruby {$/;"	n
ruby	ruby/video/video.cpp	/^namespace ruby {$/;"	n	file:
ruby.flags	ruby/GNUmakefile	/^  ruby.flags := $(flags.cpp)$/;"	m
ruby.flags	ruby/GNUmakefile	/^  ruby.flags := $(flags.objcpp)$/;"	m
ruby.objects	ruby/GNUmakefile	/^ruby.objects := $(object.path)\/ruby.o$/;"	m
ruby.options	ruby/GNUmakefile	/^ruby.options :=$/;"	m
ruby.path	higan/target-bsnes/GNUmakefile	/^ruby.path := ..\/ruby$/;"	m
ruby.path	higan/target-higan/GNUmakefile	/^ruby.path := ..\/ruby$/;"	m
rumble	higan/gb/cartridge/cartridge.hpp	/^  bool rumble = false;$/;"	m	struct:Cartridge
rumble	higan/gba/player/player.hpp	/^    bool rumble;$/;"	m	struct:Player::Status
rumble	ruby/input/joypad/udev.cpp	/^    bool rumble = false;$/;"	m	struct:InputJoypadUdev::Joypad	file:
run	higan/gb/ppu/ppu.hpp	/^  function<auto () -> void> run;$/;"	m	struct:PPU
runCount	higan/sfc/coprocessor/sdd1/decompressor.cpp	/^const uint8 SDD1::Decompressor::GCD::runCount[] = {$/;"	m	class:SDD1::Decompressor::GCD	file:
runCount	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    static const uint8 runCount[256];$/;"	m	struct:Decompressor::GCD
rvolume	higan/gba/apu/apu.hpp	/^    uint3 rvolume;$/;"	m	struct:APU::Sequencer
rwildcard	nall/GNUmakefile	/^rwildcard = \\$/;"	m
s	higan/processor/gsu/registers.hpp	/^    BooleanBitField<uint16_t,  3> s;       \/\/sign flag$/;"	m	union:SFR::__anon27
s	higan/processor/huc6280/huc6280.hpp	/^    uint8  s;$/;"	m	struct:Processor::HuC6280::Registers
s	higan/processor/mos6502/mos6502.hpp	/^    uint8  s;$/;"	m	struct:Processor::MOS6502::Registers
s	higan/processor/spc700/spc700.hpp	/^    uint8 x, s;$/;"	m	struct:Processor::SPC700::Registers
s	higan/processor/v30mz/v30mz.hpp	/^        BooleanBitField<uint16_t,  7> s;  \/\/sign$/;"	m	union:Processor::Registers::Flags::__anon26
s	higan/processor/wdc65816/wdc65816.hpp	/^    uint16 s;$/;"	m	struct:Processor::WDC65816::Registers
s	higan/ws/apu/apu.hpp	/^    } s;$/;"	m	struct:APU::Channel1	typeref:struct:APU::Channel1::State
s	higan/ws/apu/apu.hpp	/^    } s;$/;"	m	struct:APU::Channel2	typeref:struct:APU::Channel2::State
s	higan/ws/apu/apu.hpp	/^    } s;$/;"	m	struct:APU::Channel3	typeref:struct:APU::Channel3::State
s	higan/ws/apu/apu.hpp	/^    } s;$/;"	m	struct:APU::Channel4	typeref:struct:APU::Channel4::State
s	higan/ws/apu/apu.hpp	/^    } s;$/;"	m	struct:APU::Channel5	typeref:struct:APU::Channel5::State
s	higan/ws/apu/apu.hpp	/^    } s;$/;"	m	struct:APU::DMA	typeref:struct:APU::DMA::State
s	higan/ws/apu/apu.hpp	/^  } s;$/;"	m	struct:APU	typeref:struct:APU::State
s	higan/ws/ppu/ppu.hpp	/^  } s;$/;"	m	struct:PPU	typeref:struct:PPU::State
s0	higan/processor/upd96050/upd96050.hpp	/^    boolean s0;   \/\/sign 0$/;"	m	struct:Processor::uPD96050::Flag
s1	higan/processor/upd96050/upd96050.hpp	/^    boolean s1;   \/\/sign 1$/;"	m	struct:Processor::uPD96050::Flag
sa	nall/suffix-array.hpp	/^  vector<int> sa;       \/\/suffix array$/;"	m	struct:nall::SuffixArray
sa1	higan/sfc/coprocessor/sa1/sa1.cpp	/^SA1 sa1;$/;"	m	namespace:SuperFamicom	file:
sa1_irq	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool sa1_irq;$/;"	m	struct:SA1::MMIO
sa1_irqcl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool sa1_irqcl;$/;"	m	struct:SA1::MMIO
sa1_irqen	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool sa1_irqen;$/;"	m	struct:SA1::MMIO
sa1_irqfl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool sa1_irqfl;$/;"	m	struct:SA1::MMIO
sa1_nmi	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool sa1_nmi;$/;"	m	struct:SA1::MMIO
sa1_nmicl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool sa1_nmicl;$/;"	m	struct:SA1::MMIO
sa1_nmien	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool sa1_nmien;$/;"	m	struct:SA1::MMIO
sa1_nmifl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool sa1_nmifl;$/;"	m	struct:SA1::MMIO
sa1_rdyb	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool sa1_rdyb;$/;"	m	struct:SA1::MMIO
sa1_resb	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool sa1_resb;$/;"	m	struct:SA1::MMIO
sample	higan/fc/apu/apu.hpp	/^    uint8 sample;$/;"	m	struct:APU::DMC
sample	higan/md/ym2612/ym2612.hpp	/^    uint8 sample = 0x80;$/;"	m	struct:YM2612::DAC
sampleOffset	higan/ws/apu/apu.hpp	/^      uint5 sampleOffset;$/;"	m	struct:APU::Channel1::State
sampleOffset	higan/ws/apu/apu.hpp	/^      uint5 sampleOffset;$/;"	m	struct:APU::Channel2::State
sampleOffset	higan/ws/apu/apu.hpp	/^      uint5 sampleOffset;$/;"	m	struct:APU::Channel3::State
sampleOffset	higan/ws/apu/apu.hpp	/^      uint5 sampleOffset;$/;"	m	struct:APU::Channel4::State
samplePosition	ruby/audio/asio.hpp	/^  ASIOSamples samplePosition;$/;"	m	struct:ASIOTimeInfo
sampleRate	ruby/audio/asio.cpp	/^    ASIOSampleRate sampleRate;$/;"	m	struct:AudioASIO::Device	file:
sampleRate	ruby/audio/asio.hpp	/^  ASIOSampleRate sampleRate;$/;"	m	struct:ASIOTimeInfo
sampleValid	higan/fc/apu/apu.hpp	/^    bool sampleValid;$/;"	m	struct:APU::DMC
samples	higan/gba/apu/apu.hpp	/^    int8 samples[32];$/;"	m	struct:APU::FIFO
samples	nall/dsp/resampler/cubic.hpp	/^  queue<double> samples;$/;"	m	struct:nall::DSP::Resampler::Cubic
samples	ruby/audio/asio.cpp	/^    double samples[65536][8];$/;"	m	struct:AudioASIO::Queue	file:
samples	ruby/audio/wasapi.cpp	/^    double samples[65536][8];$/;"	m	struct:AudioWASAPI::Queue	file:
samplingFrequency	nall/dsp/iir/biquad.hpp	/^  double samplingFrequency;$/;"	m	struct:nall::DSP::IIR::Biquad
samplingFrequency	nall/dsp/iir/one-pole.hpp	/^  double samplingFrequency;$/;"	m	struct:nall::DSP::IIR::OnePole
satb	higan/pce/vdc/vdc.hpp	/^  } satb;$/;"	m	struct:VDC	typeref:struct:VDC::SATB
satbActive	higan/pce/vdc/vdc.hpp	/^    bool   satbActive = 0;$/;"	m	struct:VDC::DMA
satbOffset	higan/pce/vdc/vdc.hpp	/^    uint16 satbOffset;$/;"	m	struct:VDC::DMA
satbPending	higan/pce/vdc/vdc.hpp	/^    bool   satbPending = 0;$/;"	m	struct:VDC::DMA
satbRepeat	higan/pce/vdc/vdc.hpp	/^    bool   satbRepeat = 0;$/;"	m	struct:VDC::DMA
satbSource	higan/pce/vdc/vdc.hpp	/^    uint16 satbSource;$/;"	m	struct:VDC::DMA
saturation	higan/target-bsnes/settings/settings.hpp	/^    uint saturation = 100;$/;"	m	struct:Settings::Video
saturation	higan/video/video.hpp	/^  double saturation = 1.0;$/;"	m	struct:Emulator::Video
saves	higan/target-bsnes/settings/settings.hpp	/^    string saves;$/;"	m	struct:Settings::Path
sawtooth	higan/fc/cartridge/chip/vrc6.cpp	/^  } sawtooth;$/;"	m	struct:VRC6	typeref:struct:VRC6::Sawtooth	file:
sbm	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 sbm;$/;"	m	struct:SA1::MMIO
sc	higan/gba/cpu/cpu.hpp	/^    uint1 sc;$/;"	m	struct:Joybus
scMode	higan/gba/cpu/cpu.hpp	/^    uint1 scMode;$/;"	m	struct:Joybus
scalar	higan/emulator/thread.hpp	/^  inline auto scalar() const { return _scalar; }$/;"	f	struct:Emulator::Thread
scale	higan/ws/apu/apu.hpp	/^      uint2 scale;$/;"	m	struct:APU::Channel5::Registers
scale	hiro/core/application.hpp	/^    float scale = 1.0;$/;"	m	struct:Application::State
scanDialog	icarus/ui/ui.hpp	/^ScanDialog* scanDialog = nullptr;$/;"	v
scanline	higan/gb/ppu/ppu.hpp	/^  function<auto () -> void> scanline;$/;"	m	struct:PPU
scanline	higan/sfc/ppu/counter/counter.hpp	/^  function<void ()> scanline;$/;"	m	struct:PPUcounter
scanlines	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 scanlines;$/;"	m	struct:SA1::Status
scbr	higan/processor/gsu/registers.hpp	/^  uint8 scbr;       \/\/screen base register$/;"	m	struct:Registers
scheduler	higan/fc/system/system.cpp	/^Scheduler scheduler;$/;"	m	namespace:Famicom	file:
scheduler	higan/gb/system/system.cpp	/^Scheduler scheduler;$/;"	m	namespace:GameBoy	file:
scheduler	higan/gba/system/system.cpp	/^Scheduler scheduler;$/;"	m	namespace:GameBoyAdvance	file:
scheduler	higan/md/system/system.cpp	/^Scheduler scheduler;$/;"	m	namespace:MegaDrive	file:
scheduler	higan/ms/system/system.cpp	/^Scheduler scheduler;$/;"	m	namespace:MasterSystem	file:
scheduler	higan/pce/system/system.cpp	/^Scheduler scheduler;$/;"	m	namespace:PCEngine	file:
scheduler	higan/sfc/system/system.cpp	/^Scheduler scheduler;$/;"	m	namespace:SuperFamicom	file:
scheduler	higan/ws/system/system.cpp	/^Scheduler scheduler;$/;"	m	namespace:WonderSwan	file:
scmr	higan/processor/gsu/registers.hpp	/^  SCMR scmr;        \/\/screen mode register$/;"	m	struct:Registers
scoreActive	higan/sfc/coprocessor/event/event.hpp	/^  bool scoreActive;$/;"	m	struct:Event
scoreSecondsRemaining	higan/sfc/coprocessor/event/event.hpp	/^  uint scoreSecondsRemaining;$/;"	m	struct:Event
screen	higan/gb/ppu/ppu.hpp	/^  uint32 screen[160 * 144];$/;"	m	struct:PPU
screen	higan/gba/ppu/ppu.hpp	/^  } screen;$/;"	m	struct:PPU	typeref:struct:PPU::Screen
screen	higan/sfc/ppu/ppu.hpp	/^  Screen screen;$/;"	m	struct:PPU
screenBase	higan/gba/ppu/ppu.hpp	/^      uint5 screenBase;$/;"	m	struct:PPU::Background::IO
screenHeight	ruby/input/mouse/xlib.cpp	/^  uint screenHeight = 0;$/;"	m	struct:InputMouseXlib	file:
screenOneEnable	higan/ws/ppu/ppu.hpp	/^    uint1 screenOneEnable;$/;"	m	struct:PPU::Latches
screenOneEnable	higan/ws/ppu/ppu.hpp	/^    uint1 screenOneEnable;$/;"	m	struct:PPU::Registers
screenOneMapBase	higan/ws/ppu/ppu.hpp	/^    uint4 screenOneMapBase;$/;"	m	struct:PPU::Latches
screenOneMapBase	higan/ws/ppu/ppu.hpp	/^    uint4 screenOneMapBase;$/;"	m	struct:PPU::Registers
screenSaver	higan/target-bsnes/settings/settings.hpp	/^    bool screenSaver = false;$/;"	m	struct:Settings::General
screenSaver	hiro/core/application.hpp	/^    bool screenSaver = true;$/;"	m	struct:Application::State
screenSaver	hiro/gtk/window.hpp	/^  bool screenSaver = true;$/;"	m	struct:hiro::pWindow
screenSaverWindow	hiro/gtk/application.hpp	/^    XlibWindow screenSaverWindow = 0;$/;"	m	struct:hiro::pApplication::State
screenSaverWindow	hiro/qt/application.hpp	/^    XlibWindow screenSaverWindow = 0;$/;"	m	struct:hiro::pApplication::State
screenSaverXDG	hiro/gtk/application.hpp	/^    bool screenSaverXDG = false;$/;"	m	struct:hiro::pApplication::State
screenSaverXDG	hiro/qt/application.hpp	/^    bool screenSaverXDG = false;$/;"	m	struct:hiro::pApplication::State
screenSize	higan/gba/ppu/ppu.hpp	/^      uint2 screenSize;$/;"	m	struct:PPU::Background::IO
screenTwoEnable	higan/ws/ppu/ppu.hpp	/^    uint1 screenTwoEnable;$/;"	m	struct:PPU::Latches
screenTwoEnable	higan/ws/ppu/ppu.hpp	/^    uint1 screenTwoEnable;$/;"	m	struct:PPU::Registers
screenTwoMapBase	higan/ws/ppu/ppu.hpp	/^    uint4 screenTwoMapBase;$/;"	m	struct:PPU::Latches
screenTwoMapBase	higan/ws/ppu/ppu.hpp	/^    uint4 screenTwoMapBase;$/;"	m	struct:PPU::Registers
screenTwoWindowEnable	higan/ws/ppu/ppu.hpp	/^    uint1 screenTwoWindowEnable;$/;"	m	struct:PPU::Latches
screenTwoWindowEnable	higan/ws/ppu/ppu.hpp	/^    uint1 screenTwoWindowEnable;$/;"	m	struct:PPU::Registers
screenTwoWindowInvert	higan/ws/ppu/ppu.hpp	/^    uint1 screenTwoWindowInvert;$/;"	m	struct:PPU::Latches
screenTwoWindowInvert	higan/ws/ppu/ppu.hpp	/^    uint1 screenTwoWindowInvert;$/;"	m	struct:PPU::Registers
screenTwoWindowX0	higan/ws/ppu/ppu.hpp	/^    uint8 screenTwoWindowX0;$/;"	m	struct:PPU::Latches
screenTwoWindowX0	higan/ws/ppu/ppu.hpp	/^    uint8 screenTwoWindowX0;$/;"	m	struct:PPU::Registers
screenTwoWindowX1	higan/ws/ppu/ppu.hpp	/^    uint8 screenTwoWindowX1;$/;"	m	struct:PPU::Latches
screenTwoWindowX1	higan/ws/ppu/ppu.hpp	/^    uint8 screenTwoWindowX1;$/;"	m	struct:PPU::Registers
screenTwoWindowY0	higan/ws/ppu/ppu.hpp	/^    uint8 screenTwoWindowY0;$/;"	m	struct:PPU::Latches
screenTwoWindowY0	higan/ws/ppu/ppu.hpp	/^    uint8 screenTwoWindowY0;$/;"	m	struct:PPU::Registers
screenTwoWindowY1	higan/ws/ppu/ppu.hpp	/^    uint8 screenTwoWindowY1;$/;"	m	struct:PPU::Latches
screenTwoWindowY1	higan/ws/ppu/ppu.hpp	/^    uint8 screenTwoWindowY1;$/;"	m	struct:PPU::Registers
screenWidth	ruby/input/mouse/xlib.cpp	/^  uint screenWidth = 0;$/;"	m	struct:InputMouseXlib	file:
screenshot	higan/target-bsnes/program/program.hpp	/^  } screenshot;$/;"	m	struct:Program	typeref:struct:Program::Screenshot
screenshots	higan/target-bsnes/settings/settings.hpp	/^    string screenshots;$/;"	m	struct:Settings::Path
scrollBar	hiro/gtk/widget/hex-edit.hpp	/^  GtkWidget* scrollBar = nullptr;$/;"	m	struct:hiro::pHexEdit
scrollBar	hiro/windows/widget/hex-edit.hpp	/^  HWND scrollBar = nullptr;$/;"	m	struct:hiro::pHexEdit
scrollOneX	higan/ws/ppu/ppu.hpp	/^    uint8 scrollOneX;$/;"	m	struct:PPU::Latches
scrollOneX	higan/ws/ppu/ppu.hpp	/^    uint8 scrollOneX;$/;"	m	struct:PPU::Registers
scrollOneY	higan/ws/ppu/ppu.hpp	/^    uint8 scrollOneY;$/;"	m	struct:PPU::Latches
scrollOneY	higan/ws/ppu/ppu.hpp	/^    uint8 scrollOneY;$/;"	m	struct:PPU::Registers
scrollTwoX	higan/ws/ppu/ppu.hpp	/^    uint8 scrollTwoX;$/;"	m	struct:PPU::Latches
scrollTwoX	higan/ws/ppu/ppu.hpp	/^    uint8 scrollTwoX;$/;"	m	struct:PPU::Registers
scrollTwoY	higan/ws/ppu/ppu.hpp	/^    uint8 scrollTwoY;$/;"	m	struct:PPU::Latches
scrollTwoY	higan/ws/ppu/ppu.hpp	/^    uint8 scrollTwoY;$/;"	m	struct:PPU::Registers
scx	higan/gb/ppu/ppu.hpp	/^    uint8 scx;$/;"	m	struct:PPU::Status
scy	higan/gb/ppu/ppu.hpp	/^    uint8 scy;$/;"	m	struct:PPU::Status
sd	higan/gba/cpu/cpu.hpp	/^    uint1 sd;$/;"	m	struct:Joybus
sd	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 sd;$/;"	m	struct:SA1::MMIO
sdMode	higan/gba/cpu/cpu.hpp	/^    uint1 sdMode;$/;"	m	struct:Joybus
sdd1	higan/sfc/coprocessor/sdd1/sdd1.cpp	/^SDD1 sdd1;$/;"	m	namespace:SuperFamicom	file:
second	higan/gb/cartridge/mbc3/mbc3.hpp	/^      uint8 second;$/;"	m	struct:MBC3::IO::RTC
second	higan/gb/cartridge/tama/tama.hpp	/^    uint8 second;    \/\/0 - 59$/;"	m	struct:TAMA::RTC
second	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  uint second;$/;"	m	struct:SharpRTC
secondhi	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint3 secondhi;$/;"	m	struct:EpsonRTC
secondlo	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint4 secondlo;$/;"	m	struct:EpsonRTC
seconds	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint seconds;$/;"	m	struct:EpsonRTC
section	libco/settings.h	30;"	d
section	libco/settings.h	32;"	d
section	libco/settings.h	34;"	d
sectioned	nall/string/transform/dml.hpp	/^    bool sectioned = true;$/;"	m	struct:nall::__anon37::DML::Settings
sections	nall/string/transform/dml.hpp	/^    uint sections = 0;$/;"	m	struct:nall::__anon37::DML::State
segment	higan/processor/v30mz/v30mz.hpp	/^    uint16 segment;$/;"	m	struct:Processor::ModRM
sel	higan/pce/controller/gamepad/gamepad.hpp	/^  bool sel;$/;"	v
select	higan/fc/controller/gamepad/gamepad.hpp	/^  bool select = 0;$/;"	v
select	higan/gb/cartridge/mbc7/mbc7.hpp	/^    boolean select;    \/\/CS$/;"	m	struct:MBC7::EEPROM
select	higan/gb/cartridge/tama/tama.hpp	/^    uint4 select;$/;"	m	struct:TAMA::IO
select	higan/md/controller/control-pad/control-pad.hpp	/^  uint1 select = 1;$/;"	v
select	higan/md/controller/fighting-pad/fighting-pad.hpp	/^  uint1 select = 1;$/;"	v
select	higan/md/psg/psg.hpp	/^  uint3 select;$/;"	m	struct:PSG
select	higan/ms/psg/psg.hpp	/^  uint3 select;$/;"	m	struct:PSG
select	higan/pce/vpc/vpc.hpp	/^  bool   select;$/;"	m	struct:VPC
select	higan/sfc/controller/gamepad/gamepad.hpp	/^  boolean b, y, select, start;$/;"	v
select	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    boolean b, y, select, start;$/;"	m	struct:Gamepad
select	higan/sfc/coprocessor/event/event.hpp	/^  uint8 select;$/;"	m	struct:Event
selected	hiro/core/core.hpp	/^    bool selected = false;$/;"	m	struct:hiro::mComboButtonItem::State
selected	hiro/core/core.hpp	/^    bool selected = false;$/;"	m	struct:hiro::mIconViewItem::State
selected	hiro/core/shared.hpp	/^  auto selected() const { return self().selected(); }$/;"	f	struct:ComboButton
selected	hiro/core/shared.hpp	/^  auto selected() const { return self().selected(); }$/;"	f	struct:ComboButtonItem
selected	hiro/core/shared.hpp	/^  auto selected() const { return self().selected(); }$/;"	f	struct:IconView
selected	hiro/core/shared.hpp	/^  auto selected() const { return self().selected(); }$/;"	f	struct:IconViewItem
selected	hiro/core/shared.hpp	/^  auto selected() const { return self().selected(); }$/;"	f	struct:TabFrame
selected	hiro/core/shared.hpp	/^  auto selected() const { return self().selected(); }$/;"	f	struct:TabFrameItem
selected	hiro/core/shared.hpp	/^  auto selected() const { return self().selected(); }$/;"	f	struct:TableView
selected	hiro/core/shared.hpp	/^  auto selected() const { return self().selected(); }$/;"	f	struct:TableViewItem
selected	hiro/core/shared.hpp	/^  auto selected() const { return self().selected(); }$/;"	f	struct:TreeView
selected	hiro/core/shared.hpp	/^  auto selected() const { return self().selected(); }$/;"	f	struct:TreeViewItem
selected	hiro/core/widget/tab-frame-item.hpp	/^    bool selected = false;$/;"	m	struct:mTabFrameItem::State
selected	hiro/core/widget/table-view-item.hpp	/^    bool selected = false;$/;"	m	struct:mTableViewItem::State
selected	hiro/extension/browser-dialog.hpp	/^    vector<string> selected;$/;"	m	struct:BrowserDialog::Response
selected	hiro/extension/shared.hpp	/^  auto selected() { return self().selected(); }$/;"	f	struct:ListView
selected	nall/locale.hpp	/^  maybe<Dictionary&> selected;$/;"	m	struct:nall::Locale
selectedPath	hiro/core/core.hpp	/^    string selectedPath;$/;"	m	struct:hiro::mTreeView::State
self	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    Decompressor& self;$/;"	m	struct:Decompressor::BG
self	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    Decompressor& self;$/;"	m	struct:Decompressor::CM
self	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    Decompressor& self;$/;"	m	struct:Decompressor::GCD
self	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    Decompressor& self;$/;"	m	struct:Decompressor::IM
self	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    Decompressor& self;$/;"	m	struct:Decompressor::OL
self	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    Decompressor& self;$/;"	m	struct:Decompressor::PEM
self	higan/sfc/memory/protectable.hpp	/^  } self;$/;"	m	struct:ProtectableMemory	typeref:struct:ProtectableMemory::__anon8
self	higan/sfc/memory/readable.hpp	/^  } self;$/;"	m	struct:ReadableMemory	typeref:struct:ReadableMemory::__anon9
self	higan/sfc/memory/writable.hpp	/^  } self;$/;"	m	struct:WritableMemory	typeref:struct:WritableMemory::__anon10
self	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    BSMemory* self = nullptr;$/;"	m	struct:BSMemory::BlockInformation
self	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    BSMemory* self = nullptr;$/;"	m	struct:BSMemory::Page
self	hiro/core/lock.hpp	/^    const Lock* self = nullptr;$/;"	m	struct:Lock::Handle
self	hiro/qt/platform.hpp	/^    pConsole& self;$/;"	m	struct:hiro::pConsole::QtConsole
self	nall/bit-vector.hpp	/^    bitvector& self;$/;"	m	struct:nall::bitvector::iterator
self	nall/bit-vector.hpp	/^    bitvector& self;$/;"	m	struct:nall::bitvector::reference
self	nall/iterator.hpp	/^  T self;$/;"	m	struct:nall::reverse_wrapper
self	nall/iterator.hpp	/^  T* self;$/;"	m	struct:nall::iterator
self	nall/iterator.hpp	/^  T* self;$/;"	m	struct:nall::reverse_iterator
self	nall/iterator.hpp	/^  const T* self;$/;"	m	struct:nall::iterator_const
self	nall/iterator.hpp	/^  const T* self;$/;"	m	struct:nall::reverse_iterator_const
self	nall/varint.hpp	/^    VariadicNatural& self;$/;"	m	struct:nall::VariadicNatural::Reference
self	nall/vector/iterator.hpp	/^  const vector<T>& self;$/;"	m	struct:nall::vector_iterator_const
self	nall/vector/iterator.hpp	/^  const vector<T>& self;$/;"	m	struct:nall::vector_iterator_reverse_const
self	nall/vector/iterator.hpp	/^  vector<T>& self;$/;"	m	struct:nall::vector_iterator
self	nall/vector/iterator.hpp	/^  vector<T>& self;$/;"	m	struct:nall::vector_iterator_reverse
self	ruby/audio/alsa.cpp	/^  AudioALSA& self = *this;$/;"	m	struct:AudioALSA	file:
self	ruby/audio/ao.cpp	/^  AudioAO& self = *this;$/;"	m	struct:AudioAO	file:
self	ruby/audio/asio.cpp	/^  AudioASIO& self = *this;$/;"	m	struct:AudioASIO	file:
self	ruby/audio/audio.hpp	/^  Audio& self;$/;"	m	struct:Audio
self	ruby/audio/directsound.cpp	/^  AudioDirectSound& self = *this;$/;"	m	struct:AudioDirectSound	file:
self	ruby/audio/openal.cpp	/^  AudioOpenAL& self = *this;$/;"	m	struct:AudioOpenAL	file:
self	ruby/audio/oss.cpp	/^  AudioOSS& self = *this;$/;"	m	struct:AudioOSS	file:
self	ruby/audio/pulseaudio-simple.cpp	/^  AudioPulseAudioSimple& self = *this;$/;"	m	struct:AudioPulseAudioSimple	file:
self	ruby/audio/pulseaudio.cpp	/^  AudioPulseAudio& self = *this;$/;"	m	struct:AudioPulseAudio	file:
self	ruby/audio/wasapi.cpp	/^  AudioWASAPI& self = *this;$/;"	m	struct:AudioWASAPI	file:
self	ruby/audio/xaudio2.cpp	/^  AudioXAudio2& self = *this;$/;"	m	struct:AudioXAudio2	file:
self	ruby/input/carbon.cpp	/^  InputCarbon& self = *this;$/;"	m	struct:InputCarbon	file:
self	ruby/input/input.hpp	/^  Input& self;$/;"	m	struct:Input
self	ruby/input/quartz.cpp	/^  InputQuartz& self = *this;$/;"	m	struct:InputQuartz	file:
self	ruby/input/sdl.cpp	/^  InputSDL& self = *this;$/;"	m	struct:InputSDL	file:
self	ruby/input/udev.cpp	/^  InputUdev& self = *this;$/;"	m	struct:InputUdev	file:
self	ruby/input/windows.cpp	/^  InputWindows& self = *this;$/;"	m	struct:InputWindows	file:
self	ruby/input/xlib.cpp	/^  InputXlib& self = *this;$/;"	m	struct:InputXlib	file:
self	ruby/video/cgl.cpp	/^  VideoCGL& self = *this;$/;"	m	struct:VideoCGL	file:
self	ruby/video/direct3d.cpp	/^  VideoDirect3D& self = *this;$/;"	m	struct:VideoDirect3D	file:
self	ruby/video/directdraw.cpp	/^  VideoDirectDraw& self = *this;$/;"	m	struct:VideoDirectDraw	file:
self	ruby/video/gdi.cpp	/^  VideoGDI& self = *this;$/;"	m	struct:VideoGDI	file:
self	ruby/video/glx.cpp	/^  VideoGLX& self = *this;$/;"	m	struct:VideoGLX	file:
self	ruby/video/glx2.cpp	/^  VideoGLX2& self = *this;$/;"	m	struct:VideoGLX2	file:
self	ruby/video/video.hpp	/^  Video& self;$/;"	m	struct:Video
self	ruby/video/wgl.cpp	/^  VideoWGL& self = *this;$/;"	m	struct:VideoWGL	file:
self	ruby/video/xshm.cpp	/^  VideoXShm& self = *this;$/;"	m	struct:VideoXShm	file:
self	ruby/video/xvideo.cpp	/^  VideoXVideo& self = *this;$/;"	m	struct:VideoXVideo	file:
send	higan/gba/player/player.hpp	/^    uint32 send;$/;"	m	struct:Player::Status
sendComplete	higan/gba/cpu/cpu.hpp	/^    uint1 sendComplete;$/;"	m	struct:Joybus
sendFlag	higan/gba/cpu/cpu.hpp	/^    uint1 sendFlag;$/;"	m	struct:Joybus
sequence	hiro/core/core.hpp	/^    string sequence;$/;"	m	struct:hiro::Hotkey::State
sequencer	higan/gb/apu/apu.hpp	/^  } sequencer;$/;"	m	struct:APU	typeref:struct:APU::Sequencer
sequencer	higan/gba/apu/apu.hpp	/^  } sequencer;$/;"	m	struct:APU	typeref:struct:APU::Sequencer
serial	higan/gba/cpu/cpu.hpp	/^  } serial;$/;"	v	typeref:struct:Serial
serial	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    uint48 serial;$/;"	m	struct:BSMemory::Chip
serial	nall/serial.hpp	/^struct serial {$/;"	s	namespace:nall
serial	ruby/input/joypad/udev.cpp	/^    string serial;$/;"	m	struct:InputJoypadUdev::Joypad	file:
serialBaudRate	higan/ws/cpu/cpu.hpp	/^    uint1 serialBaudRate;  \/\/0 = 9600; 1 = 38400$/;"	m	struct:CPU::Registers
serialBits	higan/gb/cpu/cpu.hpp	/^    uint serialBits = 0;$/;"	m	struct:CPU::Status
serialClock	higan/gb/cpu/cpu.hpp	/^    bool serialClock = 0;$/;"	m	struct:CPU::Status
serialData	higan/gb/cpu/cpu.hpp	/^    uint8 serialData;$/;"	m	struct:CPU::Status
serialData	higan/ws/cpu/cpu.hpp	/^    uint8 serialData;$/;"	m	struct:CPU::Registers
serialEnable	higan/ws/cpu/cpu.hpp	/^    uint1 serialEnable;$/;"	m	struct:CPU::Registers
serialTransfer	higan/gb/cpu/cpu.hpp	/^    bool serialTransfer = 0;$/;"	m	struct:CPU::Status
serialize	higan/sfc/dsp/serialization.cpp	/^void DSP::serialize(serializer& s) {$/;"	f	class:DSP
serialize	nall/primitives.hpp	/^  inline auto serialize(serializer& s) { s(data); }$/;"	f	struct:nall::Boolean
serialize	nall/primitives.hpp	/^  inline auto serialize(serializer& s) { s(data); }$/;"	f	struct:nall::Integer
serialize	nall/primitives.hpp	/^  inline auto serialize(serializer& s) { s(data); }$/;"	f	struct:nall::Natural
serialize	nall/primitives.hpp	/^  inline auto serialize(serializer& s) { s(data); }$/;"	f	struct:nall::Real
serialize	nall/varint.hpp	/^  inline auto serialize(serializer& s) {$/;"	f	struct:nall::VariadicNatural
serializeSize	higan/md/system/system.hpp	/^    uint serializeSize = 0;$/;"	m	struct:System::Information
serializeSize	higan/ms/system/system.hpp	/^    uint serializeSize = 0;$/;"	m	struct:System::Information
serializeSize	higan/pce/system/system.hpp	/^    uint serializeSize = 0;$/;"	m	struct:System::Information
serializeSize	higan/sfc/system/system.hpp	/^  uint serializeSize = 0;$/;"	m	struct:System
serializer	higan/fc/system/system.hpp	/^  auto serialize() -> serializer;$/;"	m	struct:System
serializer	higan/gb/system/system.hpp	/^  auto serialize() -> serializer;$/;"	m	struct:System
serializer	higan/gba/system/system.hpp	/^  auto serialize() -> serializer;$/;"	m	struct:System
serializer	higan/md/system/system.hpp	/^  auto serialize() -> serializer;$/;"	m	struct:System
serializer	higan/ms/system/system.hpp	/^  auto serialize() -> serializer;$/;"	m	struct:System
serializer	higan/pce/system/system.hpp	/^  auto serialize() -> serializer;$/;"	m	struct:System
serializer	higan/sfc/system/system.hpp	/^  auto serialize() -> serializer;$/;"	m	struct:System
serializer	higan/ws/system/system.hpp	/^  auto serialize() -> serializer;$/;"	m	struct:System
serializer	nall/serializer.hpp	/^  serializer(const serializer& s) { operator=(s); }$/;"	f	namespace:nall
serializer	nall/serializer.hpp	/^  serializer(const uint8_t* data, uint capacity) {$/;"	f	namespace:nall
serializer	nall/serializer.hpp	/^  serializer(serializer&& s) { operator=(move(s)); }$/;"	f	namespace:nall
serializer	nall/serializer.hpp	/^  serializer(uint capacity) {$/;"	f	namespace:nall
serializer	nall/serializer.hpp	/^struct serializer {$/;"	s	namespace:nall
server	nall/posix/shared-memory.hpp	/^  enum class mode : unsigned { server, client, inactive } _mode = mode::inactive;$/;"	m	class:nall::shared_memory::mode
server	nall/smtp.hpp	/^    string server;$/;"	m	struct:nall::SMTP::Information
service	nall/posix/service.hpp	/^struct service {$/;"	s	namespace:nall
service	nall/windows/service.hpp	/^struct service {$/;"	s	namespace:nall
set	hiro/gtk/settings.cpp	33;"	d	file:
set	hiro/gtk/settings.cpp	46;"	d	file:
set	hiro/qt/settings.cpp	30;"	d	file:
set	hiro/qt/settings.cpp	40;"	d	file:
set	nall/primitives.hpp	/^    inline auto& set(const type value) {$/;"	f	struct:nall::Natural::Reference
set	nall/primitives.hpp	/^    inline auto& set(const utype value) {$/;"	f	struct:nall::Integer::Reference
set	nall/set.hpp	/^  set(const set& source) { operator=(source); }$/;"	f	struct:nall::set
set	nall/set.hpp	/^  set(set&& source) { operator=(move(source)); }$/;"	f	struct:nall::set
set	nall/set.hpp	/^  set(std::initializer_list<T> list) { for(auto& value : list) insert(value); }$/;"	f	struct:nall::set
set	nall/set.hpp	/^template<typename T> struct set {$/;"	s	namespace:nall
setActive	hiro/core/shared.hpp	/^  auto setActive() { return self().setActive(), *this; }$/;"	f	struct:TableViewColumn
setAddress	hiro/core/shared.hpp	/^  auto setAddress(unsigned address) { return self().setAddress(address), *this; }$/;"	f	struct:HexEdit
setAlignment	hiro/core/shared.hpp	/^  auto setAlignment(Alignment alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:Label
setAlignment	hiro/core/shared.hpp	/^  auto setAlignment(Alignment alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:TableView
setAlignment	hiro/core/shared.hpp	/^  auto setAlignment(Alignment alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:TableViewCell
setAlignment	hiro/core/shared.hpp	/^  auto setAlignment(Alignment alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:TableViewColumn
setAlignment	hiro/core/shared.hpp	/^  auto setAlignment(Alignment alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:TableViewItem
setAlignment	hiro/core/shared.hpp	/^  auto setAlignment(Alignment alignment) { return self().setAlignment(alignment), *this; }$/;"	f	struct:Window
setAlignment	hiro/extension/shared.hpp	/^  auto setAlignment(Alignment alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:ListView
setAlignment	hiro/extension/shared.hpp	/^  auto setAlignment(Alignment alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:ListViewItem
setAlignment	hiro/extension/shared.hpp	/^  auto setAlignment(Alignment alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:TableLayout
setAlignment	hiro/extension/shared.hpp	/^  auto setAlignment(Alignment alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:TableLayoutCell
setAlignment	hiro/extension/shared.hpp	/^  auto setAlignment(Alignment alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:TableLayoutColumn
setAlignment	hiro/extension/shared.hpp	/^  auto setAlignment(Alignment alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:TableLayoutRow
setAlignment	hiro/extension/shared.hpp	/^  auto setAlignment(maybe<float> alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:HorizontalLayout
setAlignment	hiro/extension/shared.hpp	/^  auto setAlignment(maybe<float> alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:HorizontalLayoutCell
setAlignment	hiro/extension/shared.hpp	/^  auto setAlignment(maybe<float> alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:VerticalLayout
setAlignment	hiro/extension/shared.hpp	/^  auto setAlignment(maybe<float> alignment = {}) { return self().setAlignment(alignment), *this; }$/;"	f	struct:VerticalLayoutCell
setAllowHTML	nall/string/transform/dml.hpp	/^  auto& setAllowHTML(bool allowHTML) { settings.allowHTML = allowHTML; return *this; }$/;"	f	struct:nall::__anon37::DML
setBackgroundColor	hiro/cocoa/widget/console.cpp	/^void pConsole::setBackgroundColor(Color color) {$/;"	f	class:hiro::pConsole
setBackgroundColor	hiro/cocoa/widget/hex-edit.cpp	/^void pHexEdit::setBackgroundColor(Color color) {$/;"	f	class:hiro::pHexEdit
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:ComboEdit
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:Console
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:HexEdit
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:IconView
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:Label
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:LineEdit
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:TableView
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:TableViewCell
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:TableViewColumn
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:TableViewItem
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:TextEdit
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:TreeView
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:TreeViewItem
setBackgroundColor	hiro/core/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:Window
setBackgroundColor	hiro/extension/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:ListView
setBackgroundColor	hiro/extension/shared.hpp	/^  auto setBackgroundColor(Color color = {}) { return self().setBackgroundColor(color), *this; }$/;"	f	struct:ListViewItem
setBatchable	hiro/core/shared.hpp	/^  auto setBatchable(bool batchable = true) { return self().setBatchable(batchable), *this; }$/;"	f	struct:IconView
setBatchable	hiro/core/shared.hpp	/^  auto setBatchable(bool batchable = true) { return self().setBatchable(batchable), *this; }$/;"	f	struct:TableView
setBatchable	hiro/extension/shared.hpp	/^  auto setBatchable(bool batchable = true) { return self().setBatchable(batchable), *this; }$/;"	f	struct:ListView
setBordered	hiro/core/shared.hpp	/^  auto setBordered(bool bordered = true) { return self().setBordered(bordered), *this; }$/;"	f	struct:Button
setBordered	hiro/core/shared.hpp	/^  auto setBordered(bool bordered = true) { return self().setBordered(bordered), *this; }$/;"	f	struct:CheckButton
setBordered	hiro/core/shared.hpp	/^  auto setBordered(bool bordered = true) { return self().setBordered(bordered), *this; }$/;"	f	struct:RadioButton
setBordered	hiro/core/shared.hpp	/^  auto setBordered(bool bordered = true) { return self().setBordered(bordered), *this; }$/;"	f	struct:TableView
setCentered	hiro/core/shared.hpp	/^  auto setCentered(sWindow parent = {}) { return self().setCentered(parent), *this; }$/;"	f	struct:Window
setCheckable	hiro/core/shared.hpp	/^  auto setCheckable(bool checkable = true) const { return self().setCheckable(checkable), *this; }$/;"	f	struct:TableViewCell
setCheckable	hiro/core/shared.hpp	/^  auto setCheckable(bool checkable = true) { return self().setCheckable(checkable), *this; }$/;"	f	struct:TreeViewItem
setCheckable	hiro/extension/shared.hpp	/^  auto setCheckable(bool checkable = true) { return self().setCheckable(checkable), *this; }$/;"	f	struct:ListViewItem
setChecked	hiro/core/shared.hpp	/^  auto setChecked() { return self().setChecked(), *this; }$/;"	f	struct:MenuRadioItem
setChecked	hiro/core/shared.hpp	/^  auto setChecked() { return self().setChecked(), *this; }$/;"	f	struct:RadioButton
setChecked	hiro/core/shared.hpp	/^  auto setChecked() { return self().setChecked(), *this; }$/;"	f	struct:RadioLabel
setChecked	hiro/core/shared.hpp	/^  auto setChecked(bool checked = true) const { return self().setChecked(checked), *this; }$/;"	f	struct:TableViewCell
setChecked	hiro/core/shared.hpp	/^  auto setChecked(bool checked = true) { return self().setChecked(checked), *this; }$/;"	f	struct:CheckButton
setChecked	hiro/core/shared.hpp	/^  auto setChecked(bool checked = true) { return self().setChecked(checked), *this; }$/;"	f	struct:CheckLabel
setChecked	hiro/core/shared.hpp	/^  auto setChecked(bool checked = true) { return self().setChecked(checked), *this; }$/;"	f	struct:MenuCheckItem
setChecked	hiro/core/shared.hpp	/^  auto setChecked(bool checked = true) { return self().setChecked(checked), *this; }$/;"	f	struct:TreeViewItem
setChecked	hiro/extension/shared.hpp	/^  auto setChecked(bool checked = true) { return self().setChecked(checked), *this; }$/;"	f	struct:ListViewItem
setClosable	hiro/core/shared.hpp	/^  auto setClosable(bool closable = true) { return self().setClosable(closable), *this; }$/;"	f	struct:TabFrameItem
setColor	hiro/core/shared.hpp	/^  auto setColor(Color color) { return self().setColor(color), *this; }$/;"	f	struct:Canvas
setColumns	hiro/cocoa/widget/hex-edit.cpp	/^void pHexEdit::setColumns(unsigned columns) {$/;"	f	class:hiro::pHexEdit
setColumns	hiro/core/shared.hpp	/^  auto setColumns(unsigned columns = 16) { return self().setColumns(columns), *this; }$/;"	f	struct:HexEdit
setCursor	hiro/core/shared.hpp	/^  auto setCursor(Cursor cursor = {}) { return self().setCursor(cursor), *this; }$/;"	f	struct:SourceEdit
setCursor	hiro/core/shared.hpp	/^  auto setCursor(Cursor cursor = {}) { return self().setCursor(cursor), *this; }$/;"	f	struct:TextEdit
setDismissable	hiro/core/shared.hpp	/^  auto setDismissable(bool dismissable = true) { return self().setDismissable(dismissable), *this; }$/;"	f	struct:Window
setDroppable	hiro/core/shared.hpp	/^  auto setDroppable(bool droppable = true) { return self().setDroppable(droppable), *this; }$/;"	f	struct:Canvas
setDroppable	hiro/core/shared.hpp	/^  auto setDroppable(bool droppable = true) { return self().setDroppable(droppable), *this; }$/;"	f	struct:Viewport
setDroppable	hiro/core/shared.hpp	/^  auto setDroppable(bool droppable = true) { return self().setDroppable(droppable), *this; }$/;"	f	struct:Window
setEditable	hiro/core/shared.hpp	/^  auto setEditable(bool editable = true) { return self().setEditable(editable), *this; }$/;"	f	struct:ComboEdit
setEditable	hiro/core/shared.hpp	/^  auto setEditable(bool editable = true) { return self().setEditable(editable), *this; }$/;"	f	struct:LineEdit
setEditable	hiro/core/shared.hpp	/^  auto setEditable(bool editable = true) { return self().setEditable(editable), *this; }$/;"	f	struct:SourceEdit
setEditable	hiro/core/shared.hpp	/^  auto setEditable(bool editable = true) { return self().setEditable(editable), *this; }$/;"	f	struct:TableViewColumn
setEditable	hiro/core/shared.hpp	/^  auto setEditable(bool editable = true) { return self().setEditable(editable), *this; }$/;"	f	struct:TextEdit
setExpandable	hiro/core/shared.hpp	/^  auto setExpandable(bool expandable = true) { return self().setExpandable(expandable), *this; }$/;"	f	struct:TableViewColumn
setExpanded	hiro/core/shared.hpp	/^  auto setExpanded(bool expanded = true) { return self().setExpanded(expanded), *this; }$/;"	f	struct:TreeViewItem
setFlow	hiro/core/shared.hpp	/^  auto setFlow(Orientation orientation = Orientation::Vertical) { return self().setFlow(orientation), *this; }$/;"	f	struct:IconView
setForegroundColor	hiro/cocoa/widget/console.cpp	/^void pConsole::setForegroundColor(Color color) {$/;"	f	class:hiro::pConsole
setForegroundColor	hiro/cocoa/widget/hex-edit.cpp	/^void pHexEdit::setForegroundColor(Color color) {$/;"	f	class:hiro::pHexEdit
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:ComboEdit
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:Console
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:HexEdit
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:IconView
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:Label
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:LineEdit
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:TableView
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:TableViewCell
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:TableViewColumn
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:TableViewItem
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:TextEdit
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:TreeView
setForegroundColor	hiro/core/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:TreeViewItem
setForegroundColor	hiro/extension/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:ListView
setForegroundColor	hiro/extension/shared.hpp	/^  auto setForegroundColor(Color color = {}) { return self().setForegroundColor(color), *this; }$/;"	f	struct:ListViewItem
setFrameGeometry	hiro/core/shared.hpp	/^  auto setFrameGeometry(Geometry geometry) { return self().setFrameGeometry(geometry), *this; }$/;"	f	struct:Window
setFramePosition	hiro/core/shared.hpp	/^  auto setFramePosition(Position position) { return self().setFramePosition(position), *this; }$/;"	f	struct:Window
setFrameSize	hiro/core/shared.hpp	/^  auto setFrameSize(Size size) { return self().setFrameSize(size), *this; }$/;"	f	struct:Window
setFullScreen	hiro/core/shared.hpp	/^  auto setFullScreen(bool fullScreen = true) { return self().setFullScreen(fullScreen), *this; }$/;"	f	struct:Window
setGeometry	hiro/core/shared.hpp	/^  auto setGeometry(Geometry geometry) { return self().setGeometry(geometry), *this; }$/;"	f	struct:Window
setGeometry	hiro/extension/shared.hpp	/^  auto setGeometry(Geometry geometry) { return self().setGeometry(geometry), *this; }$/;"	f	struct:FixedLayoutCell
setGradient	hiro/core/shared.hpp	/^  auto setGradient(Gradient gradient = {}) { return self().setGradient(gradient), *this; }$/;"	f	struct:Canvas
setHeadered	hiro/core/shared.hpp	/^  auto setHeadered(bool headered = true) { return self().setHeadered(headered), *this; }$/;"	f	struct:TableView
setHorizontalAlignment	hiro/core/shared.hpp	/^  auto setHorizontalAlignment(float alignment = 0.0) { return self().setHorizontalAlignment(alignment), *this; }$/;"	f	struct:TableViewColumn
setHost	nall/string/transform/dml.hpp	/^  auto& setHost(const string& hostname) { settings.host = {hostname, "\/"}; return *this; }$/;"	f	struct:nall::__anon37::DML
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:Button
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:Canvas
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:CheckButton
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:ComboButtonItem
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:ComboEditItem
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:IconViewItem
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:Menu
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:MenuItem
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:RadioButton
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:TabFrameItem
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:TableViewCell
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:TableViewColumn
setIcon	hiro/core/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:TreeViewItem
setIcon	hiro/extension/shared.hpp	/^  auto setIcon(const image& icon = {}) { return self().setIcon(icon), *this; }$/;"	f	struct:ListViewItem
setInterval	hiro/core/shared.hpp	/^  auto setInterval(unsigned interval = 0) { return self().setInterval(interval), *this; }$/;"	f	struct:Timer
setLength	hiro/cocoa/widget/hex-edit.cpp	/^void pHexEdit::setLength(unsigned length) {$/;"	f	class:hiro::pHexEdit
setLength	hiro/core/shared.hpp	/^  auto setLength(unsigned length = 101) { return self().setLength(length), *this; }$/;"	f	struct:HorizontalScrollBar
setLength	hiro/core/shared.hpp	/^  auto setLength(unsigned length = 101) { return self().setLength(length), *this; }$/;"	f	struct:HorizontalSlider
setLength	hiro/core/shared.hpp	/^  auto setLength(unsigned length = 101) { return self().setLength(length), *this; }$/;"	f	struct:VerticalScrollBar
setLength	hiro/core/shared.hpp	/^  auto setLength(unsigned length = 101) { return self().setLength(length), *this; }$/;"	f	struct:VerticalSlider
setLength	hiro/core/shared.hpp	/^  auto setLength(unsigned length) { return self().setLength(length), *this; }$/;"	f	struct:HexEdit
setMaximized	hiro/core/shared.hpp	/^  auto setMaximized(bool maximized) { return self().setMaximized(maximized), *this; }$/;"	f	struct:Window
setMaximumSize	hiro/core/shared.hpp	/^  auto setMaximumSize(Size size = {}) { return self().setMaximumSize(size), *this; }$/;"	f	struct:Window
setMinimized	hiro/core/shared.hpp	/^  auto setMinimized(bool minimized) { return self().setMinimized(minimized), *this; }$/;"	f	struct:Window
setMinimumSize	hiro/core/shared.hpp	/^  auto setMinimumSize(Size size = {}) { return self().setMinimumSize(size), *this; }$/;"	f	struct:Window
setModal	hiro/core/shared.hpp	/^  auto setModal(bool modal = true) { return self().setModal(modal), *this; }$/;"	f	struct:Window
setMovable	hiro/core/shared.hpp	/^  auto setMovable(bool movable = true) { return self().setMovable(movable), *this; }$/;"	f	struct:TabFrameItem
setName	nall/http/message.hpp	/^  auto& setName(const string& name) { shared->name = name; return *this; }$/;"	f	struct:nall::HTTP::SharedVariable
setNavigation	hiro/core/shared.hpp	/^  auto setNavigation(Navigation navigation = Navigation::Top) { return self().setNavigation(navigation), *this; }$/;"	f	struct:TabFrame
setOffset	hiro/cocoa/widget/hex-edit.cpp	/^void pHexEdit::setOffset(unsigned offset) {$/;"	f	class:hiro::pHexEdit
setOrientation	hiro/core/shared.hpp	/^  auto setOrientation(Orientation orientation = Orientation::Horizontal) { return self().setOrientation(orientation), *this; }$/;"	f	struct:Button
setOrientation	hiro/core/shared.hpp	/^  auto setOrientation(Orientation orientation = Orientation::Horizontal) { return self().setOrientation(orientation), *this; }$/;"	f	struct:CheckButton
setOrientation	hiro/core/shared.hpp	/^  auto setOrientation(Orientation orientation = Orientation::Horizontal) { return self().setOrientation(orientation), *this; }$/;"	f	struct:IconView
setOrientation	hiro/core/shared.hpp	/^  auto setOrientation(Orientation orientation = Orientation::Horizontal) { return self().setOrientation(orientation), *this; }$/;"	f	struct:RadioButton
setPadding	hiro/extension/shared.hpp	/^  auto setPadding(Geometry padding = {}) { return self().setPadding(padding), *this; }$/;"	f	struct:HorizontalLayout
setPadding	hiro/extension/shared.hpp	/^  auto setPadding(Geometry padding = {}) { return self().setPadding(padding), *this; }$/;"	f	struct:TableLayout
setPadding	hiro/extension/shared.hpp	/^  auto setPadding(Geometry padding = {}) { return self().setPadding(padding), *this; }$/;"	f	struct:VerticalLayout
setPadding	hiro/extension/shared.hpp	/^  auto setPadding(float padding) { return self().setPadding({padding, padding, padding, padding}), *this; }$/;"	f	struct:HorizontalLayout
setPadding	hiro/extension/shared.hpp	/^  auto setPadding(float padding) { return self().setPadding({padding, padding, padding, padding}), *this; }$/;"	f	struct:TableLayout
setPadding	hiro/extension/shared.hpp	/^  auto setPadding(float padding) { return self().setPadding({padding, padding, padding, padding}), *this; }$/;"	f	struct:VerticalLayout
setParent	hiro/core/shared.hpp	/^  auto setParent(mObject* parent = nullptr, signed offset = -1) { return self().setParent(parent, offset), *this; }$/;"	f	struct:ComboButton
setPath	nall/string/transform/cml.hpp	/^  auto& setPath(const string& pathname) { settings.path = pathname; return *this; }$/;"	f	struct:nall::__anon38::CML
setPath	nall/string/transform/dml.hpp	/^  auto& setPath(const string& pathname) { settings.path = pathname; return *this; }$/;"	f	struct:nall::__anon37::DML
setPosition	hiro/core/shared.hpp	/^  auto setPosition(Position position) { return self().setPosition(position), *this; }$/;"	f	struct:Window
setPosition	hiro/core/shared.hpp	/^  auto setPosition(unsigned position = 0) { return self().setPosition(position), *this; }$/;"	f	struct:HorizontalScrollBar
setPosition	hiro/core/shared.hpp	/^  auto setPosition(unsigned position = 0) { return self().setPosition(position), *this; }$/;"	f	struct:HorizontalSlider
setPosition	hiro/core/shared.hpp	/^  auto setPosition(unsigned position = 0) { return self().setPosition(position), *this; }$/;"	f	struct:ProgressBar
setPosition	hiro/core/shared.hpp	/^  auto setPosition(unsigned position = 0) { return self().setPosition(position), *this; }$/;"	f	struct:VerticalScrollBar
setPosition	hiro/core/shared.hpp	/^  auto setPosition(unsigned position = 0) { return self().setPosition(position), *this; }$/;"	f	struct:VerticalSlider
setPrompt	hiro/cocoa/widget/console.cpp	/^void pConsole::setPrompt(string prompt) {$/;"	f	class:hiro::pConsole
setPrompt	hiro/core/shared.hpp	/^  auto setPrompt(const string& prompt = "") { return self().setPrompt(prompt), *this; }$/;"	f	struct:Console
setReader	nall/string/transform/cml.hpp	/^  auto& setReader(const function<string (string)>& reader) { settings.reader = reader; return *this; }$/;"	f	struct:nall::__anon38::CML
setReader	nall/string/transform/dml.hpp	/^  auto& setReader(const function<string (string)>& reader) { settings.reader = reader; return *this; }$/;"	f	struct:nall::__anon37::DML
setResizable	hiro/core/shared.hpp	/^  auto setResizable(bool resizable = true) { return self().setResizable(resizable), *this; }$/;"	f	struct:TableViewColumn
setResizable	hiro/core/shared.hpp	/^  auto setResizable(bool resizable = true) { return self().setResizable(resizable), *this; }$/;"	f	struct:Window
setRows	hiro/cocoa/widget/hex-edit.cpp	/^void pHexEdit::setRows(unsigned rows) {$/;"	f	class:hiro::pHexEdit
setRows	hiro/core/shared.hpp	/^  auto setRows(unsigned rows = 16) { return self().setRows(rows), *this; }$/;"	f	struct:HexEdit
setSectioned	nall/string/transform/dml.hpp	/^  auto& setSectioned(bool sectioned) { settings.sectioned = sectioned; return *this; }$/;"	f	struct:nall::__anon37::DML
setSelected	hiro/core/shared.hpp	/^  auto setSelected() { return self().setSelected(), *this; }$/;"	f	struct:ComboButtonItem
setSelected	hiro/core/shared.hpp	/^  auto setSelected() { return self().setSelected(), *this; }$/;"	f	struct:TabFrameItem
setSelected	hiro/core/shared.hpp	/^  auto setSelected() { return self().setSelected(), *this; }$/;"	f	struct:TreeViewItem
setSelected	hiro/core/shared.hpp	/^  auto setSelected(bool selected = true) { return self().setSelected(selected), *this; }$/;"	f	struct:IconViewItem
setSelected	hiro/core/shared.hpp	/^  auto setSelected(bool selected = true) { return self().setSelected(selected), *this; }$/;"	f	struct:TableViewItem
setSelected	hiro/core/shared.hpp	/^  auto setSelected(const vector<signed>& selections) { return self().setSelected(selections), *this; }$/;"	f	struct:IconView
setSizable	hiro/extension/shared.hpp	/^  auto setSizable(sSizable sizable) { return self().setSizable(sizable), *this; }$/;"	f	struct:FixedLayoutCell
setSizable	hiro/extension/shared.hpp	/^  auto setSizable(sSizable sizable) { return self().setSizable(sizable), *this; }$/;"	f	struct:HorizontalLayoutCell
setSizable	hiro/extension/shared.hpp	/^  auto setSizable(sSizable sizable) { return self().setSizable(sizable), *this; }$/;"	f	struct:TableLayoutCell
setSizable	hiro/extension/shared.hpp	/^  auto setSizable(sSizable sizable) { return self().setSizable(sizable), *this; }$/;"	f	struct:VerticalLayoutCell
setSize	hiro/core/shared.hpp	/^  auto setSize(Size size = {}) { return self().setSize(size), *this; }$/;"	f	struct:Canvas
setSize	hiro/core/shared.hpp	/^  auto setSize(Size size) { return self().setSize(size), *this; }$/;"	f	struct:Window
setSize	hiro/extension/shared.hpp	/^  auto setSize(Size size) { return self().setSize(size), *this; }$/;"	f	struct:HorizontalLayoutCell
setSize	hiro/extension/shared.hpp	/^  auto setSize(Size size) { return self().setSize(size), *this; }$/;"	f	struct:TableLayout
setSize	hiro/extension/shared.hpp	/^  auto setSize(Size size) { return self().setSize(size), *this; }$/;"	f	struct:TableLayoutCell
setSize	hiro/extension/shared.hpp	/^  auto setSize(Size size) { return self().setSize(size), *this; }$/;"	f	struct:VerticalLayoutCell
setSortable	hiro/core/shared.hpp	/^  auto setSortable(bool sortable = true) { return self().setSortable(sortable), *this; }$/;"	f	struct:TableView
setSorting	hiro/core/shared.hpp	/^  auto setSorting(Sort sorting = Sort::None) { return self().setSorting(sorting), *this; }$/;"	f	struct:TableViewColumn
setSpacing	hiro/extension/shared.hpp	/^  auto setSpacing(float spacing = 5) { return self().setSpacing(spacing), *this; }$/;"	f	struct:HorizontalLayout
setSpacing	hiro/extension/shared.hpp	/^  auto setSpacing(float spacing = 5) { return self().setSpacing(spacing), *this; }$/;"	f	struct:HorizontalLayoutCell
setSpacing	hiro/extension/shared.hpp	/^  auto setSpacing(float spacing = 5) { return self().setSpacing(spacing), *this; }$/;"	f	struct:TableLayoutColumn
setSpacing	hiro/extension/shared.hpp	/^  auto setSpacing(float spacing = 5) { return self().setSpacing(spacing), *this; }$/;"	f	struct:TableLayoutRow
setSpacing	hiro/extension/shared.hpp	/^  auto setSpacing(float spacing = 5) { return self().setSpacing(spacing), *this; }$/;"	f	struct:VerticalLayout
setSpacing	hiro/extension/shared.hpp	/^  auto setSpacing(float spacing = 5) { return self().setSpacing(spacing), *this; }$/;"	f	struct:VerticalLayoutCell
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:Button
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:CheckButton
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:CheckLabel
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:ComboButtonItem
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:ComboEdit
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:ComboEditItem
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:Frame
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:IconViewItem
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:Label
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:LineEdit
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:Menu
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:MenuCheckItem
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:MenuItem
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:MenuRadioItem
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:RadioButton
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:RadioLabel
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:SourceEdit
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:StatusBar
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:TabFrameItem
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:TableViewCell
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:TableViewColumn
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:TextEdit
setText	hiro/core/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:TreeViewItem
setText	hiro/extension/shared.hpp	/^  auto setText(const string& text = "") { return self().setText(text), *this; }$/;"	f	struct:ListViewItem
setTitle	hiro/core/shared.hpp	/^  auto setTitle(const string& title = "") { return self().setTitle(title), *this; }$/;"	f	struct:Window
setValue	nall/http/message.hpp	/^  auto& setValue(const string& value = "") { shared->value = value; return *this; }$/;"	f	struct:nall::HTTP::SharedVariable
setVerticalAlignment	hiro/core/shared.hpp	/^  auto setVerticalAlignment(float alignment = 0.5) { return self().setVerticalAlignment(alignment), *this; }$/;"	f	struct:TableViewColumn
setWidth	hiro/core/shared.hpp	/^  auto setWidth(float width = 0) { return self().setWidth(width), *this; }$/;"	f	struct:TableViewColumn
setWordWrap	hiro/core/shared.hpp	/^  auto setWordWrap(bool wordWrap = true) { return self().setWordWrap(wordWrap), *this; }$/;"	f	struct:SourceEdit
setWordWrap	hiro/core/shared.hpp	/^  auto setWordWrap(bool wordWrap = true) { return self().setWordWrap(wordWrap), *this; }$/;"	f	struct:TextEdit
setter	nall/property.hpp	/^  function<R (T&, const T&)> setter;$/;"	m	struct:nall::functional_property
setter	nall/property.hpp	/^  function<R (const T&)> setter;$/;"	m	struct:nall::virtual_property
settings	higan/fc/cartridge/board/konami-vrc2.cpp	/^  } settings;$/;"	m	struct:KonamiVRC2	typeref:struct:KonamiVRC2::Settings	file:
settings	higan/fc/cartridge/board/konami-vrc3.cpp	/^  } settings;$/;"	m	struct:KonamiVRC3	typeref:struct:KonamiVRC3::Settings	file:
settings	higan/fc/cartridge/board/konami-vrc4.cpp	/^  } settings;$/;"	m	struct:KonamiVRC4	typeref:struct:KonamiVRC4::Settings	file:
settings	higan/fc/cartridge/board/nes-bnrom.cpp	/^  } settings;$/;"	m	struct:NES_BNROM	typeref:struct:NES_BNROM::Settings	file:
settings	higan/fc/cartridge/board/nes-cnrom.cpp	/^  } settings;$/;"	m	struct:NES_CNROM	typeref:struct:NES_CNROM::Settings	file:
settings	higan/fc/cartridge/board/nes-gxrom.cpp	/^  } settings;$/;"	m	struct:NES_GxROM	typeref:struct:NES_GxROM::Settings	file:
settings	higan/fc/cartridge/board/nes-nrom.cpp	/^  } settings;$/;"	m	struct:NES_NROM	typeref:struct:NES_NROM::Settings	file:
settings	higan/fc/cartridge/board/nes-uxrom.cpp	/^  } settings;$/;"	m	struct:NES_UxROM	typeref:struct:NES_UxROM::Settings	file:
settings	higan/fc/interface/interface.cpp	/^Settings settings;$/;"	m	namespace:Famicom	file:
settings	higan/gb/interface/interface.cpp	/^Settings settings;$/;"	m	namespace:GameBoy	file:
settings	higan/gba/interface/interface.cpp	/^Settings settings;$/;"	m	namespace:GameBoyAdvance	file:
settings	higan/md/interface/interface.cpp	/^Settings settings;$/;"	m	namespace:MegaDrive	file:
settings	higan/ms/interface/interface.cpp	/^Settings settings;$/;"	m	namespace:MasterSystem	file:
settings	higan/pce/interface/interface.cpp	/^Settings settings;$/;"	m	namespace:PCEngine	file:
settings	higan/pce/vpc/vpc.hpp	/^  } settings[4];$/;"	m	struct:VPC	typeref:struct:VPC::Settings
settings	higan/sfc/interface/interface.cpp	/^Settings settings;$/;"	m	namespace:SuperFamicom	file:
settings	higan/target-bsnes/settings/settings.cpp	/^Settings settings;$/;"	v
settings	higan/target-higan/settings/settings.cpp	/^Settings settings;$/;"	v
settings	higan/ws/interface/interface.cpp	/^Settings settings;$/;"	m	namespace:WonderSwan	file:
settings	hiro/gtk/settings.hpp	/^static Settings settings;$/;"	m	namespace:hiro
settings	hiro/qt/settings.hpp	/^static Settings settings;$/;"	m	namespace:hiro
settings	icarus/icarus.cpp	/^Settings settings;$/;"	v
settings	nall/http/role.hpp	/^  } settings;$/;"	m	struct:nall::HTTP::Role	typeref:struct:nall::HTTP::Role::Settings
settings	nall/string/transform/cml.hpp	/^  } settings;$/;"	m	struct:nall::__anon38::CML	typeref:struct:nall::__anon38::CML::Settings
settings	nall/string/transform/dml.hpp	/^  } settings;$/;"	m	struct:nall::__anon37::DML	typeref:struct:nall::__anon37::DML::Settings
settings	ruby/video/opengl/opengl.hpp	/^  set<Setting> settings;$/;"	m	struct:OpenGL
settingsDialog	icarus/ui/ui.hpp	/^SettingsDialog* settingsDialog = nullptr;$/;"	v
settingsManager	higan/target-higan/settings/settings.cpp	/^unique_pointer<SettingsManager> settingsManager;$/;"	v
settingsWindow	higan/target-bsnes/settings/settings.cpp	/^SettingsWindow settingsWindow;$/;"	v
sfr	higan/processor/gsu/registers.hpp	/^  SFR sfr;          \/\/status flag register$/;"	m	struct:Registers
sgb	higan/gb/system/system.hpp	/^    uint8 sgb[ 256];$/;"	m	struct:System::BootROM
sha256	genius/genius.hpp	/^  string sha256;$/;"	m	struct:Game
sha256	higan/emulator/game.hpp	/^  string sha256;$/;"	m	struct:Emulator::Game
sha256	higan/fc/cartridge/cartridge.hpp	/^    string sha256;$/;"	m	struct:Cartridge::Information
sha256	higan/gb/cartridge/cartridge.hpp	/^    string sha256;$/;"	m	struct:Cartridge::Information
sha256	higan/gba/cartridge/cartridge.hpp	/^    string sha256;$/;"	m	struct:Cartridge::Information
sha256	higan/ms/cartridge/cartridge.hpp	/^    string sha256;$/;"	m	struct:Cartridge::Information
sha256	higan/pce/cartridge/cartridge.hpp	/^    string sha256;$/;"	m	struct:Cartridge::Information
sha256	higan/sfc/cartridge/cartridge.hpp	/^    string sha256;$/;"	m	struct:Cartridge::Information
sha256	higan/ws/cartridge/cartridge.hpp	/^    string sha256;$/;"	m	struct:Cartridge::Information
shader	higan/target-bsnes/settings/settings.hpp	/^    string shader = "Blur";$/;"	m	struct:Settings::Video
shader	ruby/video/video.hpp	/^  string shader = "Blur";$/;"	m	struct:VideoDriver
shadowHighlightEnable	higan/md/vdp/vdp.hpp	/^    uint1 shadowHighlightEnable;$/;"	m	struct:VDP::IO
shadowfrequency	higan/gba/apu/apu.hpp	/^    int shadowfrequency;$/;"	m	struct:APU::Square
shape	higan/gba/ppu/ppu.hpp	/^    uint2  shape;   \/\/0 = square, 1 = horizontal, 2 = vertical$/;"	m	struct:PPU::Object
shared	nall/http/message.hpp	/^  shared_pointer<Variable> shared;$/;"	m	struct:nall::HTTP::SharedVariable
shared	nall/posix/service.hpp	/^  shared_memory shared;$/;"	m	struct:nall::service
shared	nall/string/markup/node.hpp	/^  SharedNode shared;$/;"	m	struct:nall::Markup::Node
shared	nall/vfs/vfs.hpp	/^namespace nall { namespace vfs { namespace shared {$/;"	n	namespace:nall::vfs
shared_memory	nall/posix/shared-memory.hpp	/^  auto operator=(const shared_memory&) -> shared_memory& = delete;$/;"	m	struct:nall::shared_memory
shared_memory	nall/posix/shared-memory.hpp	/^struct shared_memory {$/;"	s	namespace:nall
shared_memory	nall/windows/shared-memory.hpp	/^  auto operator=(const shared_memory&) -> shared_memory& = delete;$/;"	m	struct:nall::shared_memory
shared_memory	nall/windows/shared-memory.hpp	/^struct shared_memory {$/;"	s	namespace:nall
shared_pointer	higan/audio/audio.hpp	/^  auto createStream(uint channels, double frequency) -> shared_pointer<Stream>;$/;"	m	struct:Emulator::Audio
shared_pointer	higan/target-bsnes/input/input.hpp	/^  auto findMouse() -> shared_pointer<HID::Device>;$/;"	m	struct:InputManager
shared_pointer	higan/target-higan/input/input.hpp	/^  auto findMouse() -> shared_pointer<HID::Device>;$/;"	m	struct:InputManager
shared_pointer	higan/video/video.hpp	/^  auto createSprite(uint width, uint height) -> shared_pointer<Sprite>;$/;"	m	struct:Emulator::Video
shared_pointer	nall/beat/archive/container.hpp	/^  auto append(string name, string location) -> shared_pointer<Node>;$/;"	m	struct:nall::Beat::Archive::Container
shared_pointer	nall/beat/archive/container.hpp	/^  auto appendFile(string name, array_view<uint8_t> memory) -> shared_pointer<Node>;$/;"	m	struct:nall::Beat::Archive::Container
shared_pointer	nall/beat/archive/container.hpp	/^  auto appendPath(string name) -> shared_pointer<Node>;$/;"	m	struct:nall::Beat::Archive::Container
shared_pointer	nall/beat/archive/container.hpp	/^  auto find(string name) -> shared_pointer<Node>;$/;"	m	struct:nall::Beat::Archive::Container
shared_pointer	nall/beat/archive/node.hpp	/^  static auto create(string name, string location) -> shared_pointer<Node>;$/;"	m	struct:nall::Beat::Archive::Node
shared_pointer	nall/beat/archive/node.hpp	/^  static auto createFile(string name, array_view<uint8_t> memory) -> shared_pointer<Node>;$/;"	m	struct:nall::Beat::Archive::Node
shared_pointer	nall/beat/archive/node.hpp	/^  static auto createPath(string name) -> shared_pointer<Node>;$/;"	m	struct:nall::Beat::Archive::Node
shared_pointer	nall/shared-pointer.hpp	/^  shared_pointer() {$/;"	f	struct:nall::shared_pointer
shared_pointer	nall/shared-pointer.hpp	/^  shared_pointer(T* source) {$/;"	f	struct:nall::shared_pointer
shared_pointer	nall/shared-pointer.hpp	/^  shared_pointer(T* source, const function<void (T*)>& deleter) {$/;"	f	struct:nall::shared_pointer
shared_pointer	nall/shared-pointer.hpp	/^  shared_pointer(const shared_pointer& source) {$/;"	f	struct:nall::shared_pointer
shared_pointer	nall/shared-pointer.hpp	/^  shared_pointer(const shared_pointer<U>& source) {$/;"	f	struct:nall::shared_pointer
shared_pointer	nall/shared-pointer.hpp	/^  shared_pointer(const shared_pointer<U>& source, T* pointer) {$/;"	f	struct:nall::shared_pointer
shared_pointer	nall/shared-pointer.hpp	/^  shared_pointer(const shared_pointer_weak<U>& source) {$/;"	f	struct:nall::shared_pointer
shared_pointer	nall/shared-pointer.hpp	/^  shared_pointer(shared_pointer&& source) {$/;"	f	struct:nall::shared_pointer
shared_pointer	nall/shared-pointer.hpp	/^  shared_pointer(shared_pointer<U>&& source) {$/;"	f	struct:nall::shared_pointer
shared_pointer	nall/shared-pointer.hpp	/^struct shared_pointer {$/;"	s	namespace:nall
shared_pointer_manager	nall/shared-pointer.hpp	/^  shared_pointer_manager(void* pointer) : pointer(pointer) {$/;"	f	struct:nall::shared_pointer_manager
shared_pointer_manager	nall/shared-pointer.hpp	/^struct shared_pointer_manager {$/;"	s	namespace:nall
shared_pointer_new	nall/shared-pointer.hpp	/^  shared_pointer_new(P&&... p) : shared_pointer<T>(new T(forward<P>(p)...)) {$/;"	f	struct:nall::shared_pointer_new
shared_pointer_new	nall/shared-pointer.hpp	/^struct shared_pointer_new : shared_pointer<T> {$/;"	s	namespace:nall
shared_pointer_weak	nall/shared-pointer.hpp	/^  shared_pointer_weak() {$/;"	f	struct:nall::shared_pointer_weak
shared_pointer_weak	nall/shared-pointer.hpp	/^  shared_pointer_weak(const shared_pointer<T>& source) {$/;"	f	struct:nall::shared_pointer_weak
shared_pointer_weak	nall/shared-pointer.hpp	/^struct shared_pointer_weak {$/;"	s	namespace:nall
sharprtc	higan/sfc/coprocessor/sharprtc/sharprtc.cpp	/^SharpRTC sharprtc;$/;"	m	namespace:SuperFamicom	file:
shift	higan/fc/apu/apu.hpp	/^    uint8 shift;$/;"	m	struct:APU::Sweep
shift	higan/gba/apu/apu.hpp	/^    uint3 shift;$/;"	m	struct:APU::Sweep
shift	higan/ms/cartridge/cartridge.hpp	/^    uint2 shift;$/;"	m	struct:Cartridge::Mapper
shift	higan/sfc/coprocessor/obc1/obc1.hpp	/^    uint16 shift;$/;"	m	struct:OBC1::__anon11
shift	higan/sfc/cpu/cpu.hpp	/^    uint shift = 0;$/;"	m	struct:CPU::ALU
shift	nall/image.hpp	/^    alwaysinline auto shift() const { return _shift; }$/;"	f	struct:nall::image::channel
shiftClockFrequency	higan/gba/cpu/cpu.hpp	/^    uint1 shiftClockFrequency;$/;"	m	struct:Serial
shiftClockSelect	higan/gba/cpu/cpu.hpp	/^    uint1 shiftClockSelect;$/;"	m	struct:Serial
shiftaddr	higan/fc/cartridge/chip/mmc1.cpp	/^  uint shiftaddr;$/;"	m	struct:MMC1	file:
shiftdata	higan/fc/cartridge/chip/mmc1.cpp	/^  uint shiftdata;$/;"	m	struct:MMC1	file:
shortMode	higan/fc/apu/apu.hpp	/^    bool shortMode;$/;"	m	struct:APU::Noise
si	higan/gba/cpu/cpu.hpp	/^    uint1 si;$/;"	m	struct:Joybus
si	higan/processor/upd96050/upd96050.hpp	/^    uint16 si;           \/\/serial input$/;"	m	struct:Processor::uPD96050::Registers
si	higan/processor/v30mz/v30mz.hpp	/^    uint16_t si;$/;"	m	struct:Processor::Registers
siIRQEnable	higan/gba/cpu/cpu.hpp	/^    uint1 siIRQEnable;$/;"	m	struct:Joybus
siMode	higan/gba/cpu/cpu.hpp	/^    uint1 siMode;$/;"	m	struct:Joybus
siack	higan/processor/upd96050/upd96050.hpp	/^    boolean siack;  \/\/serial input acknowledge$/;"	m	struct:Processor::uPD96050::Status
sic	higan/processor/upd96050/upd96050.hpp	/^    boolean sic;   \/\/serial input control  (0 = 16-bit; 1 = 8-bit)$/;"	m	struct:Processor::uPD96050::Status
sign	higan/processor/v30mz/algorithms.cpp	11;"	d	file:
sign	higan/processor/v30mz/algorithms.cpp	226;"	d	file:
signal	higan/gba/apu/apu.hpp	/^    uint1 signal;$/;"	m	struct:APU::Square
signal	higan/sfc/coprocessor/armdsp/registers.hpp	/^  bool signal;$/;"	m	struct:Bridge
signal	hiro/core/core.cpp	107;"	d	file:
signal	hiro/core/core.cpp	26;"	d	file:
signalex	hiro/core/core.cpp	108;"	d	file:
signalex	hiro/core/core.cpp	29;"	d	file:
signature	nall/beat/archive/container.hpp	/^  } signature;$/;"	m	struct:nall::Beat::Archive::Container	typeref:struct:nall::Beat::Archive::Container::Signature
sine	higan/md/ym2612/ym2612.hpp	/^  uint16 sine[0x400];$/;"	v
siv	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 siv;$/;"	m	struct:SA1::MMIO
siwp	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 siwp;$/;"	m	struct:SA1::MMIO
sizable	hiro/core/core.hpp	/^    sSizable sizable;$/;"	m	struct:hiro::mFrame::State
sizable	hiro/core/shared.hpp	/^  auto sizable() const { return self().sizable(); }$/;"	f	struct:Frame
sizable	hiro/core/shared.hpp	/^  auto sizable() const { return self().sizable(); }$/;"	f	struct:TabFrameItem
sizable	hiro/core/shared.hpp	/^  auto sizable() const { return self().sizable(); }$/;"	f	struct:Window
sizable	hiro/core/widget/tab-frame-item.hpp	/^    sSizable sizable;$/;"	m	struct:mTabFrameItem::State
sizable	hiro/core/window.hpp	/^    sSizable sizable;$/;"	m	struct:mWindow::State
sizable	hiro/extension/fixed-layout.hpp	/^    sSizable sizable;$/;"	m	struct:mFixedLayoutCell::State
sizable	hiro/extension/horizontal-layout.hpp	/^    sSizable sizable;$/;"	m	struct:mHorizontalLayoutCell::State
sizable	hiro/extension/shared.hpp	/^  auto sizable() const { return self().sizable(); }$/;"	f	struct:FixedLayoutCell
sizable	hiro/extension/shared.hpp	/^  auto sizable() const { return self().sizable(); }$/;"	f	struct:HorizontalLayoutCell
sizable	hiro/extension/shared.hpp	/^  auto sizable() const { return self().sizable(); }$/;"	f	struct:TableLayoutCell
sizable	hiro/extension/shared.hpp	/^  auto sizable() const { return self().sizable(); }$/;"	f	struct:VerticalLayoutCell
sizable	hiro/extension/table-layout.hpp	/^    sSizable sizable;$/;"	m	struct:mTableLayoutCell::State
sizable	hiro/extension/vertical-layout.hpp	/^    sSizable sizable;$/;"	m	struct:mVerticalLayoutCell::State
size	genius/genius.hpp	/^  string size;$/;"	m	struct:Memory
size	higan/emulator/game.hpp	/^    natural size;$/;"	m	struct:Emulator::Game::Memory
size	higan/fc/cartridge/board/board.hpp	/^    uint size = 0;$/;"	m	struct:Board::Memory
size	higan/gb/cartridge/cartridge.hpp	/^    uint size = 0;$/;"	m	struct:Cartridge::Memory
size	higan/gb/cartridge/mbc7/mbc7.hpp	/^    uint size;         \/\/in bytes$/;"	m	struct:MBC7::EEPROM
size	higan/gb/memory/memory.hpp	/^  uint size = 0;$/;"	m	struct:Memory
size	higan/gba/apu/apu.hpp	/^    uint6 size;$/;"	m	struct:APU::FIFO
size	higan/gba/cartridge/memory.hpp	/^  uint size;$/;"	m	struct:EEPROM
size	higan/gba/cartridge/memory.hpp	/^  uint size;$/;"	m	struct:FLASH
size	higan/gba/cartridge/memory.hpp	/^  uint size;$/;"	m	struct:MROM
size	higan/gba/cartridge/memory.hpp	/^  uint size;$/;"	m	struct:SRAM
size	higan/gba/cpu/cpu.hpp	/^    uint1 size;$/;"	m	struct:DMA
size	higan/gba/ppu/ppu.hpp	/^    uint2  size;$/;"	m	struct:PPU::Object
size	higan/gba/system/system.hpp	/^  uint size = 0;$/;"	m	struct:BIOS
size	higan/md/cartridge/cartridge.hpp	/^    uint size = 0;  \/\/16-bit word size$/;"	m	struct:Cartridge::Memory
size	higan/ms/cartridge/cartridge.hpp	/^    uint size = 0;$/;"	m	struct:Cartridge::Memory
size	higan/pce/cartridge/cartridge.hpp	/^    uint size = 0;$/;"	m	struct:Cartridge::Memory
size	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^    uint16 size;  \/\/$43x5-$43x6 -- DMA transfer size$/;"	m	struct:SDD1::DMA
size	higan/sfc/interface/configuration.hpp	/^        uint size = 0x10000;$/;"	m	struct:Configuration::System::PPU1::VRAM
size	higan/sfc/memory/protectable.hpp	/^    uint size = 0;$/;"	m	struct:ProtectableMemory::__anon8
size	higan/sfc/memory/readable.hpp	/^    uint size = 0;$/;"	m	struct:ReadableMemory::__anon9
size	higan/sfc/memory/writable.hpp	/^    uint size = 0;$/;"	m	struct:WritableMemory::__anon10
size	higan/sfc/ppu/background.cpp	/^uint4 PPU::Background::Mosaic::size;$/;"	m	class:PPU::Background::Mosaic	file:
size	higan/sfc/ppu/object.hpp	/^    uint1 size;$/;"	m	struct:OAM::Object
size	higan/ws/cartridge/cartridge.hpp	/^    uint size = 0;$/;"	m	struct:Cartridge::Memory
size	hiro/core/font.hpp	/^    float size = 0.0;      \/\/4$/;"	m	struct:Font::State
size	hiro/extension/horizontal-layout.hpp	/^    Size size;$/;"	m	struct:mHorizontalLayoutCell::State
size	hiro/extension/shared.hpp	/^  auto size() const { return self().size(); }$/;"	f	struct:HorizontalLayoutCell
size	hiro/extension/shared.hpp	/^  auto size() const { return self().size(); }$/;"	f	struct:TableLayout
size	hiro/extension/shared.hpp	/^  auto size() const { return self().size(); }$/;"	f	struct:TableLayoutCell
size	hiro/extension/shared.hpp	/^  auto size() const { return self().size(); }$/;"	f	struct:VerticalLayoutCell
size	hiro/extension/table-layout.hpp	/^    Size size;$/;"	m	struct:mTableLayout::State
size	hiro/extension/table-layout.hpp	/^    Size size;$/;"	m	struct:mTableLayoutCell::State
size	hiro/extension/vertical-layout.hpp	/^    Size size;$/;"	m	struct:mVerticalLayoutCell::State
size	icarus/heuristics/heuristics.hpp	/^  auto& size(natural size) { _size = size; return *this; }$/;"	f	struct:Heuristics::Memory
size	nall/beat/archive/node.hpp	/^    uint size = 0;  \/\/decompressed size; memory.size() == compressed size$/;"	m	struct:nall::Beat::Archive::Node::Compression
size	nall/decode/gzip.hpp	/^  uint size = 0;$/;"	m	struct:nall::Decode::GZIP
size	nall/decode/png.hpp	/^  uint size = 0;$/;"	m	struct:nall::Decode::PNG
size	nall/decode/zip.hpp	/^    uint size;$/;"	m	struct:nall::Decode::ZIP::File
size	nall/encode/zip.hpp	/^    uint32_t size;$/;"	m	struct:nall::Encode::ZIP::entry_t
size	nall/http/message.hpp	/^  auto size() const { return variables.size(); }$/;"	f	struct:nall::HTTP::Variables
size	nall/image.hpp	/^  alwaysinline auto size() const { return _height * pitch(); }$/;"	f	struct:nall::image
sizeGroup	higan/target-bsnes/presentation/presentation.hpp	/^      Group sizeGroup;$/;"	m	struct:Presentation
sizeGroup	higan/target-higan/presentation/presentation.hpp	/^      Group sizeGroup;$/;"	m	struct:Presentation
sizeof	nall/arithmetic/natural.hpp	/^template<typename T> alwaysinline auto _set(Pair& lhs, const T& rhs) -> enable_if_t<(sizeof(Pair) > sizeof(T))> {$/;"	f	namespace:nall
skew	higan/target-bsnes/settings/settings.hpp	/^    int skew = 0;$/;"	m	struct:Settings::Audio
sleeping	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 sleeping;$/;"	m	struct:BSMemory::Global::Status
slot	higan/gba/cpu/cpu.hpp	/^    uint16 slot[8];$/;"	m	struct:__anon6
slot	higan/md/cartridge/cartridge.hpp	/^  unique_pointer<Cartridge> slot;$/;"	m	struct:Cartridge
slotBSMemory	higan/sfc/cartridge/cartridge.hpp	/^  Emulator::Game slotBSMemory;$/;"	m	struct:Cartridge
slotGameBoy	higan/sfc/cartridge/cartridge.hpp	/^  Emulator::Game slotGameBoy;$/;"	m	struct:Cartridge
slotSufamiTurboA	higan/sfc/cartridge/cartridge.hpp	/^  Emulator::Game slotSufamiTurboA;$/;"	m	struct:Cartridge
slotSufamiTurboB	higan/sfc/cartridge/cartridge.hpp	/^  Emulator::Game slotSufamiTurboB;$/;"	m	struct:Cartridge
slots	hiro/qt/platform.hpp	/^public slots:$/;"	m	struct:hiro::pIconView
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtButton
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtCheckButton
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtCheckLabel
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtComboButton
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtHexEditScrollBar
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtHorizontalScrollBar
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtHorizontalSlider
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtLineEdit
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtMenuCheckItem
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtMenuItem
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtMenuRadioItem
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtRadioButton
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtRadioLabel
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtTabFrame
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtTableView
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtTextEdit
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtTimer
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtVerticalScrollBar
slots	hiro/qt/qt.hpp	/^public slots:$/;"	m	struct:hiro::QtVerticalSlider
smeg	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 smeg;$/;"	m	struct:SA1::MMIO
smp	higan/sfc/smp/smp.cpp	/^SMP smp;$/;"	m	namespace:SuperFamicom	file:
snesBuffer	higan/sfc/expansion/21fx/21fx.hpp	/^  vector<uint8> snesBuffer;  \/\/SNES -> Link$/;"	m	struct:S21FX
snv	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 snv;$/;"	m	struct:SA1::MMIO
so	higan/gba/cpu/cpu.hpp	/^    uint1 so;$/;"	m	struct:Joybus
so	higan/processor/upd96050/upd96050.hpp	/^    uint16 so;           \/\/serial output$/;"	m	struct:Processor::uPD96050::Registers
soMode	higan/gba/cpu/cpu.hpp	/^    uint1 soMode;$/;"	m	struct:Joybus
soack	higan/processor/upd96050/upd96050.hpp	/^    boolean soack;  \/\/serial output acknowledge$/;"	m	struct:Processor::uPD96050::Status
soam	higan/fc/ppu/ppu.hpp	/^    OAM soam[8];  \/\/secondary$/;"	m	struct:PPU::Latches
soc	higan/processor/upd96050/upd96050.hpp	/^    boolean soc;   \/\/serial output control (0 = 16-bit; 1 = 8-bit)$/;"	m	struct:Processor::uPD96050::Status
sort	hiro/core/shared.hpp	/^  auto sort() { return self().sort(), *this; }$/;"	f	struct:TableView
sort	hiro/core/shared.hpp	/^  auto sort(Sort sorting) { return self().sort(sorting), *this; }$/;"	f	struct:TableViewColumn
sortBy	higan/target-bsnes/tools/tools.hpp	/^  } sortBy = SortBy::NameAscending;$/;"	m	struct:StateManager	typeref:class:StateManager::SortBy
sortable	hiro/core/shared.hpp	/^  auto sortable() const { return self().sortable(); }$/;"	f	struct:TableView
sortable	hiro/core/widget/table-view.hpp	/^    bool sortable = false;$/;"	m	struct:mTableView::State
sorting	hiro/core/shared.hpp	/^  auto sorting() const { return self().sorting(); }$/;"	f	struct:TableViewColumn
sorting	hiro/core/widget/table-view-column.hpp	/^    Sort sorting = Sort::None;$/;"	m	struct:mTableViewColumn::State
source	higan/gba/cpu/cpu.hpp	/^      VariadicNatural source;$/;"	m	struct:DMA::Latch
source	higan/gba/cpu/cpu.hpp	/^    VariadicNatural source;$/;"	m	struct:DMA
source	higan/md/vdp/vdp.hpp	/^      uint22 source;$/;"	m	struct:VDP::DMA::IO
source	higan/pce/vdc/vdc.hpp	/^    uint16 source;$/;"	m	struct:VDC::DMA
source	higan/processor/hg51b/hg51b.hpp	/^      uint24 source;$/;"	m	struct:Processor::HG51B::IO::DMA
source	higan/ws/apu/apu.hpp	/^      uint20 source;$/;"	m	struct:APU::DMA::Registers
source	higan/ws/apu/apu.hpp	/^      uint20 source;$/;"	m	struct:APU::DMA::State
source	higan/ws/ppu/ppu.hpp	/^    Source source;$/;"	m	struct:PPU::Pixel
source	nall/database/odbc.hpp	/^    Query(const Query& source) = delete;$/;"	m	struct:nall::Database::ODBC::Query
source	nall/database/odbc.hpp	/^    Statement(const Statement& source) = delete;$/;"	m	struct:nall::Database::ODBC::Statement
source	nall/database/sqlite3.hpp	/^    Query(const Query& source) = delete;$/;"	m	struct:nall::Database::SQLite3::Query
source	nall/database/sqlite3.hpp	/^    Statement(const Statement& source) = delete;$/;"	m	struct:nall::Database::SQLite3::Statement
source	nall/primitives.hpp	/^    Integer& source;$/;"	m	struct:nall::Integer::Reference
source	nall/primitives.hpp	/^    Natural& source;$/;"	m	struct:nall::Natural::Reference
source	nall/set.hpp	/^    const set& source;$/;"	m	struct:nall::set::base_iterator
source	nall/string/markup/node.hpp	/^    const Node& source;$/;"	m	struct:nall::Markup::Node::iterator
sourceAddress	higan/sfc/cpu/cpu.hpp	/^    uint16 sourceAddress = 0xffff;$/;"	m	struct:CPU::Channel
sourceAlpha	nall/image.hpp	/^    sourceAlpha,  \/\/color = sourceColor * sourceAlpha + targetColor * (1 - sourceAlpha)$/;"	m	class:nall::image::blend
sourceBank	higan/sfc/cpu/cpu.hpp	/^    uint8 sourceBank = 0xff;$/;"	m	struct:CPU::Channel
sourceColor	nall/image.hpp	/^    sourceColor,  \/\/color = sourceColor$/;"	m	class:nall::image::blend
sourceIncrementMode	higan/pce/vdc/vdc.hpp	/^    bool   sourceIncrementMode = 0;$/;"	m	struct:VDC::DMA
sourceMode	higan/gba/cpu/cpu.hpp	/^    uint2 sourceMode;$/;"	m	struct:DMA
sourceVoice	ruby/audio/xaudio2.cpp	/^  IXAudio2SourceVoice* sourceVoice = nullptr;$/;"	m	struct:AudioXAudio2	file:
sp	higan/processor/lr35902/lr35902.hpp	/^    Pair sp;$/;"	m	struct:Processor::LR35902::Registers
sp	higan/processor/upd96050/upd96050.hpp	/^    uint4 sp;            \/\/stack pointer$/;"	m	struct:Processor::uPD96050::Registers
sp	higan/processor/v30mz/v30mz.hpp	/^    uint16_t sp;$/;"	m	struct:Processor::Registers
sp	higan/processor/z80/z80.hpp	/^    uint16 sp;$/;"	m	struct:Processor::Z80::Registers
spacing	hiro/extension/horizontal-layout.hpp	/^    float spacing = 5;$/;"	m	struct:mHorizontalLayout::State
spacing	hiro/extension/horizontal-layout.hpp	/^    float spacing = 5;$/;"	m	struct:mHorizontalLayoutCell::State
spacing	hiro/extension/shared.hpp	/^  auto spacing() const { return self().spacing(); }$/;"	f	struct:HorizontalLayoutCell
spacing	hiro/extension/shared.hpp	/^  auto spacing() const { return self().spacing(); }$/;"	f	struct:TableLayoutColumn
spacing	hiro/extension/shared.hpp	/^  auto spacing() const { return self().spacing(); }$/;"	f	struct:TableLayoutRow
spacing	hiro/extension/shared.hpp	/^  auto spacing() const { return self().spacing(); }$/;"	f	struct:VerticalLayoutCell
spacing	hiro/extension/table-layout.hpp	/^    float spacing = 5;$/;"	m	struct:mTableLayoutColumn::State
spacing	hiro/extension/table-layout.hpp	/^    float spacing = 5;$/;"	m	struct:mTableLayoutRow::State
spacing	hiro/extension/vertical-layout.hpp	/^    float spacing = 5;$/;"	m	struct:mVerticalLayout::State
spacing	hiro/extension/vertical-layout.hpp	/^    float spacing = 5;$/;"	m	struct:mVerticalLayoutCell::State
spc7110	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^  SPC7110& spc7110;$/;"	m	struct:Decompressor	file:
spc7110	higan/sfc/coprocessor/spc7110/spc7110.cpp	/^SPC7110 spc7110;$/;"	m	namespace:SuperFamicom	file:
speakerEnable	higan/ws/apu/apu.hpp	/^    uint1 speakerEnable;$/;"	m	struct:APU::Registers
speakerShift	higan/ws/apu/apu.hpp	/^    uint2 speakerShift;$/;"	m	struct:APU::Registers
speed	higan/fc/apu/apu.hpp	/^    uint4 speed;$/;"	m	struct:APU::Envelope
speed	higan/sfc/controller/mouse/mouse.hpp	/^  uint speed;  \/\/0 = slow, 1 = normal, 2 = fast$/;"	v
speed	higan/ws/apu/apu.hpp	/^      uint3 speed;$/;"	m	struct:APU::Channel5::Registers
speed	ruby/audio/asio.hpp	/^  double speed;$/;"	m	struct:ASIOTimeCode
speed	ruby/audio/asio.hpp	/^  double speed;$/;"	m	struct:ASIOTimeInfo
speedDouble	higan/gb/cpu/cpu.hpp	/^    bool speedDouble = 0;$/;"	m	struct:CPU::Status
speedSwitch	higan/gb/cpu/cpu.hpp	/^    bool speedSwitch = 0;$/;"	m	struct:CPU::Status
springboard	libco/sjlj.c	/^static void springboard(int ignored) {$/;"	f	file:
sprite	higan/gb/ppu/ppu.hpp	/^  Sprite sprite[10];$/;"	m	struct:PPU
sprite	higan/md/vdp/vdp.hpp	/^  Sprite sprite;$/;"	m	struct:VDP
sprite	higan/ms/vdp/vdp.hpp	/^  } sprite;$/;"	m	struct:VDP	typeref:struct:VDP::Sprite
sprite	higan/pce/vdc/vdc.hpp	/^  } sprite;$/;"	m	struct:VDC	typeref:struct:VDC::Sprite
sprite	higan/sfc/controller/justifier/justifier.hpp	/^    shared_pointer<Emulator::Sprite> sprite;$/;"	m	struct:Player
sprite	higan/sfc/controller/super-scope/super-scope.hpp	/^  shared_pointer<Emulator::Sprite> sprite;$/;"	m	struct:SuperScope
sprite	higan/ws/ppu/ppu.hpp	/^    uint32 sprite[32];$/;"	m	struct:PPU::Latches
sprite8x16	higan/fc/cartridge/chip/mmc5.cpp	/^  bool sprite8x16;$/;"	m	struct:MMC5	file:
spriteAccess	higan/pce/vdc/vdc.hpp	/^    uint2  spriteAccess;$/;"	m	struct:VDC::IO
spriteAddress	higan/fc/ppu/ppu.hpp	/^    uint spriteAddress = 0;$/;"	m	struct:PPU::IO
spriteAttributeTableAddress	higan/ms/vdp/vdp.hpp	/^    uint6 spriteAttributeTableAddress;$/;"	m	struct:VDP::IO
spriteAttributeTableMask	higan/ms/vdp/vdp.hpp	/^    uint1 spriteAttributeTableMask;$/;"	m	struct:VDP::IO
spriteBase	higan/ws/ppu/ppu.hpp	/^    uint6 spriteBase;$/;"	m	struct:PPU::Registers
spriteCollision	higan/ms/vdp/vdp.hpp	/^    bool spriteCollision = 0;$/;"	m	struct:VDP::IO
spriteCount	higan/ws/ppu/ppu.hpp	/^    uint spriteCount = 0;$/;"	m	struct:PPU::Latches
spriteCount	higan/ws/ppu/ppu.hpp	/^    uint8 spriteCount;  \/\/0 - 128$/;"	m	struct:PPU::Registers
spriteDouble	higan/ms/vdp/vdp.hpp	/^    bool spriteDouble = 0;$/;"	m	struct:VDP::IO
spriteEdgeEnable	higan/fc/ppu/ppu.hpp	/^    bool spriteEdgeEnable = 0;$/;"	m	struct:PPU::IO
spriteEnable	higan/fc/ppu/ppu.hpp	/^    bool spriteEnable = 0;$/;"	m	struct:PPU::IO
spriteEnable	higan/ws/ppu/ppu.hpp	/^    uint1 spriteEnable;$/;"	m	struct:PPU::Latches
spriteEnable	higan/ws/ppu/ppu.hpp	/^    uint1 spriteEnable;$/;"	m	struct:PPU::Registers
spriteFirst	higan/ws/ppu/ppu.hpp	/^    uint7 spriteFirst;$/;"	m	struct:PPU::Registers
spriteHeight	higan/fc/ppu/ppu.hpp	/^    uint spriteHeight = 0;$/;"	m	struct:PPU::IO
spriteOverflow	higan/fc/ppu/ppu.hpp	/^    bool spriteOverflow = 0;$/;"	m	struct:PPU::IO
spriteOverflow	higan/ms/vdp/vdp.hpp	/^    bool spriteOverflow = 0;$/;"	m	struct:VDP::IO
spritePatternTableAddress	higan/ms/vdp/vdp.hpp	/^    uint1 spritePatternTableAddress;$/;"	m	struct:VDP::IO
spritePatternTableMask	higan/ms/vdp/vdp.hpp	/^    uint2 spritePatternTableMask;$/;"	m	struct:VDP::IO
spriteShift	higan/ms/vdp/vdp.hpp	/^    bool spriteShift = 0;$/;"	m	struct:VDP::IO
spriteTile	higan/ms/vdp/vdp.hpp	/^    bool spriteTile = 0;$/;"	m	struct:VDP::IO
spriteWindowEnable	higan/ws/ppu/ppu.hpp	/^    uint1 spriteWindowEnable;$/;"	m	struct:PPU::Latches
spriteWindowEnable	higan/ws/ppu/ppu.hpp	/^    uint1 spriteWindowEnable;$/;"	m	struct:PPU::Registers
spriteWindowX0	higan/ws/ppu/ppu.hpp	/^    uint8 spriteWindowX0;$/;"	m	struct:PPU::Latches
spriteWindowX0	higan/ws/ppu/ppu.hpp	/^    uint8 spriteWindowX0;$/;"	m	struct:PPU::Registers
spriteWindowX1	higan/ws/ppu/ppu.hpp	/^    uint8 spriteWindowX1;$/;"	m	struct:PPU::Latches
spriteWindowX1	higan/ws/ppu/ppu.hpp	/^    uint8 spriteWindowX1;$/;"	m	struct:PPU::Registers
spriteWindowY0	higan/ws/ppu/ppu.hpp	/^    uint8 spriteWindowY0;$/;"	m	struct:PPU::Latches
spriteWindowY0	higan/ws/ppu/ppu.hpp	/^    uint8 spriteWindowY0;$/;"	m	struct:PPU::Registers
spriteWindowY1	higan/ws/ppu/ppu.hpp	/^    uint8 spriteWindowY1;$/;"	m	struct:PPU::Latches
spriteWindowY1	higan/ws/ppu/ppu.hpp	/^    uint8 spriteWindowY1;$/;"	m	struct:PPU::Registers
spriteZeroHit	higan/fc/ppu/ppu.hpp	/^    bool spriteZeroHit = 0;$/;"	m	struct:PPU::IO
sprites	higan/gb/ppu/ppu.hpp	/^  uint sprites = 0;$/;"	m	struct:PPU
sprites	higan/video/video.hpp	/^  vector<shared_pointer<Sprite>> sprites;$/;"	m	struct:Emulator::Video
spsr	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      PSR spsr;$/;"	m	struct:Processor::ABT
spsr	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      PSR spsr;$/;"	m	struct:Processor::FIQ
spsr	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      PSR spsr;$/;"	m	struct:Processor::IRQ
spsr	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      PSR spsr;$/;"	m	struct:Processor::SVC
spsr	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      PSR spsr;$/;"	m	struct:Processor::UND
square1	higan/gb/apu/apu.hpp	/^    } square1, square2, wave, noise;$/;"	m	struct:APU::Sequencer	typeref:struct:APU::Sequencer::Channel
square1	higan/gb/apu/apu.hpp	/^  } square1;$/;"	m	struct:APU	typeref:struct:APU::Square1
square1	higan/gba/apu/apu.hpp	/^  } square1;$/;"	m	struct:APU	typeref:struct:APU::Square1
square2	higan/gb/apu/apu.hpp	/^    } square1, square2, wave, noise;$/;"	m	struct:APU::Sequencer	typeref:struct:APU::Sequencer::Channel
square2	higan/gb/apu/apu.hpp	/^  } square2;$/;"	m	struct:APU	typeref:struct:APU::Square2
square2	higan/gba/apu/apu.hpp	/^  } square2;$/;"	m	struct:APU	typeref:struct:APU::Square2
sr	higan/processor/gsu/registers.hpp	/^  auto& sr() { return r[sreg]; }  \/\/source register (from)$/;"	f	struct:Registers
sr	higan/processor/upd96050/upd96050.hpp	/^    Status sr;           \/\/status register$/;"	m	struct:Processor::uPD96050::Registers
sram	higan/gba/cartridge/memory.hpp	/^} sram;$/;"	v	typeref:struct:SRAM
sramBank	higan/ws/cartridge/cartridge.hpp	/^    uint8 sramBank = 0xff;$/;"	m	struct:Cartridge::Registers
sreg	higan/processor/gsu/registers.hpp	/^  uint sreg;$/;"	m	struct:Registers
ss	higan/processor/v30mz/v30mz.hpp	/^    uint16_t ss;$/;"	m	struct:Processor::Registers
ssg	higan/md/ym2612/ym2612.hpp	/^      } ssg;$/;"	m	struct:Channel::Operator	typeref:struct:Channel::Operator::SSG
stack	higan/processor/hg51b/hg51b.hpp	/^  uint23 stack[8];$/;"	m	struct:Processor::HG51B
stack	higan/processor/upd96050/upd96050.hpp	/^    uint16 stack[16];    \/\/LIFO$/;"	m	struct:Processor::uPD96050::Registers
stack	libco/sjlj.c	/^  void* stack;$/;"	m	struct:__anon28	file:
stack	nall/set.hpp	/^    vector<node_t*> stack;$/;"	m	struct:nall::set::base_iterator
stack_align	libco/ppc.c	/^enum { stack_align = 256  };$/;"	e	enum:__anon31	file:
stage	higan/fc/cartridge/chip/vrc6.cpp	/^    uint3 stage;$/;"	m	struct:VRC6::Sawtooth	file:
stage0	higan/sfc/smp/smp.hpp	/^    uint8   stage0;$/;"	m	struct:SMP::Timer
stage1	higan/sfc/smp/smp.hpp	/^    uint8   stage1;$/;"	m	struct:SMP::Timer
stage2	higan/sfc/smp/smp.hpp	/^    uint8   stage2;$/;"	m	struct:SMP::Timer
stage3	higan/sfc/smp/smp.hpp	/^    uint4   stage3;$/;"	m	struct:SMP::Timer
start	higan/fc/controller/gamepad/gamepad.hpp	/^  bool start = 0;$/;"	v
start	higan/sfc/controller/gamepad/gamepad.hpp	/^  boolean b, y, select, start;$/;"	v
start	higan/sfc/controller/justifier/justifier.hpp	/^    bool start;$/;"	m	struct:Player
start	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    boolean b, y, select, start;$/;"	m	struct:Gamepad
start	higan/sfc/ppu-fast/line.cpp	/^uint PPU::Line::start = 0;$/;"	m	class:PPU::Line	file:
start	higan/ws/system/system.hpp	/^    bool b, a, start;$/;"	m	struct:System::Keypad
startBit	higan/gba/cpu/cpu.hpp	/^    uint1 startBit;$/;"	m	struct:Serial
startFullScreen	higan/target-bsnes/presentation/presentation.hpp	/^  bool startFullScreen = false;$/;"	m	struct:Presentation
state	higan/md/apu/apu.hpp	/^  } state;$/;"	m	struct:APU	typeref:struct:APU::State
state	higan/md/cpu/cpu.hpp	/^  } state;$/;"	m	struct:CPU	typeref:struct:CPU::State
state	higan/md/vdp/vdp.hpp	/^    } state;$/;"	m	struct:VDP::Background	typeref:struct:VDP::Background::State
state	higan/md/vdp/vdp.hpp	/^  } state;$/;"	m	struct:VDP	typeref:struct:VDP::State
state	higan/md/ym2612/ym2612.hpp	/^        uint   state = Release;$/;"	m	struct:Channel::Operator::Envelope
state	higan/ms/cpu/cpu.hpp	/^  } state;$/;"	m	struct:CPU	typeref:struct:CPU::State
state	higan/ms/vdp/vdp.hpp	/^    } state;$/;"	m	struct:VDP::Background	typeref:struct:VDP::Background::State
state	higan/ms/vdp/vdp.hpp	/^    } state;$/;"	m	struct:VDP::Sprite	typeref:struct:VDP::Sprite::State
state	higan/processor/v30mz/v30mz.hpp	/^  } state;$/;"	m	namespace:Processor	typeref:struct:Processor::State
state	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  enum class State : uint { Mode, Seek, Read, Write } state;$/;"	m	struct:EpsonRTC	typeref:class:EpsonRTC::State
state	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  enum class State : uint { Ready, Command, Read, Write } state;$/;"	m	struct:SharpRTC	typeref:class:SharpRTC::State
state	higan/sfc/dsp/dsp.hpp	/^  } state;$/;"	v	typeref:struct:State
state	higan/target-bsnes/input/input.hpp	/^  int16 state = 0;$/;"	m	struct:InputHotkey
state	higan/target-higan/input/input.hpp	/^  int16 state = 0;$/;"	m	struct:InputHotkey
state	hiro/core/core.hpp	/^  shared_pointer<State> state;$/;"	m	struct:hiro::Hotkey
state	hiro/core/core.hpp	/^  static State state;$/;"	m	struct:hiro::Keyboard
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::Alignment	typeref:struct:hiro::Alignment::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::BrowserWindow	typeref:struct:hiro::BrowserWindow::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::Color	typeref:struct:hiro::Color::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::Cursor	typeref:struct:hiro::Cursor::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::Geometry	typeref:struct:hiro::Geometry::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::Gradient	typeref:struct:hiro::Gradient::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::MessageWindow	typeref:struct:hiro::MessageWindow::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::Position	typeref:struct:hiro::Position::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::Property	typeref:struct:hiro::Property::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::Size	typeref:struct:hiro::Size::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mAction	typeref:struct:hiro::mAction::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mButton	typeref:struct:hiro::mButton::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mCanvas	typeref:struct:hiro::mCanvas::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mCheckButton	typeref:struct:hiro::mCheckButton::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mCheckLabel	typeref:struct:hiro::mCheckLabel::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mComboButton	typeref:struct:hiro::mComboButton::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mComboButtonItem	typeref:struct:hiro::mComboButtonItem::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mComboEdit	typeref:struct:hiro::mComboEdit::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mComboEditItem	typeref:struct:hiro::mComboEditItem::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mConsole	typeref:struct:hiro::mConsole::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mFrame	typeref:struct:hiro::mFrame::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mHexEdit	typeref:struct:hiro::mHexEdit::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mHorizontalScrollBar	typeref:struct:hiro::mHorizontalScrollBar::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mHorizontalSlider	typeref:struct:hiro::mHorizontalSlider::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mIconView	typeref:struct:hiro::mIconView::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mIconViewItem	typeref:struct:hiro::mIconViewItem::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mLabel	typeref:struct:hiro::mLabel::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mLineEdit	typeref:struct:hiro::mLineEdit::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mMenu	typeref:struct:hiro::mMenu::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mMenuBar	typeref:struct:hiro::mMenuBar::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mMenuCheckItem	typeref:struct:hiro::mMenuCheckItem::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mMenuItem	typeref:struct:hiro::mMenuItem::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mMenuRadioItem	typeref:struct:hiro::mMenuRadioItem::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mMenuSeparator	typeref:struct:hiro::mMenuSeparator::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mPopupMenu	typeref:struct:hiro::mPopupMenu::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mProgressBar	typeref:struct:hiro::mProgressBar::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mRadioButton	typeref:struct:hiro::mRadioButton::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mRadioLabel	typeref:struct:hiro::mRadioLabel::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mStatusBar	typeref:struct:hiro::mStatusBar::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mTextEdit	typeref:struct:hiro::mTextEdit::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mTreeView	typeref:struct:hiro::mTreeView::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mTreeViewItem	typeref:struct:hiro::mTreeViewItem::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mVerticalScrollBar	typeref:struct:hiro::mVerticalScrollBar::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mVerticalSlider	typeref:struct:hiro::mVerticalSlider::State
state	hiro/core/core.hpp	/^  } state;$/;"	m	struct:hiro::mViewport	typeref:struct:hiro::mViewport::State
state	hiro/core/font.hpp	/^  } state;$/;"	m	struct:Font	typeref:struct:Font::State
state	hiro/core/group.hpp	/^  } state;$/;"	m	struct:mGroup	typeref:struct:mGroup::State
state	hiro/core/keyboard.cpp	/^Keyboard::State Keyboard::state;$/;"	m	class:Keyboard	file:
state	hiro/core/object.hpp	/^  } state;$/;"	m	struct:mObject	typeref:struct:mObject::State
state	hiro/core/sizable.hpp	/^  } state;$/;"	m	struct:mSizable	typeref:struct:mSizable::State
state	hiro/core/timer.hpp	/^  } state;$/;"	m	struct:mTimer	typeref:struct:mTimer::State
state	hiro/core/widget/source-edit.hpp	/^  } state;$/;"	m	struct:mSourceEdit	typeref:struct:mSourceEdit::State
state	hiro/core/widget/tab-frame-item.hpp	/^  } state;$/;"	m	struct:mTabFrameItem	typeref:struct:mTabFrameItem::State
state	hiro/core/widget/tab-frame.hpp	/^  } state;$/;"	m	struct:mTabFrame	typeref:struct:mTabFrame::State
state	hiro/core/widget/table-view-cell.hpp	/^  } state;$/;"	m	struct:mTableViewCell	typeref:struct:mTableViewCell::State
state	hiro/core/widget/table-view-column.hpp	/^  } state;$/;"	m	struct:mTableViewColumn	typeref:struct:mTableViewColumn::State
state	hiro/core/widget/table-view-item.hpp	/^  } state;$/;"	m	struct:mTableViewItem	typeref:struct:mTableViewItem::State
state	hiro/core/widget/table-view.hpp	/^  } state;$/;"	m	struct:mTableView	typeref:struct:mTableView::State
state	hiro/core/widget/widget.hpp	/^  } state;$/;"	m	struct:mWidget	typeref:struct:mWidget::State
state	hiro/core/window.hpp	/^  } state;$/;"	m	struct:mWindow	typeref:struct:mWindow::State
state	hiro/extension/browser-dialog.cpp	/^  BrowserDialog::State& state;$/;"	m	struct:BrowserDialogWindow	file:
state	hiro/extension/browser-dialog.hpp	/^  } state;$/;"	m	struct:BrowserDialog	typeref:struct:BrowserDialog::State
state	hiro/extension/fixed-layout.hpp	/^  } state;$/;"	m	struct:mFixedLayout	typeref:struct:mFixedLayout::State
state	hiro/extension/fixed-layout.hpp	/^  } state;$/;"	m	struct:mFixedLayoutCell	typeref:struct:mFixedLayoutCell::State
state	hiro/extension/horizontal-layout.hpp	/^  } state;$/;"	m	struct:mHorizontalLayout	typeref:struct:mHorizontalLayout::State
state	hiro/extension/horizontal-layout.hpp	/^  } state;$/;"	m	struct:mHorizontalLayoutCell	typeref:struct:mHorizontalLayoutCell::State
state	hiro/extension/list-view.hpp	/^  } state;$/;"	m	struct:mListView	typeref:struct:mListView::State
state	hiro/extension/message-dialog.hpp	/^  } state;$/;"	m	struct:MessageDialog	typeref:struct:MessageDialog::State
state	hiro/extension/table-layout.hpp	/^  } state;$/;"	m	struct:mTableLayout	typeref:struct:mTableLayout::State
state	hiro/extension/table-layout.hpp	/^  } state;$/;"	m	struct:mTableLayoutCell	typeref:struct:mTableLayoutCell::State
state	hiro/extension/table-layout.hpp	/^  } state;$/;"	m	struct:mTableLayoutColumn	typeref:struct:mTableLayoutColumn::State
state	hiro/extension/table-layout.hpp	/^  } state;$/;"	m	struct:mTableLayoutRow	typeref:struct:mTableLayoutRow::State
state	hiro/extension/vertical-layout.hpp	/^  } state;$/;"	m	struct:mVerticalLayout	typeref:struct:mVerticalLayout::State
state	hiro/extension/vertical-layout.hpp	/^  } state;$/;"	m	struct:mVerticalLayoutCell	typeref:struct:mVerticalLayoutCell::State
state	nall/decode/inflate.hpp	/^struct state {$/;"	s	namespace:nall::Decode::puff
state	nall/random.hpp	/^  uint64_t state = 0;$/;"	m	struct:nall::PRNG::PCG
state	nall/string/transform/cml.hpp	/^  } state;$/;"	m	struct:nall::__anon38::CML	typeref:struct:nall::__anon38::CML::State
state	nall/string/transform/dml.hpp	/^  } state;$/;"	m	struct:nall::__anon37::DML	typeref:struct:nall::__anon37::DML::State
stateManager	higan/target-bsnes/tools/tools.cpp	/^StateManager stateManager;$/;"	v
stateWindow	higan/target-bsnes/tools/tools.cpp	/^StateWindow stateWindow;$/;"	v
state_size	libco/ppc.c	/^enum { state_size  = 1024 };$/;"	e	enum:__anon29	file:
states	higan/target-bsnes/settings/settings.hpp	/^    string states;$/;"	m	struct:Settings::Path
status	higan/gb/cpu/cpu.hpp	/^  } status;$/;"	m	struct:CPU	typeref:struct:CPU::Status
status	higan/gb/ppu/ppu.hpp	/^  } status;$/;"	m	struct:PPU	typeref:struct:PPU::Status
status	higan/gba/player/player.hpp	/^  } status;$/;"	m	struct:Player	typeref:struct:Player::Status
status	higan/sfc/coprocessor/event/event.hpp	/^  uint8 status;$/;"	m	struct:Event
status	higan/sfc/coprocessor/obc1/obc1.hpp	/^  } status;$/;"	m	struct:OBC1	typeref:struct:OBC1::__anon11
status	higan/sfc/coprocessor/sa1/sa1.hpp	/^  } status;$/;"	m	struct:SA1	typeref:struct:SA1::Status
status	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^      uint8 status;$/;"	m	struct:Decompressor::PEM::ContextInfo
status	higan/sfc/cpu/cpu.hpp	/^  } status;$/;"	m	struct:CPU	typeref:struct:CPU::Status
status	higan/sfc/ppu/counter/counter.hpp	/^  } status;$/;"	m	struct:PPUcounter	typeref:struct:PPUcounter::__anon13
status	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    } status;$/;"	m	struct:BSMemory::Block	typeref:struct:BSMemory::Block::Status
status	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    } status;$/;"	m	struct:BSMemory::Compatible	typeref:struct:BSMemory::Compatible::Status
status	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    } status;$/;"	m	struct:BSMemory::Global	typeref:struct:BSMemory::Global::Status
statusBar	higan/target-bsnes/settings/settings.hpp	/^    bool statusBar = true;$/;"	m	struct:Settings::General
statusBar	hiro/core/shared.hpp	/^  auto statusBar() const { return self().statusBar(); }$/;"	f	struct:Window
statusBar	hiro/core/window.hpp	/^    sStatusBar statusBar;$/;"	m	struct:mWindow::State
statusContainer	hiro/gtk/window.hpp	/^  GtkWidget* statusContainer = nullptr;$/;"	m	struct:hiro::pWindow
statusFrameRate	higan/target-bsnes/program/program.hpp	/^  string statusFrameRate;$/;"	m	struct:Program
statusHeight	hiro/gtk/settings.hpp	/^    int statusHeight = 4;$/;"	m	struct:hiro::Settings::Geometry
statusHeight	hiro/qt/settings.hpp	/^    int statusHeight = 9;$/;"	m	struct:hiro::Settings::Geometry
statusInfo	higan/target-higan/program/program.hpp	/^  string statusInfo;$/;"	m	struct:Program
statusMessage	higan/target-bsnes/program/program.hpp	/^  string statusMessage;$/;"	m	struct:Program
statusMessage	higan/target-higan/program/program.hpp	/^  string statusMessage;$/;"	m	struct:Program
statusTime	higan/target-bsnes/program/program.hpp	/^  uint64 statusTime;$/;"	m	struct:Program
statusTime	higan/target-higan/program/program.hpp	/^  uint64 statusTime = 0;  \/\/for status message timeout after two seconds$/;"	m	struct:Program
std	nall/traits.hpp	/^namespace std {$/;"	n
step	higan/gba/apu/apu.hpp	/^    uint3 step;$/;"	m	struct:APU::Sequencer
step	nall/range.hpp	/^    const int step;$/;"	m	struct:nall::range_t::iterator
step	nall/range.hpp	/^    const int step;$/;"	m	struct:nall::range_t::reverse_iterator
stepCounter	higan/fc/apu/apu.hpp	/^    uint5 stepCounter;$/;"	m	struct:APU::Triangle
steps	higan/md/ym2612/ym2612.hpp	/^        uint32 steps = 0;$/;"	m	struct:Channel::Operator::Envelope
steps	higan/md/ym2612/ym2612.hpp	/^    uint32_t steps[4];$/;"	m	struct:EnvelopeRate
stop	higan/processor/lr35902/lr35902.hpp	/^    uint1 stop;$/;"	m	struct:Processor::LR35902::Registers
stop	higan/processor/spc700/spc700.hpp	/^    bool stop = false;$/;"	m	struct:Processor::SPC700::Registers
stop	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 stop;$/;"	m	struct:EpsonRTC
stopped	higan/gba/cpu/cpu.hpp	/^    boolean stopped;$/;"	m	struct:Context
store	hiro/gtk/widget/icon-view.hpp	/^  GtkListStore* store = nullptr;$/;"	m	struct:hiro::pIconView
stp	higan/processor/wdc65816/wdc65816.hpp	/^    bool stp = false;  \/\/raised during stp, never cleared$/;"	m	struct:Processor::WDC65816::Registers
stream	higan/fc/apu/apu.hpp	/^  shared_pointer<Emulator::Stream> stream;$/;"	m	struct:APU
stream	higan/gb/apu/apu.hpp	/^  shared_pointer<Emulator::Stream> stream;$/;"	m	struct:APU
stream	higan/gba/apu/apu.hpp	/^  shared_pointer<Emulator::Stream> stream;$/;"	m	struct:APU
stream	higan/md/psg/psg.hpp	/^  shared_pointer<Emulator::Stream> stream;$/;"	m	struct:PSG
stream	higan/md/ym2612/ym2612.hpp	/^  shared_pointer<Emulator::Stream> stream;$/;"	m	struct:YM2612
stream	higan/ms/psg/psg.hpp	/^  shared_pointer<Emulator::Stream> stream;$/;"	m	struct:PSG
stream	higan/pce/psg/psg.hpp	/^  shared_pointer<Emulator::Stream> stream;$/;"	m	struct:PSG
stream	higan/sfc/coprocessor/icd/icd.hpp	/^  shared_pointer<Emulator::Stream> stream;$/;"	m	struct:ICD
stream	higan/sfc/coprocessor/msu1/msu1.hpp	/^  shared_pointer<Emulator::Stream> stream;$/;"	m	struct:MSU1
stream	higan/sfc/dsp/dsp.hpp	/^  shared_pointer<Emulator::Stream> stream;$/;"	m	struct:DSP
stream	higan/ws/apu/apu.hpp	/^  shared_pointer<Emulator::Stream> stream;$/;"	m	struct:APU
streams	higan/audio/audio.hpp	/^  vector<shared_pointer<Stream>> streams;$/;"	m	struct:Emulator::Audio
streq	nall/GNUmakefile	/^streq = $(if $(filter-out xx,x$(subst $1,,$2)$(subst $2,,$1)x),,1)$/;"	m
stride	nall/image.hpp	/^  alwaysinline auto stride() const { return (_depth + 7) >> 3; }$/;"	f	struct:nall::image
stride	nall/range.hpp	/^  int stride;$/;"	m	struct:nall::range_t
string	higan/emulator/game.hpp	/^    inline auto name() const -> string;$/;"	m	struct:Emulator::Game::Memory
string	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto disassemble(maybe<uint32> pc = nothing, maybe<boolean> thumb = nothing) -> string;$/;"	m	namespace:Processor
string	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto disassembleRegisters() -> string;$/;"	m	namespace:Processor
string	higan/processor/huc6280/huc6280.hpp	/^  auto disassemble(uint16 pc) -> string;$/;"	m	struct:Processor::HuC6280
string	higan/processor/lr35902/lr35902.hpp	/^  auto disassemble(uint16 pc) -> string;$/;"	m	struct:Processor::LR35902
string	higan/processor/lr35902/lr35902.hpp	/^  auto disassembleOpcode(uint16 pc) -> string;$/;"	m	struct:Processor::LR35902
string	higan/processor/lr35902/lr35902.hpp	/^  auto disassembleOpcodeCB(uint16 pc) -> string;$/;"	m	struct:Processor::LR35902
string	higan/processor/mos6502/mos6502.hpp	/^  auto disassemble(uint16 pc) -> string;$/;"	m	struct:Processor::MOS6502
string	higan/processor/spc700/spc700.hpp	/^  auto disassemble(uint16 address, bool p) -> string;$/;"	m	struct:Processor::SPC700
string	higan/processor/upd96050/upd96050.hpp	/^  auto disassemble(uint14 ip) -> string;$/;"	m	struct:Processor::uPD96050
string	higan/processor/v30mz/v30mz.hpp	/^  auto disassemble(uint16 cs, uint16 ip, bool registers = true, bool bytes = true) -> string;$/;"	m	namespace:Processor
string	higan/processor/wdc65816/wdc65816.hpp	/^  auto disassemble() -> string;$/;"	m	struct:Processor::WDC65816
string	higan/processor/wdc65816/wdc65816.hpp	/^  auto disassemble(uint24 addr, bool e, bool m, bool x) -> string;$/;"	m	struct:Processor::WDC65816
string	higan/processor/z80/z80.hpp	/^  auto disassemble(uint16 pc) -> string;$/;"	m	struct:Processor::Z80
string	higan/processor/z80/z80.hpp	/^  auto disassemble(uint16 pc, uint8 prefix, uint8 code) -> string;$/;"	m	struct:Processor::Z80
string	higan/processor/z80/z80.hpp	/^  auto disassembleCB(uint16 pc, uint8 prefix, uint8 code) -> string;$/;"	m	struct:Processor::Z80
string	higan/processor/z80/z80.hpp	/^  auto disassembleCBd(uint16 pc, uint8 prefix, int8 d, uint8 code) -> string;$/;"	m	struct:Processor::Z80
string	higan/processor/z80/z80.hpp	/^  auto disassembleED(uint16 pc, uint8 prefix, uint8 code) -> string;$/;"	m	struct:Processor::Z80
string	higan/sfc/interface/configuration.hpp	/^  auto read() -> string;$/;"	m	struct:Configuration
string	higan/sfc/interface/configuration.hpp	/^  auto read(string) -> string;$/;"	m	struct:Configuration
string	higan/target-bsnes/input/input.hpp	/^  auto displayName() -> string;$/;"	m	struct:InputMapping
string	higan/target-bsnes/program/program.hpp	/^  auto cheatPath() -> string;$/;"	m	struct:Program
string	higan/target-bsnes/program/program.hpp	/^  auto gamePath() -> string;$/;"	m	struct:Program
string	higan/target-bsnes/program/program.hpp	/^  auto path(string type, string location, string extension = "") -> string;$/;"	m	struct:Program
string	higan/target-bsnes/program/program.hpp	/^  auto screenshotPath() -> string;$/;"	m	struct:Program
string	higan/target-bsnes/program/program.hpp	/^  auto statePath() -> string;$/;"	m	struct:Program
string	higan/target-bsnes/tools/tools.hpp	/^  auto type() const -> string;$/;"	m	struct:StateManager
string	higan/target-higan/input/input.hpp	/^  auto displayName() -> string;$/;"	m	struct:InputMapping
string	higan/target-higan/program/program.hpp	/^  auto stateName(uint slot, bool managed = false) -> string;$/;"	m	struct:Program
string	hiro/cocoa/browser-window.hpp	/^  static auto directory(BrowserWindow::State& state) -> string;$/;"	m	struct:hiro::pBrowserWindow
string	hiro/cocoa/browser-window.hpp	/^  static auto open(BrowserWindow::State& state) -> string;$/;"	m	struct:hiro::pBrowserWindow
string	hiro/cocoa/browser-window.hpp	/^  static auto save(BrowserWindow::State& state) -> string;$/;"	m	struct:hiro::pBrowserWindow
string	hiro/cocoa/font.hpp	/^  static auto family(const string& family) -> string;$/;"	m	struct:hiro::pFont
string	hiro/cocoa/widget/text-edit.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::pTextEdit
string	hiro/core/application.hpp	/^  static auto name() -> string;$/;"	m	struct:Application
string	hiro/core/core.hpp	/^  auto directory() -> string;$/;"	m	struct:hiro::BrowserWindow
string	hiro/core/core.hpp	/^  auto name() const -> string;$/;"	m	struct:hiro::Property
string	hiro/core/core.hpp	/^  auto open() -> string;$/;"	m	struct:hiro::BrowserWindow
string	hiro/core/core.hpp	/^  auto path() const -> string;$/;"	m	struct:hiro::mTreeViewItem
string	hiro/core/core.hpp	/^  auto prompt() const -> string;$/;"	m	struct:hiro::mConsole
string	hiro/core/core.hpp	/^  auto save() -> string;$/;"	m	struct:hiro::BrowserWindow
string	hiro/core/core.hpp	/^  auto sequence() const -> string;$/;"	m	struct:hiro::Hotkey
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mButton
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mCheckButton
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mCheckLabel
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mComboButtonItem
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mComboEdit
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mComboEditItem
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mFrame
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mIconViewItem
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mLabel
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mLineEdit
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mMenu
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mMenuCheckItem
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mMenuItem
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mMenuRadioItem
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mRadioButton
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mRadioLabel
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mStatusBar
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mTextEdit
string	hiro/core/core.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::mTreeViewItem
string	hiro/core/core.hpp	/^  auto value() const -> string;$/;"	m	struct:hiro::Property
string	hiro/core/font.hpp	/^  auto family() const -> string;$/;"	m	struct:Font
string	hiro/core/object.hpp	/^  auto property(const string& name) const -> string;$/;"	m	struct:mObject
string	hiro/core/widget/source-edit.hpp	/^  auto text() const -> string;$/;"	m	struct:mSourceEdit
string	hiro/core/widget/tab-frame-item.hpp	/^  auto text() const -> string;$/;"	m	struct:mTabFrameItem
string	hiro/core/widget/table-view-cell.hpp	/^  auto text() const -> string;$/;"	m	struct:mTableViewCell
string	hiro/core/widget/table-view-column.hpp	/^  auto text() const -> string;$/;"	m	struct:mTableViewColumn
string	hiro/core/widget/widget.hpp	/^  auto toolTip() const -> string;$/;"	m	struct:mWidget
string	hiro/core/window.hpp	/^  auto title() const -> string;$/;"	m	struct:mWindow
string	hiro/extension/browser-dialog.hpp	/^  auto openFile() -> string;           \/\/one existing file$/;"	m	struct:BrowserDialog
string	hiro/extension/browser-dialog.hpp	/^  auto openFolder() -> string;         \/\/one existing folder$/;"	m	struct:BrowserDialog
string	hiro/extension/browser-dialog.hpp	/^  auto openObject() -> string;         \/\/one existing file or folder$/;"	m	struct:BrowserDialog
string	hiro/extension/browser-dialog.hpp	/^  auto option() -> string;$/;"	m	struct:BrowserDialog
string	hiro/extension/browser-dialog.hpp	/^  auto saveFile() -> string;           \/\/one file$/;"	m	struct:BrowserDialog
string	hiro/extension/browser-dialog.hpp	/^  auto selectFolder() -> string;       \/\/one existing folder$/;"	m	struct:BrowserDialog
string	hiro/extension/list-view.hpp	/^  auto text() const -> string;$/;"	m	struct:mListViewItem
string	hiro/extension/message-dialog.hpp	/^  auto _run() -> string;$/;"	m	struct:MessageDialog
string	hiro/extension/message-dialog.hpp	/^  auto error(const vector<string>& buttons = {"Ok"}) -> string;$/;"	m	struct:MessageDialog
string	hiro/extension/message-dialog.hpp	/^  auto information(const vector<string>& buttons = {"Ok"}) -> string;$/;"	m	struct:MessageDialog
string	hiro/extension/message-dialog.hpp	/^  auto question(const vector<string>& buttons = {"Yes", "No"}) -> string;$/;"	m	struct:MessageDialog
string	hiro/extension/message-dialog.hpp	/^  auto warning(const vector<string>& buttons = {"Ok"}) -> string;$/;"	m	struct:MessageDialog
string	hiro/gtk/action/action.hpp	/^  auto _mnemonic(string text) -> string;$/;"	m	struct:hiro::pAction
string	hiro/gtk/browser-window.hpp	/^  static auto directory(BrowserWindow::State& state) -> string;$/;"	m	struct:hiro::pBrowserWindow
string	hiro/gtk/browser-window.hpp	/^  static auto open(BrowserWindow::State& state) -> string;$/;"	m	struct:hiro::pBrowserWindow
string	hiro/gtk/browser-window.hpp	/^  static auto save(BrowserWindow::State& state) -> string;$/;"	m	struct:hiro::pBrowserWindow
string	hiro/gtk/font.hpp	/^  static auto family(const string& family) -> string;$/;"	m	struct:hiro::pFont
string	hiro/gtk/widget/source-edit.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::pSourceEdit
string	hiro/gtk/widget/text-edit.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::pTextEdit
string	hiro/qt/browser-window.hpp	/^  static auto directory(BrowserWindow::State& state) -> string;$/;"	m	struct:hiro::pBrowserWindow
string	hiro/qt/browser-window.hpp	/^  static auto open(BrowserWindow::State& state) -> string;$/;"	m	struct:hiro::pBrowserWindow
string	hiro/qt/browser-window.hpp	/^  static auto save(BrowserWindow::State& state) -> string;$/;"	m	struct:hiro::pBrowserWindow
string	hiro/qt/widget/text-edit.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::pTextEdit
string	hiro/windows/browser-window.hpp	/^  static auto directory(BrowserWindow::State& state) -> string;$/;"	m	struct:hiro::pBrowserWindow
string	hiro/windows/browser-window.hpp	/^  static auto open(BrowserWindow::State& state) -> string;$/;"	m	struct:hiro::pBrowserWindow
string	hiro/windows/browser-window.hpp	/^  static auto save(BrowserWindow::State& state) -> string;$/;"	m	struct:hiro::pBrowserWindow
string	hiro/windows/font.hpp	/^  static auto family(const string& family) -> string;$/;"	m	struct:hiro::pFont
string	hiro/windows/widget/line-edit.hpp	/^  auto _text() -> string;$/;"	m	struct:hiro::pLineEdit
string	hiro/windows/widget/text-edit.hpp	/^  auto text() const -> string;$/;"	m	struct:hiro::pTextEdit
string	icarus/core/core.hpp	/^  auto bsMemoryImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto bsMemoryManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto bsMemoryManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto error() const -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto failure(string message) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto famicomImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto famicomManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto famicomManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto gameBoyAdvanceImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto gameBoyAdvanceManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto gameBoyAdvanceManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto gameBoyColorImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto gameBoyColorManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto gameBoyColorManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto gameBoyImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto gameBoyManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto gameBoyManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto gameGearImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto gameGearManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto gameGearManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto import(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto manifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto masterSystemImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto masterSystemManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto masterSystemManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto megaDriveImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto megaDriveManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto megaDriveManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto pcEngineImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto pcEngineManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto pcEngineManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto pocketChallengeV2Import(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto pocketChallengeV2Manifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto pocketChallengeV2Manifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto success(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto sufamiTurboImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto sufamiTurboManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto sufamiTurboManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto superFamicomImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto superFamicomManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto superFamicomManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto superGrafxImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto superGrafxManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto superGrafxManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto wonderSwanColorImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto wonderSwanColorManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto wonderSwanColorManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto wonderSwanImport(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto wonderSwanManifest(string location) -> string;$/;"	m	struct:Icarus
string	icarus/core/core.hpp	/^  auto wonderSwanManifest(vector<uint8_t>& buffer, string location) -> string;$/;"	m	struct:Icarus
string	icarus/heuristics/bs-memory.cpp	/^  auto manifest() const -> string;$/;"	m	struct:Heuristics::BSMemory	file:
string	icarus/heuristics/famicom.cpp	/^  auto manifest() const -> string;$/;"	m	struct:Heuristics::Famicom	file:
string	icarus/heuristics/game-boy-advance.cpp	/^  auto manifest() const -> string;$/;"	m	struct:Heuristics::GameBoyAdvance	file:
string	icarus/heuristics/game-boy.cpp	/^  auto manifest() const -> string;$/;"	m	struct:Heuristics::GameBoy	file:
string	icarus/heuristics/game-gear.cpp	/^  auto manifest() const -> string;$/;"	m	struct:Heuristics::GameGear	file:
string	icarus/heuristics/heuristics.hpp	/^  auto text() const -> string;$/;"	m	struct:Heuristics::Memory
string	icarus/heuristics/heuristics.hpp	/^  auto text() const -> string;$/;"	m	struct:Heuristics::Oscillator
string	icarus/heuristics/heuristics.hpp	/^  auto text() const -> string;$/;"	m	struct:Heuristics::Slot
string	icarus/heuristics/master-system.cpp	/^  auto manifest() const -> string;$/;"	m	struct:Heuristics::MasterSystem	file:
string	icarus/heuristics/mega-drive.cpp	/^  auto manifest() const -> string;$/;"	m	struct:Heuristics::MegaDrive	file:
string	icarus/heuristics/pc-engine.cpp	/^  auto manifest() const -> string;$/;"	m	struct:Heuristics::PCEngine	file:
string	icarus/heuristics/sufami-turbo.cpp	/^  auto manifest() const -> string;$/;"	m	struct:Heuristics::SufamiTurbo	file:
string	icarus/heuristics/super-famicom.cpp	/^  auto board() const -> string;$/;"	m	struct:Heuristics::SuperFamicom	file:
string	icarus/heuristics/super-famicom.cpp	/^  auto firmwareARM() const -> string;$/;"	m	struct:Heuristics::SuperFamicom	file:
string	icarus/heuristics/super-famicom.cpp	/^  auto firmwareEXNEC() const -> string;$/;"	m	struct:Heuristics::SuperFamicom	file:
string	icarus/heuristics/super-famicom.cpp	/^  auto firmwareGB() const -> string;$/;"	m	struct:Heuristics::SuperFamicom	file:
string	icarus/heuristics/super-famicom.cpp	/^  auto firmwareHITACHI() const -> string;$/;"	m	struct:Heuristics::SuperFamicom	file:
string	icarus/heuristics/super-famicom.cpp	/^  auto firmwareNEC() const -> string;$/;"	m	struct:Heuristics::SuperFamicom	file:
string	icarus/heuristics/super-famicom.cpp	/^  auto manifest() const -> string;$/;"	m	struct:Heuristics::SuperFamicom	file:
string	icarus/heuristics/super-famicom.cpp	/^  auto region() const -> string;$/;"	m	struct:Heuristics::SuperFamicom	file:
string	icarus/heuristics/super-famicom.cpp	/^  auto revision() const -> string;$/;"	m	struct:Heuristics::SuperFamicom	file:
string	icarus/heuristics/super-famicom.cpp	/^  auto serial() const -> string;$/;"	m	struct:Heuristics::SuperFamicom	file:
string	icarus/heuristics/super-famicom.cpp	/^  auto title() const -> string;$/;"	m	struct:Heuristics::SuperFamicom	file:
string	icarus/heuristics/supergrafx.cpp	/^  auto manifest() const -> string;$/;"	m	struct:Heuristics::SuperGrafx	file:
string	icarus/heuristics/wonderswan.cpp	/^  auto manifest() const -> string;$/;"	m	struct:Heuristics::WonderSwan	file:
string	nall/arguments.hpp	/^  auto programLocation() const -> string;$/;"	m	struct:nall::Arguments
string	nall/arguments.hpp	/^  auto programName() const -> string;$/;"	m	struct:nall::Arguments
string	nall/arguments.hpp	/^  auto programPath() const -> string;$/;"	m	struct:nall::Arguments
string	nall/arguments.hpp	/^  auto take() -> string;$/;"	m	struct:nall::Arguments
string	nall/beat/archive/node.hpp	/^  auto getGroup() const -> string;$/;"	m	struct:nall::Beat::Archive::Node
string	nall/beat/archive/node.hpp	/^  auto getOwner() const -> string;$/;"	m	struct:nall::Beat::Archive::Node
string	nall/beat/archive/node.hpp	/^  auto metadata(bool indented = true) const -> string;$/;"	m	struct:nall::Beat::Archive::Node
string	nall/http/response.hpp	/^  inline auto findContentType() const -> string;$/;"	m	struct:nall::HTTP::Response
string	nall/http/response.hpp	/^  inline auto findContentType(const string& suffix) const -> string;$/;"	m	struct:nall::HTTP::Response
string	nall/http/response.hpp	/^  inline auto findResponseType() const -> string;$/;"	m	struct:nall::HTTP::Response
string	nall/http/server.hpp	/^  inline auto scan() -> string;$/;"	m	struct:nall::HTTP::Server
string	nall/posix/service.hpp	/^  inline auto name() const -> string;$/;"	m	struct:nall::service
string	nall/posix/service.hpp	/^  inline auto receive() -> string;$/;"	m	struct:nall::service
string	nall/smtp.hpp	/^  inline auto boundary() -> string;$/;"	m	struct:nall::SMTP
string	nall/smtp.hpp	/^  inline auto contact(const Information::Contact& contact) -> string;$/;"	m	struct:nall::SMTP
string	nall/smtp.hpp	/^  inline auto contacts(const vector<Information::Contact>& contacts) -> string;$/;"	m	struct:nall::SMTP
string	nall/smtp.hpp	/^  inline auto filename(const string& filename) -> string;$/;"	m	struct:nall::SMTP
string	nall/smtp.hpp	/^  inline auto message() -> string;$/;"	m	struct:nall::SMTP
string	nall/smtp.hpp	/^  inline auto recv(int sock) -> string;$/;"	m	struct:nall::SMTP
string	nall/smtp.hpp	/^  inline auto response() -> string;$/;"	m	struct:nall::SMTP
string	nall/smtp.hpp	/^  inline auto split(const string& text) -> string;$/;"	m	struct:nall::SMTP
string	nall/string.hpp	/^  inline auto merge(string_view separator) const -> string;$/;"	m	struct:nall::vector
string	nall/string.hpp	/^  inline auto slice(int offset = 0, int length = -1) -> string;$/;"	m	struct:nall::string
string	nall/string.hpp	/^  inline static auto read(string_view filename) -> string;$/;"	m	struct:nall::string
string	nall/string.hpp	/^  inline static auto repeat(string_view pattern, uint times) -> string;$/;"	m	struct:nall::string
string	nall/string.hpp	/^  string(const string& source) : string() { operator=(source); }$/;"	f	struct:nall::string
string	nall/string.hpp	/^  string(string&& source) : string() { operator=(move(source)); }$/;"	f	struct:nall::string
string	nall/string.hpp	/^  template<typename T, typename... P> string(T&& s, P&&... p) : string() {$/;"	f	struct:nall::string
string	nall/string.hpp	/^  template<typename T> inline auto _append(const stringify<T>&) -> string&;$/;"	m	struct:nall::string
string	nall/string.hpp	/^  template<typename T> inline auto _prepend(const stringify<T>&) -> string&;$/;"	m	struct:nall::string
string	nall/string.hpp	/^inline auto binary(uintmax value, long precision = 0, char padchar = '0') -> string;$/;"	m	namespace:nall
string	nall/string.hpp	/^inline auto hex(uintmax value, long precision = 0, char padchar = '0') -> string;$/;"	m	namespace:nall
string	nall/string.hpp	/^inline auto octal(uintmax value, long precision = 0, char padchar = '0') -> string;$/;"	m	namespace:nall
string	nall/string.hpp	/^inline auto slice(string_view self, int offset = 0, int length = -1) -> string;$/;"	m	namespace:nall
string	nall/string.hpp	/^struct string {$/;"	s	namespace:nall
string	nall/string.hpp	/^template<typename T> inline auto pad(const T& value, long precision = 0, char padchar = ' ') -> string;$/;"	m	namespace:nall
string	nall/string/allocator/adaptive.hpp	/^string::string() : _data(nullptr), _capacity(SSO - 1), _size(0) {$/;"	f	class:nall::string
string	nall/string/allocator/copy-on-write.hpp	/^string::string() : _data(nullptr), _refs(nullptr), _capacity(0), _size(0) {$/;"	f	class:nall::string
string	nall/string/allocator/small-string-optimization.hpp	/^string::string() {$/;"	f	class:nall::string
string	nall/string/allocator/vector.hpp	/^string::string() {$/;"	f	class:nall::string
string	nall/string/transform/cml.hpp	/^  auto parse(const string& filedata, const string& pathname) -> string;$/;"	m	struct:nall::__anon38::CML
string	nall/string/transform/cml.hpp	/^  auto parse(const string& filename) -> string;$/;"	m	struct:nall::__anon38::CML
string	nall/string/transform/dml.hpp	/^  auto escape(const string& text) -> string;$/;"	m	struct:nall::__anon37::DML
string	nall/string/transform/dml.hpp	/^  auto markup(const string& text) -> string;$/;"	m	struct:nall::__anon37::DML
string	nall/string/transform/dml.hpp	/^  auto parse(const string& filedata, const string& pathname) -> string;$/;"	m	struct:nall::__anon37::DML
string	nall/string/transform/dml.hpp	/^  auto parse(const string& filename) -> string;$/;"	m	struct:nall::__anon37::DML
string	ruby/audio/audio.hpp	/^  static auto optimalDriver() -> string;$/;"	m	struct:Audio
string	ruby/audio/audio.hpp	/^  static auto safestDriver() -> string;$/;"	m	struct:Audio
string	ruby/input/input.hpp	/^  static auto optimalDriver() -> string;$/;"	m	struct:Input
string	ruby/input/input.hpp	/^  static auto safestDriver() -> string;$/;"	m	struct:Input
string	ruby/video/video.hpp	/^  static auto optimalDriver() -> string;$/;"	m	struct:Video
string	ruby/video/video.hpp	/^  static auto safestDriver() -> string;$/;"	m	struct:Video
string_format	nall/string.hpp	/^  template<typename... P> string_format(P&&... p) { reserve(sizeof...(p)); append(forward<P>(p)...); }$/;"	f	struct:nall::string_format
string_format	nall/string.hpp	/^struct string_format : vector<string> {$/;"	s	namespace:nall
string_pascal	nall/string/pascal.hpp	/^  string_pascal(const char* text = nullptr) {$/;"	f	struct:nall::string_pascal
string_pascal	nall/string/pascal.hpp	/^  string_pascal(const string& text) {$/;"	f	struct:nall::string_pascal
string_pascal	nall/string/pascal.hpp	/^  string_pascal(const string_pascal& source) { operator=(source); }$/;"	f	struct:nall::string_pascal
string_pascal	nall/string/pascal.hpp	/^  string_pascal(string_pascal&& source) { operator=(move(source)); }$/;"	f	struct:nall::string_pascal
string_pascal	nall/string/pascal.hpp	/^struct string_pascal {$/;"	s	namespace:nall
string_view	nall/string.hpp	/^struct string_view {$/;"	s	namespace:nall
string_view	nall/string/view.hpp	/^string_view::string_view() {$/;"	f	class:nall::string_view
string_view	nall/string/view.hpp	/^string_view::string_view(P&&... p) {$/;"	f	class:nall::string_view
string_view	nall/string/view.hpp	/^string_view::string_view(const char* data) {$/;"	f	class:nall::string_view
string_view	nall/string/view.hpp	/^string_view::string_view(const char* data, uint size) {$/;"	f	class:nall::string_view
string_view	nall/string/view.hpp	/^string_view::string_view(const string& source) {$/;"	f	class:nall::string_view
string_view	nall/string/view.hpp	/^string_view::string_view(const string_view& source) {$/;"	f	class:nall::string_view
string_view	nall/string/view.hpp	/^string_view::string_view(string_view&& source) {$/;"	f	class:nall::string_view
stringify	nall/string/cast.hpp	/^  stringify(Integer<Bits> source) { fromInteger(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(Natural<Bits> source) { fromNatural(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(Real<Bits> source) { fromReal(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(bool value) : _value(value) {}$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(char source) { _data[0] = source; _data[1] = 0; }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(char* source) : _data(source ? source : "") {}$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(const T* source) {$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(const array_view<uint8_t>& source) : _view(source) {}$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(const char* source) : _data(source ? source : "") {}$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(const string& source) : _text(source) {}$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(const string_pascal& source) : _text(source) {}$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(const string_view& source) : _view(source) {}$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(const vector<uint8_t>& source) {$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(double source) { fromReal(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(float source) { fromReal(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(int128_t source) { fromInteger(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(long double source) { fromReal(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(signed char source) { fromInteger(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(signed int source) { fromInteger(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(signed long long source) { fromInteger(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(signed long source) { fromInteger(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(signed short source) { fromInteger(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(uint128_t source) { fromNatural(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(unsigned char source) { fromNatural(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(unsigned int source) { fromNatural(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(unsigned long long source) { fromNatural(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(unsigned long source) { fromNatural(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(unsigned short source) { fromNatural(_data, source); }$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^  stringify(vector<uint8_t> source) {$/;"	f	struct:nall::stringify
stringify	nall/string/cast.hpp	/^template<> struct stringify<Boolean> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<array_view<uint8_t>> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<bool> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<char*> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<char> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<const array_view<uint8_t>&> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<const char*> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<const string&> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<const string_pascal&> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<const string_view&> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<const vector<uint8_t>&> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<double> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<float> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<int128_t> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<long double> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<signed char> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<signed int> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<signed long long> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<signed long> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<signed short> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<string> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<string_pascal> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<string_view> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<uint128_t> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<unsigned char> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<unsigned int> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<unsigned long long> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<unsigned long> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<unsigned short> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<> struct stringify<vector<uint8_t>> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<typename T> struct stringify<T*> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<uint Bits> struct stringify<Integer<Bits>> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<uint Bits> struct stringify<Natural<Bits>> {$/;"	s	namespace:nall
stringify	nall/string/cast.hpp	/^template<uint Bits> struct stringify<Real<Bits>> {$/;"	s	namespace:nall
strlen	nall/GNUmakefile	/^strlen = \\$/;"	m
strlower	nall/GNUmakefile	/^strlower = $(call strtr,$1,$([A-Z]),$([a-z]))$/;"	m
strne	nall/GNUmakefile	/^strne = $(if $(filter-out xx,x$(subst $1,,$2)$(subst $2,,$1)x),1,)$/;"	m
strobeLock	higan/sfc/coprocessor/icd/icd.hpp	/^  bool strobeLock;$/;"	m	struct:ICD
strong	nall/shared-pointer.hpp	/^  uint strong = 0;$/;"	m	struct:nall::shared_pointer_manager
strtr	nall/GNUmakefile	/^strtr = \\$/;"	m
strupper	nall/GNUmakefile	/^strupper = $(call strtr,$1,$([a-z]),$([A-Z]))$/;"	m
subWidget	hiro/gtk/widget/console.hpp	/^  GtkWidget* subWidget = nullptr;$/;"	m	struct:hiro::pConsole
subWidget	hiro/gtk/widget/hex-edit.hpp	/^  GtkWidget* subWidget = nullptr;$/;"	m	struct:hiro::pHexEdit
subWidget	hiro/gtk/widget/icon-view.hpp	/^  GtkWidget* subWidget = nullptr;$/;"	m	struct:hiro::pIconView
subWidget	hiro/gtk/widget/label.hpp	/^  GtkWidget* subWidget = nullptr;$/;"	m	struct:hiro::pLabel
subWidget	hiro/gtk/widget/text-edit.hpp	/^  GtkWidget* subWidget = nullptr;$/;"	m	struct:hiro::pTextEdit
subject	nall/smtp.hpp	/^    string subject;$/;"	m	struct:nall::SMTP::Information
success	nall/beat/single/apply.hpp	85;"	d
success	nall/beat/single/apply.hpp	8;"	d
sufamiTurboA	higan/target-bsnes/program/program.hpp	/^  } sufamiTurboA, sufamiTurboB;$/;"	m	struct:Program	typeref:struct:Program::SufamiTurbo
sufamiTurboA	higan/target-bsnes/settings/settings.hpp	/^      string sufamiTurboA;$/;"	m	struct:Settings::Path::Recent
sufamiTurboB	higan/target-bsnes/program/program.hpp	/^  } sufamiTurboA, sufamiTurboB;$/;"	m	struct:Program	typeref:struct:Program::SufamiTurbo
sufamiTurboB	higan/target-bsnes/settings/settings.hpp	/^      string sufamiTurboB;$/;"	m	struct:Settings::Path::Recent
sufamiturboA	higan/sfc/slot/sufamiturbo/sufamiturbo.cpp	/^SufamiTurboCartridge sufamiturboA;$/;"	m	namespace:SuperFamicom	file:
sufamiturboB	higan/sfc/slot/sufamiturbo/sufamiturbo.cpp	/^SufamiTurboCartridge sufamiturboB;$/;"	m	namespace:SuperFamicom	file:
super	ruby/audio/audio.hpp	/^  Audio& super;$/;"	m	struct:AudioDriver
super	ruby/input/input.hpp	/^  Input& super;$/;"	m	struct:InputDriver
super	ruby/video/video.hpp	/^  Video& super;$/;"	m	struct:VideoDriver
superFamicom	higan/target-bsnes/program/program.hpp	/^  } superFamicom;$/;"	m	struct:Program	typeref:struct:Program::SuperFamicom
superFamicom	higan/target-bsnes/settings/settings.hpp	/^      string superFamicom;$/;"	m	struct:Settings::Path::Recent
superGameBoy	higan/gb/interface/interface.cpp	/^SuperGameBoyInterface* superGameBoy = nullptr;$/;"	m	namespace:GameBoy	file:
superfx	higan/sfc/coprocessor/superfx/superfx.cpp	/^SuperFX superfx;$/;"	m	namespace:SuperFamicom	file:
surface	hiro/cocoa/widget/canvas.hpp	/^  NSImage* surface = nullptr;$/;"	m	struct:hiro::pCanvas
surface	hiro/gtk/widget/canvas.hpp	/^  GdkPixbuf* surface = nullptr;$/;"	m	struct:hiro::pCanvas
surfaceHeight	hiro/cocoa/widget/canvas.hpp	/^  uint surfaceHeight = 0;$/;"	m	struct:hiro::pCanvas
surfaceHeight	hiro/gtk/widget/canvas.hpp	/^  uint surfaceHeight = 0;$/;"	m	struct:hiro::pCanvas
surfaceWidth	hiro/cocoa/widget/canvas.hpp	/^  uint surfaceWidth = 0;$/;"	m	struct:hiro::pCanvas
surfaceWidth	hiro/gtk/widget/canvas.hpp	/^  uint surfaceWidth = 0;$/;"	m	struct:hiro::pCanvas
suspend	higan/processor/hg51b/hg51b.hpp	/^    } suspend;$/;"	m	struct:Processor::HG51B::IO	typeref:struct:Processor::HG51B::IO::Suspend
suspended	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 suspended;$/;"	m	struct:BSMemory::Global::Status
sustainLevel	higan/md/ym2612/ym2612.hpp	/^        uint4  sustainLevel = 0;$/;"	m	struct:Channel::Operator::Envelope
sustainRate	higan/md/ym2612/ym2612.hpp	/^        uint5  sustainRate = 0;$/;"	m	struct:Channel::Operator::Envelope
svc	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    } svc;$/;"	m	struct:Processor	typeref:struct:Processor::SVC
sw46	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool sw46;$/;"	m	struct:SA1::MMIO
swait	higan/gba/cpu/cpu.hpp	/^    uint1 swait[4];$/;"	m	struct:Wait
swap	higan/sfc/coprocessor/spc7110/decompressor.cpp	/^    uint8 swap;         \/\/if 1, exchange the role of MPS and LPS$/;"	m	struct:Decompressor::Context	file:
sweep	higan/fc/apu/apu.hpp	/^    Sweep sweep;$/;"	m	struct:APU::Pulse
sweep	higan/gba/apu/apu.hpp	/^    Sweep sweep;$/;"	m	struct:APU::Square1
sweep	higan/ws/apu/apu.hpp	/^      uint1 sweep;$/;"	m	struct:APU::Channel3::Registers
sweepClock	higan/ws/apu/apu.hpp	/^    uint13 sweepClock;$/;"	m	struct:APU::State
sweepCounter	higan/ws/apu/apu.hpp	/^      int sweepCounter;$/;"	m	struct:APU::Channel3::State
sweepDirection	higan/gb/apu/apu.hpp	/^    bool sweepDirection;$/;"	m	struct:APU::Square1
sweepEnable	higan/gb/apu/apu.hpp	/^    bool sweepEnable;$/;"	m	struct:APU::Square1
sweepFrequency	higan/gb/apu/apu.hpp	/^    uint3 sweepFrequency;$/;"	m	struct:APU::Square1
sweepNegate	higan/gb/apu/apu.hpp	/^    bool sweepNegate;$/;"	m	struct:APU::Square1
sweepPeriod	higan/gb/apu/apu.hpp	/^    uint3 sweepPeriod;$/;"	m	struct:APU::Square1
sweepShift	higan/gb/apu/apu.hpp	/^    uint3 sweepShift;$/;"	m	struct:APU::Square1
sweepTime	higan/ws/apu/apu.hpp	/^      uint5 sweepTime;$/;"	m	struct:APU::Channel3::Registers
sweepValue	higan/ws/apu/apu.hpp	/^      int8 sweepValue;$/;"	m	struct:APU::Channel3::Registers
swen	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool swen;$/;"	m	struct:SA1::MMIO
symbol	nall/decode/inflate.hpp	/^  short* symbol;$/;"	m	struct:nall::Decode::puff::huffman
system	higan/fc/system/system.cpp	/^System system;$/;"	m	namespace:Famicom	file:
system	higan/gb/system/system.cpp	/^System system;$/;"	m	namespace:GameBoy	file:
system	higan/gba/system/system.cpp	/^System system;$/;"	m	namespace:GameBoyAdvance	file:
system	higan/md/system/system.cpp	/^System system;$/;"	m	namespace:MegaDrive	file:
system	higan/ms/system/system.cpp	/^System system;$/;"	m	namespace:MasterSystem	file:
system	higan/pce/system/system.cpp	/^System system;$/;"	m	namespace:PCEngine	file:
system	higan/sfc/interface/configuration.hpp	/^  } system;$/;"	m	struct:Configuration	typeref:struct:Configuration::System
system	higan/sfc/system/system.cpp	/^System system;$/;"	m	namespace:SuperFamicom	file:
system	higan/ws/system/system.cpp	/^System system;$/;"	m	namespace:WonderSwan	file:
systemProperties	higan/target-higan/settings/settings.cpp	/^unique_pointer<SystemProperties> systemProperties;$/;"	v
systemTime	ruby/audio/asio.hpp	/^  ASIOTimeStamp systemTime;$/;"	m	struct:ASIOTimeInfo
t	higan/fc/ppu/ppu.hpp	/^    } v, t;$/;"	m	struct:PPU::IO	typeref:union:PPU::IO::Union
t	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    boolean t;  \/\/thumb$/;"	m	namespace:Processor
t	higan/processor/huc6280/huc6280.hpp	/^    bool t;  \/\/memory operation$/;"	m	struct:Processor::HuC6280::Flags
t	higan/sfc/ppu/object.hpp	/^  } t;$/;"	m	struct:Object	typeref:struct:Object::State
t	nall/adaptive-array.hpp	/^    T t[Capacity];$/;"	m	union:nall::adaptive_array::U
t	nall/elliptic-curve/ed25519.hpp	/^  struct point { field x, y, z, t; };$/;"	m	struct:nall::EllipticCurve::Ed25519::point
t	nall/maybe.hpp	/^    T t;$/;"	m	union:nall::maybe::U
tabs	hiro/cocoa/widget/tab-frame.hpp	/^  vector<CocoaTabFrameItem*> tabs;$/;"	m	struct:hiro::pTabFrame
tabs	hiro/gtk/widget/tab-frame.hpp	/^  vector<Tab> tabs;$/;"	m	struct:hiro::pTabFrame
tama	higan/gb/cartridge/tama/tama.hpp	/^} tama;$/;"	v	typeref:struct:TAMA
target	higan/GNUmakefile	/^target := higan$/;"	m
target	higan/gba/cpu/cpu.hpp	/^      VariadicNatural target;$/;"	m	struct:DMA::Latch
target	higan/gba/cpu/cpu.hpp	/^    VariadicNatural target;$/;"	m	struct:DMA
target	higan/pce/vdc/vdc.hpp	/^    uint16 target;$/;"	m	struct:VDC::DMA
target	higan/processor/hg51b/hg51b.hpp	/^      uint24 target;$/;"	m	struct:Processor::HG51B::IO::DMA
target	higan/sfc/memory/memory.hpp	/^  uint32* target = nullptr;$/;"	m	struct:Bus
target	higan/sfc/smp/smp.hpp	/^    uint8   target;$/;"	m	struct:SMP::Timer
target	higan/ws/apu/apu.hpp	/^      uint1 target;$/;"	m	struct:APU::DMA::Registers
target	nall/range.hpp	/^  int target;$/;"	m	struct:nall::range_t
targetAddress	higan/sfc/cpu/cpu.hpp	/^    uint8 targetAddress = 0xff;$/;"	m	struct:CPU::Channel
targetAlpha	nall/image.hpp	/^    targetAlpha,  \/\/color = targetColor * targetAlpha + sourceColor * (1 - targetAlpha)$/;"	m	class:nall::image::blend
targetColor	nall/image.hpp	/^    targetColor,  \/\/color = targetColor$/;"	m	class:nall::image::blend
targetIncrementMode	higan/pce/vdc/vdc.hpp	/^    bool   targetIncrementMode = 0;$/;"	m	struct:VDC::DMA
targetMode	higan/gba/cpu/cpu.hpp	/^    uint2 targetMode;$/;"	m	struct:DMA
taskHandle	ruby/audio/wasapi.cpp	/^  HANDLE taskHandle = nullptr;$/;"	m	struct:AudioWASAPI	file:
terminal	nall/terminal.hpp	/^namespace nall { namespace terminal {$/;"	n	namespace:nall
test	higan/gb/cartridge/tama/tama.hpp	/^    uint4 test;$/;"	m	struct:TAMA::RTC
test	higan/gba/cartridge/memory.hpp	/^  uint test;$/;"	m	struct:EEPROM
test	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint1 test;$/;"	m	struct:EpsonRTC
testBit	ruby/input/joypad/udev.cpp	212;"	d	file:
testBit	ruby/input/joypad/udev.cpp	263;"	d	file:
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::MessageWindow::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mButton::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mCheckButton::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mCheckLabel::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mComboButtonItem::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mComboEdit::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mComboEditItem::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mFrame::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mIconViewItem::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mLabel::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mLineEdit::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mMenu::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mMenuCheckItem::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mMenuItem::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mMenuRadioItem::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mRadioButton::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mRadioLabel::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mStatusBar::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mTextEdit::State
text	hiro/core/core.hpp	/^    string text;$/;"	m	struct:hiro::mTreeViewItem::State
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:Button
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:CheckButton
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:CheckLabel
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:ComboButtonItem
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:ComboEdit
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:ComboEditItem
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:Frame
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:IconViewItem
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:Label
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:LineEdit
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:Menu
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:MenuCheckItem
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:MenuItem
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:MenuRadioItem
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:RadioButton
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:RadioLabel
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:SourceEdit
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:StatusBar
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:TabFrameItem
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:TableViewCell
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:TableViewColumn
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:TextEdit
text	hiro/core/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:TreeViewItem
text	hiro/core/widget/source-edit.hpp	/^    string text;$/;"	m	struct:mSourceEdit::State
text	hiro/core/widget/tab-frame-item.hpp	/^    string text;$/;"	m	struct:mTabFrameItem::State
text	hiro/core/widget/table-view-cell.hpp	/^    string text;$/;"	m	struct:mTableViewCell::State
text	hiro/core/widget/table-view-column.hpp	/^    string text;$/;"	m	struct:mTableViewColumn::State
text	hiro/extension/message-dialog.hpp	/^    string text;$/;"	m	struct:MessageDialog::State
text	hiro/extension/shared.hpp	/^  auto text() const { return self().text(); }$/;"	f	struct:ListViewItem
text	hiro/windows/tool-tip.hpp	/^  string text;$/;"	m	struct:hiro::pToolTip
textBuffer	hiro/gtk/widget/console.hpp	/^  GtkTextBuffer* textBuffer = nullptr;$/;"	m	struct:hiro::pConsole
textBuffer	hiro/gtk/widget/hex-edit.hpp	/^  GtkTextBuffer* textBuffer = nullptr;$/;"	m	struct:hiro::pHexEdit
textBuffer	hiro/gtk/widget/text-edit.hpp	/^  GtkTextBuffer* textBuffer = nullptr;$/;"	m	struct:hiro::pTextEdit
textCursor	hiro/gtk/widget/hex-edit.hpp	/^  GtkTextMark* textCursor = nullptr;$/;"	m	struct:hiro::pHexEdit
texture	ruby/video/opengl/opengl.hpp	/^  GLuint texture = 0;$/;"	m	struct:OpenGLTexture
theme	hiro/gtk/settings.hpp	/^  } theme;$/;"	m	struct:hiro::Settings	typeref:struct:hiro::Settings::Theme
thread	nall/thread.hpp	/^  static inline auto create(const function<void (uintptr)>& callback, uintptr parameter = 0, uint stacksize = 0) -> thread;$/;"	m	struct:nall::thread
thread	nall/thread.hpp	/^struct thread {$/;"	s	namespace:nall
threadStackSize	nall/http/role.hpp	/^    int threadStackSize =  128 * 1024;  \/\/server$/;"	m	struct:nall::HTTP::Role::Settings
thread_local	libco/settings.h	15;"	d
thread_local	libco/settings.h	17;"	d
threshold	ruby/input/mouse/xlib.cpp	/^    int threshold = 0;$/;"	m	struct:InputMouseXlib::Mouse	file:
thumb	higan/processor/arm7tdmi/arm7tdmi.hpp	/^      boolean thumb;  \/\/not used by fetch stage$/;"	m	struct:Pipeline::Instruction
thumbDisassemble	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  function<auto () -> string> thumbDisassemble[65536];$/;"	v
thumbInstruction	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  function<auto () -> void> thumbInstruction[65536];$/;"	v
tile	higan/fc/ppu/ppu.hpp	/^    uint8 tile = 0xff;$/;"	m	struct:PPU::OAM
tile	higan/gb/ppu/ppu.hpp	/^    uint tile = 0;$/;"	m	struct:PPU::Sprite
tile	higan/sfc/ppu/object.hpp	/^    Tile tile[2][34];$/;"	m	struct:Object::State
tileCount	higan/sfc/ppu/object.hpp	/^    uint tileCount;$/;"	m	struct:Object::State
tileHeight	higan/md/vdp/vdp.hpp	/^    uint2  tileHeight;$/;"	m	struct:VDP::Object
tileWidth	higan/md/vdp/vdp.hpp	/^    uint2  tileWidth;$/;"	m	struct:VDP::Object
tileX	higan/fc/ppu/ppu.hpp	/^      NaturalBitField<uint, 0, 4> tileX;$/;"	m	union:PPU::IO::Union
tileY	higan/fc/ppu/ppu.hpp	/^      NaturalBitField<uint, 5, 9> tileY;$/;"	m	union:PPU::IO::Union
tiledataAddress	higan/sfc/ppu/object.hpp	/^    uint16 tiledataAddress;$/;"	m	struct:Object::IO
tiledataHi	higan/fc/ppu/ppu.hpp	/^    uint16 tiledataHi;$/;"	m	struct:PPU::Latches
tiledataHi	higan/fc/ppu/ppu.hpp	/^    uint8 tiledataHi = 0;$/;"	m	struct:PPU::OAM
tiledataLo	higan/fc/ppu/ppu.hpp	/^    uint16 tiledataLo;$/;"	m	struct:PPU::Latches
tiledataLo	higan/fc/ppu/ppu.hpp	/^    uint8 tiledataLo = 0;$/;"	m	struct:PPU::OAM
tima	higan/gb/cpu/cpu.hpp	/^    uint8 tima;$/;"	m	struct:CPU::Status
time	nall/inode.hpp	/^  enum class time : uint { create, modify, access };$/;"	c	struct:nall::inode
timeCode	ruby/audio/asio.hpp	/^  ASIOTimeCode timeCode;$/;"	m	struct:ASIOTime
timeCodeSamples	ruby/audio/asio.hpp	/^  ASIOSamples timeCodeSamples;$/;"	m	struct:ASIOTimeCode
timeInfo	ruby/audio/asio.hpp	/^  ASIOTimeInfo timeInfo;$/;"	m	struct:ASIOTime
timeOver	higan/sfc/ppu/object.hpp	/^    bool timeOver;$/;"	m	struct:Object::IO
timeout	higan/gba/player/player.hpp	/^    uint timeout;$/;"	m	struct:Player::Status
timeout	higan/md/controller/fighting-pad/fighting-pad.hpp	/^  uint32 timeout;$/;"	v
timeout	hiro/windows/tool-tip.hpp	/^  Timer timeout;$/;"	m	struct:hiro::pToolTip
timeoutReceive	nall/http/role.hpp	/^    int timeoutReceive  =   15 * 1000;  \/\/server$/;"	m	struct:nall::HTTP::Role::Settings
timeoutSend	nall/http/role.hpp	/^    int timeoutSend     =   15 * 1000;  \/\/server$/;"	m	struct:nall::HTTP::Role::Settings
timer	higan/gba/apu/apu.hpp	/^    uint1 timer;$/;"	m	struct:APU::FIFO
timer	higan/gba/cpu/cpu.hpp	/^  } timer[4];$/;"	v	typeref:struct:Timer
timer	higan/pce/cpu/cpu.hpp	/^  } timer;$/;"	m	struct:CPU	typeref:struct:CPU::Timer
timer	higan/sfc/coprocessor/armdsp/registers.hpp	/^  uint32 timer;$/;"	m	struct:Bridge
timer	higan/sfc/coprocessor/event/event.hpp	/^  uint timer;$/;"	m	struct:Event
timer	higan/target-bsnes/settings/settings.hpp	/^  Timer timer;$/;"	m	struct:HotkeySettings
timer	higan/target-bsnes/settings/settings.hpp	/^  Timer timer;$/;"	m	struct:InputSettings
timer	higan/target-higan/settings/settings.hpp	/^  Timer timer;$/;"	m	struct:HotkeySettings
timer	higan/target-higan/settings/settings.hpp	/^  Timer timer;$/;"	m	struct:InputSettings
timer0	higan/sfc/smp/smp.hpp	/^  Timer<128> timer0;$/;"	m	struct:SMP
timer1	higan/sfc/smp/smp.hpp	/^  Timer<128> timer1;$/;"	m	struct:SMP
timer2	higan/sfc/smp/smp.hpp	/^  Timer< 16> timer2;$/;"	m	struct:SMP
timerA	higan/md/ym2612/ym2612.hpp	/^  } timerA;$/;"	m	struct:YM2612	typeref:struct:YM2612::TimerA
timerActive	higan/sfc/coprocessor/event/event.hpp	/^  bool timerActive;$/;"	m	struct:Event
timerB	higan/md/ym2612/ym2612.hpp	/^  } timerB;$/;"	m	struct:YM2612	typeref:struct:YM2612::TimerB
timerClock	higan/gb/cpu/cpu.hpp	/^    uint timerClock = 0;$/;"	m	struct:CPU::Status
timerEnable	higan/gb/cpu/cpu.hpp	/^    bool timerEnable = 0;$/;"	m	struct:CPU::Status
timerSecondsRemaining	higan/sfc/coprocessor/event/event.hpp	/^  uint timerSecondsRemaining;$/;"	m	struct:Event
timer_irqcl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool timer_irqcl;$/;"	m	struct:SA1::MMIO
timer_irqen	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool timer_irqen;$/;"	m	struct:SA1::MMIO
timer_irqfl	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool timer_irqfl;$/;"	m	struct:SA1::MMIO
timerlatch	higan/sfc/coprocessor/armdsp/registers.hpp	/^  uint32 timerlatch;$/;"	m	struct:Bridge
timers	hiro/windows/timer.cpp	/^static vector<pTimer*> timers;$/;"	m	namespace:hiro	file:
timersDisable	higan/sfc/smp/smp.hpp	/^    uint1 timersDisable;$/;"	m	struct:SMP::IO
timersEnable	higan/sfc/smp/smp.hpp	/^    uint1 timersEnable = true;$/;"	m	struct:SMP::IO
timestamp	nall/beat/archive/node.hpp	/^  } timestamp;$/;"	m	struct:nall::Beat::Archive::Node	typeref:struct:nall::Beat::Archive::Node::Timestamp
timestamp	nall/decode/zip.hpp	/^    time_t timestamp;$/;"	m	struct:nall::Decode::ZIP::File
timestamp	nall/encode/zip.hpp	/^    time_t timestamp;$/;"	m	struct:nall::Encode::ZIP::entry_t
timestamp	nall/encode/zip.hpp	/^  time_t timestamp;$/;"	m	struct:nall::Encode::ZIP
timestamps	nall/beat/archive/node.hpp	/^  bool timestamps = false;$/;"	m	struct:nall::Beat::Archive::Node
timing	higan/pce/vce/vce.hpp	/^  } timing;$/;"	m	struct:VCE	typeref:struct:VCE::Timing
timing	higan/pce/vdc/vdc.hpp	/^  } timing;$/;"	m	struct:VDC	typeref:struct:VDC::Timing
timingMode	higan/gba/cpu/cpu.hpp	/^    uint2 timingMode;$/;"	m	struct:DMA
title	higan/fc/cartridge/cartridge.hpp	/^    string title;$/;"	m	struct:Cartridge::Information
title	higan/gb/cartridge/cartridge.hpp	/^    string title;$/;"	m	struct:Cartridge::Information
title	higan/gba/cartridge/cartridge.hpp	/^    string title;$/;"	m	struct:Cartridge::Information
title	higan/md/cartridge/cartridge.hpp	/^    string title;$/;"	m	struct:Cartridge::Information
title	higan/ms/cartridge/cartridge.hpp	/^    string title;$/;"	m	struct:Cartridge::Information
title	higan/pce/cartridge/cartridge.hpp	/^    string title;$/;"	m	struct:Cartridge::Information
title	higan/target-bsnes/program/program.hpp	/^    string title;$/;"	m	struct:Program::SuperFamicom
title	higan/ws/cartridge/cartridge.hpp	/^    string title;$/;"	m	struct:Cartridge::Information
title	hiro/core/core.hpp	/^    string title;$/;"	m	struct:hiro::BrowserWindow::State
title	hiro/core/core.hpp	/^    string title;$/;"	m	struct:hiro::MessageWindow::State
title	hiro/core/shared.hpp	/^  auto title() const { return self().title(); }$/;"	f	struct:Window
title	hiro/core/window.hpp	/^    string title;$/;"	m	struct:mWindow::State
title	hiro/extension/browser-dialog.hpp	/^    string title;$/;"	m	struct:BrowserDialog::State
title	hiro/extension/message-dialog.hpp	/^    string title;$/;"	m	struct:MessageDialog::State
title	hiro/gtk/widget/tab-frame.hpp	/^    GtkWidget* title = nullptr;$/;"	m	struct:hiro::pTabFrame::Tab
tma	higan/gb/cpu/cpu.hpp	/^    uint8 tma;$/;"	m	struct:CPU::Status
tmap	nall/map.hpp	/^  map<T, U> tmap;$/;"	m	struct:nall::bimap
tmss	higan/md/cpu/cpu.hpp	/^  uint8 tmss[2 * 1024];$/;"	m	struct:CPU
tmssEnable	higan/md/cpu/cpu.hpp	/^  uint1 tmssEnable;$/;"	m	struct:CPU
to	nall/smtp.hpp	/^    vector<Contact> to;$/;"	m	struct:nall::SMTP::Information
tone0	higan/md/psg/psg.hpp	/^  } tone0, tone1, tone2;$/;"	m	struct:PSG	typeref:struct:PSG::Tone
tone0	higan/ms/psg/psg.hpp	/^  } tone0, tone1, tone2;$/;"	m	struct:PSG	typeref:struct:PSG::Tone
tone1	higan/md/psg/psg.hpp	/^  } tone0, tone1, tone2;$/;"	m	struct:PSG	typeref:struct:PSG::Tone
tone1	higan/ms/psg/psg.hpp	/^  } tone0, tone1, tone2;$/;"	m	struct:PSG	typeref:struct:PSG::Tone
tone2	higan/md/psg/psg.hpp	/^  } tone0, tone1, tone2;$/;"	m	struct:PSG	typeref:struct:PSG::Tone
tone2	higan/ms/psg/psg.hpp	/^  } tone0, tone1, tone2;$/;"	m	struct:PSG	typeref:struct:PSG::Tone
toolTip	hiro/core/widget/widget.hpp	/^    string toolTip;$/;"	m	struct:mWidget::State
toolTip	hiro/windows/application.hpp	/^    pToolTip* toolTip = nullptr;  \/\/active toolTip$/;"	m	struct:hiro::pApplication::State
toolTip	hiro/windows/widget/widget.hpp	/^  unique_pointer<pToolTip> toolTip;$/;"	m	struct:hiro::pWidget
toolTips	higan/target-bsnes/settings/settings.hpp	/^    bool toolTips = true;$/;"	m	struct:Settings::General
toolTips	hiro/core/application.hpp	/^    bool toolTips = true;$/;"	m	struct:Application::State
toolsManager	higan/target-higan/tools/tools.cpp	/^unique_pointer<ToolsManager> toolsManager;$/;"	v
toolsWindow	higan/target-bsnes/tools/tools.cpp	/^ToolsWindow toolsWindow;$/;"	v
totalLevel	higan/md/ym2612/ym2612.hpp	/^      uint7 totalLevel = 0;$/;"	m	struct:Channel::Operator
tr	higan/processor/upd96050/upd96050.hpp	/^    uint16 tr;           \/\/temporary register$/;"	m	struct:Processor::uPD96050::Registers
transferEnableReceive	higan/gba/cpu/cpu.hpp	/^    uint1 transferEnableReceive;$/;"	m	struct:Serial
transferEnableSend	higan/gba/cpu/cpu.hpp	/^    uint1 transferEnableSend;$/;"	m	struct:Serial
transferLength	higan/gba/cpu/cpu.hpp	/^    uint1 transferLength;$/;"	m	struct:Serial
transferMode	higan/sfc/cpu/cpu.hpp	/^    uint3 transferMode = 7;$/;"	m	struct:CPU::Channel
transferSize	higan/sfc/cpu/cpu.hpp	/^      uint16 transferSize;$/;"	m	union:CPU::Channel::__anon17
translucent	higan/gba/ppu/ppu.hpp	/^    uint1  translucent;$/;"	m	struct:PPU::Pixel
transmit	higan/gba/cpu/cpu.hpp	/^    uint32 transmit;$/;"	m	struct:Joybus
transparent	higan/processor/gsu/registers.hpp	/^  bool transparent;$/;"	m	struct:POR
transparent	higan/sfc/ppu/screen.hpp	/^    bool transparent;$/;"	m	struct:Screen::Math
trb	higan/processor/upd96050/upd96050.hpp	/^    uint16 trb;          \/\/temporary register$/;"	m	struct:Processor::uPD96050::Registers
tremolo	higan/md/ym2612/ym2612.hpp	/^    uint2 tremolo = 0;$/;"	m	struct:Channel
tremolos	higan/md/ym2612/constants.cpp	/^const uint8_t YM2612::tremolos[4] = {$/;"	m	class:YM2612	file:
tremolos	higan/md/ym2612/ym2612.hpp	/^  static const uint8_t tremolos[4];$/;"	v
triangle	higan/fc/apu/apu.hpp	/^  } triangle;$/;"	m	struct:APU	typeref:struct:APU::Triangle
trigger	higan/sfc/controller/justifier/justifier.hpp	/^    bool trigger;$/;"	m	struct:Player
trigger	higan/sfc/controller/super-scope/super-scope.hpp	/^  bool trigger;$/;"	v
triggerlock	higan/sfc/controller/super-scope/super-scope.hpp	/^  bool triggerlock;$/;"	v
turbo	higan/sfc/controller/super-scope/super-scope.hpp	/^  bool turbo;$/;"	v
turbo	higan/target-bsnes/settings/settings.hpp	/^    } turbo;$/;"	m	struct:Settings::Input	typeref:struct:Settings::Input::Turbo
turboCounter	higan/target-bsnes/input/input.hpp	/^  uint turboCounter = 0;$/;"	m	struct:InputManager
turboCounter	higan/target-bsnes/input/input.hpp	/^  uint3 turboCounter = 0;$/;"	m	struct:InputMapping
turboFrequency	higan/target-bsnes/input/input.hpp	/^  uint turboFrequency = 0;$/;"	m	struct:InputManager
turboID	higan/target-bsnes/input/input.hpp	/^  maybe<uint> turboID;$/;"	m	struct:InputMapping
twoEnable	higan/sfc/ppu/window.hpp	/^      bool twoEnable;$/;"	m	struct:Window::IO::Color
twoEnable	higan/sfc/ppu/window.hpp	/^      bool twoEnable;$/;"	m	struct:Window::IO::Layer
twoInvert	higan/sfc/ppu/window.hpp	/^      bool twoInvert;$/;"	m	struct:Window::IO::Color
twoInvert	higan/sfc/ppu/window.hpp	/^      bool twoInvert;$/;"	m	struct:Window::IO::Layer
twoLeft	higan/sfc/ppu/window.hpp	/^    uint8 twoLeft;$/;"	m	struct:Window::IO
twoRight	higan/sfc/ppu/window.hpp	/^    uint8 twoRight;$/;"	m	struct:Window::IO
type	genius/genius.hpp	/^  string type;$/;"	m	struct:Memory
type	genius/genius.hpp	/^  } type;$/;"	m	struct:Component	typeref:class:Component::Type
type	higan/emulator/game.hpp	/^    string type;$/;"	m	struct:Emulator::Game::Memory
type	higan/emulator/interface.hpp	/^    uint type = 0;$/;"	m	struct:Emulator::Interface
type	higan/emulator/interface.hpp	/^    uint type;$/;"	m	namespace:Emulator
type	higan/fc/cartridge/board/board.hpp	/^    string type;$/;"	m	struct:Board::Information
type	higan/target-bsnes/input/input.hpp	/^  uint type = 0;$/;"	m	struct:InputMapping
type	higan/target-higan/input/input.hpp	/^  uint type = 0;$/;"	m	struct:InputMapping
type	hiro/core/core.hpp	/^  auto append(sAction action) -> type&;$/;"	m	struct:hiro::mMenu
type	hiro/core/core.hpp	/^  auto append(sAction action) -> type&;$/;"	m	struct:hiro::mPopupMenu
type	hiro/core/core.hpp	/^  auto append(sComboButtonItem item) -> type&;$/;"	m	struct:hiro::mComboButton
type	hiro/core/core.hpp	/^  auto append(sComboEditItem item) -> type&;$/;"	m	struct:hiro::mComboEdit
type	hiro/core/core.hpp	/^  auto append(sIconViewItem item) -> type&;$/;"	m	struct:hiro::mIconView
type	hiro/core/core.hpp	/^  auto append(sMenu menu) -> type&;$/;"	m	struct:hiro::mMenuBar
type	hiro/core/core.hpp	/^  auto append(sSizable sizable) -> type&;$/;"	m	struct:hiro::mFrame
type	hiro/core/core.hpp	/^  auto append(sTreeViewItem item) -> type&;$/;"	m	struct:hiro::mTreeView
type	hiro/core/core.hpp	/^  auto append(sTreeViewItem item) -> type&;$/;"	m	struct:hiro::mTreeViewItem
type	hiro/core/core.hpp	/^  auto onActivate(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mButton
type	hiro/core/core.hpp	/^  auto onActivate(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mComboEdit
type	hiro/core/core.hpp	/^  auto onActivate(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mIconView
type	hiro/core/core.hpp	/^  auto onActivate(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mLineEdit
type	hiro/core/core.hpp	/^  auto onActivate(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mMenuItem
type	hiro/core/core.hpp	/^  auto onActivate(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mMenuRadioItem
type	hiro/core/core.hpp	/^  auto onActivate(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mRadioButton
type	hiro/core/core.hpp	/^  auto onActivate(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mRadioLabel
type	hiro/core/core.hpp	/^  auto onActivate(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mTreeView
type	hiro/core/core.hpp	/^  auto onActivate(const function<void (string)>& callback = {}) -> type&;$/;"	m	struct:hiro::mConsole
type	hiro/core/core.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mComboButton
type	hiro/core/core.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mComboEdit
type	hiro/core/core.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mHorizontalScrollBar
type	hiro/core/core.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mHorizontalSlider
type	hiro/core/core.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mIconView
type	hiro/core/core.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mLineEdit
type	hiro/core/core.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mTextEdit
type	hiro/core/core.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mTreeView
type	hiro/core/core.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mVerticalScrollBar
type	hiro/core/core.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mVerticalSlider
type	hiro/core/core.hpp	/^  auto onContext(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mIconView
type	hiro/core/core.hpp	/^  auto onContext(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mTreeView
type	hiro/core/core.hpp	/^  auto onDrop(const function<void (vector<string>)>& callback = {}) -> type&;$/;"	m	struct:hiro::mCanvas
type	hiro/core/core.hpp	/^  auto onDrop(const function<void (vector<string>)>& callback = {}) -> type&;$/;"	m	struct:hiro::mViewport
type	hiro/core/core.hpp	/^  auto onMouseLeave(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mCanvas
type	hiro/core/core.hpp	/^  auto onMouseLeave(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mViewport
type	hiro/core/core.hpp	/^  auto onMouseMove(const function<void (Position position)>& callback = {}) -> type&;$/;"	m	struct:hiro::mViewport
type	hiro/core/core.hpp	/^  auto onMouseMove(const function<void (Position)>& callback = {}) -> type&;$/;"	m	struct:hiro::mCanvas
type	hiro/core/core.hpp	/^  auto onMousePress(const function<void (Mouse::Button)>& callback = {}) -> type&;$/;"	m	struct:hiro::mCanvas
type	hiro/core/core.hpp	/^  auto onMousePress(const function<void (Mouse::Button)>& callback = {}) -> type&;$/;"	m	struct:hiro::mViewport
type	hiro/core/core.hpp	/^  auto onMouseRelease(const function<void (Mouse::Button)>& callback = {}) -> type&;$/;"	m	struct:hiro::mCanvas
type	hiro/core/core.hpp	/^  auto onMouseRelease(const function<void (Mouse::Button)>& callback = {}) -> type&;$/;"	m	struct:hiro::mViewport
type	hiro/core/core.hpp	/^  auto onMove(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mTextEdit
type	hiro/core/core.hpp	/^  auto onPress(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::Hotkey
type	hiro/core/core.hpp	/^  auto onRead(const function<uint8_t (uint)>& callback = {}) -> type&;$/;"	m	struct:hiro::mHexEdit
type	hiro/core/core.hpp	/^  auto onRelease(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::Hotkey
type	hiro/core/core.hpp	/^  auto onToggle(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mCheckButton
type	hiro/core/core.hpp	/^  auto onToggle(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mCheckLabel
type	hiro/core/core.hpp	/^  auto onToggle(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:hiro::mMenuCheckItem
type	hiro/core/core.hpp	/^  auto onToggle(const function<void (sTreeViewItem)>& callback = {}) -> type&;$/;"	m	struct:hiro::mTreeView
type	hiro/core/core.hpp	/^  auto onWrite(const function<void (uint, uint8_t)>& callback = {}) -> type&;$/;"	m	struct:hiro::mHexEdit
type	hiro/core/core.hpp	/^  auto print(const string& text) -> type&;$/;"	m	struct:hiro::mConsole
type	hiro/core/core.hpp	/^  auto remove(sAction action) -> type&;$/;"	m	struct:hiro::mMenu
type	hiro/core/core.hpp	/^  auto remove(sAction action) -> type&;$/;"	m	struct:hiro::mPopupMenu
type	hiro/core/core.hpp	/^  auto remove(sComboButtonItem item) -> type&;$/;"	m	struct:hiro::mComboButton
type	hiro/core/core.hpp	/^  auto remove(sComboEditItem item) -> type&;$/;"	m	struct:hiro::mComboEdit
type	hiro/core/core.hpp	/^  auto remove(sIconViewItem item) -> type&;$/;"	m	struct:hiro::mIconView
type	hiro/core/core.hpp	/^  auto remove(sMenu menu) -> type&;$/;"	m	struct:hiro::mMenuBar
type	hiro/core/core.hpp	/^  auto remove(sSizable sizable) -> type&;$/;"	m	struct:hiro::mFrame
type	hiro/core/core.hpp	/^  auto remove(sTreeViewItem item) -> type&;$/;"	m	struct:hiro::mTreeView
type	hiro/core/core.hpp	/^  auto remove(sTreeViewItem item) -> type&;$/;"	m	struct:hiro::mTreeViewItem
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::Alignment
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::Color
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::Geometry
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::Hotkey
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::Position
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::Size
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::mComboButton
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::mComboEdit
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::mConsole
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::mFrame
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::mIconView
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::mMenu
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::mMenuBar
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::mPopupMenu
type	hiro/core/core.hpp	/^  auto reset() -> type&;$/;"	m	struct:hiro::mTreeView
type	hiro/core/core.hpp	/^  auto setAddress(uint address = 0) -> type&;$/;"	m	struct:hiro::mHexEdit
type	hiro/core/core.hpp	/^  auto setAlignment(Alignment alignment = {}) -> type&;$/;"	m	struct:hiro::mLabel
type	hiro/core/core.hpp	/^  auto setAlignment(float horizontal = -1.0, float vertical = 0.5) -> type&;$/;"	m	struct:hiro::Alignment
type	hiro/core/core.hpp	/^  auto setAlpha(int alpha) -> type&;$/;"	m	struct:hiro::Color
type	hiro/core/core.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mComboEdit
type	hiro/core/core.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mConsole
type	hiro/core/core.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mHexEdit
type	hiro/core/core.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mIconView
type	hiro/core/core.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mLabel
type	hiro/core/core.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mLineEdit
type	hiro/core/core.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mTextEdit
type	hiro/core/core.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mTreeView
type	hiro/core/core.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mTreeViewItem
type	hiro/core/core.hpp	/^  auto setBatchable(bool batchable = true) -> type&;$/;"	m	struct:hiro::mIconView
type	hiro/core/core.hpp	/^  auto setBilinear(Color topLeft, Color topRight, Color bottomLeft, Color bottomRight) -> type&;$/;"	m	struct:hiro::Gradient
type	hiro/core/core.hpp	/^  auto setBlue(int blue) -> type&;$/;"	m	struct:hiro::Color
type	hiro/core/core.hpp	/^  auto setBordered(bool bordered = true) -> type&;$/;"	m	struct:hiro::mButton
type	hiro/core/core.hpp	/^  auto setBordered(bool bordered = true) -> type&;$/;"	m	struct:hiro::mCheckButton
type	hiro/core/core.hpp	/^  auto setBordered(bool bordered = true) -> type&;$/;"	m	struct:hiro::mRadioButton
type	hiro/core/core.hpp	/^  auto setCheckable(bool checkable = true) -> type&;$/;"	m	struct:hiro::mTreeViewItem
type	hiro/core/core.hpp	/^  auto setChecked() -> type&;$/;"	m	struct:hiro::mMenuRadioItem
type	hiro/core/core.hpp	/^  auto setChecked() -> type&;$/;"	m	struct:hiro::mRadioButton
type	hiro/core/core.hpp	/^  auto setChecked() -> type&;$/;"	m	struct:hiro::mRadioLabel
type	hiro/core/core.hpp	/^  auto setChecked(bool checked = true) -> type&;$/;"	m	struct:hiro::mCheckButton
type	hiro/core/core.hpp	/^  auto setChecked(bool checked = true) -> type&;$/;"	m	struct:hiro::mCheckLabel
type	hiro/core/core.hpp	/^  auto setChecked(bool checked = true) -> type&;$/;"	m	struct:hiro::mMenuCheckItem
type	hiro/core/core.hpp	/^  auto setChecked(bool checked = true) -> type&;$/;"	m	struct:hiro::mTreeViewItem
type	hiro/core/core.hpp	/^  auto setColor(Color color = {}) -> type&;$/;"	m	struct:hiro::Color
type	hiro/core/core.hpp	/^  auto setColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mCanvas
type	hiro/core/core.hpp	/^  auto setColor(int red, int green, int blue, int alpha = 255) -> type&;$/;"	m	struct:hiro::Color
type	hiro/core/core.hpp	/^  auto setColumns(uint columns = 16) -> type&;$/;"	m	struct:hiro::mHexEdit
type	hiro/core/core.hpp	/^  auto setCursor(Cursor cursor = {}) -> type&;$/;"	m	struct:hiro::mTextEdit
type	hiro/core/core.hpp	/^  auto setCursor(int offset = 0, int length = 0) -> type&;$/;"	m	struct:hiro::Cursor
type	hiro/core/core.hpp	/^  auto setDroppable(bool droppable = true) -> type&;$/;"	m	struct:hiro::mCanvas
type	hiro/core/core.hpp	/^  auto setDroppable(bool droppable = true) -> type&;$/;"	m	struct:hiro::mViewport
type	hiro/core/core.hpp	/^  auto setEditable(bool editable = true) -> type&;$/;"	m	struct:hiro::mComboEdit
type	hiro/core/core.hpp	/^  auto setEditable(bool editable = true) -> type&;$/;"	m	struct:hiro::mLineEdit
type	hiro/core/core.hpp	/^  auto setEditable(bool editable = true) -> type&;$/;"	m	struct:hiro::mTextEdit
type	hiro/core/core.hpp	/^  auto setExpanded(bool expanded = true) -> type&;$/;"	m	struct:hiro::mTreeViewItem
type	hiro/core/core.hpp	/^  auto setFilters(const vector<string>& filters = {"*"}) -> type&;$/;"	m	struct:hiro::BrowserWindow
type	hiro/core/core.hpp	/^  auto setFlow(Orientation flow = Orientation::Vertical) -> type&;$/;"	m	struct:hiro::mIconView
type	hiro/core/core.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mComboEdit
type	hiro/core/core.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mConsole
type	hiro/core/core.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mHexEdit
type	hiro/core/core.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mIconView
type	hiro/core/core.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mLabel
type	hiro/core/core.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mLineEdit
type	hiro/core/core.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mTextEdit
type	hiro/core/core.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mTreeView
type	hiro/core/core.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:hiro::mTreeViewItem
type	hiro/core/core.hpp	/^  auto setGeometry(Geometry geometry = {}) -> type&;$/;"	m	struct:hiro::Geometry
type	hiro/core/core.hpp	/^  auto setGeometry(Position position, Size size) -> type&;$/;"	m	struct:hiro::Geometry
type	hiro/core/core.hpp	/^  auto setGeometry(float x, float y, float width, float height) -> type&;$/;"	m	struct:hiro::Geometry
type	hiro/core/core.hpp	/^  auto setGradient(Gradient gradient = {}) -> type&;$/;"	m	struct:hiro::mCanvas
type	hiro/core/core.hpp	/^  auto setGreen(int green) -> type&;$/;"	m	struct:hiro::Color
type	hiro/core/core.hpp	/^  auto setHeight(float height) -> type&;$/;"	m	struct:hiro::Geometry
type	hiro/core/core.hpp	/^  auto setHeight(float height) -> type&;$/;"	m	struct:hiro::Size
type	hiro/core/core.hpp	/^  auto setHorizontal(Color left, Color right) -> type&;$/;"	m	struct:hiro::Gradient
type	hiro/core/core.hpp	/^  auto setHorizontal(float horizontal) -> type&;$/;"	m	struct:hiro::Alignment
type	hiro/core/core.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:hiro::mButton
type	hiro/core/core.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:hiro::mCanvas
type	hiro/core/core.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:hiro::mCheckButton
type	hiro/core/core.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:hiro::mComboButtonItem
type	hiro/core/core.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:hiro::mComboEditItem
type	hiro/core/core.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:hiro::mIconViewItem
type	hiro/core/core.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:hiro::mMenu
type	hiro/core/core.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:hiro::mMenuItem
type	hiro/core/core.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:hiro::mRadioButton
type	hiro/core/core.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:hiro::mTreeViewItem
type	hiro/core/core.hpp	/^  auto setLength(int length = 0) -> type&;$/;"	m	struct:hiro::Cursor
type	hiro/core/core.hpp	/^  auto setLength(uint length = 101) -> type&;$/;"	m	struct:hiro::mHorizontalScrollBar
type	hiro/core/core.hpp	/^  auto setLength(uint length = 101) -> type&;$/;"	m	struct:hiro::mHorizontalSlider
type	hiro/core/core.hpp	/^  auto setLength(uint length = 101) -> type&;$/;"	m	struct:hiro::mVerticalScrollBar
type	hiro/core/core.hpp	/^  auto setLength(uint length = 101) -> type&;$/;"	m	struct:hiro::mVerticalSlider
type	hiro/core/core.hpp	/^  auto setLength(uint length) -> type&;$/;"	m	struct:hiro::mHexEdit
type	hiro/core/core.hpp	/^  auto setOffset(int offset = 0) -> type&;$/;"	m	struct:hiro::Cursor
type	hiro/core/core.hpp	/^  auto setOrientation(Orientation orientation = Orientation::Horizontal) -> type&;$/;"	m	struct:hiro::mButton
type	hiro/core/core.hpp	/^  auto setOrientation(Orientation orientation = Orientation::Horizontal) -> type&;$/;"	m	struct:hiro::mCheckButton
type	hiro/core/core.hpp	/^  auto setOrientation(Orientation orientation = Orientation::Horizontal) -> type&;$/;"	m	struct:hiro::mIconView
type	hiro/core/core.hpp	/^  auto setOrientation(Orientation orientation = Orientation::Horizontal) -> type&;$/;"	m	struct:hiro::mRadioButton
type	hiro/core/core.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type&;$/;"	m	struct:hiro::mTreeView
type	hiro/core/core.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type&;$/;"	m	struct:hiro::mTreeViewItem
type	hiro/core/core.hpp	/^  auto setParent(sWindow parent) -> type&;$/;"	m	struct:hiro::BrowserWindow
type	hiro/core/core.hpp	/^  auto setParent(sWindow parent) -> type&;$/;"	m	struct:hiro::MessageWindow
type	hiro/core/core.hpp	/^  auto setPath(const string& path = "") -> type&;$/;"	m	struct:hiro::BrowserWindow
type	hiro/core/core.hpp	/^  auto setPosition(Position position = {}) -> type&;$/;"	m	struct:hiro::Geometry
type	hiro/core/core.hpp	/^  auto setPosition(Position position = {}) -> type&;$/;"	m	struct:hiro::Position
type	hiro/core/core.hpp	/^  auto setPosition(float x, float y) -> type&;$/;"	m	struct:hiro::Geometry
type	hiro/core/core.hpp	/^  auto setPosition(float x, float y) -> type&;$/;"	m	struct:hiro::Position
type	hiro/core/core.hpp	/^  auto setPosition(uint position = 0) -> type&;$/;"	m	struct:hiro::mHorizontalScrollBar
type	hiro/core/core.hpp	/^  auto setPosition(uint position = 0) -> type&;$/;"	m	struct:hiro::mHorizontalSlider
type	hiro/core/core.hpp	/^  auto setPosition(uint position = 0) -> type&;$/;"	m	struct:hiro::mVerticalScrollBar
type	hiro/core/core.hpp	/^  auto setPosition(uint position = 0) -> type&;$/;"	m	struct:hiro::mVerticalSlider
type	hiro/core/core.hpp	/^  auto setPosition(uint position) -> type&;$/;"	m	struct:hiro::mProgressBar
type	hiro/core/core.hpp	/^  auto setPrompt(const string& prompt = "") -> type&;$/;"	m	struct:hiro::mConsole
type	hiro/core/core.hpp	/^  auto setRed(int red) -> type&;$/;"	m	struct:hiro::Color
type	hiro/core/core.hpp	/^  auto setRows(uint rows = 16) -> type&;$/;"	m	struct:hiro::mHexEdit
type	hiro/core/core.hpp	/^  auto setSelected() -> type&;$/;"	m	struct:hiro::mComboButtonItem
type	hiro/core/core.hpp	/^  auto setSelected() -> type&;$/;"	m	struct:hiro::mTreeViewItem
type	hiro/core/core.hpp	/^  auto setSelected(bool selected = true) -> type&;$/;"	m	struct:hiro::mIconViewItem
type	hiro/core/core.hpp	/^  auto setSelected(const vector<int>& selections) -> type&;$/;"	m	struct:hiro::mIconView
type	hiro/core/core.hpp	/^  auto setSequence(const string& sequence = "") -> type&;$/;"	m	struct:hiro::Hotkey
type	hiro/core/core.hpp	/^  auto setSize(Size size = {}) -> type&;$/;"	m	struct:hiro::Geometry
type	hiro/core/core.hpp	/^  auto setSize(Size size = {}) -> type&;$/;"	m	struct:hiro::mCanvas
type	hiro/core/core.hpp	/^  auto setSize(Size source = {}) -> type&;$/;"	m	struct:hiro::Size
type	hiro/core/core.hpp	/^  auto setSize(float width, float height) -> type&;$/;"	m	struct:hiro::Geometry
type	hiro/core/core.hpp	/^  auto setSize(float width, float height) -> type&;$/;"	m	struct:hiro::Size
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::MessageWindow
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mButton
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mCheckButton
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mCheckLabel
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mComboButtonItem
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mComboEdit
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mComboEditItem
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mFrame
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mIconViewItem
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mLabel
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mLineEdit
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mMenu
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mMenuCheckItem
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mMenuItem
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mMenuRadioItem
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mRadioButton
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mRadioLabel
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mStatusBar
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mTextEdit
type	hiro/core/core.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:hiro::mTreeViewItem
type	hiro/core/core.hpp	/^  auto setTitle(const string& title = "") -> type&;$/;"	m	struct:hiro::BrowserWindow
type	hiro/core/core.hpp	/^  auto setTitle(const string& title = "") -> type&;$/;"	m	struct:hiro::MessageWindow
type	hiro/core/core.hpp	/^  auto setValue(const string& value = "") -> type&;$/;"	m	struct:hiro::Property
type	hiro/core/core.hpp	/^  auto setVertical(Color top, Color bottom) -> type&;$/;"	m	struct:hiro::Gradient
type	hiro/core/core.hpp	/^  auto setVertical(float vertical) -> type&;$/;"	m	struct:hiro::Alignment
type	hiro/core/core.hpp	/^  auto setWidth(float width) -> type&;$/;"	m	struct:hiro::Geometry
type	hiro/core/core.hpp	/^  auto setWidth(float width) -> type&;$/;"	m	struct:hiro::Size
type	hiro/core/core.hpp	/^  auto setWordWrap(bool wordWrap = true) -> type&;$/;"	m	struct:hiro::mTextEdit
type	hiro/core/core.hpp	/^  auto setX(float x) -> type&;$/;"	m	struct:hiro::Geometry
type	hiro/core/core.hpp	/^  auto setX(float x) -> type&;$/;"	m	struct:hiro::Position
type	hiro/core/core.hpp	/^  auto setY(float y) -> type&;$/;"	m	struct:hiro::Geometry
type	hiro/core/core.hpp	/^  auto setY(float y) -> type&;$/;"	m	struct:hiro::Position
type	hiro/core/core.hpp	/^  auto update() -> type&;$/;"	m	struct:hiro::mCanvas
type	hiro/core/core.hpp	/^  auto update() -> type&;$/;"	m	struct:hiro::mHexEdit
type	hiro/core/font.hpp	/^  auto reset() -> type&;$/;"	m	struct:Font
type	hiro/core/font.hpp	/^  auto setBold(bool bold = true) -> type&;$/;"	m	struct:Font
type	hiro/core/font.hpp	/^  auto setFamily(const string& family = "") -> type&;$/;"	m	struct:Font
type	hiro/core/font.hpp	/^  auto setItalic(bool italic = true) -> type&;$/;"	m	struct:Font
type	hiro/core/font.hpp	/^  auto setSize(float size = 0.0) -> type&;$/;"	m	struct:Font
type	hiro/core/group.hpp	/^  auto append(sObject object) -> type&;$/;"	m	struct:mGroup
type	hiro/core/group.hpp	/^  auto remove(sObject object) -> type&;$/;"	m	struct:mGroup
type	hiro/core/object.hpp	/^  auto adjustOffset(int displacement) -> type&;$/;"	m	struct:mObject
type	hiro/core/object.hpp	/^  virtual auto remove() -> type&;$/;"	m	struct:mObject
type	hiro/core/object.hpp	/^  virtual auto reset() -> type&;$/;"	m	struct:mObject
type	hiro/core/object.hpp	/^  virtual auto setEnabled(bool enabled = true) -> type&;$/;"	m	struct:mObject
type	hiro/core/object.hpp	/^  virtual auto setFocused() -> type&;$/;"	m	struct:mObject
type	hiro/core/object.hpp	/^  virtual auto setFont(const Font& font = {}) -> type&;$/;"	m	struct:mObject
type	hiro/core/object.hpp	/^  virtual auto setGroup(sGroup group = {}) -> type&;$/;"	m	struct:mObject
type	hiro/core/object.hpp	/^  virtual auto setParent(mObject* parent = nullptr, int offset = -1) -> type&;$/;"	m	struct:mObject
type	hiro/core/object.hpp	/^  virtual auto setProperty(const string& name, const string& value = "") -> type&;$/;"	m	struct:mObject
type	hiro/core/object.hpp	/^  virtual auto setVisible(bool visible = true) -> type&;$/;"	m	struct:mObject
type	hiro/core/sizable.hpp	/^  auto onSize(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:mSizable
type	hiro/core/sizable.hpp	/^  virtual auto setGeometry(Geometry geometry) -> type&;$/;"	m	struct:mSizable
type	hiro/core/timer.hpp	/^  auto onActivate(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:mTimer
type	hiro/core/timer.hpp	/^  auto setInterval(uint interval = 0) -> type&;$/;"	m	struct:mTimer
type	hiro/core/widget/source-edit.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:mSourceEdit
type	hiro/core/widget/source-edit.hpp	/^  auto onMove(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:mSourceEdit
type	hiro/core/widget/source-edit.hpp	/^  auto setCursor(Cursor cursor = {}) -> type&;$/;"	m	struct:mSourceEdit
type	hiro/core/widget/source-edit.hpp	/^  auto setEditable(bool editable) -> type&;$/;"	m	struct:mSourceEdit
type	hiro/core/widget/source-edit.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:mSourceEdit
type	hiro/core/widget/source-edit.hpp	/^  auto setWordWrap(bool wordWrap = true) -> type&;$/;"	m	struct:mSourceEdit
type	hiro/core/widget/tab-frame-item.hpp	/^  auto append(sSizable sizable) -> type&;$/;"	m	struct:mTabFrameItem
type	hiro/core/widget/tab-frame-item.hpp	/^  auto remove(sSizable sizable) -> type&;$/;"	m	struct:mTabFrameItem
type	hiro/core/widget/tab-frame-item.hpp	/^  auto reset() -> type&;$/;"	m	struct:mTabFrameItem
type	hiro/core/widget/tab-frame-item.hpp	/^  auto setClosable(bool closable = true) -> type&;$/;"	m	struct:mTabFrameItem
type	hiro/core/widget/tab-frame-item.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:mTabFrameItem
type	hiro/core/widget/tab-frame-item.hpp	/^  auto setMovable(bool movable = true) -> type&;$/;"	m	struct:mTabFrameItem
type	hiro/core/widget/tab-frame-item.hpp	/^  auto setSelected() -> type&;$/;"	m	struct:mTabFrameItem
type	hiro/core/widget/tab-frame-item.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:mTabFrameItem
type	hiro/core/widget/tab-frame.hpp	/^  auto append(sTabFrameItem item) -> type&;$/;"	m	struct:mTabFrame
type	hiro/core/widget/tab-frame.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:mTabFrame
type	hiro/core/widget/tab-frame.hpp	/^  auto onClose(const function<void (TabFrameItem)>& callback = {}) -> type&;$/;"	m	struct:mTabFrame
type	hiro/core/widget/tab-frame.hpp	/^  auto onMove(const function<void (TabFrameItem, TabFrameItem)>& callback = {}) -> type&;$/;"	m	struct:mTabFrame
type	hiro/core/widget/tab-frame.hpp	/^  auto remove(sTabFrameItem item) -> type&;$/;"	m	struct:mTabFrame
type	hiro/core/widget/tab-frame.hpp	/^  auto reset() -> type&;$/;"	m	struct:mTabFrame
type	hiro/core/widget/tab-frame.hpp	/^  auto setNavigation(Navigation navigation = Navigation::Top) -> type&;$/;"	m	struct:mTabFrame
type	hiro/core/widget/table-view-cell.hpp	/^  auto setAlignment(Alignment alignment = {}) -> type&;$/;"	m	struct:mTableViewCell
type	hiro/core/widget/table-view-cell.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:mTableViewCell
type	hiro/core/widget/table-view-cell.hpp	/^  auto setCheckable(bool checkable = true) -> type&;$/;"	m	struct:mTableViewCell
type	hiro/core/widget/table-view-cell.hpp	/^  auto setChecked(bool checked = true) -> type&;$/;"	m	struct:mTableViewCell
type	hiro/core/widget/table-view-cell.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:mTableViewCell
type	hiro/core/widget/table-view-cell.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:mTableViewCell
type	hiro/core/widget/table-view-cell.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:mTableViewCell
type	hiro/core/widget/table-view-column.hpp	/^  auto setActive() -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setAlignment(Alignment alignment = {}) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setEditable(bool editable = true) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setExpandable(bool expandable = true) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setHorizontalAlignment(float alignment = 0.0) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setResizable(bool resizable = true) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setSorting(Sort sorting = Sort::None) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setVerticalAlignment(float alignment = 0.5) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setVisible(bool visible = true) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto setWidth(float width = 0) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-column.hpp	/^  auto sort(Sort sorting) -> type&;$/;"	m	struct:mTableViewColumn
type	hiro/core/widget/table-view-item.hpp	/^  auto append(sTableViewCell cell) -> type&;$/;"	m	struct:mTableViewItem
type	hiro/core/widget/table-view-item.hpp	/^  auto remove(sTableViewCell cell) -> type&;$/;"	m	struct:mTableViewItem
type	hiro/core/widget/table-view-item.hpp	/^  auto reset() -> type&;$/;"	m	struct:mTableViewItem
type	hiro/core/widget/table-view-item.hpp	/^  auto setAlignment(Alignment alignment = {}) -> type&;$/;"	m	struct:mTableViewItem
type	hiro/core/widget/table-view-item.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:mTableViewItem
type	hiro/core/widget/table-view-item.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:mTableViewItem
type	hiro/core/widget/table-view-item.hpp	/^  auto setSelected(bool selected = true) -> type&;$/;"	m	struct:mTableViewItem
type	hiro/core/widget/table-view.hpp	/^  auto append(sTableViewColumn column) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto append(sTableViewItem item) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto onActivate(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto onChange(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto onContext(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto onEdit(const function<void (TableViewCell)>& callback = {}) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto onSort(const function<void (TableViewColumn)>& callback = {}) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto onToggle(const function<void (TableViewCell)>& callback = {}) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto remove(sTableViewColumn column) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto remove(sTableViewItem item) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto reset() -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto resizeColumns() -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto setAlignment(Alignment alignment = {}) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto setBatchable(bool batchable = true) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto setBordered(bool bordered = true) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto setForegroundColor(Color color = {}) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto setHeadered(bool headered = true) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto setSortable(bool sortable = true) -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/table-view.hpp	/^  auto sort() -> type&;$/;"	m	struct:mTableView
type	hiro/core/widget/widget.hpp	/^  auto setToolTip(const string& toolTip = "") -> type&;$/;"	m	struct:mWidget
type	hiro/core/window.hpp	/^  auto append(sMenuBar menuBar) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto append(sSizable sizable) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto append(sStatusBar statusBar) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto onClose(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto onDrop(const function<void (vector<string>)>& callback = {}) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto onKeyPress(const function<void (int)>& callback = {}) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto onKeyRelease(const function<void (int)>& callback = {}) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto onMove(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto onSize(const function<void ()>& callback = {}) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto remove(sMenuBar menuBar) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto remove(sSizable sizable) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto remove(sStatusBar statusBar) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setAlignment(Alignment alignment) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setBackgroundColor(Color color = {}) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setCentered(sWindow parent = {}) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setDismissable(bool dismissable = true) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setDroppable(bool droppable = true) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setFrameGeometry(Geometry geometry) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setFramePosition(Position position) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setFrameSize(Size size) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setFullScreen(bool fullScreen = true) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setGeometry(Geometry geometry) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setMaximized(bool maximized = true) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setMaximumSize(Size size = {}) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setMinimized(bool minimized = true) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setMinimumSize(Size size = {}) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setModal(bool modal = true) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setPosition(Position position) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setResizable(bool resizable = true) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setSize(Size size) -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setTitle(const string& title = "") -> type&;$/;"	m	struct:mWindow
type	hiro/core/window.hpp	/^  auto setVisible(bool visible = true) -> type&;$/;"	m	struct:mWindow
type	hiro/extension/browser-dialog.hpp	/^  auto setFilters(const vector<string>& filters = {}) -> type&;$/;"	m	struct:BrowserDialog
type	hiro/extension/browser-dialog.hpp	/^  auto setOptions(const vector<string>& options = {}) -> type&;$/;"	m	struct:BrowserDialog
type	hiro/extension/browser-dialog.hpp	/^  auto setParent(const sWindow& parent) -> type&;$/;"	m	struct:BrowserDialog
type	hiro/extension/browser-dialog.hpp	/^  auto setPath(const string& path = "") -> type&;$/;"	m	struct:BrowserDialog
type	hiro/extension/browser-dialog.hpp	/^  auto setTitle(const string& title = "") -> type&;$/;"	m	struct:BrowserDialog
type	hiro/extension/fixed-layout.hpp	/^  auto append(sSizable sizable, Geometry geometry) -> type&;$/;"	m	struct:mFixedLayout
type	hiro/extension/fixed-layout.hpp	/^  auto remove(sFixedLayoutCell cell) -> type&;$/;"	m	struct:mFixedLayout
type	hiro/extension/fixed-layout.hpp	/^  auto remove(sSizable sizable) -> type&;$/;"	m	struct:mFixedLayout
type	hiro/extension/fixed-layout.hpp	/^  auto setGeometry(Geometry geometry) -> type&;$/;"	m	struct:mFixedLayoutCell
type	hiro/extension/fixed-layout.hpp	/^  auto setSizable(sSizable sizable) -> type&;$/;"	m	struct:mFixedLayoutCell
type	hiro/extension/fixed-layout.hpp	/^  auto synchronize() -> type&;$/;"	m	struct:mFixedLayout
type	hiro/extension/fixed-layout.hpp	/^  auto synchronize() -> type&;$/;"	m	struct:mFixedLayoutCell
type	hiro/extension/horizontal-layout.hpp	/^  auto append(sSizable sizable, Size size, float spacing = 5) -> type&;$/;"	m	struct:mHorizontalLayout
type	hiro/extension/horizontal-layout.hpp	/^  auto remove(sHorizontalLayoutCell cell) -> type&;$/;"	m	struct:mHorizontalLayout
type	hiro/extension/horizontal-layout.hpp	/^  auto remove(sSizable sizable) -> type&;$/;"	m	struct:mHorizontalLayout
type	hiro/extension/horizontal-layout.hpp	/^  auto setAlignment(maybe<float> alignment) -> type&;$/;"	m	struct:mHorizontalLayout
type	hiro/extension/horizontal-layout.hpp	/^  auto setAlignment(maybe<float> alignment) -> type&;$/;"	m	struct:mHorizontalLayoutCell
type	hiro/extension/horizontal-layout.hpp	/^  auto setPadding(Geometry padding) -> type&;$/;"	m	struct:mHorizontalLayout
type	hiro/extension/horizontal-layout.hpp	/^  auto setParent(mObject* parent = nullptr, int offset = -1) -> type&;$/;"	m	struct:mHorizontalLayout
type	hiro/extension/horizontal-layout.hpp	/^  auto setSizable(sSizable sizable) -> type&;$/;"	m	struct:mHorizontalLayoutCell
type	hiro/extension/horizontal-layout.hpp	/^  auto setSize(Size size) -> type&;$/;"	m	struct:mHorizontalLayoutCell
type	hiro/extension/horizontal-layout.hpp	/^  auto setSpacing(float spacing) -> type&;$/;"	m	struct:mHorizontalLayout
type	hiro/extension/horizontal-layout.hpp	/^  auto setSpacing(float spacing) -> type&;$/;"	m	struct:mHorizontalLayoutCell
type	hiro/extension/horizontal-layout.hpp	/^  auto synchronize() -> type&;$/;"	m	struct:mHorizontalLayout
type	hiro/extension/horizontal-layout.hpp	/^  auto synchronize() -> type&;$/;"	m	struct:mHorizontalLayoutCell
type	hiro/extension/list-view.hpp	/^  auto onActivate(const function<void ()>& callback) -> type&;$/;"	m	struct:mListView
type	hiro/extension/list-view.hpp	/^  auto onChange(const function<void ()>& callback) -> type&;$/;"	m	struct:mListView
type	hiro/extension/list-view.hpp	/^  auto onToggle(const function<void (ListViewItem)>& callback) -> type&;$/;"	m	struct:mListView
type	hiro/extension/list-view.hpp	/^  auto reset() -> type&;$/;"	m	struct:mListViewItem
type	hiro/extension/list-view.hpp	/^  auto setCheckable(bool checkable) -> type&;$/;"	m	struct:mListViewItem
type	hiro/extension/list-view.hpp	/^  auto setChecked(bool checked) -> type&;$/;"	m	struct:mListViewItem
type	hiro/extension/list-view.hpp	/^  auto setIcon(const image& icon = {}) -> type&;$/;"	m	struct:mListViewItem
type	hiro/extension/list-view.hpp	/^  auto setText(const string& text) -> type&;$/;"	m	struct:mListViewItem
type	hiro/extension/message-dialog.hpp	/^  auto setParent(sWindow parent = {}) -> type&;$/;"	m	struct:MessageDialog
type	hiro/extension/message-dialog.hpp	/^  auto setText(const string& text = "") -> type&;$/;"	m	struct:MessageDialog
type	hiro/extension/message-dialog.hpp	/^  auto setTitle(const string& title = "") -> type&;$/;"	m	struct:MessageDialog
type	hiro/extension/table-layout.hpp	/^  auto append(sSizable sizable, Size size) -> type&;$/;"	m	struct:mTableLayout
type	hiro/extension/table-layout.hpp	/^  auto remove(sSizable sizable) -> type&;$/;"	m	struct:mTableLayout
type	hiro/extension/table-layout.hpp	/^  auto remove(sTableLayoutCell cell) -> type&;$/;"	m	struct:mTableLayout
type	hiro/extension/table-layout.hpp	/^  auto reset() -> type&;$/;"	m	struct:mTableLayout
type	hiro/extension/table-layout.hpp	/^  auto setAlignment(Alignment alignment) -> type&;$/;"	m	struct:mTableLayout
type	hiro/extension/table-layout.hpp	/^  auto setAlignment(Alignment alignment) -> type&;$/;"	m	struct:mTableLayoutCell
type	hiro/extension/table-layout.hpp	/^  auto setAlignment(Alignment alignment) -> type&;$/;"	m	struct:mTableLayoutColumn
type	hiro/extension/table-layout.hpp	/^  auto setAlignment(Alignment alignment) -> type&;$/;"	m	struct:mTableLayoutRow
type	hiro/extension/table-layout.hpp	/^  auto setPadding(Geometry padding) -> type&;$/;"	m	struct:mTableLayout
type	hiro/extension/table-layout.hpp	/^  auto setSizable(sSizable sizable) -> type&;$/;"	m	struct:mTableLayoutCell
type	hiro/extension/table-layout.hpp	/^  auto setSize(Size size) -> type&;$/;"	m	struct:mTableLayout
type	hiro/extension/table-layout.hpp	/^  auto setSize(Size size) -> type&;$/;"	m	struct:mTableLayoutCell
type	hiro/extension/table-layout.hpp	/^  auto setSpacing(float spacing) -> type&;$/;"	m	struct:mTableLayoutColumn
type	hiro/extension/table-layout.hpp	/^  auto setSpacing(float spacing) -> type&;$/;"	m	struct:mTableLayoutRow
type	hiro/extension/table-layout.hpp	/^  auto synchronize() -> type&;$/;"	m	struct:mTableLayout
type	hiro/extension/table-layout.hpp	/^  auto synchronize() -> type&;$/;"	m	struct:mTableLayoutCell
type	hiro/extension/table-layout.hpp	/^  auto synchronize() -> type&;$/;"	m	struct:mTableLayoutColumn
type	hiro/extension/table-layout.hpp	/^  auto synchronize() -> type&;$/;"	m	struct:mTableLayoutRow
type	hiro/extension/vertical-layout.hpp	/^  auto append(sSizable sizable, Size size, float spacing = 5) -> type&;$/;"	m	struct:mVerticalLayout
type	hiro/extension/vertical-layout.hpp	/^  auto remove(sSizable sizable) -> type&;$/;"	m	struct:mVerticalLayout
type	hiro/extension/vertical-layout.hpp	/^  auto remove(sVerticalLayoutCell cell) -> type&;$/;"	m	struct:mVerticalLayout
type	hiro/extension/vertical-layout.hpp	/^  auto setAlignment(maybe<float> alignment) -> type&;$/;"	m	struct:mVerticalLayout
type	hiro/extension/vertical-layout.hpp	/^  auto setAlignment(maybe<float> alignment) -> type&;$/;"	m	struct:mVerticalLayoutCell
type	hiro/extension/vertical-layout.hpp	/^  auto setPadding(Geometry padding) -> type&;$/;"	m	struct:mVerticalLayout
type	hiro/extension/vertical-layout.hpp	/^  auto setSizable(sSizable sizable) -> type&;$/;"	m	struct:mVerticalLayoutCell
type	hiro/extension/vertical-layout.hpp	/^  auto setSize(Size size) -> type&;$/;"	m	struct:mVerticalLayoutCell
type	hiro/extension/vertical-layout.hpp	/^  auto setSpacing(float spacing) -> type&;$/;"	m	struct:mVerticalLayout
type	hiro/extension/vertical-layout.hpp	/^  auto setSpacing(float spacing) -> type&;$/;"	m	struct:mVerticalLayoutCell
type	hiro/extension/vertical-layout.hpp	/^  auto synchronize() -> type&;$/;"	m	struct:mVerticalLayout
type	hiro/extension/vertical-layout.hpp	/^  auto synchronize() -> type&;$/;"	m	struct:mVerticalLayoutCell
type	icarus/heuristics/heuristics.hpp	/^  auto& type(string type) { _type = type; return *this; }$/;"	f	struct:Heuristics::Memory
type	icarus/heuristics/heuristics.hpp	/^  auto& type(string type) { _type = type; return *this; }$/;"	f	struct:Heuristics::Slot
type	nall/beat/archive/container.hpp	/^    string type;$/;"	m	struct:nall::Beat::Archive::Container::Compression
type	nall/beat/archive/container.hpp	/^    string type;$/;"	m	struct:nall::Beat::Archive::Container::Encryption
type	nall/beat/archive/container.hpp	/^    string type;$/;"	m	struct:nall::Beat::Archive::Container::Signature
type	nall/beat/archive/node.hpp	/^    string type;$/;"	m	struct:nall::Beat::Archive::Node::Compression
type	nall/dsp/iir/biquad.hpp	/^  Type type;$/;"	m	struct:nall::DSP::IIR::Biquad
type	nall/dsp/iir/one-pole.hpp	/^  Type type;$/;"	m	struct:nall::DSP::IIR::OnePole
type	nall/function.hpp	/^    template<typename T> static auto exists(T*) -> const typename is_same<R, decltype(declval<T>().operator()(declval<P>()...))>::type;$/;"	m	class:nall::R::is_compatible::is_same
type	nall/http/response.hpp	/^  inline auto setData(const vector<uint8_t>& value) -> type&;$/;"	m	struct:nall::HTTP::Response
type	nall/http/response.hpp	/^  inline auto setFile(const string& value) -> type&;$/;"	m	struct:nall::HTTP::Response
type	nall/http/response.hpp	/^  inline auto setText(const string& value) -> type&;$/;"	m	struct:nall::HTTP::Response
type	nall/string.hpp	/^  inline auto append() -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto append() -> type&;$/;"	m	struct:nall::string_format
type	nall/string.hpp	/^  inline auto append() -> type&;$/;"	m	struct:nall::vector
type	nall/string.hpp	/^  inline auto downcase() -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto fill(char fill = ' ') -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto format(const nall::string_format& params) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto iqreplace(string_view from, string_view to, long limit = LONG_MAX) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto ireplace(string_view from, string_view to, long limit = LONG_MAX) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto isort() -> type&;$/;"	m	struct:nall::vector
type	nall/string.hpp	/^  inline auto itrim(string_view lhs, string_view rhs, long limit = LONG_MAX) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto itrimLeft(string_view lhs, long limit = LONG_MAX) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto itrimRight(string_view rhs, long limit = LONG_MAX) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto operator=(const string&) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto operator=(const string_view& source) -> type&;$/;"	m	struct:nall::string_view
type	nall/string.hpp	/^  inline auto operator=(string&&) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto operator=(string_view&& source) -> type&;$/;"	m	struct:nall::string_view
type	nall/string.hpp	/^  inline auto prepend() -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto qdowncase() -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto qreplace(string_view from, string_view to, long limit = LONG_MAX) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto qupcase() -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto remove(uint offset, uint length) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto replace(string_view from, string_view to, long limit = LONG_MAX) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto reserve(uint) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto reset() -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto resize(uint) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto reverse() -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto size(int length, char fill = ' ') -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto strip() -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto strip() -> type&;$/;"	m	struct:nall::vector
type	nall/string.hpp	/^  inline auto stripLeft() -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto stripRight() -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto transform(string_view from, string_view to) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto trim(string_view lhs, string_view rhs, long limit = LONG_MAX) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto trimLeft(string_view lhs, long limit = LONG_MAX) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto trimRight(string_view rhs, long limit = LONG_MAX) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  inline auto upcase() -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  template<bool, bool> inline auto _replace(string_view, string_view, long) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  template<bool, bool> inline auto _split(string_view, string_view, long) -> type&;$/;"	m	struct:nall::vector
type	nall/string.hpp	/^  template<typename T, typename... P> inline auto append(const T&, P&&... p) -> type&;$/;"	m	struct:nall::string_format
type	nall/string.hpp	/^  template<typename T, typename... P> inline auto append(const T&, P&&...) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  template<typename T, typename... P> inline auto prepend(const T&, P&&...) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  template<typename... P> inline auto append(const nall::string_format&, P&&...) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  template<typename... P> inline auto append(const string&, P&&...) -> type&;$/;"	m	struct:nall::vector
type	nall/string.hpp	/^  template<typename... P> inline auto assign(P&&...) -> type&;$/;"	m	struct:nall::string
type	nall/string.hpp	/^  template<typename... P> inline auto prepend(const nall::string_format&, P&&...) -> type&;$/;"	m	struct:nall::string
type	nall/string/eval/node.hpp	/^  Type type;$/;"	m	struct:nall::Eval::Node
type	nall/vector.hpp	/^  auto operator=(const type& source) -> type&;$/;"	m	struct:nall::vector_base
type	nall/vector.hpp	/^  auto operator=(type&& source) -> type&;$/;"	m	struct:nall::vector_base
type	ruby/audio/asio.hpp	/^  ASIOSampleType type;$/;"	m	struct:ASIOChannelInfo
type	ruby/input/shared/rawinput.cpp	/^    enum class Type : uint { Keyboard, Mouse, Joypad } type;$/;"	m	struct:RawInput::Device	typeref:class:RawInput::Device::Type	file:
type_info	nall/any.hpp	/^    virtual auto type() const -> const std::type_info& = 0;$/;"	m	class:nall::any::placeholder::std
u	ruby/video/direct3d.cpp	/^    float u, v;          \/\/texture coordinates$/;"	m	struct:VideoDirect3D::Vertex	file:
uAlign	hiro/windows/header.hpp	/^    UINT uAlign;$/;"	m	struct:__anon1
uPD7725	higan/processor/upd96050/upd96050.hpp	/^  enum class Revision : uint { uPD7725, uPD96050 } revision;$/;"	m	class:Processor::uPD96050::Revision
uPD96050	higan/processor/upd96050/upd96050.hpp	/^struct uPD96050 {$/;"	s	namespace:Processor
ui	higan/GNUmakefile	/^ui := target-$(target)$/;"	m
uint	higan/audio/audio.hpp	/^  auto read(double samples[]) -> uint;$/;"	m	struct:Emulator::Stream
uint	higan/fc/apu/apu.hpp	/^    auto volume() const -> uint;$/;"	m	struct:APU::Envelope
uint	higan/fc/cartridge/board/board.hpp	/^  static auto mirror(uint addr, uint size) -> uint;$/;"	m	struct:Board
uint	higan/gb/apu/apu.hpp	/^    auto getPeriod() const -> uint;$/;"	m	struct:APU::Noise
uint	higan/gb/cpu/cpu.hpp	/^  auto wramAddress(uint16 addr) const -> uint;$/;"	m	struct:CPU
uint	higan/gb/ppu/ppu.hpp	/^  auto hflip(uint data) const -> uint;$/;"	m	struct:PPU
uint	higan/gb/ppu/ppu.hpp	/^  auto vramAddress(uint16 addr) const -> uint;$/;"	m	struct:PPU
uint	higan/gba/apu/apu.hpp	/^    auto divider() const -> uint;$/;"	m	struct:APU::Noise
uint	higan/md/vdp/vdp.hpp	/^    auto nametableHeight() -> uint;$/;"	m	struct:VDP::Background
uint	higan/md/vdp/vdp.hpp	/^    auto nametableWidth() -> uint;$/;"	m	struct:VDP::Background
uint	higan/md/vdp/vdp.hpp	/^    inline auto height() const -> uint;$/;"	m	struct:VDP::Object
uint	higan/md/vdp/vdp.hpp	/^    inline auto width() const -> uint;$/;"	m	struct:VDP::Object
uint	higan/ms/cartridge/cartridge.hpp	/^    static auto mirror(uint addr, uint size) -> uint;$/;"	m	struct:Cartridge::Memory
uint	higan/ms/vdp/vdp.hpp	/^  auto vlines() -> uint;$/;"	m	struct:VDP
uint	higan/pce/cartridge/cartridge.hpp	/^  auto mirror(uint addr, uint size) -> uint;$/;"	m	struct:Cartridge
uint	higan/processor/hg51b/hg51b.hpp	/^  auto wait(uint24 address) -> uint;$/;"	m	struct:Processor::HG51B
uint	higan/processor/wdc65816/disassembler.cpp	/^enum : uint {$/;"	g	file:
uint	higan/sfc/cartridge/cartridge.hpp	/^  auto loadMap(Markup::Node, const function<uint8 (uint24, uint8)>&, const function<void (uint24, uint8)>&) -> uint;$/;"	m	struct:Cartridge
uint	higan/sfc/cartridge/cartridge.hpp	/^  template<typename T> auto loadMap(Markup::Node, T&) -> uint;$/;"	m	struct:Cartridge
uint	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  auto calculateWeekday(uint year, uint month, uint day) -> uint;$/;"	m	struct:SharpRTC
uint	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  auto dataAdjust() -> uint;$/;"	m	struct:SPC7110
uint	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  auto dataOffset() -> uint;$/;"	m	struct:SPC7110
uint	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  auto dataStride() -> uint;$/;"	m	struct:SPC7110
uint	higan/sfc/cpu/cpu.hpp	/^  alwaysinline auto wait(uint24 addr) const -> uint;$/;"	m	struct:CPU
uint	higan/sfc/cpu/cpu.hpp	/^  inline auto dmaClocks() const -> uint;$/;"	m	struct:CPU
uint	higan/sfc/cpu/cpu.hpp	/^  inline auto dmaCounter() const -> uint;$/;"	m	struct:CPU
uint	higan/sfc/cpu/cpu.hpp	/^  inline auto joypadCounter() const -> uint;$/;"	m	struct:CPU
uint	higan/sfc/dsp/dsp.hpp	/^  enum : uint {$/;"	g
uint	higan/sfc/dsp/dsp.hpp	/^  enum EnvelopeMode : uint {$/;"	g
uint	higan/sfc/dsp/dsp.hpp	/^  enum VoiceRegister : uint {$/;"	g
uint	higan/sfc/memory/memory.hpp	/^  ) -> uint;$/;"	m	struct:Bus
uint	higan/sfc/memory/memory.hpp	/^  alwaysinline static auto mirror(uint address, uint size) -> uint;$/;"	m	struct:Bus
uint	higan/sfc/memory/memory.hpp	/^  alwaysinline static auto reduce(uint address, uint mask) -> uint;$/;"	m	struct:Bus
uint	higan/sfc/memory/memory.hpp	/^  virtual auto size() const -> uint = 0;$/;"	m	struct:Memory
uint	higan/sfc/ppu-fast/ppu.hpp	/^  alwaysinline auto vdisp() const -> uint;$/;"	m	struct:PPU
uint	higan/sfc/ppu/background.hpp	/^  auto getTileColor() -> uint;$/;"	m	struct:Background
uint	higan/sfc/ppu/counter/counter.hpp	/^  alwaysinline auto hcounter() const -> uint;$/;"	m	struct:PPUcounter
uint	higan/sfc/ppu/counter/counter.hpp	/^  alwaysinline auto hcounter(uint offset) const -> uint;$/;"	m	struct:PPUcounter
uint	higan/sfc/ppu/counter/counter.hpp	/^  alwaysinline auto hdot() const -> uint;$/;"	m	struct:PPUcounter
uint	higan/sfc/ppu/counter/counter.hpp	/^  alwaysinline auto lineclocks() const -> uint;$/;"	m	struct:PPUcounter
uint	higan/sfc/ppu/counter/counter.hpp	/^  alwaysinline auto vcounter() const -> uint;$/;"	m	struct:PPUcounter
uint	higan/sfc/ppu/counter/counter.hpp	/^  alwaysinline auto vcounter(uint offset) const -> uint;$/;"	m	struct:PPUcounter
uint	higan/sfc/ppu/object.hpp	/^    alwaysinline auto height() const -> uint;$/;"	m	struct:OAM::Object
uint	higan/sfc/ppu/object.hpp	/^    alwaysinline auto width() const -> uint;$/;"	m	struct:OAM::Object
uint	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    inline auto bits() const -> uint;$/;"	m	struct:BSMemory::BlockInformation
uint	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    inline auto bytes() const -> uint;$/;"	m	struct:BSMemory::BlockInformation
uint	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    inline auto count() const -> uint;$/;"	m	struct:BSMemory::BlockInformation
uint	hiro/cocoa/monitor.hpp	/^  static auto count() -> uint;$/;"	m	struct:hiro::pMonitor
uint	hiro/cocoa/monitor.hpp	/^  static auto primary() -> uint;$/;"	m	struct:hiro::pMonitor
uint	hiro/cocoa/widget/table-view.hpp	/^  auto _cellWidth(uint row, uint column) -> uint;$/;"	m	struct:hiro::pTableView
uint	hiro/cocoa/widget/table-view.hpp	/^  auto _columnWidth(uint column) -> uint;$/;"	m	struct:hiro::pTableView
uint	hiro/cocoa/widget/table-view.hpp	/^  auto _width(uint column) -> uint;$/;"	m	struct:hiro::pTableView
uint	hiro/cocoa/window.hpp	/^  auto monitor() const -> uint;$/;"	m	struct:hiro::pWindow
uint	hiro/cocoa/window.hpp	/^  auto statusBarHeight() -> uint;$/;"	m	struct:hiro::pWindow
uint	hiro/core/core.hpp	/^  auto actionCount() const -> uint;$/;"	m	struct:hiro::mMenu
uint	hiro/core/core.hpp	/^  auto actionCount() const -> uint;$/;"	m	struct:hiro::mPopupMenu
uint	hiro/core/core.hpp	/^  auto address() const -> uint;$/;"	m	struct:hiro::mHexEdit
uint	hiro/core/core.hpp	/^  auto columns() const -> uint;$/;"	m	struct:hiro::mHexEdit
uint	hiro/core/core.hpp	/^  auto itemCount() const -> uint;$/;"	m	struct:hiro::mComboButton
uint	hiro/core/core.hpp	/^  auto itemCount() const -> uint;$/;"	m	struct:hiro::mComboEdit
uint	hiro/core/core.hpp	/^  auto itemCount() const -> uint;$/;"	m	struct:hiro::mIconView
uint	hiro/core/core.hpp	/^  auto itemCount() const -> uint;$/;"	m	struct:hiro::mTreeView
uint	hiro/core/core.hpp	/^  auto itemCount() const -> uint;$/;"	m	struct:hiro::mTreeViewItem
uint	hiro/core/core.hpp	/^  auto length() const -> uint;$/;"	m	struct:hiro::mHexEdit
uint	hiro/core/core.hpp	/^  auto length() const -> uint;$/;"	m	struct:hiro::mHorizontalScrollBar
uint	hiro/core/core.hpp	/^  auto length() const -> uint;$/;"	m	struct:hiro::mHorizontalSlider
uint	hiro/core/core.hpp	/^  auto length() const -> uint;$/;"	m	struct:hiro::mVerticalScrollBar
uint	hiro/core/core.hpp	/^  auto length() const -> uint;$/;"	m	struct:hiro::mVerticalSlider
uint	hiro/core/core.hpp	/^  auto menuCount() const -> uint;$/;"	m	struct:hiro::mMenuBar
uint	hiro/core/core.hpp	/^  auto position() const -> uint;$/;"	m	struct:hiro::mHorizontalScrollBar
uint	hiro/core/core.hpp	/^  auto position() const -> uint;$/;"	m	struct:hiro::mHorizontalSlider
uint	hiro/core/core.hpp	/^  auto position() const -> uint;$/;"	m	struct:hiro::mProgressBar
uint	hiro/core/core.hpp	/^  auto position() const -> uint;$/;"	m	struct:hiro::mVerticalScrollBar
uint	hiro/core/core.hpp	/^  auto position() const -> uint;$/;"	m	struct:hiro::mVerticalSlider
uint	hiro/core/core.hpp	/^  auto rows() const -> uint;$/;"	m	struct:hiro::mHexEdit
uint	hiro/core/core.hpp	/^  static auto hotkeyCount() -> uint;$/;"	m	struct:hiro::Keyboard
uint	hiro/core/group.hpp	/^  auto objectCount() const -> uint;$/;"	m	struct:mGroup
uint	hiro/core/monitor.hpp	/^  static auto count() -> uint;$/;"	m	struct:Monitor
uint	hiro/core/monitor.hpp	/^  static auto primary() -> uint;$/;"	m	struct:Monitor
uint	hiro/core/timer.hpp	/^  auto interval() const -> uint;$/;"	m	struct:mTimer
uint	hiro/core/widget/tab-frame.hpp	/^  auto itemCount() const -> uint;$/;"	m	struct:mTabFrame
uint	hiro/core/widget/table-view-item.hpp	/^  auto cellCount() const -> uint;$/;"	m	struct:mTableViewItem
uint	hiro/core/widget/table-view.hpp	/^  auto columnCount() const -> uint;$/;"	m	struct:mTableView
uint	hiro/core/widget/table-view.hpp	/^  auto itemCount() const -> uint;$/;"	m	struct:mTableView
uint	hiro/core/window.hpp	/^  auto monitor() const -> uint;$/;"	m	struct:mWindow
uint	hiro/extension/fixed-layout.hpp	/^  auto cellCount() const -> uint;$/;"	m	struct:mFixedLayout
uint	hiro/extension/horizontal-layout.hpp	/^  auto cellCount() const -> uint;$/;"	m	struct:mHorizontalLayout
uint	hiro/extension/table-layout.hpp	/^  auto cellCount() const -> uint;$/;"	m	struct:mTableLayout
uint	hiro/extension/table-layout.hpp	/^  auto columnCount() const -> uint;$/;"	m	struct:mTableLayout
uint	hiro/extension/table-layout.hpp	/^  auto rowCount() const -> uint;$/;"	m	struct:mTableLayout
uint	hiro/extension/vertical-layout.hpp	/^  auto cellCount() const -> uint;$/;"	m	struct:mVerticalLayout
uint	hiro/gtk/monitor.hpp	/^  static auto count() -> uint;$/;"	m	struct:hiro::pMonitor
uint	hiro/gtk/monitor.hpp	/^  static auto primary() -> uint;$/;"	m	struct:hiro::pMonitor
uint	hiro/gtk/widget/table-view.hpp	/^  auto _cellWidth(uint row, uint column) -> uint;$/;"	m	struct:hiro::pTableView
uint	hiro/gtk/widget/table-view.hpp	/^  auto _columnWidth(uint column) -> uint;$/;"	m	struct:hiro::pTableView
uint	hiro/gtk/widget/table-view.hpp	/^  auto _width(uint column) -> uint;$/;"	m	struct:hiro::pTableView
uint	hiro/gtk/window.hpp	/^  auto monitor() const -> uint;$/;"	m	struct:hiro::pWindow
uint	hiro/qt/monitor.hpp	/^  static auto count() -> uint;$/;"	m	struct:hiro::pMonitor
uint	hiro/qt/monitor.hpp	/^  static auto primary() -> uint;$/;"	m	struct:hiro::pMonitor
uint	hiro/qt/window.hpp	/^  auto _menuHeight() const -> uint;$/;"	m	struct:hiro::pWindow
uint	hiro/qt/window.hpp	/^  auto _menuTextHeight() const -> uint;$/;"	m	struct:hiro::pWindow
uint	hiro/qt/window.hpp	/^  auto _statusHeight() const -> uint;$/;"	m	struct:hiro::pWindow
uint	hiro/qt/window.hpp	/^  auto _statusTextHeight() const -> uint;$/;"	m	struct:hiro::pWindow
uint	hiro/qt/window.hpp	/^  auto monitor() const -> uint;$/;"	m	struct:hiro::pWindow
uint	hiro/windows/monitor.hpp	/^  static auto count() -> uint;$/;"	m	struct:hiro::pMonitor
uint	hiro/windows/monitor.hpp	/^  static auto primary() -> uint;$/;"	m	struct:hiro::pMonitor
uint	hiro/windows/window.hpp	/^  auto monitor() const -> uint;$/;"	m	struct:hiro::pWindow
uint	icarus/heuristics/super-famicom.cpp	/^  auto dataRomSize() const -> uint;$/;"	m	struct:Heuristics::SuperFamicom	file:
uint	icarus/heuristics/super-famicom.cpp	/^  auto expansionRamSize() const -> uint;$/;"	m	struct:Heuristics::SuperFamicom	file:
uint	icarus/heuristics/super-famicom.cpp	/^  auto expansionRomSize() const -> uint;$/;"	m	struct:Heuristics::SuperFamicom	file:
uint	icarus/heuristics/super-famicom.cpp	/^  auto firmwareRomSize() const -> uint;$/;"	m	struct:Heuristics::SuperFamicom	file:
uint	icarus/heuristics/super-famicom.cpp	/^  auto programRomSize() const -> uint;$/;"	m	struct:Heuristics::SuperFamicom	file:
uint	icarus/heuristics/super-famicom.cpp	/^  auto ramSize() const -> uint;$/;"	m	struct:Heuristics::SuperFamicom	file:
uint	icarus/heuristics/super-famicom.cpp	/^  auto romSize() const -> uint;$/;"	m	struct:Heuristics::SuperFamicom	file:
uint	icarus/heuristics/super-famicom.cpp	/^  auto scoreHeader(uint address) -> uint;$/;"	m	struct:Heuristics::SuperFamicom	file:
uint	nall/arithmetic/natural.hpp	/^  friend auto bits(Pair) -> uint;$/;"	m	struct:nall::Pair
uint	nall/beat/archive/node.hpp	/^  auto getPermissions() const -> uint;$/;"	m	struct:nall::Beat::Archive::Node
uint	nall/decode/png.hpp	/^  inline auto inflateSize() -> uint;$/;"	m	struct:nall::Decode::PNG
uint	nall/decode/png.hpp	/^  inline auto interlace(uint pass, uint index) -> uint;$/;"	m	struct:nall::Decode::PNG
uint	nall/decode/png.hpp	/^  inline auto read(const uint8_t* data, uint length) -> uint;$/;"	m	struct:nall::Decode::PNG
uint	nall/decode/png.hpp	/^  inline auto readbits(const uint8_t*& data) -> uint;$/;"	m	struct:nall::Decode::PNG
uint	nall/http/response.hpp	/^  inline auto findContentLength() const -> uint;$/;"	m	struct:nall::HTTP::Response
uint	nall/image.hpp	/^  static inline auto bitDepth(uint64_t color) -> uint;$/;"	m	struct:nall::image
uint	nall/image.hpp	/^  static inline auto bitShift(uint64_t color) -> uint;$/;"	m	struct:nall::image
uint	nall/string.hpp	/^  inline auto hash() const -> uint;$/;"	m	struct:nall::string
uint	nall/string.hpp	/^  inline auto length() const -> uint;$/;"	m	struct:nall::string
uint	nall/string.hpp	/^  inline auto size() const -> uint;$/;"	m	struct:nall::string_view
uint	nall/string.hpp	/^template<typename T> inline auto fromReal(char* str, T value) -> uint;$/;"	m	namespace:nall
uint	nall/string/transform/dml.hpp	/^  auto count(const string& text, char value) -> uint;$/;"	m	struct:nall::__anon37::DML
uint	nall/vector.hpp	/^  template<typename Cast = T> auto capacity() const -> uint;$/;"	m	struct:nall::vector_base
uint	nall/vector.hpp	/^  template<typename Cast = T> auto size() const -> uint;$/;"	m	struct:nall::vector_base
uint	nall/windows/detour.hpp	/^  static auto length(const uint8* function) -> uint;$/;"	m	struct:nall::detour
uint	nall/windows/detour.hpp	/^  static auto mirror(uint8* target, const uint8* source) -> uint;$/;"	m	struct:nall::detour
uint1	higan/gb/cartridge/mbc7/mbc7.hpp	/^      auto edge() -> uint1;$/;"	m	struct:MBC7::EEPROM::ShiftRegister
uint1	higan/gb/cartridge/mbc7/mbc7.hpp	/^      auto read() -> uint1;$/;"	m	struct:MBC7::EEPROM::ShiftRegister
uint10	higan/md/vdp/vdp.hpp	/^    auto read(uint6 address) const -> uint10;$/;"	m	struct:VDP::VSRAM
uint12	higan/ms/vdp/vdp.hpp	/^  auto palette(uint5 index) -> uint12;$/;"	m	struct:VDP
uint12	higan/ws/ppu/ppu.hpp	/^  auto renderPalette(uint4 palette, uint4 color) -> uint12;$/;"	m	struct:PPU
uint15	higan/gba/ppu/ppu.hpp	/^    auto blend(uint15 above, uint eva, uint15 below, uint evb) -> uint15;$/;"	m	struct:PPU::Screen
uint15	higan/gba/ppu/ppu.hpp	/^    auto run(uint x, uint y) -> uint15;$/;"	m	struct:PPU::Screen
uint15	higan/md/vdp/vdp.hpp	/^    auto nametableAddress() -> uint15;$/;"	m	struct:VDP::Background
uint15	higan/sfc/ppu/screen.hpp	/^  alwaysinline auto directColor(uint palette, uint tile) const -> uint15;$/;"	m	struct:Screen
uint15	higan/sfc/ppu/screen.hpp	/^  alwaysinline auto fixedColor() const -> uint15;$/;"	m	struct:Screen
uint15	higan/sfc/ppu/screen.hpp	/^  alwaysinline auto paletteColor(uint8 palette) const -> uint15;$/;"	m	struct:Screen
uint15	higan/sfc/ppu/screen.hpp	/^  auto blend(uint x, uint y) const -> uint15;$/;"	m	struct:Screen
uint16	higan/md/cartridge/cartridge.hpp	/^    auto read(uint24 address) -> uint16;$/;"	m	struct:Cartridge::Memory
uint16	higan/md/cartridge/cartridge.hpp	/^  auto readBanked(uint22 address) -> uint16;$/;"	m	struct:Cartridge
uint16	higan/md/cartridge/cartridge.hpp	/^  auto readGameGenie(uint22 address) -> uint16;$/;"	m	struct:Cartridge
uint16	higan/md/cartridge/cartridge.hpp	/^  auto readIO(uint24 address) -> uint16;$/;"	m	struct:Cartridge
uint16	higan/md/cartridge/cartridge.hpp	/^  auto readLinear(uint22 address) -> uint16;$/;"	m	struct:Cartridge
uint16	higan/md/cartridge/cartridge.hpp	/^  auto readLockOn(uint22 address) -> uint16;$/;"	m	struct:Cartridge
uint16	higan/md/cpu/cpu.hpp	/^  auto readIO(uint24 address) -> uint16;$/;"	m	struct:CPU
uint16	higan/md/vdp/vdp.hpp	/^    auto read(uint15 address) const -> uint16;$/;"	m	struct:VDP::VRAM
uint16	higan/md/vdp/vdp.hpp	/^  auto read(uint24 addr) -> uint16;$/;"	m	struct:VDP
uint16	higan/md/vdp/vdp.hpp	/^  auto readControlPort() -> uint16;$/;"	m	struct:VDP
uint16	higan/md/vdp/vdp.hpp	/^  auto readDataPort() -> uint16;$/;"	m	struct:VDP
uint16	higan/pce/cpu/cpu.hpp	/^    auto vector() const -> uint16;$/;"	m	struct:CPU::IRQ
uint16	higan/pce/vdc/vdc.hpp	/^    auto read(uint16 addr) -> uint16;$/;"	m	struct:VDC::VRAM
uint16	higan/pce/vdc/vdc.hpp	/^    auto read(uint8 addr) -> uint16;$/;"	m	struct:VDC::SATB
uint16	higan/processor/lr35902/lr35902.hpp	/^  auto load(uint16 address) -> uint16;$/;"	m	struct:Processor::LR35902
uint16	higan/processor/lr35902/lr35902.hpp	/^  auto operands() -> uint16;$/;"	m	struct:Processor::LR35902
uint16	higan/processor/lr35902/lr35902.hpp	/^  auto pop() -> uint16;$/;"	m	struct:Processor::LR35902
uint16	higan/processor/m68k/m68k.hpp	/^    virtual auto readByte(uint24 addr) -> uint16 = 0;$/;"	m	struct:Processor::M68K::Bus
uint16	higan/processor/m68k/m68k.hpp	/^    virtual auto readWord(uint24 addr) -> uint16 = 0;$/;"	m	struct:Processor::M68K::Bus
uint16	higan/processor/spc700/spc700.hpp	/^  auto algorithmADW(uint16, uint16) -> uint16;$/;"	m	struct:Processor::SPC700
uint16	higan/processor/spc700/spc700.hpp	/^  auto algorithmCPW(uint16, uint16) -> uint16;$/;"	m	struct:Processor::SPC700
uint16	higan/processor/spc700/spc700.hpp	/^  auto algorithmLDW(uint16, uint16) -> uint16;$/;"	m	struct:Processor::SPC700
uint16	higan/processor/spc700/spc700.hpp	/^  auto algorithmSBW(uint16, uint16) -> uint16;$/;"	m	struct:Processor::SPC700
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto ADC (Size, uint16, uint16) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto ADD (Size, uint16, uint16) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto AND (Size, uint16, uint16) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto DEC (Size, uint16        ) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto INC (Size, uint16        ) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto NEG (Size, uint16        ) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto NOT (Size, uint16        ) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto OR  (Size, uint16, uint16) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto RCL (Size, uint16,  uint5) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto RCR (Size, uint16,  uint5) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto ROL (Size, uint16,  uint4) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto ROR (Size, uint16,  uint4) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto SAL (Size, uint16,  uint5) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto SAR (Size, uint16,  uint5) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto SBB (Size, uint16, uint16) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto SHL (Size, uint16,  uint5) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto SHR (Size, uint16,  uint5) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto SUB (Size, uint16, uint16) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto XOR (Size, uint16, uint16) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto fetch(Size = Byte) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto getMem(Size, uint offset = 0) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto getReg(Size) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto getSeg() -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto in(Size, uint16) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto pop() -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/v30mz/v30mz.hpp	/^  auto segment(uint16) -> uint16;$/;"	m	namespace:Processor
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmADC16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmAND16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmASL16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmBIT16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmCMP16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmCPX16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmCPY16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmDEC16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmEOR16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmINC16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmLDA16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmLDX16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmLDY16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmLSR16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmORA16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmROL16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmROR16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmSBC16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmTRB16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmTSB16(uint16) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/wdc65816/wdc65816.hpp	/^  auto dreadw(uint24 addr) -> uint16;$/;"	m	struct:Processor::WDC65816
uint16	higan/processor/z80/z80.hpp	/^  auto displace(uint16&) -> uint16;$/;"	m	struct:Processor::Z80
uint16	higan/processor/z80/z80.hpp	/^  auto operands() -> uint16;$/;"	m	struct:Processor::Z80
uint16	higan/processor/z80/z80.hpp	/^  auto pop() -> uint16;$/;"	m	struct:Processor::Z80
uint16	higan/sfc/ppu/background.hpp	/^  alwaysinline auto hoffset() const -> uint16;$/;"	m	struct:Background
uint16	higan/sfc/ppu/background.hpp	/^  alwaysinline auto voffset() const -> uint16;$/;"	m	struct:Background
uint16	higan/sfc/ppu/background.hpp	/^  auto getTile(uint x, uint y) -> uint16;$/;"	m	struct:Background
uint16	higan/sfc/ppu/ppu.hpp	/^  alwaysinline auto addressVRAM() const -> uint16;$/;"	m	struct:PPU
uint16	higan/sfc/ppu/ppu.hpp	/^  alwaysinline auto readVRAM() -> uint16;$/;"	m	struct:PPU
uint16	higan/sfc/ppu/screen.hpp	/^  auto above() -> uint16;$/;"	m	struct:Screen
uint16	higan/sfc/ppu/screen.hpp	/^  auto below(bool hires) -> uint16;$/;"	m	struct:Screen
uint16_t	nall/stdint.hpp	/^  typedef unsigned short uint16_t;$/;"	t
uint24	higan/processor/hg51b/hg51b.hpp	/^  auto algorithmADD(uint24 x, uint24 y) -> uint24;$/;"	m	struct:Processor::HG51B
uint24	higan/processor/hg51b/hg51b.hpp	/^  auto algorithmAND(uint24 x, uint24 y) -> uint24;$/;"	m	struct:Processor::HG51B
uint24	higan/processor/hg51b/hg51b.hpp	/^  auto algorithmASR(uint24 a, uint5 s) -> uint24;$/;"	m	struct:Processor::HG51B
uint24	higan/processor/hg51b/hg51b.hpp	/^  auto algorithmOR(uint24 x, uint24 y) -> uint24;$/;"	m	struct:Processor::HG51B
uint24	higan/processor/hg51b/hg51b.hpp	/^  auto algorithmROR(uint24 a, uint5 s) -> uint24;$/;"	m	struct:Processor::HG51B
uint24	higan/processor/hg51b/hg51b.hpp	/^  auto algorithmSHL(uint24 a, uint5 s) -> uint24;$/;"	m	struct:Processor::HG51B
uint24	higan/processor/hg51b/hg51b.hpp	/^  auto algorithmSHR(uint24 a, uint5 s) -> uint24;$/;"	m	struct:Processor::HG51B
uint24	higan/processor/hg51b/hg51b.hpp	/^  auto algorithmSUB(uint24 x, uint24 y) -> uint24;$/;"	m	struct:Processor::HG51B
uint24	higan/processor/hg51b/hg51b.hpp	/^  auto algorithmSX(uint24 x) -> uint24;$/;"	m	struct:Processor::HG51B
uint24	higan/processor/hg51b/hg51b.hpp	/^  auto algorithmXNOR(uint24 x, uint24 y) -> uint24;$/;"	m	struct:Processor::HG51B
uint24	higan/processor/hg51b/hg51b.hpp	/^  auto algorithmXOR(uint24 x, uint24 y) -> uint24;$/;"	m	struct:Processor::HG51B
uint24	higan/processor/hg51b/hg51b.hpp	/^  auto readRegister(uint7 address) -> uint24;$/;"	m	struct:Processor::HG51B
uint24	higan/processor/wdc65816/wdc65816.hpp	/^  auto decode(uint8 mode, uint24 addr) -> uint24;$/;"	m	struct:Processor::WDC65816
uint24	higan/processor/wdc65816/wdc65816.hpp	/^  auto dreadl(uint24 addr) -> uint24;$/;"	m	struct:Processor::WDC65816
uint256_t	nall/elliptic-curve/modulo25519-optimized.hpp	/^  inline auto operator()() const -> uint256_t;$/;"	m	struct:nall::EllipticCurve::Modulo25519
uint32	higan/gba/cartridge/cartridge.hpp	/^  auto read(uint mode, uint32 addr) -> uint32;$/;"	m	struct:Cartridge
uint32	higan/gba/cartridge/memory.hpp	/^  auto read(uint mode, uint32 addr) -> uint32;$/;"	m	struct:MROM
uint32	higan/gba/cartridge/memory.hpp	/^  auto read(uint mode, uint32 addr) -> uint32;$/;"	m	struct:SRAM
uint32	higan/gba/memory/memory.hpp	/^  auto readIO(uint mode, uint32 addr) -> uint32;$/;"	m	struct:IO
uint32	higan/gba/memory/memory.hpp	/^  static auto mirror(uint32 addr, uint32 size) -> uint32;$/;"	m	struct:Bus
uint32	higan/gba/ppu/ppu.hpp	/^  auto readOAM(uint mode, uint32 addr) -> uint32;$/;"	m	struct:PPU
uint32	higan/gba/ppu/ppu.hpp	/^  auto readPRAM(uint mode, uint32 addr) -> uint32;$/;"	m	struct:PPU
uint32	higan/gba/ppu/ppu.hpp	/^  auto readVRAM(uint mode, uint32 addr) -> uint32;$/;"	m	struct:PPU
uint32	higan/gba/system/system.hpp	/^  auto read(uint mode, uint32 addr) -> uint32;$/;"	m	struct:BIOS
uint32	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto ADD(uint32, uint32, bool) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto ASR(uint32, uint8) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto BIT(uint32) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto LSL(uint32, uint8) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto LSR(uint32, uint8) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto MUL(uint32, uint32, uint32) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto ROR(uint32, uint8) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto RRX(uint32) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto SUB(uint32, uint32, bool) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto load(uint mode, uint32 address) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  auto read(uint mode, uint32 address) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/arm7tdmi/arm7tdmi.hpp	/^  virtual auto get(uint mode, uint32 address) -> uint32 = 0;$/;"	m	namespace:Processor
uint32	higan/processor/v30mz/v30mz.hpp	/^  auto DIV (Size, uint32, uint32) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/v30mz/v30mz.hpp	/^  auto DIVI(Size,  int32,  int32) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/v30mz/v30mz.hpp	/^  auto MUL (Size, uint16, uint16) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/v30mz/v30mz.hpp	/^  auto MULI(Size,  int16,  int16) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/v30mz/v30mz.hpp	/^  auto getAcc(Size) -> uint32;$/;"	m	namespace:Processor
uint32	higan/processor/v30mz/v30mz.hpp	/^  auto read(Size, uint16, uint16) -> uint32;$/;"	m	namespace:Processor
uint32	higan/ws/memory/memory.hpp	/^  auto read(uint16 addr, uint size = Byte) -> uint32;$/;"	m	struct:InternalRAM
uint32_t	hiro/core/core.hpp	/^  auto data() -> uint32_t*;$/;"	m	struct:hiro::mCanvas
uint32_t	hiro/core/core.hpp	/^  auto value() const -> uint32_t;$/;"	m	struct:hiro::Color
uint32_t	nall/stdint.hpp	/^  typedef unsigned int uint32_t;$/;"	t
uint4	higan/gb/apu/apu.hpp	/^    auto getPattern(uint5 offset) const -> uint4;$/;"	m	struct:APU::Wave
uint4	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  auto rtcRead(uint4 addr) -> uint4;$/;"	m	struct:EpsonRTC
uint4	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  auto rtcRead(uint4 addr) -> uint4;$/;"	m	struct:SharpRTC
uint4	higan/ws/apu/apu.hpp	/^    auto noiseSample() -> uint4;$/;"	m	struct:APU::Channel4
uint4	higan/ws/apu/apu.hpp	/^  auto sample(uint channel, uint5 index) -> uint4;$/;"	m	struct:APU
uint4	higan/ws/cpu/cpu.hpp	/^  auto keypadRead() -> uint4;$/;"	m	struct:CPU
uint4	higan/ws/ppu/ppu.hpp	/^  auto renderFetch(uint10 tile, uint3 y, uint3 x) -> uint4;$/;"	m	struct:PPU
uint48	higan/processor/hg51b/hg51b.hpp	/^  auto algorithmMUL(int24 x, int24 y) -> uint48;$/;"	m	struct:Processor::HG51B
uint64_t	nall/beat/archive/node.hpp	/^  auto getTimestamp(string) const -> uint64_t;$/;"	m	struct:nall::Beat::Archive::Node
uint64_t	nall/image.hpp	/^  alwaysinline auto imerge(const uint64_t* component) -> uint64_t;$/;"	m	struct:nall::image
uint64_t	nall/image.hpp	/^  alwaysinline auto interpolate1f(uint64_t a, uint64_t b, double x) -> uint64_t;$/;"	m	struct:nall::image
uint64_t	nall/image.hpp	/^  alwaysinline auto interpolate1f(uint64_t a, uint64_t b, uint64_t c, uint64_t d, double x, double y) -> uint64_t;$/;"	m	struct:nall::image
uint64_t	nall/image.hpp	/^  alwaysinline auto interpolate1i(int64_t a, int64_t b, int64_t c, int64_t d, uint32_t x, uint32_t y) -> uint64_t;$/;"	m	struct:nall::image
uint64_t	nall/image.hpp	/^  alwaysinline auto interpolate1i(int64_t a, int64_t b, uint32_t x) -> uint64_t;$/;"	m	struct:nall::image
uint64_t	nall/image.hpp	/^  inline auto interpolate4f(uint64_t a, uint64_t b, double x) -> uint64_t;$/;"	m	struct:nall::image
uint64_t	nall/image.hpp	/^  inline auto interpolate4f(uint64_t a, uint64_t b, uint64_t c, uint64_t d, double x, double y) -> uint64_t;$/;"	m	struct:nall::image
uint64_t	nall/image.hpp	/^  inline auto interpolate4i(uint64_t a, uint64_t b, uint32_t x) -> uint64_t;$/;"	m	struct:nall::image
uint64_t	nall/image.hpp	/^  inline auto interpolate4i(uint64_t a, uint64_t b, uint64_t c, uint64_t d, uint32_t x, uint32_t y) -> uint64_t;$/;"	m	struct:nall::image
uint64_t	nall/image.hpp	/^  inline auto read(const uint8_t* data) const -> uint64_t;$/;"	m	struct:nall::image
uint64_t	nall/image.hpp	/^  static inline auto normalize(uint64_t color, uint sourceDepth, uint targetDepth) -> uint64_t;$/;"	m	struct:nall::image
uint64_t	nall/stdint.hpp	/^  typedef unsigned long long uint64_t;$/;"	t
uint8	higan/fc/apu/apu.hpp	/^    auto clock() -> uint8;$/;"	m	struct:APU::DMC
uint8	higan/fc/apu/apu.hpp	/^    auto clock() -> uint8;$/;"	m	struct:APU::Noise
uint8	higan/fc/apu/apu.hpp	/^    auto clock() -> uint8;$/;"	m	struct:APU::Pulse
uint8	higan/fc/apu/apu.hpp	/^    auto clock() -> uint8;$/;"	m	struct:APU::Triangle
uint8	higan/fc/apu/apu.hpp	/^  auto readIO(uint16 addr) -> uint8;$/;"	m	struct:APU
uint8	higan/fc/cartridge/board/board.hpp	/^    inline auto read(uint addr) const -> uint8;$/;"	m	struct:Board::Memory
uint8	higan/fc/cartridge/board/board.hpp	/^  virtual auto readCHR(uint addr) -> uint8;$/;"	m	struct:Board
uint8	higan/fc/cartridge/board/board.hpp	/^  virtual auto readPRG(uint addr) -> uint8 = 0;$/;"	m	struct:Board
uint8	higan/fc/cartridge/cartridge.hpp	/^  auto readCHR(uint addr) -> uint8;$/;"	m	struct:Cartridge
uint8	higan/fc/cartridge/cartridge.hpp	/^  auto readPRG(uint addr) -> uint8;$/;"	m	struct:Cartridge
uint8	higan/fc/cpu/cpu.hpp	/^  auto readIO(uint16 addr) -> uint8;$/;"	m	struct:CPU
uint8	higan/fc/cpu/cpu.hpp	/^  auto readRAM(uint11 addr) -> uint8;$/;"	m	struct:CPU
uint8	higan/fc/memory/memory.hpp	/^  auto read(uint16 addr) -> uint8;$/;"	m	struct:Bus
uint8	higan/fc/ppu/ppu.hpp	/^  auto loadCHR(uint16 addr) -> uint8;$/;"	m	struct:PPU
uint8	higan/fc/ppu/ppu.hpp	/^  auto readCGRAM(uint5 addr) -> uint8;$/;"	m	struct:PPU
uint8	higan/fc/ppu/ppu.hpp	/^  auto readCIRAM(uint11 addr) -> uint8;$/;"	m	struct:PPU
uint8	higan/fc/ppu/ppu.hpp	/^  auto readIO(uint16 addr) -> uint8;$/;"	m	struct:PPU
uint8	higan/gb/apu/apu.hpp	/^    auto read(uint16 addr) -> uint8;$/;"	m	struct:APU::Noise
uint8	higan/gb/apu/apu.hpp	/^    auto read(uint16 addr) -> uint8;$/;"	m	struct:APU::Sequencer
uint8	higan/gb/apu/apu.hpp	/^    auto read(uint16 addr) -> uint8;$/;"	m	struct:APU::Square1
uint8	higan/gb/apu/apu.hpp	/^    auto read(uint16 addr) -> uint8;$/;"	m	struct:APU::Square2
uint8	higan/gb/apu/apu.hpp	/^    auto read(uint16 addr) -> uint8;$/;"	m	struct:APU::Wave
uint8	higan/gb/apu/apu.hpp	/^  auto readIO(uint16 addr) -> uint8;$/;"	m	struct:APU
uint8	higan/gb/cartridge/cartridge.hpp	/^    auto read(uint address) const -> uint8;$/;"	m	struct:Cartridge::Memory
uint8	higan/gb/cartridge/cartridge.hpp	/^    virtual auto read(uint16 address) -> uint8 = 0;$/;"	m	struct:Cartridge::Mapper
uint8	higan/gb/cartridge/cartridge.hpp	/^  auto readIO(uint16 address) -> uint8;$/;"	m	struct:Cartridge
uint8	higan/gb/cartridge/huc1/huc1.hpp	/^  auto read(uint16 address) -> uint8;$/;"	m	struct:HuC1
uint8	higan/gb/cartridge/huc3/huc3.hpp	/^  auto read(uint16 address) -> uint8;$/;"	m	struct:HuC3
uint8	higan/gb/cartridge/mbc0/mbc0.hpp	/^  auto read(uint16 address) -> uint8;$/;"	m	struct:MBC0
uint8	higan/gb/cartridge/mbc1/mbc1.hpp	/^  auto read(uint16 address) -> uint8;$/;"	m	struct:MBC1
uint8	higan/gb/cartridge/mbc1m/mbc1m.hpp	/^  auto read(uint16 address) -> uint8;$/;"	m	struct:MBC1M
uint8	higan/gb/cartridge/mbc2/mbc2.hpp	/^  auto read(uint16 address) -> uint8;$/;"	m	struct:MBC2
uint8	higan/gb/cartridge/mbc3/mbc3.hpp	/^  auto read(uint16 address) -> uint8;$/;"	m	struct:MBC3
uint8	higan/gb/cartridge/mbc5/mbc5.hpp	/^  auto read(uint16 address) -> uint8;$/;"	m	struct:MBC5
uint8	higan/gb/cartridge/mbc6/mbc6.hpp	/^  auto read(uint16 address) -> uint8;$/;"	m	struct:MBC6
uint8	higan/gb/cartridge/mbc7/mbc7.hpp	/^    auto readIO() -> uint8;$/;"	m	struct:MBC7::EEPROM
uint8	higan/gb/cartridge/mmm01/mmm01.hpp	/^  auto read(uint16 address) -> uint8;$/;"	m	struct:MMM01
uint8	higan/gb/cartridge/tama/tama.hpp	/^  auto read(uint16 address) -> uint8;$/;"	m	struct:TAMA
uint8	higan/gb/cpu/cpu.hpp	/^  auto readDMA(uint16 addr) -> uint8;$/;"	m	struct:CPU
uint8	higan/gb/cpu/cpu.hpp	/^  auto readIO(uint16 addr) -> uint8;$/;"	m	struct:CPU
uint8	higan/gb/memory/memory.hpp	/^  auto operator[](uint addr) -> uint8&;$/;"	m	struct:Memory
uint8	higan/gb/memory/memory.hpp	/^  auto read(uint16 addr) -> uint8;$/;"	m	struct:Bus
uint8	higan/gb/memory/memory.hpp	/^  virtual auto readIO(uint16 addr) -> uint8 = 0;$/;"	m	struct:MMIO
uint8	higan/gb/ppu/ppu.hpp	/^  auto readIO(uint16 addr) -> uint8;$/;"	m	struct:PPU
uint8	higan/gba/apu/apu.hpp	/^    auto read(uint addr) const -> uint8;$/;"	m	struct:APU::Noise
uint8	higan/gba/apu/apu.hpp	/^    auto read(uint addr) const -> uint8;$/;"	m	struct:APU::Sequencer
uint8	higan/gba/apu/apu.hpp	/^    auto read(uint addr) const -> uint8;$/;"	m	struct:APU::Square1
uint8	higan/gba/apu/apu.hpp	/^    auto read(uint addr) const -> uint8;$/;"	m	struct:APU::Square2
uint8	higan/gba/apu/apu.hpp	/^    auto read(uint addr) const -> uint8;$/;"	m	struct:APU::Wave
uint8	higan/gba/apu/apu.hpp	/^    auto readram(uint addr) const -> uint8;$/;"	m	struct:APU::Wave
uint8	higan/gba/apu/apu.hpp	/^  auto readIO(uint32 addr) -> uint8;$/;"	m	struct:APU
uint8	higan/gba/cartridge/memory.hpp	/^  auto read(uint16 addr) -> uint8;$/;"	m	struct:FLASH
uint8	higan/gba/memory/memory.hpp	/^  virtual auto readIO(uint32 addr) -> uint8 = 0;$/;"	m	struct:IO
uint8	higan/gba/ppu/ppu.hpp	/^  auto readIO(uint32 addr) -> uint8;$/;"	m	struct:PPU
uint8	higan/gba/ppu/ppu.hpp	/^  auto readObjectVRAM(uint addr) const -> uint8;$/;"	m	struct:PPU
uint8	higan/md/controller/controller.hpp	/^  auto readControl() -> uint8;$/;"	m	struct:ControllerPort
uint8	higan/md/vdp/vdp.hpp	/^    auto readByte(uint16 address) const -> uint8;$/;"	m	struct:VDP::VRAM
uint8	higan/md/ym2612/ym2612.hpp	/^  auto readStatus() -> uint8;$/;"	m	struct:YM2612
uint8	higan/ms/cartridge/cartridge.hpp	/^    auto read(uint addr) -> uint8;$/;"	m	struct:Cartridge::Memory
uint8	higan/ms/vdp/vdp.hpp	/^  auto data() -> uint8;$/;"	m	struct:VDP
uint8	higan/ms/vdp/vdp.hpp	/^  auto hcounter() -> uint8;$/;"	m	struct:VDP
uint8	higan/ms/vdp/vdp.hpp	/^  auto status() -> uint8;$/;"	m	struct:VDP
uint8	higan/ms/vdp/vdp.hpp	/^  auto vcounter() -> uint8;$/;"	m	struct:VDP
uint8	higan/pce/cartridge/cartridge.hpp	/^  auto read(uint20 addr) -> uint8;$/;"	m	struct:Cartridge
uint8	higan/pce/cpu/cpu.hpp	/^  auto read_(uint8 bank, uint13 addr) -> uint8;$/;"	m	struct:CPU
uint8	higan/pce/vce/vce.hpp	/^  auto read(uint3 addr) -> uint8;$/;"	m	struct:VCE
uint8	higan/pce/vdc/vdc.hpp	/^  auto read(uint2 addr) -> uint8;$/;"	m	struct:VDC
uint8	higan/pce/vpc/vpc.hpp	/^  auto read(uint5 addr) -> uint8;$/;"	m	struct:VPC
uint8	higan/processor/gsu/gsu.hpp	/^  virtual auto color(uint8 source) -> uint8 = 0;$/;"	m	struct:Processor::GSU
uint8	higan/processor/gsu/gsu.hpp	/^  virtual auto pipe() -> uint8 = 0;$/;"	m	struct:Processor::GSU
uint8	higan/processor/gsu/gsu.hpp	/^  virtual auto read(uint24 addr, uint8 data = 0x00) -> uint8 = 0;$/;"	m	struct:Processor::GSU
uint8	higan/processor/gsu/gsu.hpp	/^  virtual auto readRAMBuffer(uint16 addr) -> uint8 = 0;$/;"	m	struct:Processor::GSU
uint8	higan/processor/gsu/gsu.hpp	/^  virtual auto readROMBuffer() -> uint8 = 0;$/;"	m	struct:Processor::GSU
uint8	higan/processor/gsu/gsu.hpp	/^  virtual auto rpix(uint8 x, uint8 y) -> uint8 = 0;$/;"	m	struct:Processor::GSU
uint8	higan/processor/hg51b/hg51b.hpp	/^  virtual auto read(uint24 address) -> uint8 = 0;$/;"	m	struct:Processor::HG51B
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmADC(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmAND(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmASL(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmBIT(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmCMP(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmCPX(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmCPY(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmDEC(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmEOR(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmINC(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmLD (uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmLSR(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmORA(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmROL(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmROR(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmSBC(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmTRB(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto algorithmTSB(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto opcode() -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto operand() -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  auto pull() -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  inline auto load16(uint16) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  inline auto load8(uint8) -> uint8;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/huc6280/huc6280.hpp	/^  virtual auto read(uint8 bank, uint13 addr) -> uint8 = 0;$/;"	m	struct:Processor::HuC6280
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto ADD(uint8, uint8, bool = 0) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto AND(uint8, uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto DEC(uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto INC(uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto OR(uint8, uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto RL(uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto RLC(uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto RR(uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto RRC(uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto SLA(uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto SRA(uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto SRL(uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto SUB(uint8, uint8, bool = 0) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto SWAP(uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto XOR(uint8, uint8) -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  auto operand() -> uint8;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/lr35902/lr35902.hpp	/^  virtual auto read(uint16 address) -> uint8 = 0;$/;"	m	struct:Processor::LR35902
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmADC(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmAND(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmASL(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmBIT(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmCMP(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmCPX(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmCPY(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmDEC(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmEOR(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmINC(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmLD (uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmLSR(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmORA(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmROL(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmROR(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto algorithmSBC(uint8) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto load(uint8 addr) -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto mdr() const -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto opcode() -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto operand() -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  auto pull() -> uint8;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/mos6502/mos6502.hpp	/^  virtual auto read(uint16 addr) -> uint8 = 0;$/;"	m	struct:Processor::MOS6502
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmADC(uint8, uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmAND(uint8, uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmASL(uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmCMP(uint8, uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmDEC(uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmEOR(uint8, uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmINC(uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmLD (uint8, uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmLSR(uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmOR (uint8, uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmROL(uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmROR(uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  auto algorithmSBC(uint8, uint8) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  inline auto fetch() -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  inline auto load(uint8 address) -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  inline auto pull() -> uint8;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/spc700/spc700.hpp	/^  virtual auto read(uint16 address) -> uint8 = 0;$/;"	m	struct:Processor::SPC700
uint8	higan/processor/upd96050/upd96050.hpp	/^  auto readDP(uint12 addr) -> uint8;$/;"	m	struct:Processor::uPD96050
uint8	higan/processor/upd96050/upd96050.hpp	/^  auto readDR() -> uint8;$/;"	m	struct:Processor::uPD96050
uint8	higan/processor/upd96050/upd96050.hpp	/^  auto readSR() -> uint8;$/;"	m	struct:Processor::uPD96050
uint8	higan/processor/v30mz/v30mz.hpp	/^  auto repeat() -> uint8;$/;"	m	namespace:Processor
uint8	higan/processor/v30mz/v30mz.hpp	/^  virtual auto in(uint16 port) -> uint8 = 0;$/;"	m	namespace:Processor
uint8	higan/processor/v30mz/v30mz.hpp	/^  virtual auto read(uint20 addr) -> uint8 = 0;$/;"	m	namespace:Processor
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmADC8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmAND8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmASL8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmBIT8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmCMP8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmCPX8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmCPY8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmDEC8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmEOR8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmINC8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmLDA8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmLDX8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmLDY8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmLSR8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmORA8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmROL8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmROR8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmSBC8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmTRB8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto algorithmTSB8(uint8) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  auto dreadb(uint24 addr) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  inline auto fetch() -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  inline auto pull() -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  inline auto pullN() -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  inline auto readBank(uint addr) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  inline auto readDirect(uint addr) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  inline auto readDirectN(uint addr) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  inline auto readStack(uint addr) -> uint8;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/wdc65816/wdc65816.hpp	/^  virtual auto read(uint24 addr) -> uint8 = 0;$/;"	m	struct:Processor::WDC65816
uint8	higan/processor/z80/z80.hpp	/^    virtual auto in(uint8 addr) -> uint8 = 0;$/;"	m	struct:Processor::Z80::Bus
uint8	higan/processor/z80/z80.hpp	/^    virtual auto read(uint16 addr) -> uint8 = 0;$/;"	m	struct:Processor::Z80::Bus
uint8	higan/processor/z80/z80.hpp	/^  auto ADD(uint8, uint8, bool = false) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto AND(uint8, uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto BIT(uint3, uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto DEC(uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto INC(uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto OR (uint8, uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto RES(uint3, uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto RL (uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto RLC(uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto RR (uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto RRC(uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto SET(uint3, uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto SLA(uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto SLL(uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto SRA(uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto SRL(uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto SUB(uint8, uint8, bool = false) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto XOR(uint8, uint8) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto in(uint8 addr) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto opcode() -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto operand() -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/processor/z80/z80.hpp	/^  auto read(uint16 addr) -> uint8;$/;"	m	struct:Processor::Z80
uint8	higan/sfc/coprocessor/armdsp/armdsp.hpp	/^  auto read(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:ArmDSP
uint8	higan/sfc/coprocessor/dip/dip.hpp	/^  auto read(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:DIP
uint8	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  auto read(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:EpsonRTC
uint8	higan/sfc/coprocessor/event/event.hpp	/^  auto mcuRead(uint24 addr, uint8) -> uint8;$/;"	m	struct:Event
uint8	higan/sfc/coprocessor/event/event.hpp	/^  auto read(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:Event
uint8	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto readDRAM(uint24 address, uint8 data = 0) -> uint8;$/;"	m	struct:HitachiDSP
uint8	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto readIO(uint24 address, uint8 data = 0) -> uint8;$/;"	m	struct:HitachiDSP
uint8	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto readRAM(uint24 address, uint8 data = 0) -> uint8;$/;"	m	struct:HitachiDSP
uint8	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto readROM(uint24 address, uint8 data = 0) -> uint8;$/;"	m	struct:HitachiDSP
uint8	higan/sfc/coprocessor/icd/icd.hpp	/^  auto readIO(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:ICD
uint8	higan/sfc/coprocessor/mcc/mcc.hpp	/^  auto bsAccess(bool mode, uint24 address, uint8 data) -> uint8;$/;"	m	struct:MCC
uint8	higan/sfc/coprocessor/mcc/mcc.hpp	/^  auto exAccess(bool mode, uint24 address, uint8 data) -> uint8;$/;"	m	struct:MCC
uint8	higan/sfc/coprocessor/mcc/mcc.hpp	/^  auto mcuAccess(bool mode, uint24 address, uint8 data) -> uint8;$/;"	m	struct:MCC
uint8	higan/sfc/coprocessor/mcc/mcc.hpp	/^  auto mcuRead(uint24 address, uint8 data) -> uint8;$/;"	m	struct:MCC
uint8	higan/sfc/coprocessor/mcc/mcc.hpp	/^  auto psramAccess(bool mode, uint24 address, uint8 data) -> uint8;$/;"	m	struct:MCC
uint8	higan/sfc/coprocessor/mcc/mcc.hpp	/^  auto read(uint24 address, uint8 data) -> uint8;$/;"	m	struct:MCC
uint8	higan/sfc/coprocessor/mcc/mcc.hpp	/^  auto romAccess(bool mode, uint24 address, uint8 data) -> uint8;$/;"	m	struct:MCC
uint8	higan/sfc/coprocessor/msu1/msu1.hpp	/^  auto readIO(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:MSU1
uint8	higan/sfc/coprocessor/necdsp/necdsp.hpp	/^  auto read(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:NECDSP
uint8	higan/sfc/coprocessor/necdsp/necdsp.hpp	/^  auto readRAM(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:NECDSP
uint8	higan/sfc/coprocessor/obc1/obc1.hpp	/^  auto ramRead(uint addr) -> uint8;$/;"	m	struct:OBC1
uint8	higan/sfc/coprocessor/obc1/obc1.hpp	/^  auto read(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:OBC1
uint8	higan/sfc/coprocessor/sa1/sa1.hpp	/^    auto readBitmap(uint20 address, uint8 data = 0) -> uint8;$/;"	m	struct:SA1::BWRAM
uint8	higan/sfc/coprocessor/sa1/sa1.hpp	/^    auto readCPU(uint24 address, uint8 data = 0) -> uint8;$/;"	m	struct:SA1::BWRAM
uint8	higan/sfc/coprocessor/sa1/sa1.hpp	/^    auto readCPU(uint24 address, uint8 data = 0) -> uint8;$/;"	m	struct:SA1::ROM
uint8	higan/sfc/coprocessor/sa1/sa1.hpp	/^    auto readCPU(uint24 address, uint8 data) -> uint8;$/;"	m	struct:SA1::IRAM
uint8	higan/sfc/coprocessor/sa1/sa1.hpp	/^    auto readLinear(uint24 address, uint8 data = 0) -> uint8;$/;"	m	struct:SA1::BWRAM
uint8	higan/sfc/coprocessor/sa1/sa1.hpp	/^    auto readSA1(uint24 address, uint8 data = 0) -> uint8;$/;"	m	struct:SA1::BWRAM
uint8	higan/sfc/coprocessor/sa1/sa1.hpp	/^    auto readSA1(uint24 address, uint8 data = 0) -> uint8;$/;"	m	struct:SA1::IRAM
uint8	higan/sfc/coprocessor/sa1/sa1.hpp	/^    auto readSA1(uint24 address, uint8 data = 0) -> uint8;$/;"	m	struct:SA1::ROM
uint8	higan/sfc/coprocessor/sa1/sa1.hpp	/^  auto dmaCC1Read(uint addr) -> uint8;$/;"	m	struct:SA1
uint8	higan/sfc/coprocessor/sa1/sa1.hpp	/^  auto readIOCPU(uint24 address, uint8 data) -> uint8;$/;"	m	struct:SA1
uint8	higan/sfc/coprocessor/sa1/sa1.hpp	/^  auto readIOSA1(uint24 address, uint8 data) -> uint8;$/;"	m	struct:SA1
uint8	higan/sfc/coprocessor/sa1/sa1.hpp	/^  auto readVBR(uint24 address, uint8 data = 0) -> uint8;$/;"	m	struct:SA1
uint8	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    auto decompress() -> uint8;$/;"	m	struct:Decompressor::OL
uint8	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    auto getBit() -> uint8;$/;"	m	struct:Decompressor::CM
uint8	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    auto getBit(bool& endOfRun) -> uint8;$/;"	m	struct:Decompressor::BG
uint8	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    auto getBit(uint8 context) -> uint8;$/;"	m	struct:Decompressor::PEM
uint8	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^    auto getCodeWord(uint8 codeLength) -> uint8;$/;"	m	struct:Decompressor::IM
uint8	higan/sfc/coprocessor/sdd1/decompressor.hpp	/^  auto read() -> uint8;$/;"	m	struct:Decompressor
uint8	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  auto dmaRead(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:SDD1
uint8	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  auto ioRead(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:SDD1
uint8	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  auto mcuRead(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:SDD1
uint8	higan/sfc/coprocessor/sdd1/sdd1.hpp	/^  auto mmcRead(uint24 addr) -> uint8;$/;"	m	struct:SDD1
uint8	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  auto read(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:SharpRTC
uint8	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  auto dataromRead(uint addr) -> uint8;$/;"	m	struct:SPC7110
uint8	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  auto dcuRead() -> uint8;$/;"	m	struct:SPC7110
uint8	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  auto mcuramRead(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:SPC7110
uint8	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  auto mcuromRead(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:SPC7110
uint8	higan/sfc/coprocessor/spc7110/spc7110.hpp	/^  auto read(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:SPC7110
uint8	higan/sfc/coprocessor/superfx/superfx.hpp	/^  alwaysinline auto peekpipe() -> uint8;$/;"	m	struct:SuperFX
uint8	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto readCache(uint16 addr) -> uint8;$/;"	m	struct:SuperFX
uint8	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto readIO(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:SuperFX
uint8	higan/sfc/coprocessor/superfx/superfx.hpp	/^  auto readOpcode(uint16 addr) -> uint8;$/;"	m	struct:SuperFX
uint8	higan/sfc/cpu/cpu.hpp	/^    inline auto readA(uint24 address) -> uint8;$/;"	m	struct:CPU::Channel
uint8	higan/sfc/cpu/cpu.hpp	/^    inline auto readB(uint8 address, bool valid) -> uint8;$/;"	m	struct:CPU::Channel
uint8	higan/sfc/cpu/cpu.hpp	/^  auto readAPU(uint24 address, uint8 data) -> uint8;$/;"	m	struct:CPU
uint8	higan/sfc/cpu/cpu.hpp	/^  auto readCPU(uint24 address, uint8 data) -> uint8;$/;"	m	struct:CPU
uint8	higan/sfc/cpu/cpu.hpp	/^  auto readDMA(uint24 address, uint8 data) -> uint8;$/;"	m	struct:CPU
uint8	higan/sfc/cpu/cpu.hpp	/^  auto readRAM(uint24 address, uint8 data) -> uint8;$/;"	m	struct:CPU
uint8	higan/sfc/dsp/dsp.hpp	/^  auto read(uint8 addr) -> uint8;$/;"	m	struct:DSP
uint8	higan/sfc/expansion/21fx/21fx.hpp	/^  auto read() -> uint8;$/;"	m	struct:S21FX
uint8	higan/sfc/expansion/21fx/21fx.hpp	/^  auto read(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:S21FX
uint8	higan/sfc/expansion/satellaview/satellaview.hpp	/^  auto read(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:Satellaview
uint8	higan/sfc/memory/memory.hpp	/^  alwaysinline auto read(uint24 address, uint8 data) -> uint8;$/;"	m	struct:Bus
uint8	higan/sfc/memory/memory.hpp	/^  virtual auto data() -> uint8* = 0;$/;"	m	struct:Memory
uint8	higan/sfc/memory/memory.hpp	/^  virtual auto read(uint24 address, uint8 data = 0) -> uint8 = 0;$/;"	m	struct:Memory
uint8	higan/sfc/ppu/object.hpp	/^  auto read(uint10 address) -> uint8;$/;"	m	struct:OAM
uint8	higan/sfc/ppu/ppu.hpp	/^  alwaysinline auto readCGRAM(bool byte, uint8 addr) -> uint8;$/;"	m	struct:PPU
uint8	higan/sfc/ppu/ppu.hpp	/^  alwaysinline auto readOAM(uint10 addr) -> uint8;$/;"	m	struct:PPU
uint8	higan/sfc/ppu/ppu.hpp	/^  auto readIO(uint24 addr, uint8 data) -> uint8;$/;"	m	struct:PPU
uint8	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      auto operator()() -> uint8;$/;"	m	struct:BSMemory::Block::Status
uint8	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      auto operator()() -> uint8;$/;"	m	struct:BSMemory::Compatible::Status
uint8	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      auto operator()() -> uint8;$/;"	m	struct:BSMemory::Global::Status
uint8	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    auto read(uint24 address) -> uint8;$/;"	m	struct:BSMemory::Block
uint8	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    auto read(uint8 address) -> uint8;$/;"	m	struct:BSMemory::Page
uint8	higan/sfc/smp/smp.hpp	/^  auto portRead(uint2 port) const -> uint8;$/;"	m	struct:SMP
uint8	higan/sfc/smp/smp.hpp	/^  inline auto readIO(uint16 address) -> uint8;$/;"	m	struct:SMP
uint8	higan/sfc/smp/smp.hpp	/^  inline auto readRAM(uint16 address) -> uint8;$/;"	m	struct:SMP
uint8	higan/ws/apu/apu.hpp	/^  auto portRead(uint16 addr) -> uint8;$/;"	m	struct:APU
uint8	higan/ws/cartridge/cartridge.hpp	/^  auto ramRead(uint20 addr) -> uint8;$/;"	m	struct:Cartridge
uint8	higan/ws/cartridge/cartridge.hpp	/^  auto romRead(uint20 addr) -> uint8;$/;"	m	struct:Cartridge
uint8	higan/ws/cartridge/cartridge.hpp	/^  auto rtcRead() -> uint8;$/;"	m	struct:Cartridge
uint8	higan/ws/cartridge/cartridge.hpp	/^  auto rtcStatus() -> uint8;$/;"	m	struct:Cartridge
uint8	higan/ws/memory/memory.hpp	/^  auto portRead(uint16 addr) -> uint8;$/;"	m	struct:Bus
uint8	higan/ws/memory/memory.hpp	/^  auto read(uint20 addr) -> uint8;$/;"	m	struct:Bus
uint8	higan/ws/memory/memory.hpp	/^  virtual auto portRead(uint16 addr) -> uint8 = 0;$/;"	m	struct:IO
uint8_t	hiro/core/core.hpp	/^  auto alpha() const -> uint8_t;$/;"	m	struct:hiro::Color
uint8_t	hiro/core/core.hpp	/^  auto blue() const -> uint8_t;$/;"	m	struct:hiro::Color
uint8_t	hiro/core/core.hpp	/^  auto doRead(uint offset) const -> uint8_t;$/;"	m	struct:hiro::mHexEdit
uint8_t	hiro/core/core.hpp	/^  auto green() const -> uint8_t;$/;"	m	struct:hiro::Color
uint8_t	hiro/core/core.hpp	/^  auto red() const -> uint8_t;$/;"	m	struct:hiro::Color
uint8_t	nall/emulation/21fx.hpp	/^  auto read() -> uint8_t;$/;"	m	struct:FX
uint8_t	nall/emulation/21fx.hpp	/^  auto read(uint offset) -> uint8_t;$/;"	m	struct:FX
uint8_t	nall/image.hpp	/^  inline auto allocate(uint width, uint height, uint stride) -> uint8_t*;$/;"	m	struct:nall::image
uint8_t	nall/image.hpp	/^  template<uint Size> inline image(const uint8_t (&Name)[Size]);$/;"	m	struct:nall::image
uint8_t	nall/stdint.hpp	/^  typedef unsigned char uint8_t;$/;"	t
uint8_t	nall/varint.hpp	/^  virtual auto read() -> uint8_t = 0;$/;"	m	struct:nall::varint
uint8_t	nall/vfs/vfs.hpp	/^  virtual auto read() -> uint8_t = 0;$/;"	m	struct:nall::vfs::file
uint9	higan/md/vdp/vdp.hpp	/^    auto read(uint6 address) const -> uint9;$/;"	m	struct:VDP::CRAM
uint9	higan/pce/vce/vce.hpp	/^    auto read(uint9 addr) -> uint9;$/;"	m	struct:VCE::CRAM
uint9	higan/pce/vpc/vpc.hpp	/^  auto bus(uint hclock) -> uint9;$/;"	m	struct:VPC
uintmax	nall/string.hpp	/^  inline auto hex() const -> uintmax;$/;"	m	struct:nall::string
uintmax	nall/string.hpp	/^  inline auto natural() const -> uintmax;$/;"	m	struct:nall::string
uintmax	nall/vfs/vfs.hpp	/^  virtual auto offset() const -> uintmax = 0;$/;"	m	struct:nall::vfs::file
uintmax	nall/vfs/vfs.hpp	/^  virtual auto size() const -> uintmax = 0;$/;"	m	struct:nall::vfs::file
uintmax_t	nall/stdint.hpp	/^  typedef uint64_t uintmax_t;$/;"	t
uintptr	hiro/gtk/widget/viewport.hpp	/^  auto handle() const -> uintptr;$/;"	m	struct:hiro::pViewport
uintptr	hiro/gtk/window.hpp	/^  auto handle() const -> uintptr;$/;"	m	struct:hiro::pWindow
uintptr_t	hiro/cocoa/widget/viewport.hpp	/^  auto handle() const -> uintptr_t;$/;"	m	struct:hiro::pViewport
uintptr_t	hiro/core/core.hpp	/^  auto handle() const -> uintptr_t;$/;"	m	struct:hiro::mViewport
uintptr_t	hiro/qt/widget/viewport.hpp	/^  auto handle() const -> uintptr_t;$/;"	m	struct:hiro::pViewport
uintptr_t	hiro/windows/widget/viewport.hpp	/^  auto handle() const -> uintptr_t;$/;"	m	struct:hiro::pViewport
uintptr_t	nall/stdint.hpp	/^  typedef uint32_t uintptr_t;$/;"	t
uintptr_t	nall/stdint.hpp	/^  typedef uint64_t uintptr_t;$/;"	t
umap	nall/map.hpp	/^  map<U, T> umap;$/;"	m	struct:nall::bimap
uname	nall/GNUmakefile	/^  uname := $(shell uname)$/;"	m
unbind	higan/processor/m68k/instruction.cpp	1264;"	d	file:
unbind	higan/processor/m68k/instruction.cpp	13;"	d	file:
und	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    } und;$/;"	m	struct:Processor	typeref:struct:Processor::UND
unique	nall/GNUmakefile	/^unique = \\$/;"	m
unique_pointer	nall/unique-pointer.hpp	/^  auto operator=(const unique_pointer&) -> unique_pointer& = delete;$/;"	m	struct:nall::unique_pointer
unique_pointer	nall/unique-pointer.hpp	/^  unique_pointer(T* pointer = nullptr, const function<void (T*)>& deleter = {}) : pointer(pointer), deleter(deleter) {}$/;"	f	struct:nall::unique_pointer
unique_pointer	nall/unique-pointer.hpp	/^struct unique_pointer {$/;"	s	namespace:nall
unique_pointer	nall/unique-pointer.hpp	/^struct unique_pointer<T[]> {$/;"	s	namespace:nall
unknown	higan/sfc/cpu/cpu.hpp	/^    uint8 unknown = 0xff;$/;"	m	struct:CPU::Channel
unknown	higan/ws/apu/apu.hpp	/^      uint1 unknown;$/;"	m	struct:APU::DMA::Registers
unknown	higan/ws/apu/apu.hpp	/^      uint4 unknown;$/;"	m	struct:APU::Channel5::Registers
unknown	higan/ws/eeprom/eeprom.hpp	/^    bool unknown;$/;"	m	struct:Registers
unknown	higan/ws/system/system.hpp	/^    uint5 unknown;$/;"	m	struct:System::Registers
unknown1	higan/gba/cpu/cpu.hpp	/^    uint3 unknown1;$/;"	m	struct:Memory
unknown2	higan/gba/cpu/cpu.hpp	/^    uint4 unknown2;$/;"	m	struct:Memory
unlockhi	higan/gba/cartridge/memory.hpp	/^  bool unlockhi;$/;"	m	struct:FLASH
unlocklo	higan/gba/cartridge/memory.hpp	/^  bool unlocklo;$/;"	m	struct:FLASH
unmapped	higan/gb/memory/memory.cpp	/^Unmapped unmapped;$/;"	m	namespace:GameBoy	file:
unmappedIO	higan/gba/memory/memory.cpp	/^static UnmappedIO unmappedIO;$/;"	m	namespace:GameBoyAdvance	file:
unreachable	nall/platform.hpp	117;"	d
unused	higan/gba/ppu/ppu.hpp	/^      uint2 unused;$/;"	m	struct:PPU::Background::IO
unused	higan/sfc/cpu/cpu.hpp	/^    uint1 unused = 1;$/;"	m	struct:CPU::Channel
up	higan/fc/controller/gamepad/gamepad.hpp	/^  bool up = 0;$/;"	v
up	higan/sfc/controller/gamepad/gamepad.hpp	/^  boolean up, down, left, right;$/;"	v
up	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    boolean up, down, left, right;$/;"	m	struct:Gamepad
update	hiro/cocoa/widget/hex-edit.cpp	/^void pHexEdit::update() {$/;"	f	class:hiro::pHexEdit
update	hiro/core/shared.hpp	/^  auto update() { return self().update(), *this; }$/;"	f	struct:Canvas
update	hiro/core/shared.hpp	/^  auto update() { return self().update(), *this; }$/;"	f	struct:HexEdit
update	ruby/video/video.hpp	/^  function<void (uint, uint)> update;$/;"	m	struct:Video
updateKeyboard	ruby/input/shared/rawinput.cpp	/^  function<void (RAWINPUT*)> updateKeyboard;$/;"	m	struct:RawInput	file:
updateMouse	ruby/input/shared/rawinput.cpp	/^  function<void (RAWINPUT*)> updateMouse;$/;"	m	struct:RawInput	file:
useSpeedAsVolume	higan/fc/apu/apu.hpp	/^    bool useSpeedAsVolume;$/;"	m	struct:APU::Envelope
usf0	higan/processor/upd96050/upd96050.hpp	/^    boolean usf0;  \/\/user flag 0$/;"	m	struct:Processor::uPD96050::Status
usf1	higan/processor/upd96050/upd96050.hpp	/^    boolean usf1;  \/\/user flag 1$/;"	m	struct:Processor::uPD96050::Status
usleep	ruby/ruby.cpp	7;"	d	file:
utf16_t	nall/windows/utf8.hpp	/^    auto operator=(const utf16_t&) -> utf16_t& = delete;$/;"	m	struct:nall::utf16_t
utf16_t	nall/windows/utf8.hpp	/^    utf16_t(const char* s = "") { operator=(s); }$/;"	f	struct:nall::utf16_t
utf16_t	nall/windows/utf8.hpp	/^  struct utf16_t {$/;"	s	namespace:nall
utf8_t	nall/windows/utf8.hpp	/^    auto operator=(const utf8_t&) -> utf8_t& = delete;$/;"	m	struct:nall::utf8_t
utf8_t	nall/windows/utf8.hpp	/^    utf8_t(const wchar_t* s = L"") { operator=(s); }$/;"	f	struct:nall::utf8_t
utf8_t	nall/windows/utf8.hpp	/^  struct utf8_t {$/;"	s	namespace:nall
v	higan/fc/ppu/ppu.hpp	/^    } v, t;$/;"	m	struct:PPU::IO	typeref:union:PPU::IO::Union
v	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    boolean v;  \/\/overflow$/;"	m	namespace:Processor
v	higan/processor/hg51b/hg51b.hpp	/^    boolean v;  \/\/overflow$/;"	m	struct:Processor::HG51B::Registers
v	higan/processor/huc6280/huc6280.hpp	/^    bool v;  \/\/overflow$/;"	m	struct:Processor::HuC6280::Flags
v	higan/processor/mos6502/mos6502.hpp	/^    bool v;  \/\/overflow$/;"	m	struct:Processor::MOS6502::Flags
v	higan/processor/spc700/spc700.hpp	/^    bool v;  \/\/overflow$/;"	m	struct:Processor::SPC700::Flags
v	higan/processor/v30mz/v30mz.hpp	/^        BooleanBitField<uint16_t, 11> v;  \/\/overflow$/;"	m	union:Processor::Registers::Flags::__anon26
v	higan/processor/wdc65816/wdc65816.hpp	/^    bool v;  \/\/overflow$/;"	m	struct:Processor::WDC65816::Flags
v	ruby/video/direct3d.cpp	/^    float u, v;          \/\/texture coordinates$/;"	m	struct:VideoDirect3D::Vertex	file:
va	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint32 va;$/;"	m	struct:SA1::MMIO
va_copy	nall/platform.hpp	59;"	d
valid	higan/emulator/platform.hpp	/^    bool valid = false;$/;"	m	struct:Emulator::Platform::Load
valid	higan/processor/gsu/registers.hpp	/^  bool valid[32];$/;"	m	struct:Cache
valid	higan/sfc/ppu/object.hpp	/^    bool   valid;$/;"	m	struct:Object::Tile
valid	higan/sfc/ppu/object.hpp	/^    bool  valid;$/;"	m	struct:Object::Item
value	higan/fc/ppu/ppu.hpp	/^      uint value = 0;$/;"	m	union:PPU::IO::Union
value	higan/gb/cartridge/mbc7/mbc7.hpp	/^      uint32 value;$/;"	m	struct:MBC7::EEPROM::ShiftRegister
value	higan/md/ym2612/ym2612.hpp	/^        uint10 value = 0x3ff;$/;"	m	struct:Channel::Operator::Envelope
value	higan/md/ym2612/ym2612.hpp	/^        uint11 value = 0;$/;"	m	struct:Channel::Operator::Pitch
value	higan/md/ym2612/ym2612.hpp	/^        uint20 value = 0;$/;"	m	struct:Channel::Operator::Phase
value	higan/md/ym2612/ym2612.hpp	/^        uint3 value = 0;$/;"	m	struct:Channel::Operator::Octave
value	higan/pce/cpu/cpu.hpp	/^    uint7 value;$/;"	m	struct:CPU::Timer
value	higan/sfc/coprocessor/dip/dip.hpp	/^  uint8 value = 0x00;$/;"	m	struct:DIP
value	hiro/core/core.hpp	/^    string value;$/;"	m	struct:hiro::Property::State
value	nall/any.hpp	/^    T value;$/;"	m	struct:nall::any::holder
value	nall/beat/archive/container.hpp	/^    uint512_t value = 0;$/;"	m	struct:nall::Beat::Archive::Container::Signature
value	nall/database/odbc.hpp	/^      any value;$/;"	m	struct:nall::Database::ODBC::Query::Binding
value	nall/elliptic-curve/modulo25519-reference.hpp	/^  uint256_t value;$/;"	m	struct:nall::EllipticCurve::Modulo25519
value	nall/function.hpp	/^    static constexpr bool value = decltype(exists<L>(0))::value;$/;"	m	struct:nall::R::is_compatible
value	nall/http/message.hpp	/^  auto value() const { return shared->value; }$/;"	f	struct:nall::HTTP::SharedVariable
value	nall/http/message.hpp	/^  string value;$/;"	m	struct:nall::HTTP::Variable
value	nall/map.hpp	/^    U value;$/;"	m	struct:nall::map::node_t
value	nall/pointer.hpp	/^  T* value = nullptr;$/;"	m	struct:nall::pointer
value	nall/property.hpp	/^  T value;$/;"	m	struct:nall::functional_property
value	nall/property.hpp	/^  T value;$/;"	m	struct:nall::property
value	nall/serializer.hpp	/^  static const bool value = sizeof(test<T>(0)) == sizeof(char);$/;"	m	struct:nall::has_serialize
value	nall/set.hpp	/^    T value;$/;"	m	struct:nall::set::node_t
value	nall/shared-pointer.hpp	/^    static constexpr bool value = is_base_of<T, U>::value || is_base_of<U, T>::value;$/;"	m	struct:nall::shared_pointer::is_compatible
value	nall/string/transform/cml.hpp	/^    string value;$/;"	m	struct:nall::__anon38::CML::Variable
value	nall/utility.hpp	/^  T value;$/;"	m	struct:nall::base_from_member
value	nall/utility.hpp	/^  With value;$/;"	m	struct:nall::castable
value	ruby/input/joypad/udev.cpp	/^    int16_t value = 0;$/;"	m	struct:InputJoypadUdev::JoypadInput	file:
value	ruby/input/keyboard/rawinput.cpp	/^    bool value;$/;"	m	struct:InputKeyboardRawInput::Key	file:
value	ruby/video/opengl/opengl.hpp	/^    string value;$/;"	m	struct:OpenGL::Setting
values	nall/array.hpp	/^  T values[Size];$/;"	m	struct:nall::array
vao	ruby/video/opengl/opengl.hpp	/^  GLuint vao = 0;$/;"	m	struct:OpenGLSurface
variables	nall/http/message.hpp	/^  vector<SharedVariable> variables;$/;"	m	struct:nall::HTTP::Variables
variables	nall/string/transform/cml.hpp	/^  vector<Variable> variables;$/;"	m	struct:nall::__anon38::CML
varint	nall/varint.hpp	/^struct varint {$/;"	s	namespace:nall
vb	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 vb;$/;"	m	struct:SA1::MMIO
vbit	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint8 vbit;$/;"	m	struct:SA1::MMIO
vbit	higan/sfc/dsp/dsp.hpp	/^    int vbit = 0;            \/\/bitmask for voice: 0x01 for voice 0, 0x02 for voice 1, etc$/;"	m	struct:Voice
vblank	higan/gba/ppu/ppu.hpp	/^    uint1 vblank;$/;"	m	struct:PPU::IO
vblank	higan/ws/ppu/ppu.hpp	/^    uint8 vblank = 155;$/;"	m	struct:PPU::Registers
vblankIRQ	higan/md/vdp/vdp.hpp	/^    uint1 vblankIRQ;  \/\/true after VIRQ triggers; cleared at start of next frame$/;"	m	struct:VDP::IO
vbo	ruby/video/opengl/opengl.hpp	/^  GLuint vbo[3] = {0, 0, 0};$/;"	m	struct:OpenGLSurface
vce	higan/pce/vce/vce.cpp	/^VCE vce;$/;"	m	namespace:PCEngine	file:
vclk	higan/ws/ppu/ppu.hpp	/^    uint vclk = 0;$/;"	m	struct:PPU::State
vclock	higan/pce/vce/vce.hpp	/^    uint vclock = 0;$/;"	m	struct:VCE::Timing
vclock	higan/pce/vdc/vdc.hpp	/^    uint  vclock = 0;$/;"	m	struct:VDC::Timing
vcnt	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 vcnt;$/;"	m	struct:SA1::MMIO
vcoincidence	higan/gba/ppu/ppu.hpp	/^    uint1 vcoincidence;$/;"	m	struct:PPU::IO
vcompare	higan/gba/ppu/ppu.hpp	/^    uint8 vcompare;$/;"	m	struct:PPU::IO
vcounter	higan/fc/cartridge/chip/mmc5.cpp	/^  uint vcounter;$/;"	m	struct:MMC5	file:
vcounter	higan/gba/ppu/ppu.hpp	/^    uint16 vcounter;$/;"	m	struct:PPU::IO
vcounter	higan/md/vdp/vdp.hpp	/^    uint16 vcounter;$/;"	m	struct:VDP::State
vcounter	higan/ms/vdp/vdp.hpp	/^    uint vcounter = 0;  \/\/vertical counter$/;"	m	struct:VDP::IO
vcounter	higan/pce/vdc/vdc.hpp	/^    uint9  vcounter;$/;"	m	struct:VDC::Background
vcounter	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 vcounter;$/;"	m	struct:SA1::Status
vcounter	higan/sfc/ppu/counter/counter.hpp	/^    uint vcounter = 0;$/;"	m	struct:PPUcounter::__anon13
vcounter	higan/sfc/ppu/counter/counter.hpp	/^    uint vcounter[2048] = {};$/;"	m	struct:PPUcounter::__anon14
vcounter	higan/sfc/ppu/ppu.hpp	/^    uint1 vcounter;$/;"	m	struct:PPU::Latches
vcounter	higan/sfc/ppu/ppu.hpp	/^    uint16 vcounter;$/;"	m	struct:PPU::IO
vcr	higan/processor/gsu/registers.hpp	/^  uint8 vcr;        \/\/version code register$/;"	m	struct:Registers
vcr	higan/sfc/coprocessor/sa1/sa1.hpp	/^    uint16 vcr;$/;"	m	struct:SA1::MMIO
vdc	higan/pce/vdc/vdc.hpp	/^    VDC* vdc = nullptr;$/;"	m	struct:VDC::Background
vdc	higan/pce/vdc/vdc.hpp	/^    VDC* vdc = nullptr;$/;"	m	struct:VDC::DMA
vdc	higan/pce/vdc/vdc.hpp	/^    VDC* vdc = nullptr;$/;"	m	struct:VDC::Sprite
vdc0	higan/pce/vdc/vdc.cpp	/^VDC vdc0;$/;"	m	namespace:PCEngine	file:
vdc1	higan/pce/vdc/vdc.cpp	/^VDC vdc1;$/;"	m	namespace:PCEngine	file:
vdisp	higan/sfc/ppu/ppu.hpp	/^    uint vdisp;$/;"	m	struct:PPU::__anon15
vdp	higan/md/vdp/vdp.cpp	/^VDP vdp;$/;"	m	namespace:MegaDrive	file:
vdp	higan/ms/vdp/vdp.cpp	/^VDP vdp;$/;"	m	namespace:MasterSystem	file:
vdpEnable	higan/md/cpu/cpu.hpp	/^    boolean vdpEnable[2];$/;"	m	struct:CPU::IO
vector	higan/md/cartridge/cartridge.hpp	/^  auto hashes() const -> vector<string>;$/;"	m	struct:Cartridge
vector	higan/md/cartridge/cartridge.hpp	/^  auto manifests() const -> vector<string>;$/;"	m	struct:Cartridge
vector	higan/md/cartridge/cartridge.hpp	/^  auto titles() const -> vector<string>;$/;"	m	struct:Cartridge
vector	higan/processor/hg51b/hg51b.hpp	/^    uint8 vector[32];$/;"	m	struct:Processor::HG51B::IO
vector	higan/processor/wdc65816/wdc65816.hpp	/^    uint16 vector;     \/\/interrupt vector address$/;"	m	struct:Processor::WDC65816::Registers
vector	higan/sfc/cartridge/cartridge.hpp	/^  auto hashes() const -> vector<string>;$/;"	m	struct:Cartridge
vector	higan/sfc/cartridge/cartridge.hpp	/^  auto manifests() const -> vector<string>;$/;"	m	struct:Cartridge
vector	higan/sfc/cartridge/cartridge.hpp	/^  auto titles() const -> vector<string>;$/;"	m	struct:Cartridge
vector	higan/sfc/coprocessor/armdsp/armdsp.hpp	/^  auto firmware() const -> nall::vector<uint8>;$/;"	m	class:ArmDSP::nall
vector	higan/sfc/coprocessor/hitachidsp/hitachidsp.hpp	/^  auto firmware() const -> vector<uint8>;$/;"	m	struct:HitachiDSP
vector	higan/sfc/coprocessor/necdsp/necdsp.hpp	/^  auto firmware() const -> vector<uint8>;$/;"	m	struct:NECDSP
vector	higan/target-bsnes/program/program.hpp	/^  auto availableStates(string type) -> vector<State>;$/;"	m	struct:Program
vector	higan/target-bsnes/program/program.hpp	/^  auto loadFile(string location) -> vector<uint8_t>;$/;"	m	struct:Program
vector	higan/target-bsnes/program/program.hpp	/^  auto loadStateData(string filename) -> vector<uint8_t>;$/;"	m	struct:Program
vector	hiro/cocoa/keyboard.hpp	/^  static auto poll() -> vector<bool>;$/;"	m	struct:hiro::pKeyboard
vector	hiro/core/core.hpp	/^  auto actions() const -> vector<Action>;$/;"	m	struct:hiro::mMenu
vector	hiro/core/core.hpp	/^  auto actions() const -> vector<Action>;$/;"	m	struct:hiro::mPopupMenu
vector	hiro/core/core.hpp	/^  auto batched() const -> vector<IconViewItem>;$/;"	m	struct:hiro::mIconView
vector	hiro/core/core.hpp	/^  auto items() const -> vector<ComboButtonItem>;$/;"	m	struct:hiro::mComboButton
vector	hiro/core/core.hpp	/^  auto items() const -> vector<ComboEditItem>;$/;"	m	struct:hiro::mComboEdit
vector	hiro/core/core.hpp	/^  auto items() const -> vector<IconViewItem>;$/;"	m	struct:hiro::mIconView
vector	hiro/core/core.hpp	/^  auto items() const -> vector<TreeViewItem>;$/;"	m	struct:hiro::mTreeView
vector	hiro/core/core.hpp	/^  auto items() const -> vector<TreeViewItem>;$/;"	m	struct:hiro::mTreeViewItem
vector	hiro/core/core.hpp	/^  auto menus() const -> vector<Menu>;$/;"	m	struct:hiro::mMenuBar
vector	hiro/core/core.hpp	/^  static auto hotkeys() -> vector<Hotkey>;$/;"	m	struct:hiro::Keyboard
vector	hiro/core/core.hpp	/^  static auto poll() -> vector<bool>;$/;"	m	struct:hiro::Keyboard
vector	hiro/core/group.hpp	/^  auto objects() const -> vector<Object>;$/;"	m	struct:mGroup
vector	hiro/core/widget/tab-frame.hpp	/^  auto items() const -> vector<TabFrameItem>;$/;"	m	struct:mTabFrame
vector	hiro/core/widget/table-view-item.hpp	/^  auto cells() const -> vector<TableViewCell>;$/;"	m	struct:mTableViewItem
vector	hiro/core/widget/table-view.hpp	/^  auto batched() const -> vector<TableViewItem>;$/;"	m	struct:mTableView
vector	hiro/core/widget/table-view.hpp	/^  auto columns() const -> vector<TableViewColumn>;$/;"	m	struct:mTableView
vector	hiro/core/widget/table-view.hpp	/^  auto items() const -> vector<TableViewItem>;$/;"	m	struct:mTableView
vector	hiro/extension/browser-dialog.hpp	/^  auto _run() -> vector<string>;$/;"	m	struct:BrowserDialog
vector	hiro/extension/browser-dialog.hpp	/^  auto openFiles() -> vector<string>;  \/\/any existing files$/;"	m	struct:BrowserDialog
vector	hiro/extension/browser-dialog.hpp	/^  auto selected() -> vector<string>;$/;"	m	struct:BrowserDialog
vector	hiro/extension/list-view.hpp	/^  auto batched() const -> vector<ListViewItem>;$/;"	m	struct:mListView
vector	hiro/extension/list-view.hpp	/^  auto items() const -> vector<ListViewItem>;$/;"	m	struct:mListView
vector	hiro/gtk/keyboard.hpp	/^  static auto poll() -> vector<bool>;$/;"	m	struct:hiro::pKeyboard
vector	hiro/qt/keyboard.hpp	/^  static auto poll() -> vector<bool>;$/;"	m	struct:hiro::pKeyboard
vector	hiro/windows/keyboard.hpp	/^  static auto poll() -> vector<bool>;$/;"	m	struct:hiro::pKeyboard
vector	icarus/core/core.hpp	/^  auto missing() const -> vector<string>;$/;"	m	struct:Icarus
vector	nall/directory.hpp	/^  static auto ufiles(const string& pathname, const string& pattern = "*") -> vector<string>;$/;"	m	struct:nall::directory
vector	nall/directory.hpp	/^  static auto ufolders(const string& pathname, const string& pattern = "*") -> vector<string>;$/;"	m	struct:nall::directory
vector	nall/emulation/21fx.hpp	/^  auto read(uint offset, uint length) -> vector<uint8_t>;$/;"	m	struct:FX
vector	nall/hash/hash.hpp	/^  virtual auto output() const -> vector<uint8_t> = 0;$/;"	m	struct:nall::Hash::Hash
vector	nall/string.hpp	/^  inline auto iqsplit(string_view key, long limit = LONG_MAX) const -> vector<string>;$/;"	m	struct:nall::string
vector	nall/string.hpp	/^  inline auto isplit(string_view key, long limit = LONG_MAX) const -> vector<string>;$/;"	m	struct:nall::string
vector	nall/string.hpp	/^  inline auto match(string_view pattern) const -> vector<string>;$/;"	m	struct:nall::vector
vector	nall/string.hpp	/^  inline auto qsplit(string_view key, long limit = LONG_MAX) const -> vector<string>;$/;"	m	struct:nall::string
vector	nall/string.hpp	/^  inline auto split(string_view key, long limit = LONG_MAX) const -> vector<string>;$/;"	m	struct:nall::string
vector	nall/string.hpp	/^  template<typename... P> vector(P&&... p) { append(forward<P>(p)...); }$/;"	f	struct:nall::vector
vector	nall/string.hpp	/^  vector(const vector& source) { vector_base::operator=(source); }$/;"	f	struct:nall::vector
vector	nall/string.hpp	/^  vector(vector& source) { vector_base::operator=(source); }$/;"	f	struct:nall::vector
vector	nall/string.hpp	/^  vector(vector&& source) { vector_base::operator=(move(source)); }$/;"	f	struct:nall::vector
vector	nall/string.hpp	/^template<> struct vector<string> : vector_base<string> {$/;"	s	namespace:nall
vector	nall/string/markup/node.hpp	/^  inline auto _find(const string& query) const -> vector<Node>;$/;"	m	struct:nall::Markup::ManagedNode
vector	nall/vector.hpp	/^  template<typename T> struct vector : vector_base<T> {$/;"	s	namespace:nall
vector	nall/vector.hpp	137;"	d
vector	nall/vector.hpp	146;"	d
vector	nall/vector/core.hpp	/^template<typename T> vector<T>::vector(const initializer_list<T>& values) {$/;"	f	class:nall::vector
vector	nall/vector/core.hpp	/^template<typename T> vector<T>::vector(const vector<T>& source) {$/;"	f	class:nall::vector
vector	nall/vector/core.hpp	/^template<typename T> vector<T>::vector(vector<T>&& source) {$/;"	f	class:nall::vector
vector	nall/vector/specialization/uint8_t.hpp	/^template<> struct vector<uint8_t> : vector_base<uint8_t> {$/;"	s	namespace:nall
vector	ruby/audio/audio.hpp	/^  static auto hasDrivers() -> vector<string>;$/;"	m	struct:Audio
vector	ruby/input/input.hpp	/^  auto poll() -> vector<shared_pointer<nall::HID::Device>>;$/;"	m	struct:Input
vector	ruby/input/input.hpp	/^  static auto hasDrivers() -> vector<string>;$/;"	m	struct:Input
vector	ruby/video/video.hpp	/^  static auto hasDrivers() -> vector<string>;$/;"	m	struct:Video
vector_base	nall/vector.hpp	/^struct vector_base {$/;"	s	namespace:nall
vector_iterator	nall/vector/iterator.hpp	/^  vector_iterator(vector<T>& self, uint offset) : self(self), offset(offset) {}$/;"	f	struct:nall::vector_iterator
vector_iterator	nall/vector/iterator.hpp	/^struct vector_iterator {$/;"	s	namespace:nall
vector_iterator_const	nall/vector/iterator.hpp	/^  vector_iterator_const(const vector<T>& self, uint offset) : self(self), offset(offset) {}$/;"	f	struct:nall::vector_iterator_const
vector_iterator_const	nall/vector/iterator.hpp	/^struct vector_iterator_const {$/;"	s	namespace:nall
vector_iterator_reverse	nall/vector/iterator.hpp	/^  vector_iterator_reverse(vector<T>& self, uint offset) : self(self), offset(offset) {}$/;"	f	struct:nall::vector_iterator_reverse
vector_iterator_reverse	nall/vector/iterator.hpp	/^struct vector_iterator_reverse {$/;"	s	namespace:nall
vector_iterator_reverse_const	nall/vector/iterator.hpp	/^  vector_iterator_reverse_const(const vector<T>& self, uint offset) : self(self), offset(offset) {}$/;"	f	struct:nall::vector_iterator_reverse_const
vector_iterator_reverse_const	nall/vector/iterator.hpp	/^struct vector_iterator_reverse_const {$/;"	s	namespace:nall
ven	higan/sfc/coprocessor/sa1/sa1.hpp	/^    bool ven;$/;"	m	struct:SA1::MMIO
vendor	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    uint16 vendor;$/;"	m	struct:BSMemory::Chip
vendorID	ruby/input/joypad/directinput.cpp	/^    uint16_t vendorID = 0;$/;"	m	struct:InputJoypadDirectInput::Joypad	file:
vendorID	ruby/input/joypad/udev.cpp	/^    string vendorID;$/;"	m	struct:InputJoypadUdev::Joypad	file:
vendorID	ruby/input/shared/rawinput.cpp	/^    uint16_t vendorID = 0;$/;"	m	struct:RawInput::Device	file:
verified	higan/target-bsnes/program/program.hpp	/^    boolean verified;$/;"	m	struct:Program::Game
version	higan/md/cpu/cpu.hpp	/^    boolean version;  \/\/0 = Model 1; 1 = Model 2+$/;"	m	struct:CPU::IO
version	higan/sfc/cpu/cpu.hpp	/^  uint version = 2;  \/\/allowed: 1, 2$/;"	m	struct:CPU
version	higan/sfc/interface/configuration.hpp	/^      uint version = 1;$/;"	m	struct:Configuration::System::PPU1
version	higan/sfc/interface/configuration.hpp	/^      uint version = 2;$/;"	m	struct:Configuration::System::CPU
version	higan/sfc/interface/configuration.hpp	/^      uint version = 3;$/;"	m	struct:Configuration::System::PPU2
version	higan/sfc/ppu/ppu.hpp	/^    uint version;$/;"	m	struct:PPU::__anon16
vertex	ruby/video/opengl/opengl.hpp	/^  GLuint vertex = 0;$/;"	m	struct:OpenGLSurface
vertical	hiro/core/core.hpp	/^    float vertical;$/;"	m	struct:hiro::Alignment::State
verticalAlignment	hiro/core/shared.hpp	/^  auto verticalAlignment() const { return self().verticalAlignment(); }$/;"	f	struct:TableViewColumn
verticalAlignment	hiro/core/widget/table-view-column.hpp	/^    float verticalAlignment = 0.5;$/;"	m	struct:mTableViewColumn::State
verticalBlankInterruptEnable	higan/md/vdp/vdp.hpp	/^    uint1 verticalBlankInterruptEnable;$/;"	m	struct:VDP::IO
verticalDirection	higan/md/vdp/vdp.hpp	/^      uint1  verticalDirection;$/;"	m	struct:VDP::Background::IO
verticalDisplayEnd	higan/pce/vdc/vdc.hpp	/^    uint8 verticalDisplayEnd;$/;"	m	struct:VDC::Timing
verticalDisplayLength	higan/pce/vdc/vdc.hpp	/^    uint9 verticalDisplayLength;$/;"	m	struct:VDC::Timing
verticalDisplayStart	higan/pce/vdc/vdc.hpp	/^    uint8 verticalDisplayStart;$/;"	m	struct:VDC::Timing
verticalFlip	higan/md/vdp/vdp.hpp	/^    uint1  verticalFlip;$/;"	m	struct:VDP::Object
verticalOffset	higan/md/vdp/vdp.hpp	/^      uint10 verticalOffset;$/;"	m	struct:VDP::Background::IO
verticalScroll	higan/md/vdp/vdp.hpp	/^      uint10 verticalScroll;$/;"	m	struct:VDP::Background::State
verticalScrollLock	higan/ms/vdp/vdp.hpp	/^    bool verticalScrollLock = 0;$/;"	m	struct:VDP::IO
verticalScrollMode	higan/md/vdp/vdp.hpp	/^      uint1  verticalScrollMode;$/;"	m	struct:VDP::Background::IO
verticalSync	higan/md/vdp/vdp.hpp	/^    uint1 verticalSync;$/;"	m	struct:VDP::IO
verticalSyncWidth	higan/pce/vdc/vdc.hpp	/^    uint5 verticalSyncWidth;$/;"	m	struct:VDC::Timing
vflip	higan/gba/ppu/ppu.hpp	/^      uint1  vflip;$/;"	m	struct:PPU::Background::Latch
vflip	higan/gba/ppu/ppu.hpp	/^    uint1  vflip;$/;"	m	struct:PPU::Object
vflip	higan/pce/vdc/vdc.hpp	/^      bool   vflip = 0;$/;"	m	struct:VDC::Sprite::Object
vflip	higan/sfc/ppu/object.hpp	/^    uint1 vflip;$/;"	m	struct:OAM::Object
vflipMode7	higan/sfc/ppu/ppu.hpp	/^    bool vflipMode7;$/;"	m	struct:PPU::IO
vfs	nall/vfs/fs/file.hpp	/^namespace nall { namespace vfs { namespace fs {$/;"	n	namespace:nall
vfs	nall/vfs/memory/file.hpp	/^namespace nall { namespace vfs { namespace memory {$/;"	n	namespace:nall
vfs	nall/vfs/vfs.hpp	/^namespace nall { namespace vfs { namespace shared {$/;"	n	namespace:nall
vfs	nall/vfs/vfs.hpp	/^namespace nall { namespace vfs {$/;"	n	namespace:nall
vibrato	higan/md/ym2612/ym2612.hpp	/^    uint3 vibrato = 0;$/;"	m	struct:Channel
vibratos	higan/md/ym2612/constants.cpp	/^const uint8_t YM2612::vibratos[8][16] = {$/;"	m	class:YM2612	file:
vibratos	higan/md/ym2612/ym2612.hpp	/^  static const uint8_t vibratos[8][16];$/;"	v
video	higan/sfc/interface/configuration.hpp	/^  } video;$/;"	m	struct:Configuration	typeref:struct:Configuration::Video
video	higan/target-bsnes/bsnes.cpp	/^Video video;$/;"	v
video	higan/target-bsnes/settings/settings.hpp	/^  } video;$/;"	m	struct:Settings	typeref:struct:Settings::Video
video	higan/target-higan/higan.cpp	/^unique_pointer<Video> video;$/;"	v
video	higan/video/video.cpp	/^Video video;$/;"	m	namespace:Emulator	file:
videoMode	higan/md/vdp/vdp.hpp	/^    uint1 videoMode;  \/\/0 = Master System; 1 = Mega Drive$/;"	m	struct:VDP::IO
videoSettings	higan/target-bsnes/settings/settings.cpp	/^VideoSettings videoSettings;$/;"	v
vidx	higan/sfc/dsp/dsp.hpp	/^    int vidx = 0;            \/\/voice channel register index: 0x00 for voice 0, 0x10 for voice 1, etc$/;"	m	struct:Voice
view	ruby/video/cgl.cpp	/^  RubyVideoCGL* view = nullptr;$/;"	m	struct:VideoCGL	file:
virqEnable	higan/sfc/cpu/cpu.hpp	/^    boolean virqEnable;$/;"	m	struct:CPU::IO
virtual_property	nall/property.hpp	/^  virtual_property($/;"	f	struct:nall::virtual_property
virtual_property	nall/property.hpp	/^template<typename T, typename R = T> struct virtual_property {$/;"	s	namespace:nall
visible	higan/video/video.hpp	/^  bool visible = false;$/;"	m	struct:Emulator::Sprite
visible	hiro/core/object.hpp	/^    char visible = true;        \/\/ 1=4$/;"	m	struct:mObject::State
visible	hiro/core/widget/table-view-column.hpp	/^    bool visible = true;$/;"	m	struct:mTableViewColumn::State
vlength	higan/pce/vdc/vdc.hpp	/^    uint  vlength = 0;$/;"	m	struct:VDC::Timing
vmosaic	higan/gba/ppu/ppu.hpp	/^    uint vmosaic;$/;"	m	struct:PPU::Background
voffset	higan/gba/ppu/ppu.hpp	/^      uint9 voffset;$/;"	m	struct:PPU::Background::IO
voffset	higan/pce/vdc/vdc.hpp	/^    uint  voffset = 0;$/;"	m	struct:VDC::Timing
voffset	higan/pce/vdc/vdc.hpp	/^    uint9  voffset;$/;"	m	struct:VDC::Background
voffsetMode7	higan/sfc/ppu/ppu.hpp	/^    uint16 voffsetMode7;$/;"	m	struct:PPU::IO
voice	higan/sfc/dsp/dsp.hpp	/^  } voice[8];$/;"	v	typeref:struct:Voice
voice	higan/ws/apu/apu.hpp	/^      uint1 voice;$/;"	m	struct:APU::Channel2::Registers
voiceEnableLeft	higan/ws/apu/apu.hpp	/^      uint2 voiceEnableLeft;$/;"	m	struct:APU::Channel2::Registers
voiceEnableRight	higan/ws/apu/apu.hpp	/^      uint2 voiceEnableRight;$/;"	m	struct:APU::Channel2::Registers
volume	higan/audio/audio.hpp	/^  double volume = 1.0;$/;"	m	struct:Emulator::Audio
volume	higan/fc/cartridge/board/sunsoft-5b.cpp	/^    uint4 volume;$/;"	m	struct:Sunsoft5B::Pulse	file:
volume	higan/fc/cartridge/chip/vrc6.cpp	/^    uint4 volume;$/;"	m	struct:VRC6::Pulse	file:
volume	higan/gb/apu/apu.hpp	/^    uint2 volume;$/;"	m	struct:APU::Wave
volume	higan/gb/apu/apu.hpp	/^    uint4 volume;$/;"	m	struct:APU::Noise
volume	higan/gb/apu/apu.hpp	/^    uint4 volume;$/;"	m	struct:APU::Square1
volume	higan/gb/apu/apu.hpp	/^    uint4 volume;$/;"	m	struct:APU::Square2
volume	higan/gba/apu/apu.hpp	/^    uint1 volume;  \/\/0 = 50%, 1 = 100%$/;"	m	struct:APU::FIFO
volume	higan/gba/apu/apu.hpp	/^    uint2 volume;$/;"	m	struct:APU::Sequencer
volume	higan/gba/apu/apu.hpp	/^    uint3 volume;$/;"	m	struct:APU::Wave
volume	higan/gba/apu/apu.hpp	/^    uint4 volume;$/;"	m	struct:APU::Envelope
volume	higan/gba/apu/apu.hpp	/^    uint4 volume;$/;"	m	struct:APU::Noise
volume	higan/gba/apu/apu.hpp	/^    uint4 volume;$/;"	m	struct:APU::Square
volume	higan/md/psg/psg.hpp	/^    uint4  volume;$/;"	m	struct:PSG::Noise
volume	higan/md/psg/psg.hpp	/^    uint4  volume;$/;"	m	struct:PSG::Tone
volume	higan/ms/psg/psg.hpp	/^    uint4   volume;$/;"	m	struct:PSG::Noise
volume	higan/ms/psg/psg.hpp	/^    uint4  volume;$/;"	m	struct:PSG::Tone
volume	higan/pce/psg/psg.hpp	/^      uint5  volume;$/;"	m	struct:PSG::Channel::IO
volume	higan/target-bsnes/settings/settings.hpp	/^    uint volume = 100;$/;"	m	struct:Settings::Audio
volume	higan/ws/apu/apu.hpp	/^      uint2 volume;$/;"	m	struct:APU::Channel5::Registers
volumeLeft	higan/pce/psg/psg.hpp	/^      uint4  volumeLeft;$/;"	m	struct:PSG::Channel::IO
volumeLeft	higan/pce/psg/psg.hpp	/^    uint4 volumeLeft;$/;"	m	struct:PSG::IO
volumeLeft	higan/ws/apu/apu.hpp	/^      uint4 volumeLeft;$/;"	m	struct:APU::Channel1::Registers
volumeLeft	higan/ws/apu/apu.hpp	/^      uint4 volumeLeft;$/;"	m	struct:APU::Channel2::Registers
volumeLeft	higan/ws/apu/apu.hpp	/^      uint4 volumeLeft;$/;"	m	struct:APU::Channel3::Registers
volumeLeft	higan/ws/apu/apu.hpp	/^      uint4 volumeLeft;$/;"	m	struct:APU::Channel4::Registers
volumeRight	higan/pce/psg/psg.hpp	/^      uint4  volumeRight;$/;"	m	struct:PSG::Channel::IO
volumeRight	higan/pce/psg/psg.hpp	/^    uint4 volumeRight;$/;"	m	struct:PSG::IO
volumeRight	higan/ws/apu/apu.hpp	/^      uint4 volumeRight;$/;"	m	struct:APU::Channel1::Registers
volumeRight	higan/ws/apu/apu.hpp	/^      uint4 volumeRight;$/;"	m	struct:APU::Channel2::Registers
volumeRight	higan/ws/apu/apu.hpp	/^      uint4 volumeRight;$/;"	m	struct:APU::Channel3::Registers
volumeRight	higan/ws/apu/apu.hpp	/^      uint4 volumeRight;$/;"	m	struct:APU::Channel4::Registers
volumeScalar	higan/pce/psg/psg.hpp	/^  double volumeScalar[32];$/;"	m	struct:PSG
vpc	higan/pce/vpc/vpc.cpp	/^VPC vpc;$/;"	m	namespace:PCEngine	file:
vppLow	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 vppLow;$/;"	m	struct:BSMemory::Block::Status
vppLow	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 vppLow;$/;"	m	struct:BSMemory::Compatible::Status
vpulse	higan/pce/vdc/vdc.hpp	/^    bool  vpulse = 0;$/;"	m	struct:VDC::Timing
vram	higan/gb/ppu/ppu.hpp	/^  uint8 vram[16384];  \/\/GB = 8192, GBC = 16384$/;"	m	struct:PPU
vram	higan/gba/ppu/ppu.hpp	/^  uint8 vram[96 * 1024];$/;"	m	struct:PPU
vram	higan/md/vdp/vdp.hpp	/^  } vram;$/;"	m	struct:VDP	typeref:struct:VDP::VRAM
vram	higan/ms/vdp/vdp.hpp	/^  uint8 vram[0x4000];$/;"	m	struct:VDP
vram	higan/pce/vdc/vdc.hpp	/^  } vram;$/;"	m	struct:VDC	typeref:struct:VDC::VRAM
vram	higan/sfc/interface/configuration.hpp	/^      } vram;$/;"	m	struct:Configuration::System::PPU1	typeref:struct:Configuration::System::PPU1::VRAM
vram	higan/sfc/ppu/ppu.hpp	/^    uint16 vram;$/;"	m	struct:PPU::Latches
vram	higan/sfc/ppu/ppu.hpp	/^  } vram;$/;"	m	struct:PPU	typeref:struct:PPU::VRAM
vramAccess	higan/pce/vdc/vdc.hpp	/^    uint2  vramAccess;$/;"	m	struct:VDC::IO
vramActive	higan/pce/vdc/vdc.hpp	/^    bool   vramActive = 0;$/;"	m	struct:VDC::DMA
vramAddress	higan/sfc/ppu/ppu.hpp	/^    uint16 vramAddress;$/;"	m	struct:PPU::IO
vramBank	higan/gb/ppu/ppu.hpp	/^    bool vramBank = 0;$/;"	m	struct:PPU::Status
vramIncrement	higan/fc/ppu/ppu.hpp	/^    uint vramIncrement = 1;$/;"	m	struct:PPU::IO
vramIncrementMode	higan/sfc/ppu/ppu.hpp	/^    bool vramIncrementMode;$/;"	m	struct:PPU::IO
vramIncrementSize	higan/sfc/ppu/ppu.hpp	/^    uint8 vramIncrementSize;$/;"	m	struct:PPU::IO
vramLatch	higan/ms/vdp/vdp.hpp	/^    uint8 vramLatch;$/;"	m	struct:VDP::IO
vramMapping	higan/sfc/ppu/ppu.hpp	/^    uint2 vramMapping;$/;"	m	struct:PPU::IO
vrc1	higan/fc/cartridge/board/konami-vrc1.cpp	/^  VRC1 vrc1;$/;"	m	struct:KonamiVRC1	file:
vrc2	higan/fc/cartridge/board/konami-vrc2.cpp	/^  VRC2 vrc2;$/;"	m	struct:KonamiVRC2	file:
vrc3	higan/fc/cartridge/board/konami-vrc3.cpp	/^  VRC3 vrc3;$/;"	m	struct:KonamiVRC3	file:
vrc4	higan/fc/cartridge/board/konami-vrc4.cpp	/^  VRC4 vrc4;$/;"	m	struct:KonamiVRC4	file:
vrc6	higan/fc/cartridge/board/konami-vrc6.cpp	/^  VRC6 vrc6;$/;"	m	struct:KonamiVRC6	file:
vrc7	higan/fc/cartridge/board/konami-vrc7.cpp	/^  VRC7 vrc7;$/;"	m	struct:KonamiVRC7	file:
vsBank	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 vsBank;       \/\/$5202$/;"	m	struct:MMC5	file:
vsEnable	higan/fc/cartridge/chip/mmc5.cpp	/^  bool vsEnable;      \/\/$5200$/;"	m	struct:MMC5	file:
vsFetch	higan/fc/cartridge/chip/mmc5.cpp	/^  bool vsFetch;$/;"	m	struct:MMC5	file:
vsHpos	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 vsHpos;$/;"	m	struct:MMC5	file:
vsScroll	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 vsScroll;     \/\/$5201$/;"	m	struct:MMC5	file:
vsSide	higan/fc/cartridge/chip/mmc5.cpp	/^  bool vsSide;        \/\/$5200$/;"	m	struct:MMC5	file:
vsTile	higan/fc/cartridge/chip/mmc5.cpp	/^  uint5 vsTile;       \/\/$5200$/;"	m	struct:MMC5	file:
vsVpos	higan/fc/cartridge/chip/mmc5.cpp	/^  uint8 vsVpos;$/;"	m	struct:MMC5	file:
vscroll	higan/ms/vdp/vdp.hpp	/^    uint8 vscroll;$/;"	m	struct:VDP::IO
vscroll	higan/pce/vdc/vdc.hpp	/^    uint9  vscroll;$/;"	m	struct:VDC::Background
vsram	higan/md/vdp/vdp.hpp	/^  } vsram;$/;"	m	struct:VDP	typeref:struct:VDP::VSRAM
vstart	higan/pce/vdc/vdc.hpp	/^    uint  vstart = 0;$/;"	m	struct:VDC::Timing
vtime	higan/sfc/cpu/cpu.hpp	/^    uint9  vtime = 0x1ff;$/;"	m	struct:CPU::IO
vtimerCounter	higan/ws/ppu/ppu.hpp	/^    uint16 vtimerCounter;$/;"	m	struct:PPU::Registers
vtimerEnable	higan/ws/ppu/ppu.hpp	/^    uint1 vtimerEnable;$/;"	m	struct:PPU::Registers
vtimerFrequency	higan/ws/ppu/ppu.hpp	/^    uint16 vtimerFrequency;$/;"	m	struct:PPU::Registers
vtimerRepeat	higan/ws/ppu/ppu.hpp	/^    uint1 vtimerRepeat;$/;"	m	struct:PPU::Registers
vtotal	higan/ws/ppu/ppu.hpp	/^    uint8 vtotal = 158;$/;"	m	struct:PPU::Registers
w	higan/fc/cartridge/chip/vrc3.cpp	/^      uint16_t w;$/;"	m	union:VRC3::__anon2::__anon3	file:
w	higan/processor/spc700/spc700.hpp	/^      uint16 w;$/;"	m	union:Processor::SPC700::Registers::Pair
w	higan/sfc/coprocessor/mcc/mcc.hpp	/^  } r, w;$/;"	m	struct:MCC	typeref:struct:MCC::Registers
w	nall/hash/sha224.hpp	/^  uint32_t w[64] = {0};$/;"	m	struct:nall::Hash::SHA224
w	nall/hash/sha256.hpp	/^  uint32_t w[64] = {0};$/;"	m	struct:nall::Hash::SHA256
w	nall/hash/sha384.hpp	/^  uint64_t w[80] = {0};$/;"	m	struct:nall::Hash::SHA384
w	nall/hash/sha512.hpp	/^  uint64_t w[80] = {0};$/;"	m	struct:nall::Hash::SHA512
wai	higan/processor/wdc65816/wdc65816.hpp	/^    bool wai = false;  \/\/raised during wai, cleared after interrupt triggered$/;"	m	struct:Processor::WDC65816::Registers
wait	higan/gba/cpu/cpu.hpp	/^    integer wait = 1;  \/\/number of clocks before next slot load$/;"	m	struct:__anon6
wait	higan/gba/cpu/cpu.hpp	/^  } wait;$/;"	v	typeref:struct:Wait
wait	higan/md/md.hpp	/^    uint wait = 0;$/;"	m	struct:Thread
wait	higan/md/vdp/vdp.hpp	/^      uint1  wait;$/;"	m	struct:VDP::DMA::IO
wait	higan/processor/hg51b/hg51b.hpp	/^    } wait;$/;"	m	struct:Processor::HG51B::IO	typeref:struct:Processor::HG51B::IO::Wait
wait	higan/processor/spc700/spc700.hpp	/^    bool wait = false;$/;"	m	struct:Processor::SPC700::Registers
wait	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint wait;$/;"	m	struct:EpsonRTC
waiting	higan/gba/cpu/cpu.hpp	/^    integer waiting;$/;"	m	struct:DMA
warnOnUnverifiedGames	higan/target-bsnes/settings/settings.hpp	/^    bool warnOnUnverifiedGames = false;$/;"	m	struct:Settings::Emulator
warning	nall/beat/single/apply.hpp	7;"	d
warning	nall/beat/single/apply.hpp	84;"	d
wave	higan/gb/apu/apu.hpp	/^    } square1, square2, wave, noise;$/;"	m	struct:APU::Sequencer	typeref:struct:APU::Sequencer::Channel
wave	higan/gb/apu/apu.hpp	/^  } wave;$/;"	m	struct:APU	typeref:struct:APU::Wave
wave	higan/gba/apu/apu.hpp	/^  } wave;$/;"	m	struct:APU	typeref:struct:APU::Wave
waveBase	higan/ws/apu/apu.hpp	/^    uint8 waveBase;$/;"	m	struct:APU::Registers
waveBuffer	higan/pce/psg/psg.hpp	/^      uint5  waveBuffer[32];$/;"	m	struct:PSG::Channel::IO
waveFrequency	higan/pce/psg/psg.hpp	/^      uint12 waveFrequency;$/;"	m	struct:PSG::Channel::IO
waveOffset	higan/pce/psg/psg.hpp	/^      uint5  waveOffset;$/;"	m	struct:PSG::Channel::IO
wavePeriod	higan/pce/psg/psg.hpp	/^      uint12 wavePeriod;$/;"	m	struct:PSG::Channel::IO
waveSample	higan/pce/psg/psg.hpp	/^      uint5  waveSample;$/;"	m	struct:PSG::Channel::IO
weak	nall/shared-pointer.hpp	/^  uint weak = 0;$/;"	m	struct:nall::shared_pointer_manager
weekday	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint3 weekday;$/;"	m	struct:EpsonRTC
weekday	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  uint weekday;$/;"	m	struct:SharpRTC
widget	hiro/gtk/action/action.hpp	/^  GtkWidget* widget = nullptr;$/;"	m	struct:hiro::pAction
widget	hiro/gtk/window.hpp	/^  GtkWidget* widget = nullptr;$/;"	m	struct:hiro::pWindow
widgetColors	hiro/gtk/settings.hpp	/^    bool widgetColors = true;$/;"	m	struct:hiro::Settings::Theme
width	higan/emulator/interface.hpp	/^    uint width = 0;$/;"	m	struct:Emulator::Interface
width	higan/gb/cartridge/mbc7/mbc7.hpp	/^    uint width;        \/\/8-bit (ORG=0) or 16-bit (ORG=1) configuration$/;"	m	struct:MBC7::EEPROM
width	higan/gba/ppu/ppu.hpp	/^    uint width;$/;"	m	struct:PPU::Object
width	higan/pce/vdc/vdc.hpp	/^      uint   width = 0;$/;"	m	struct:VDC::Sprite::Object
width	higan/pce/vdc/vdc.hpp	/^    uint8  width;$/;"	m	struct:VDC::Background
width	higan/target-bsnes/program/program.hpp	/^    uint width = 0;$/;"	m	struct:Program::Screenshot
width	higan/video/video.hpp	/^  const uint width;$/;"	m	struct:Emulator::Sprite
width	higan/video/video.hpp	/^  uint width = 0;$/;"	m	struct:Emulator::Video
width	hiro/core/core.hpp	/^    float width;$/;"	m	struct:hiro::Geometry::State
width	hiro/core/core.hpp	/^    float width;$/;"	m	struct:hiro::Size::State
width	hiro/core/shared.hpp	/^  auto width() const { return self().width(); }$/;"	f	struct:TableViewColumn
width	hiro/core/widget/table-view-column.hpp	/^    float width = 0;$/;"	m	struct:mTableViewColumn::State
width	hiro/windows/widget/canvas.hpp	/^  signed width = 0;$/;"	m	struct:hiro::pCanvas
width	nall/decode/png.hpp	/^    uint width;$/;"	m	struct:nall::Decode::PNG::Info
width	nall/image.hpp	/^  alwaysinline auto width() const { return _width; }$/;"	f	struct:nall::image
width	ruby/video/opengl/opengl.hpp	/^  uint width = 0;$/;"	m	struct:OpenGLTexture
width	ruby/video/video.hpp	/^  uint width = 0;$/;"	m	struct:VideoDriver
window	higan/gb/ppu/ppu.hpp	/^  Background window;$/;"	m	struct:PPU
window	higan/gba/ppu/ppu.hpp	/^    uint1  window;  \/\/IN2$/;"	m	struct:PPU::Pixel
window	higan/pce/vpc/vpc.hpp	/^  uint10 window[2];$/;"	m	struct:VPC
window	higan/sfc/ppu/ppu.hpp	/^  Window window;$/;"	m	struct:PPU
window	hiro/extension/browser-dialog.cpp	/^  Window window;$/;"	m	struct:BrowserDialogWindow	file:
window0	higan/gba/ppu/ppu.hpp	/^  } window0, window1, window2, window3;$/;"	m	struct:PPU	typeref:struct:PPU::Window
window1	higan/gba/ppu/ppu.hpp	/^  } window0, window1, window2, window3;$/;"	m	struct:PPU	typeref:struct:PPU::Window
window2	higan/gba/ppu/ppu.hpp	/^  } window0, window1, window2, window3;$/;"	m	struct:PPU	typeref:struct:PPU::Window
window3	higan/gba/ppu/ppu.hpp	/^  } window0, window1, window2, window3;$/;"	m	struct:PPU	typeref:struct:PPU::Window
windowDisplayEnable	higan/gb/ppu/ppu.hpp	/^    bool windowDisplayEnable = 0;$/;"	m	struct:PPU::Status
windowTilemapSelect	higan/gb/ppu/ppu.hpp	/^    bool windowTilemapSelect = 0;$/;"	m	struct:PPU::Status
windowedGeometry	hiro/cocoa/window.hpp	/^  Geometry windowedGeometry;$/;"	m	struct:hiro::pWindow
windows	hiro/gtk/application.hpp	/^    vector<pWindow*> windows;$/;"	m	struct:hiro::pApplication::State
windows	hiro/windows/platform.hpp	/^static vector<wObject> windows;$/;"	v
windres	nall/GNUmakefile	/^  windres := windres$/;"	m
word	higan/processor/lr35902/lr35902.hpp	/^      uint16 word;$/;"	m	union:Processor::LR35902::Registers::Pair
word	higan/processor/z80/z80.hpp	/^      uint16 word;$/;"	m	union:Processor::Z80::Registers::Pair
wordWrap	hiro/core/core.hpp	/^    bool wordWrap = true;$/;"	m	struct:hiro::mTextEdit::State
wordWrap	hiro/core/shared.hpp	/^  auto wordWrap() const { return self().wordWrap(); }$/;"	f	struct:SourceEdit
wordWrap	hiro/core/shared.hpp	/^  auto wordWrap() const { return self().wordWrap(); }$/;"	f	struct:TextEdit
wordWrap	hiro/core/widget/source-edit.hpp	/^    bool wordWrap = true;$/;"	m	struct:mSourceEdit::State
wram	higan/gb/cpu/cpu.hpp	/^  uint8 wram[32768];  \/\/GB=8192, GBC=32768$/;"	m	struct:CPU
wram	higan/sfc/cpu/cpu.hpp	/^  uint8 wram[128 * 1024];$/;"	m	struct:CPU
wramAddress	higan/sfc/cpu/cpu.hpp	/^    uint17 wramAddress;$/;"	m	struct:CPU::IO
wramBank	higan/gb/cpu/cpu.hpp	/^    uint3 wramBank = 1;$/;"	m	struct:CPU::Status
wrap	ruby/video/opengl/opengl.hpp	/^  GLuint wrap = GL_CLAMP_TO_BORDER;$/;"	m	struct:OpenGLTexture
wrdiva	higan/sfc/cpu/cpu.hpp	/^    uint16 wrdiva = 0xffff;$/;"	m	struct:CPU::IO
wrdivb	higan/sfc/cpu/cpu.hpp	/^    uint8 wrdivb = 0xff;$/;"	m	struct:CPU::IO
writable	higan/fc/cartridge/board/board.hpp	/^    bool writable = false;$/;"	m	struct:Board::Memory
writable	higan/gb/cartridge/huc1/huc1.hpp	/^      uint1 writable;$/;"	m	struct:HuC1::IO::RAM
writable	higan/gb/cartridge/mbc7/mbc7.hpp	/^    boolean writable;  \/\/EWEN, EWDS$/;"	m	struct:MBC7::EEPROM
writable	higan/sfc/memory/protectable.hpp	/^    bool writable = false;$/;"	m	struct:ProtectableMemory::__anon8
writable	higan/sfc/slot/bsmemory/bsmemory.hpp	/^    uint1 writable;  \/\/ => \/WP$/;"	m	struct:BSMemory::Pin
writable	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  auto writable() const { return pin.writable; }$/;"	f	struct:BSMemory
writable	higan/sfc/slot/bsmemory/bsmemory.hpp	/^  auto writable(bool writable) { pin.writable = !ROM && writable; }$/;"	f	struct:BSMemory
writable	nall/beat/archive/node.hpp	/^      bool writable = false;$/;"	m	struct:nall::Beat::Archive::Node::Permission::Group
writable	nall/beat/archive/node.hpp	/^      bool writable = false;$/;"	m	struct:nall::Beat::Archive::Node::Permission::Other
writable	nall/beat/archive/node.hpp	/^      bool writable = false;$/;"	m	struct:nall::Beat::Archive::Node::Permission::Owner
write	higan/md/cartridge/cartridge.hpp	/^  function<void (uint22 address, uint16 data)> write;$/;"	m	struct:Cartridge
write	nall/file-buffer.hpp	/^  struct mode { enum : uint { read, write, modify, append }; };$/;"	m	struct:nall::file_buffer::mode	typeref:enum:nall::file_buffer::mode::
write	nall/file-map.hpp	/^  struct mode { enum : uint { read, write, modify, append }; };$/;"	m	struct:nall::file_map::mode	typeref:enum:nall::file_map::mode::
write	nall/file.hpp	/^  struct mode { enum : uint { read, write, modify, append }; };$/;"	m	struct:nall::file::mode	typeref:enum:nall::file::mode::
write	nall/vfs/vfs.hpp	/^  enum class mode : uint { read, write, modify, create };$/;"	m	class:nall::vfs::file::mode
write	ruby/audio/asio.cpp	/^    uint16_t write;$/;"	m	struct:AudioASIO::Queue	file:
write	ruby/audio/wasapi.cpp	/^    uint16_t write;$/;"	m	struct:AudioWASAPI::Queue	file:
writeAddress	higan/sfc/coprocessor/icd/icd.hpp	/^  uint writeAddress;$/;"	m	struct:ICD
writeBank	higan/sfc/coprocessor/icd/icd.hpp	/^  uint writeBank;$/;"	m	struct:ICD
writeCompleted	higan/ws/eeprom/eeprom.hpp	/^    bool writeCompleted;$/;"	m	struct:Registers
writeFailed	higan/sfc/slot/bsmemory/bsmemory.hpp	/^      uint1 writeFailed;$/;"	m	struct:BSMemory::Compatible::Status
writeProtect	higan/ws/eeprom/eeprom.hpp	/^    bool writeProtect;$/;"	m	struct:Registers
writeRequested	higan/ws/eeprom/eeprom.hpp	/^    bool writeRequested;$/;"	m	struct:Registers
writedelay	higan/fc/cartridge/chip/mmc1.cpp	/^  uint writedelay;$/;"	m	struct:MMC1	file:
writer	higan/sfc/memory/memory.hpp	/^  function<void (uint24, uint8)> writer[256];$/;"	m	struct:Bus
writeselect	higan/gba/cartridge/memory.hpp	/^  bool writeselect;$/;"	m	struct:FLASH
writing	higan/processor/hg51b/hg51b.hpp	/^      uint1  writing;$/;"	m	struct:Processor::HG51B::IO::Bus
wrmpya	higan/sfc/cpu/cpu.hpp	/^    uint8 wrmpya = 0xff;$/;"	m	struct:CPU::IO
wrmpyb	higan/sfc/cpu/cpu.hpp	/^    uint8 wrmpyb = 0xff;$/;"	m	struct:CPU::IO
wroffset	higan/gba/apu/apu.hpp	/^    uint5 wroffset;$/;"	m	struct:APU::FIFO
wx	higan/gb/ppu/ppu.hpp	/^    uint8 wx;$/;"	m	struct:PPU::Status
wy	higan/gb/ppu/ppu.hpp	/^    uint8 wy;$/;"	m	struct:PPU::Status
x	higan/fc/ppu/ppu.hpp	/^    uint8 x = 0xff;$/;"	m	struct:PPU::OAM
x	higan/gb/cartridge/mbc7/mbc7.hpp	/^      uint16 x = Center;$/;"	m	struct:MBC7::IO::Accelerometer
x	higan/gb/ppu/ppu.hpp	/^    uint x = 0;$/;"	m	struct:PPU::Sprite
x	higan/gba/ppu/ppu.hpp	/^      int28 x;$/;"	m	struct:PPU::Background::IO
x	higan/gba/ppu/ppu.hpp	/^    uint9  x;$/;"	m	struct:PPU::Object
x	higan/md/vdp/vdp.hpp	/^    uint9  x;$/;"	m	struct:VDP::Object
x	higan/ms/vdp/vdp.hpp	/^      uint x = 0;$/;"	m	struct:VDP::Background::State
x	higan/ms/vdp/vdp.hpp	/^      uint x = 0;$/;"	m	struct:VDP::Sprite::State
x	higan/ms/vdp/vdp.hpp	/^      uint8 x;$/;"	m	struct:VDP::Sprite::Object
x	higan/pce/vdc/vdc.hpp	/^      uint10 x;$/;"	m	struct:VDC::Sprite::Object
x	higan/processor/huc6280/huc6280.hpp	/^    uint8  x;$/;"	m	struct:Processor::HuC6280::Registers
x	higan/processor/mos6502/mos6502.hpp	/^    uint8  x;$/;"	m	struct:Processor::MOS6502::Registers
x	higan/processor/spc700/spc700.hpp	/^    uint8 x, s;$/;"	m	struct:Processor::SPC700::Registers
x	higan/processor/wdc65816/instruction.cpp	31;"	d	file:
x	higan/processor/wdc65816/instruction.cpp	34;"	d	file:
x	higan/processor/wdc65816/instruction.cpp	37;"	d	file:
x	higan/processor/wdc65816/instruction.cpp	40;"	d	file:
x	higan/processor/wdc65816/instruction.cpp	49;"	d	file:
x	higan/processor/wdc65816/instruction.cpp	52;"	d	file:
x	higan/processor/wdc65816/instruction.cpp	55;"	d	file:
x	higan/processor/wdc65816/instruction.cpp	58;"	d	file:
x	higan/processor/wdc65816/wdc65816.hpp	/^    bool x;  \/\/index register mode$/;"	m	struct:Processor::WDC65816::Flags
x	higan/processor/wdc65816/wdc65816.hpp	/^    uint16 x;$/;"	m	struct:Processor::WDC65816::Registers
x	higan/sfc/controller/gamepad/gamepad.hpp	/^  boolean a, x, l, r;$/;"	v
x	higan/sfc/controller/justifier/justifier.hpp	/^    int x;$/;"	m	struct:Player
x	higan/sfc/controller/mouse/mouse.hpp	/^  int  x;      \/\/x-coordinate$/;"	v
x	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    boolean a, x, l, r;$/;"	m	struct:Gamepad
x	higan/sfc/controller/super-scope/super-scope.hpp	/^  int x;$/;"	v
x	higan/sfc/ppu/object.hpp	/^    uint x;$/;"	m	struct:Object::State
x	higan/sfc/ppu/object.hpp	/^    uint9  x;$/;"	m	struct:Object::Tile
x	higan/sfc/ppu/object.hpp	/^    uint9 x;$/;"	m	struct:OAM::Object
x	higan/sfc/ppu/window.hpp	/^    uint x;$/;"	m	struct:Window::__anon12
x	higan/video/video.hpp	/^  int x = 0;$/;"	m	struct:Emulator::Sprite
x	hiro/core/core.hpp	/^    float x;$/;"	m	struct:hiro::Geometry::State
x	hiro/core/core.hpp	/^    float x;$/;"	m	struct:hiro::Position::State
x	nall/elliptic-curve/curve25519.hpp	/^  struct point { field x, z; };$/;"	m	struct:nall::EllipticCurve::Curve25519::point
x	nall/elliptic-curve/ed25519.hpp	/^  struct point { field x, y, z, t; };$/;"	m	struct:nall::EllipticCurve::Ed25519::point
x	ruby/video/direct3d.cpp	/^    float x, y, z, rhw;  \/\/screen coordinates$/;"	m	struct:VideoDirect3D::Vertex	file:
x1	higan/gba/ppu/ppu.hpp	/^      uint8 x1;$/;"	m	struct:PPU::Window::IO
x1	higan/ws/system/system.hpp	/^    bool x1, x2, x3, x4;$/;"	m	struct:System::Keypad
x2	higan/gba/ppu/ppu.hpp	/^      uint8 x2;$/;"	m	struct:PPU::Window::IO
x2	higan/ws/system/system.hpp	/^    bool x1, x2, x3, x4;$/;"	m	struct:System::Keypad
x3	higan/ws/system/system.hpp	/^    bool x1, x2, x3, x4;$/;"	m	struct:System::Keypad
x4	higan/ws/system/system.hpp	/^    bool x1, x2, x3, x4;$/;"	m	struct:System::Keypad
x8	higan/processor/wdc65816/disassembler.cpp	148;"	d	file:
x8	higan/processor/wdc65816/disassembler.cpp	426;"	d	file:
x86	nall/intrinsics.hpp	/^  enum class Architecture : uint { x86, amd64, ARM, PPC32, PPC64, Unknown };$/;"	m	class:nall::Architecture
xinputAvailable	ruby/input/joypad/directinput.cpp	/^  bool xinputAvailable = false;$/;"	m	struct:InputJoypadDirectInput	file:
xpadEnable	higan/ws/cpu/cpu.hpp	/^    uint1 xpadEnable;$/;"	m	struct:CPU::Registers
y	higan/fc/ppu/ppu.hpp	/^    uint8 y = 0xff;$/;"	m	struct:PPU::OAM
y	higan/gb/cartridge/mbc7/mbc7.hpp	/^      uint16 y = Center;$/;"	m	struct:MBC7::IO::Accelerometer
y	higan/gb/ppu/ppu.hpp	/^    uint y = 0;$/;"	m	struct:PPU::Sprite
y	higan/gba/ppu/ppu.hpp	/^      int28 y;$/;"	m	struct:PPU::Background::IO
y	higan/gba/ppu/ppu.hpp	/^    uint8  y;$/;"	m	struct:PPU::Object
y	higan/md/vdp/vdp.hpp	/^    uint10 y;$/;"	m	struct:VDP::Object
y	higan/ms/vdp/vdp.hpp	/^      uint y = 0;$/;"	m	struct:VDP::Background::State
y	higan/ms/vdp/vdp.hpp	/^      uint y = 0;$/;"	m	struct:VDP::Sprite::State
y	higan/ms/vdp/vdp.hpp	/^      uint8 y;$/;"	m	struct:VDP::Sprite::Object
y	higan/pce/vdc/vdc.hpp	/^      uint10 y;$/;"	m	struct:VDC::Sprite::Object
y	higan/processor/huc6280/huc6280.hpp	/^    uint8  y;$/;"	m	struct:Processor::HuC6280::Registers
y	higan/processor/mos6502/mos6502.hpp	/^    uint8  y;$/;"	m	struct:Processor::MOS6502::Registers
y	higan/processor/wdc65816/wdc65816.hpp	/^    uint16 y;$/;"	m	struct:Processor::WDC65816::Registers
y	higan/sfc/controller/gamepad/gamepad.hpp	/^  boolean b, y, select, start;$/;"	v
y	higan/sfc/controller/justifier/justifier.hpp	/^    int y;$/;"	m	struct:Player
y	higan/sfc/controller/mouse/mouse.hpp	/^  int  y;      \/\/y-coordinate$/;"	v
y	higan/sfc/controller/super-multitap/super-multitap.hpp	/^    boolean b, y, select, start;$/;"	m	struct:Gamepad
y	higan/sfc/controller/super-scope/super-scope.hpp	/^  int y;$/;"	v
y	higan/sfc/ppu/object.hpp	/^    uint y;$/;"	m	struct:Object::State
y	higan/sfc/ppu/object.hpp	/^    uint8 y;$/;"	m	struct:OAM::Object
y	higan/video/video.hpp	/^  int y = 0;$/;"	m	struct:Emulator::Sprite
y	hiro/core/core.hpp	/^    float y;$/;"	m	struct:hiro::Geometry::State
y	hiro/core/core.hpp	/^    float y;$/;"	m	struct:hiro::Position::State
y	nall/elliptic-curve/ed25519.hpp	/^  struct point { field x, y, z, t; };$/;"	m	struct:nall::EllipticCurve::Ed25519::point
y	ruby/video/direct3d.cpp	/^    float x, y, z, rhw;  \/\/screen coordinates$/;"	m	struct:VideoDirect3D::Vertex	file:
y1	higan/gba/ppu/ppu.hpp	/^      uint8 y1;$/;"	m	struct:PPU::Window::IO
y1	higan/ws/system/system.hpp	/^    bool y1, y2, y3, y4;$/;"	m	struct:System::Keypad
y2	higan/gba/ppu/ppu.hpp	/^      uint8 y2;$/;"	m	struct:PPU::Window::IO
y2	higan/ws/system/system.hpp	/^    bool y1, y2, y3, y4;$/;"	m	struct:System::Keypad
y3	higan/ws/system/system.hpp	/^    bool y1, y2, y3, y4;$/;"	m	struct:System::Keypad
y4	higan/ws/system/system.hpp	/^    bool y1, y2, y3, y4;$/;"	m	struct:System::Keypad
ya	higan/processor/spc700/spc700.hpp	/^    } pc, ya;$/;"	m	struct:Processor::SPC700::Registers	typeref:union:Processor::SPC700::Registers::Pair
year	higan/gb/cartridge/tama/tama.hpp	/^    uint8 year;      \/\/0 - 99$/;"	m	struct:TAMA::RTC
year	higan/sfc/coprocessor/sharprtc/sharprtc.hpp	/^  uint year;$/;"	m	struct:SharpRTC
yearhi	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint4 yearhi;$/;"	m	struct:EpsonRTC
yearlo	higan/sfc/coprocessor/epsonrtc/epsonrtc.hpp	/^  uint4 yearlo;$/;"	m	struct:EpsonRTC
ym2612	higan/md/ym2612/ym2612.cpp	/^YM2612 ym2612;$/;"	m	namespace:MegaDrive	file:
ypadEnable	higan/ws/cpu/cpu.hpp	/^    uint1 ypadEnable;$/;"	m	struct:CPU::Registers
z	higan/processor/arm7tdmi/arm7tdmi.hpp	/^    boolean z;  \/\/zero$/;"	m	namespace:Processor
z	higan/processor/gsu/registers.hpp	/^    BooleanBitField<uint16_t,  1> z;       \/\/zero flag$/;"	m	union:SFR::__anon27
z	higan/processor/hg51b/hg51b.hpp	/^    boolean z;  \/\/zero$/;"	m	struct:Processor::HG51B::Registers
z	higan/processor/huc6280/huc6280.hpp	/^    bool z;  \/\/zero$/;"	m	struct:Processor::HuC6280::Flags
z	higan/processor/mos6502/mos6502.hpp	/^    bool z;  \/\/zero$/;"	m	struct:Processor::MOS6502::Flags
z	higan/processor/spc700/spc700.hpp	/^    bool z;  \/\/zero$/;"	m	struct:Processor::SPC700::Flags
z	higan/processor/upd96050/upd96050.hpp	/^    boolean z;    \/\/zero$/;"	m	struct:Processor::uPD96050::Flag
z	higan/processor/v30mz/v30mz.hpp	/^        BooleanBitField<uint16_t,  6> z;  \/\/zero$/;"	m	union:Processor::Registers::Flags::__anon26
z	higan/processor/wdc65816/wdc65816.hpp	/^    bool z;  \/\/zero$/;"	m	struct:Processor::WDC65816::Flags
z	higan/processor/wdc65816/wdc65816.hpp	/^    uint16 z;$/;"	m	struct:Processor::WDC65816::Registers
z	nall/elliptic-curve/curve25519.hpp	/^  struct point { field x, z; };$/;"	m	struct:nall::EllipticCurve::Curve25519::point
z	nall/elliptic-curve/ed25519.hpp	/^  struct point { field x, y, z, t; };$/;"	m	struct:nall::EllipticCurve::Ed25519::point
z	ruby/video/direct3d.cpp	/^    float x, y, z, rhw;  \/\/screen coordinates$/;"	m	struct:VideoDirect3D::Vertex	file:
z1	nall/dsp/iir/biquad.hpp	/^  double z1, z2;              \/\/second-order IIR$/;"	m	struct:nall::DSP::IIR::Biquad
z1	nall/dsp/iir/one-pole.hpp	/^  double z1;      \/\/first-order IIR$/;"	m	struct:nall::DSP::IIR::OnePole
z2	nall/dsp/iir/biquad.hpp	/^  double z1, z2;              \/\/second-order IIR$/;"	m	struct:nall::DSP::IIR::Biquad
~Audio	higan/audio/audio.cpp	/^Audio::~Audio() {$/;"	f	class:Emulator::Audio
~AudioALSA	ruby/audio/alsa.cpp	/^  ~AudioALSA() { terminate(); }$/;"	f	struct:AudioALSA
~AudioAO	ruby/audio/ao.cpp	/^  ~AudioAO() { terminate(); }$/;"	f	struct:AudioAO
~AudioASIO	ruby/audio/asio.cpp	/^  ~AudioASIO() { terminate(); }$/;"	f	struct:AudioASIO
~AudioDirectSound	ruby/audio/directsound.cpp	/^  ~AudioDirectSound() { terminate(); }$/;"	f	struct:AudioDirectSound
~AudioOSS	ruby/audio/oss.cpp	/^  ~AudioOSS() { terminate(); }$/;"	f	struct:AudioOSS
~AudioOpenAL	ruby/audio/openal.cpp	/^  ~AudioOpenAL() { terminate(); }$/;"	f	struct:AudioOpenAL
~AudioPulseAudio	ruby/audio/pulseaudio.cpp	/^  ~AudioPulseAudio() { terminate(); }$/;"	f	struct:AudioPulseAudio
~AudioPulseAudioSimple	ruby/audio/pulseaudio-simple.cpp	/^  ~AudioPulseAudioSimple() { terminate(); }$/;"	f	struct:AudioPulseAudioSimple
~AudioWASAPI	ruby/audio/wasapi.cpp	/^  ~AudioWASAPI() { destruct(); }$/;"	f	struct:AudioWASAPI
~AudioXAudio2	ruby/audio/xaudio2.cpp	/^  ~AudioXAudio2() { destruct(); }$/;"	f	struct:AudioXAudio2
~BIOS	higan/gba/system/bios.cpp	/^BIOS::~BIOS() {$/;"	f	class:BIOS
~Bus	higan/sfc/memory/memory.cpp	/^Bus::~Bus() {$/;"	f	class:SuperFamicom::Bus
~Cartridge	higan/gba/cartridge/cartridge.cpp	/^Cartridge::~Cartridge() {$/;"	f	class:GameBoyAdvance::Cartridge
~Client	nall/http/client.hpp	/^  ~Client() { close(); }$/;"	f	struct:nall::HTTP::Client
~Container	nall/beat/archive/container.hpp	/^Container::~Container() {$/;"	f	class:nall::Beat::Archive::Container
~Controller	higan/fc/controller/controller.cpp	/^Controller::~Controller() {$/;"	f	class:Famicom::Controller
~Controller	higan/md/controller/controller.cpp	/^Controller::~Controller() {$/;"	f	class:MegaDrive::Controller
~Controller	higan/ms/controller/controller.cpp	/^Controller::~Controller() {$/;"	f	class:MasterSystem::Controller
~Controller	higan/pce/controller/controller.cpp	/^Controller::~Controller() {$/;"	f	class:PCEngine::Controller
~Controller	higan/sfc/controller/controller.cpp	/^Controller::~Controller() {$/;"	f	class:SuperFamicom::Controller
~Expansion	higan/sfc/expansion/expansion.cpp	/^Expansion::~Expansion() {$/;"	f	class:SuperFamicom::Expansion
~GZIP	nall/decode/gzip.hpp	/^GZIP::~GZIP() {$/;"	f	class:nall::Decode::GZIP
~Handle	hiro/core/lock.hpp	/^    ~Handle() {$/;"	f	struct:Lock::Handle
~InputCarbon	ruby/input/carbon.cpp	/^  ~InputCarbon() { terminate(); }$/;"	f	struct:InputCarbon
~InputQuartz	ruby/input/quartz.cpp	/^  ~InputQuartz() { terminate(); }$/;"	f	struct:InputQuartz
~InputSDL	ruby/input/sdl.cpp	/^  ~InputSDL() { terminate(); }$/;"	f	struct:InputSDL
~InputUdev	ruby/input/udev.cpp	/^  ~InputUdev() { terminate(); }$/;"	f	struct:InputUdev
~InputWindows	ruby/input/windows.cpp	/^  ~InputWindows() { terminate(); }$/;"	f	struct:InputWindows
~InputXlib	ruby/input/xlib.cpp	/^  ~InputXlib() { terminate(); }$/;"	f	struct:InputXlib
~Justifier	higan/sfc/controller/justifier/justifier.cpp	/^Justifier::~Justifier() {$/;"	f	class:Justifier
~Memory	higan/fc/cartridge/board/board.hpp	/^    inline ~Memory() { if(data) delete[] data; }$/;"	f	struct:Board::Memory
~Memory	higan/gb/memory/memory.cpp	/^Memory::~Memory() {$/;"	f	class:GameBoy::Memory
~Memory	higan/sfc/memory/memory.hpp	/^  virtual ~Memory() { reset(); }$/;"	f	struct:Memory
~Node	nall/string/eval/node.hpp	/^  ~Node() { for(auto& node : link) delete node; }$/;"	f	struct:nall::Eval::Node
~ODBC	nall/database/odbc.hpp	/^  ~ODBC() {$/;"	f	struct:nall::Database::ODBC
~PNG	nall/decode/png.hpp	/^PNG::~PNG() {$/;"	f	class:nall::Decode::PNG
~PPU	higan/gba/ppu/ppu.cpp	/^PPU::~PPU() {$/;"	f	class:GameBoyAdvance::PPU
~PPU	higan/sfc/ppu-fast/ppu.cpp	/^PPU::~PPU() {$/;"	f	class:SuperFamicom::PPU
~PPU	higan/sfc/ppu/ppu.cpp	/^PPU::~PPU() {$/;"	f	class:SuperFamicom::PPU
~Query	nall/database/odbc.hpp	/^    ~Query() {$/;"	f	struct:nall::Database::ODBC::Query
~Query	nall/database/sqlite3.hpp	/^    ~Query() {$/;"	f	struct:nall::Database::SQLite3::Query
~S21FX	higan/sfc/expansion/21fx/21fx.cpp	/^S21FX::~S21FX() {$/;"	f	class:SuperFamicom::S21FX
~SPC7110	higan/sfc/coprocessor/spc7110/spc7110.cpp	/^SPC7110::~SPC7110() {$/;"	f	class:SuperFamicom::SPC7110
~SQLite3	nall/database/sqlite3.hpp	/^  ~SQLite3() { close(); }$/;"	f	struct:nall::Database::SQLite3
~Satellaview	higan/sfc/expansion/satellaview/satellaview.cpp	/^Satellaview::~Satellaview() {$/;"	f	class:SuperFamicom::Satellaview
~Server	nall/http/server.hpp	/^  ~Server() { close(); }$/;"	f	struct:nall::HTTP::Server
~Settings	hiro/gtk/settings.cpp	/^Settings::~Settings() {$/;"	f	class:hiro::Settings
~Settings	hiro/qt/settings.cpp	/^Settings::~Settings() {$/;"	f	class:hiro::Settings
~Sprite	higan/video/sprite.cpp	/^Sprite::~Sprite() {$/;"	f	class:Sprite
~SuperScope	higan/sfc/controller/super-scope/super-scope.cpp	/^SuperScope::~SuperScope() {$/;"	f	class:SuperScope
~Thread	higan/emulator/thread.hpp	/^  virtual ~Thread() {$/;"	f	struct:Emulator::Thread
~U	nall/adaptive-array.hpp	/^    ~U() {}$/;"	f	union:nall::adaptive_array::U
~U	nall/maybe.hpp	/^    ~U() {}$/;"	f	union:nall::maybe::U
~Video	higan/video/video.cpp	/^Video::~Video() {$/;"	f	class:Emulator::Video
~VideoCGL	ruby/video/cgl.cpp	/^  ~VideoCGL() { terminate(); }$/;"	f	struct:VideoCGL
~VideoDirect3D	ruby/video/direct3d.cpp	/^  ~VideoDirect3D() { terminate(); }$/;"	f	struct:VideoDirect3D
~VideoDirectDraw	ruby/video/directdraw.cpp	/^  ~VideoDirectDraw() { terminate(); }$/;"	f	struct:VideoDirectDraw
~VideoGDI	ruby/video/gdi.cpp	/^  ~VideoGDI() { terminate(); }$/;"	f	struct:VideoGDI
~VideoGLX	ruby/video/glx.cpp	/^  ~VideoGLX() { terminate(); }$/;"	f	struct:VideoGLX
~VideoGLX2	ruby/video/glx2.cpp	/^  ~VideoGLX2() { terminate(); }$/;"	f	struct:VideoGLX2
~VideoWGL	ruby/video/wgl.cpp	/^  ~VideoWGL() { terminate(); }$/;"	f	struct:VideoWGL
~VideoXShm	ruby/video/xshm.cpp	/^  ~VideoXShm() { destruct(); }$/;"	f	struct:VideoXShm
~VideoXVideo	ruby/video/xvideo.cpp	/^  ~VideoXVideo() { terminate(); }$/;"	f	struct:VideoXVideo
~XDisplay	nall/xorg/xorg.hpp	/^  ~XDisplay() { XCloseDisplay(_display); }$/;"	f	struct:XDisplay
~ZIP	nall/decode/zip.hpp	/^  ~ZIP() {$/;"	f	struct:nall::Decode::ZIP
~ZIP	nall/encode/zip.hpp	/^  ~ZIP() {$/;"	f	struct:nall::Encode::ZIP
~any	nall/any.hpp	/^  ~any() { reset(); }$/;"	f	struct:nall::any
~bitvector	nall/bit-vector.hpp	/^  ~bitvector() { reset(); }$/;"	f	struct:nall::bitvector
~file	nall/vfs/memory/file.hpp	/^  ~file() { delete[] _data; }$/;"	f	struct:nall::vfs::memory::file
~file_buffer	nall/file-buffer.hpp	/^  ~file_buffer() { close(); }$/;"	f
~file_map	nall/file-map.hpp	/^  ~file_map() { close(); }$/;"	f	namespace:nall
~function	nall/function.hpp	/^  ~function() { if(callback) delete callback; }$/;"	f	struct:nall::R
~hashset	nall/hashset.hpp	/^  ~hashset() { reset(); }$/;"	f	struct:nall::hashset
~image	nall/image/core.hpp	/^image::~image() {$/;"	f	class:nall::image
~library	nall/dl.hpp	/^  ~library() { close(); }$/;"	f	struct:nall::library
~mObject	hiro/core/object.cpp	/^mObject::~mObject() {$/;"	f	class:mObject
~maybe	nall/maybe.hpp	/^  inline ~maybe() { reset(); }$/;"	f	struct:nall::maybe
~pObject	hiro/cocoa/object.hpp	/^  virtual ~pObject() {}$/;"	f	struct:hiro::pObject
~pObject	hiro/gtk/object.hpp	/^  virtual ~pObject() {}$/;"	f	struct:hiro::pObject
~pObject	hiro/qt/object.hpp	/^  virtual ~pObject() {}$/;"	f	struct:hiro::pObject
~pToolTip	hiro/windows/tool-tip.cpp	/^pToolTip::~pToolTip() {$/;"	f	class:hiro::pToolTip
~queue	nall/queue.hpp	/^  ~queue() { reset(); }$/;"	f	struct:nall::queue
~serial	nall/serial.hpp	/^  ~serial() {$/;"	f	struct:nall::serial
~serializer	nall/serializer.hpp	/^  ~serializer() {$/;"	f	namespace:nall
~set	nall/set.hpp	/^  ~set() { reset(); }$/;"	f	struct:nall::set
~shared_memory	nall/posix/shared-memory.hpp	/^  ~shared_memory() {$/;"	f	struct:nall::shared_memory
~shared_memory	nall/windows/shared-memory.hpp	/^  ~shared_memory() {$/;"	f	struct:nall::shared_memory
~shared_pointer	nall/shared-pointer.hpp	/^  ~shared_pointer() {$/;"	f	struct:nall::shared_pointer
~shared_pointer_weak	nall/shared-pointer.hpp	/^  ~shared_pointer_weak() {$/;"	f	struct:nall::shared_pointer_weak
~string	nall/string.hpp	/^  ~string() { reset(); }$/;"	f	struct:nall::string
~string_pascal	nall/string/pascal.hpp	/^  ~string_pascal() {$/;"	f	struct:nall::string_pascal
~string_view	nall/string/view.hpp	/^string_view::~string_view() {$/;"	f	class:nall::string_view
~unique_pointer	nall/unique-pointer.hpp	/^  ~unique_pointer() { reset(); }$/;"	f	struct:nall::unique_pointer
~utf16_t	nall/windows/utf8.hpp	/^    ~utf16_t() { reset(); }$/;"	f	struct:nall::utf16_t
~utf8_t	nall/windows/utf8.hpp	/^    ~utf8_t() { reset(); }$/;"	f	struct:nall::utf8_t
~vector	nall/vector/core.hpp	/^template<typename T> vector<T>::~vector() {$/;"	f	class:nall::vector
